{"version":3,"sources":["pages/dashboards/CRM/TotalRevenue/RevenueGraph.js","pages/dashboards/CRM/TotalRevenue/index.js","pages/dashboards/CRM/QuickStats/StatsCard.js","pages/dashboards/CRM/QuickStats/index.js","pages/dashboards/CRM/Statisitcs/GraphTabs/StatGraphs.js","pages/dashboards/CRM/Statisitcs/GraphTabs/index.js","pages/dashboards/CRM/Statisitcs/index.js","pages/dashboards/CRM/MonthlyEarning/EarningGraph.js","pages/dashboards/CRM/MonthlyEarning/Categories.js","pages/dashboards/CRM/MonthlyEarning/index.js","pages/dashboards/CRM/Deals/DealsTable/TableHeading.js","pages/dashboards/CRM/Deals/DealsTable/TableItem.js","pages/dashboards/CRM/Deals/DealsTable/index.js","pages/dashboards/CRM/Deals/index.js","pages/dashboards/CRM/SocialMediaAdvertise/SocialMediaGraph.js","pages/dashboards/CRM/SocialMediaAdvertise/index.js","pages/dashboards/CRM/TodayTasks/TaskList.js","pages/dashboards/CRM/TodayTasks/DatePickerWrapper.js","pages/dashboards/CRM/TodayTasks/DateSelector.js","pages/dashboards/CRM/TodayTasks/index.js","pages/dashboards/CRM/GoalProgress/GoalProgressGraph.js","pages/dashboards/CRM/GoalProgress/index.js","pages/dashboards/CRM/WebTraffic/WebTrafficGraph.js","pages/dashboards/CRM/WebTraffic/index.js","pages/dashboards/CRM/Reviews/ReviewsGraph.js","pages/dashboards/CRM/Reviews/index.js","pages/dashboards/CRM/TicketSupport/TicketSupportTable/TableHeading.js","pages/dashboards/CRM/TicketSupport/TicketSupportTable/TableItem.js","pages/dashboards/CRM/TicketSupport/TicketSupportTable/index.js","pages/dashboards/CRM/TicketSupport/index.js","pages/dashboards/CRM/index.js"],"names":["RevenueGraph","props","data","ResponsiveContainer","width","height","LineChart","margin","left","right","top","Line","type","dataKey","stroke","strokeWidth","dot","r","defaultProps","TotalRevenue","revenueData","Box","component","sx","textTransform","color","fontSize","mb","xs","sm","xl","fontWeight","Fonts","BOLD","IntlMessages","id","AppCard","display","flexDirection","mr","p","backgroundColor","theme","alpha","palette","primary","main","MEDIUM","ytdRevenue","mt","mx","px","clientsColor","clients","countriesColor","countries","revenueGraphData","StatsCard","icon","heading","className","sxStyle","borderRadius","components","MuiCard","styleOverrides","root","alignItems","md","Avatar","src","alt","ml","count","QuickStats","quickStatsData","console","log","Grid","container","spacing","item","clientsData","invoiceData","totalProjectsData","openProjectsData","StatGraphs","useThemeContext","AreaChart","bottom","x1","y1","x2","y2","offset","stopColor","secondary","stopOpacity","XAxis","tickLine","axisLine","padding","Tooltip","labelStyle","CartesianGrid","strokeDasharray","horizontal","vertical","Area","fillOpacity","fill","GraphTabs","incomeData","projectData","useState","value","setValue","projectGraphData","setProjectGraphData","clientsGraphData","setClientsGraphData","incomeGraphData","setIncomeGraphData","onSetGraphValue","a11yProps","index","messages","useIntl","flex","Tabs","onChange","event","newValue","indicatorColor","textColor","position","justifyContent","minWidth","Tab","label","AppSelect","menus","defaultValue","Statistics","EarningGraph","earningGraphData","PieChart","x","y","textAnchor","dominantBaseline","Pie","cx","cy","innerRadius","outerRadius","map","entry","Cell","Categories","category","ListItem","pb","colorName","ListItemText","name","ListItemSecondaryAction","MonthlyEarning","title","text","Divider","pt","List","TableHeading","TableRow","borderBottom","grey","pl","pr","TableCell","align","getProgressColor","progress","red","blue","green","TableItem","row","scope","whiteSpace","logo","toUpperCase","REGULAR","amount","created","DealsTable","dealsTableData","AppTableContainer","Table","TableHead","TableBody","Deals","tableData","setTableData","lg","filter","contentStyle","action","SocialMediaGraph","socialMediaData","BarChart","barSize","style","paddingTop","hide","YAxis","Bar","radius","SocialMediaAdvertise","revenue","changeColor","change","TaskList","todayTaskData","taskList","handleList","AppList","renderRow","task","py","ListItemIcon","marginTop","Checkbox","checked","isChecked","e","target","list","handleChange","date","DatePickerWrapper","children","maxHeight","DateSelector","React","Date","StaticDatePicker","orientation","openTo","renderInput","params","TextField","TodayTasks","Hidden","xsDown","Link","underline","GoalProgressGraph","progressGraphData","barGap","stackId","GoalProgress","WebTrafficGraph","websiteTrafficData","WebTraffic","ReviewsGraph","reviewGraphData","Reviews","teal","image","ticketId","contact","TicketSupportTable","ticketSupportData","TicketSupport","CRM","dispatch","useDispatch","useEffect","onGetCrmData","crmData","useSelector","dashboard","AppAnimate","animation","delay","AppGridContainer","statisticsGraph","AppInfoView"],"mappings":"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","file":"static/js/124.af2b44d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Line, LineChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RevenueGraph = (props) => {\r\n  const {data} = props;\r\n\r\n  return (\r\n    <ResponsiveContainer width='100%' height={200}>\r\n      <LineChart data={data} margin={{left: 10, right: 10, top: 20}}>\r\n        <Line\r\n          type='monotone'\r\n          dataKey='revenue'\r\n          stroke='#0A8FDC'\r\n          strokeWidth={3}\r\n          dot={{r: 0}}\r\n        />\r\n        <Line\r\n          type='monotone'\r\n          dataKey='revenue1'\r\n          stroke='#49BD65'\r\n          strokeWidth={3}\r\n          dot={{r: 0}}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default RevenueGraph;\r\n\r\nRevenueGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nRevenueGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport RevenueGraph from './RevenueGraph';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {Box, alpha} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nconst TotalRevenue = ({revenueData}) => {\r\n  return (\r\n    <>\r\n      <Box\r\n        component='h2'\r\n        sx={{\r\n          textTransform: 'uppercase',\r\n          color: 'text.primary',\r\n          fontSize: 16,\r\n          mb: {xs: 4, sm: 4, xl: 6},\r\n          fontWeight: Fonts.BOLD,\r\n        }}\r\n      >\r\n        <IntlMessages id='dashboard.totalRevenue' />\r\n      </Box>\r\n      <AppCard>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: {xs: 'column', sm: 'row'},\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mr: {xs: 2, xl: 10},\r\n              p: 5,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              color: 'text.secondary',\r\n              backgroundColor: (theme) =>\r\n                alpha(theme.palette.primary.main, 0.1),\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 4,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  mb: 0.75,\r\n                  color: 'text.primary',\r\n                  fontWeight: Fonts.MEDIUM,\r\n                  fontSize: 18,\r\n                }}\r\n                component='h3'\r\n              >\r\n                {revenueData.ytdRevenue}\r\n              </Box>\r\n              <Box\r\n                component='p'\r\n                sx={{\r\n                  mb: 0,\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                <IntlMessages id='dashboard.ytdRevenue' />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                mt: 'auto',\r\n                mx: {xs: -2, xl: -5},\r\n                mb: 1,\r\n                display: 'flex',\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  px: {xs: 2, xl: 5},\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mb: 0.75,\r\n                    color: revenueData.clientsColor,\r\n                    fontWeight: Fonts.MEDIUM,\r\n                    fontSize: 18,\r\n                  }}\r\n                  component='h3'\r\n                >\r\n                  {revenueData.clients}\r\n                </Box>\r\n                <Box\r\n                  component='p'\r\n                  sx={{\r\n                    mb: 0,\r\n                    fontSize: 14,\r\n                  }}\r\n                >\r\n                  <IntlMessages id='dashboard.clients' />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box\r\n                sx={{\r\n                  px: {xs: 2, xl: 5},\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mb: 0.75,\r\n                    color: revenueData.countriesColor,\r\n                    fontWeight: Fonts.MEDIUM,\r\n                    fontSize: 18,\r\n                  }}\r\n                  component='h2'\r\n                >\r\n                  {revenueData.countries}\r\n                </Box>\r\n                <Box\r\n                  component='p'\r\n                  sx={{\r\n                    mb: 0,\r\n                    fontSize: 14,\r\n                  }}\r\n                >\r\n                  <IntlMessages id='dashboard.countries' />\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              width: '100%',\r\n              mb: {xs: -6, xl: -2},\r\n            }}\r\n          >\r\n            <RevenueGraph data={revenueData.revenueGraphData} />\r\n          </Box>\r\n        </Box>\r\n      </AppCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TotalRevenue;\r\n\r\nTotalRevenue.defaultProps = {\r\n  revenueData: {\r\n    ytdRevenue: '',\r\n    clients: 0,\r\n    countries: '',\r\n    revenueGraphData: [],\r\n  },\r\n};\r\n\r\nTotalRevenue.propTypes = {\r\n  revenueData: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nconst StatsCard = (props) => {\r\n  const {icon, data, heading} = props;\r\n\r\n  return (\r\n    <AppCard\r\n      className='card-hover'\r\n      sxStyle={{\r\n        borderRadius: (theme) =>\r\n          theme.components.MuiCard.styleOverrides.root.borderRadius / 4,\r\n      }}\r\n    >\r\n      <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n        <Box sx={{fontSize: {xs: 36, md: 48}}}>\r\n          <Avatar\r\n            sx={{\r\n              height: {xs: 50, md: 60},\r\n              width: {xs: 50, md: 60},\r\n              backgroundColor: 'transparent',\r\n            }}\r\n          >\r\n            <img src={icon} alt='icon' />\r\n          </Avatar>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            ml: 4,\r\n          }}\r\n        >\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 18,\r\n            }}\r\n          >\r\n            {data.count}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            {heading}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default StatsCard;\r\n\r\nStatsCard.defaultProps = {\r\n  data: {\r\n    count: '',\r\n  },\r\n};\r\n\r\nStatsCard.propTypes = {\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  data: PropTypes.object,\r\n  heading: PropTypes.any.isRequired,\r\n};\r\n","// import React from 'react';\r\nimport Grid from '@mui/material/Grid/index';\r\nimport StatsCard from './StatsCard';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst QuickStats = ({quickStatsData}) => {\r\n  console.log('quickStatsData', quickStatsData);\r\n  return (\r\n    <>\r\n      <Box\r\n        component='h2'\r\n        sx={{\r\n          color: 'text.primary',\r\n          fontSize: 16,\r\n          mb: {xs: 4, sm: 4, xl: 6},\r\n          fontWeight: Fonts.BOLD,\r\n          textTransform: 'uppercase',\r\n        }}\r\n      >\r\n        <IntlMessages id='dashboard.quickStats' />\r\n      </Box>\r\n      <Grid container spacing={{xs: 4, md: 8}}>\r\n        <Grid item xs={12} sm={6}>\r\n          <StatsCard\r\n            icon={'/assets/images/dashboard/total-clients.svg'}\r\n            data={quickStatsData.clientsData}\r\n            heading={<IntlMessages id='dashboard.totalClients' />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <StatsCard\r\n            icon={'/assets/images/dashboard/invoices.svg'}\r\n            data={quickStatsData.invoiceData}\r\n            heading={<IntlMessages id='dashboard.paidInvoices' />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <StatsCard\r\n            icon={'/assets/images/dashboard/total-projects.svg'}\r\n            data={quickStatsData.totalProjectsData}\r\n            heading={<IntlMessages id='dashboard.totalProjects' />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <StatsCard\r\n            icon={'/assets/images/dashboard/open-projects.svg'}\r\n            data={quickStatsData.openProjectsData}\r\n            heading={<IntlMessages id='dashboard.openProjects' />}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuickStats;\r\n\r\nQuickStats.defaultProps = {\r\n  quickStatsData: null,\r\n};\r\n\r\nQuickStats.propTypes = {\r\n  quickStatsData: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport {useThemeContext} from '../../../../../@crema/utility/AppContextProvider/ThemeContextProvider';\r\n\r\nconst StatGraphs = ({data}) => {\r\n  const {theme} = useThemeContext();\r\n\r\n  return (\r\n    <ResponsiveContainer width='100%' height={350}>\r\n      <AreaChart data={data} margin={{top: 25, right: 0, left: 0, bottom: 0}}>\r\n        <defs>\r\n          <linearGradient id='colorPv' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop\r\n              offset='5%'\r\n              stopColor={theme.palette.secondary.main}\r\n              stopOpacity={0.7}\r\n            />\r\n            <stop\r\n              offset='95%'\r\n              stopColor={theme.palette.secondary.main}\r\n              stopOpacity={0}\r\n            />\r\n          </linearGradient>\r\n        </defs>\r\n        <XAxis\r\n          dataKey='month'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          padding={{left: 20, right: 20}}\r\n        />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <CartesianGrid\r\n          strokeDasharray='2 10'\r\n          horizontal={false}\r\n          vertical={false}\r\n        />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='number'\r\n          stroke={theme.palette.secondary.main}\r\n          strokeWidth={3}\r\n          fillOpacity={1}\r\n          fill='url(#colorPv)'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatGraphs;\r\n\r\nStatGraphs.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nStatGraphs.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport StatGraphs from './StatGraphs';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\nimport AppSelect from '../../../../../@crema/core/AppSelect';\r\n\r\nconst GraphTabs = (props) => {\r\n  const {clientsData, incomeData, projectData} = props;\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const [projectGraphData, setProjectGraphData] = useState(projectData);\r\n  const [clientsGraphData, setClientsGraphData] = useState(clientsData);\r\n  const [incomeGraphData, setIncomeGraphData] = useState(incomeData);\r\n\r\n  const onSetGraphValue = (data) => {\r\n    switch (value) {\r\n      case 0: {\r\n        setProjectGraphData(data);\r\n        break;\r\n      }\r\n      case 1: {\r\n        setClientsGraphData(data);\r\n        break;\r\n      }\r\n      case 2: {\r\n        setIncomeGraphData(data);\r\n        break;\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleYearChange = (value) => {\r\n    switch (value) {\r\n      case 2017:\r\n        onSetGraphValue(incomeData);\r\n        break;\r\n      case 2018:\r\n        onSetGraphValue(clientsData);\r\n        break;\r\n      case 2019:\r\n        onSetGraphValue(projectData);\r\n        break;\r\n      default:\r\n        onSetGraphValue(projectData);\r\n    }\r\n  };\r\n\r\n  const handleMonthChange = (value) => {\r\n    switch (value) {\r\n      case 'June':\r\n        onSetGraphValue(incomeData);\r\n        break;\r\n      case 'July':\r\n        onSetGraphValue(clientsData);\r\n        break;\r\n      case 'August':\r\n        onSetGraphValue(projectData);\r\n        break;\r\n      default:\r\n        onSetGraphValue(projectData);\r\n    }\r\n  };\r\n\r\n  const a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: 1,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: {xs: 'column', md: 'row'},\r\n          alignItems: {md: 'center'},\r\n        }}\r\n      >\r\n        <Box\r\n          component='h3'\r\n          sx={{\r\n            fontWeight: Fonts.BOLD,\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          <IntlMessages id='dashboard.statistics' />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mt: {md: -2},\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: {xs: 'column', md: 'row'},\r\n            alignItems: {md: 'center'},\r\n          }}\r\n        >\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor='primary'\r\n            textColor='primary'\r\n            aria-label='simple tabs example'\r\n            sx={{\r\n              flex: '1',\r\n              position: 'relative',\r\n              '& .MuiTabs-flexContainer': {\r\n                justifyContent: {md: 'center'},\r\n              },\r\n              '& .crMuiTab': {\r\n                minWidth: '10px',\r\n                textTransform: 'capitalize',\r\n                padding: 0,\r\n                mx: {xs: 2, xl: 3.5},\r\n                fontSize: 14,\r\n              },\r\n            }}\r\n          >\r\n            <Tab\r\n              className='crMuiTab'\r\n              label={<IntlMessages id='dashboard.project' />}\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              className='crMuiTab'\r\n              label={<IntlMessages id='dashboard.newClients' />}\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              className='crMuiTab'\r\n              label={<IntlMessages id='dashboard.income' />}\r\n              {...a11yProps(2)}\r\n            />\r\n          </Tabs>\r\n          <Box\r\n            sx={{\r\n              mt: 2,\r\n            }}\r\n          >\r\n            <AppSelect\r\n              menus={[2019, 2018, 2017]}\r\n              defaultValue={2019}\r\n              onChange={handleYearChange}\r\n            />\r\n            <AppSelect\r\n              menus={[\r\n                messages['common.june'],\r\n                messages['common.july'],\r\n                messages['common.august'],\r\n              ]}\r\n              defaultValue={messages['common.june']}\r\n              onChange={handleMonthChange}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          mt: 4,\r\n        }}\r\n      >\r\n        {value === 0 && <StatGraphs data={projectGraphData} />}\r\n        {value === 1 && <StatGraphs data={clientsGraphData} />}\r\n        {value === 2 && <StatGraphs data={incomeGraphData} />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GraphTabs;\r\n\r\nGraphTabs.defaultProps = {\r\n  clientsData: [],\r\n  incomeData: [],\r\n  projectData: [],\r\n};\r\n\r\nGraphTabs.propTypes = {\r\n  clientsData: PropTypes.array,\r\n  incomeData: PropTypes.array,\r\n  projectData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport GraphTabs from './GraphTabs';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nexport const Statistics = ({clientsData, incomeData, projectData}) => {\r\n  return (\r\n    <AppCard sxStyle={{height: 1}}>\r\n      <GraphTabs\r\n        clientsData={clientsData}\r\n        incomeData={incomeData}\r\n        projectData={projectData}\r\n      />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.defaultProps = {\r\n  clientsData: [],\r\n  incomeData: [],\r\n  projectData: [],\r\n};\r\n\r\nStatistics.propTypes = {\r\n  clientsData: PropTypes.array,\r\n  incomeData: PropTypes.array,\r\n  projectData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Cell, Pie, PieChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst EarningGraph = ({earningGraphData}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={250}>\r\n      <PieChart>\r\n        <text\r\n          x='50%'\r\n          fontWeight={Fonts.MEDIUM}\r\n          fontSize={20}\r\n          y='50%'\r\n          textAnchor='middle'\r\n          dominantBaseline='middle'\r\n        >\r\n          67%\r\n        </text>\r\n        <Pie\r\n          data={earningGraphData}\r\n          dataKey='value'\r\n          cx='50%'\r\n          cy='50%'\r\n          innerRadius={87}\r\n          outerRadius={100}\r\n          fill='#8884d8'\r\n        >\r\n          {earningGraphData.map((entry, index) => (\r\n            <Cell key={index} fill={entry.color} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default EarningGraph;\r\n\r\nEarningGraph.defaultProps = {\r\n  earningGraphData: [],\r\n};\r\n\r\nEarningGraph.propTypes = {\r\n  earningGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst Categories = (props) => {\r\n  const {category} = props;\r\n\r\n  return (\r\n    <ListItem\r\n      sx={{\r\n        p: 0,\r\n        pb: 2,\r\n      }}\r\n    >\r\n      <Box\r\n        component='span'\r\n        sx={{\r\n          height: 12,\r\n          width: 12,\r\n          mr: 4,\r\n          borderRadius: '50%',\r\n          backgroundColor: category.colorName,\r\n        }}\r\n      />\r\n      <ListItemText\r\n        sx={{\r\n          margin: 0,\r\n          '&  > *': {\r\n            display: 'block',\r\n            fontSize: '14px !important',\r\n          },\r\n        }}\r\n        primary={`${category.name}:`}\r\n      />\r\n      <ListItemSecondaryAction\r\n        sx={{\r\n          right: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            fontSize: 14,\r\n            fontWeight: Fonts.BOLD,\r\n          }}\r\n        >\r\n          ${category.value}\r\n        </Box>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n\r\nCategories.propTypes = {\r\n  category: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport EarningGraph from './EarningGraph';\r\nimport Divider from '@mui/material/Divider';\r\nimport List from '@mui/material/List';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport Categories from './Categories';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nexport const MonthlyEarning = ({earningGraphData}) => {\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} title={messages['dashboard.earningInMonth']}>\r\n      <Box\r\n        sx={{\r\n          '& text': {\r\n            fill: (theme) => theme.palette.text.primary,\r\n          },\r\n        }}\r\n      >\r\n        <EarningGraph earningGraphData={earningGraphData} />\r\n      </Box>\r\n      <Divider />\r\n      <Box\r\n        sx={{\r\n          pt: 3,\r\n        }}\r\n      >\r\n        <List>\r\n          {earningGraphData.map((category) => {\r\n            if (category.name !== '') {\r\n              return <Categories category={category} key={category.name} />;\r\n            }\r\n            return null;\r\n          })}\r\n        </List>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default MonthlyEarning;\r\n\r\nMonthlyEarning.defaultProps = {\r\n  earningGraphData: [],\r\n};\r\n\r\nMonthlyEarning.propTypes = {\r\n  earningGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {grey} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        borderBottom: '0 none',\r\n        color: grey[500],\r\n        '& .tableCell': {\r\n          borderBottom: '0 none',\r\n          fontSize: 13,\r\n          padding: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell className='tableCell'>\r\n        <IntlMessages id='common.num' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='common.name' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='common.progress' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='common.type' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='common.amount' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='common.created' />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport {Box} from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport {blue, green, red} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst getProgressColor = (progress) => {\r\n  switch (progress) {\r\n    case 'Pending':\r\n      return `${red[600]}`;\r\n\r\n    case 'Approved':\r\n      return `${blue[600]}`;\r\n\r\n    case 'Application':\r\n      return `${green[600]}`;\r\n\r\n    default:\r\n      return `${red[600]}`;\r\n  }\r\n};\r\n\r\nconst TableItem = (props) => {\r\n  const {row} = props;\r\n\r\n  return (\r\n    <TableRow\r\n      key={row.name}\r\n      sx={{\r\n        borderBottom: '0 none',\r\n        '& .tableCell': {\r\n          borderBottom: '0 none',\r\n          fontSize: 13,\r\n          padding: 2,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <TableCell scope='row' className='tableCell'>\r\n        {row.id}.\r\n      </TableCell>\r\n      <TableCell\r\n        align='left'\r\n        sx={{\r\n          whiteSpace: 'no-wrap',\r\n        }}\r\n        className='tableCell'\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          {row.logo ? (\r\n            <Avatar src={row.logo} />\r\n          ) : (\r\n            <Avatar>{row.name[0].toUpperCase()}</Avatar>\r\n          )}\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              ml: 3.5,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {row.name}\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell\r\n        align='left'\r\n        sx={{\r\n          color: getProgressColor(row.progress),\r\n        }}\r\n        className='tableCell'\r\n      >\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            fontWeight: Fonts.REGULAR,\r\n          }}\r\n        >\r\n          {row.progress}\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {row.type}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell' fontWeight={Fonts.MEDIUM}>\r\n        {row.amount}\r\n      </TableCell>\r\n      <TableCell\r\n        align='left'\r\n        sx={{\r\n          whiteSpace: 'no-wrap',\r\n        }}\r\n        className='tableCell'\r\n      >\r\n        {row.created}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  row: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\r\n\r\nconst DealsTable = (props) => {\r\n  const {dealsTableData} = props;\r\n\r\n  return (\r\n    <AppTableContainer>\r\n      <Table className='table'>\r\n        <TableHead\r\n          sx={{\r\n            borderBottom: '0 none',\r\n          }}\r\n        >\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody\r\n          sx={{\r\n            borderBottom: '0 none',\r\n          }}\r\n        >\r\n          {dealsTableData.map((row) => (\r\n            <TableItem row={row} key={row.id} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </AppTableContainer>\r\n  );\r\n};\r\n\r\nexport default DealsTable;\r\n\r\nDealsTable.defaultProps = {\r\n  dealsTableData: [],\r\n};\r\n\r\nDealsTable.propTypes = {\r\n  dealsTableData: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport DealsTable from './DealsTable';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport AppSelect from '../../../../@crema/core/AppSelect';\r\n\r\nconst Deals = (props) => {\r\n  const {dealsTableData} = props;\r\n  const [tableData, setTableData] = useState(dealsTableData);\r\n\r\n  const handleChange = (value) => {\r\n    if (value === messages['dashboard.allDeals']) {\r\n      setTableData(dealsTableData);\r\n    } else if (value === messages['todo.completed']) {\r\n      setTableData(\r\n        dealsTableData.filter((data) => data.progress === 'Approved'),\r\n      );\r\n    } else {\r\n      setTableData(\r\n        dealsTableData.filter((data) => data.progress === 'Pending'),\r\n      );\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      title={\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mr: {xs: 3, lg: 8},\r\n              fontWeight: Fonts.BOLD,\r\n              fontSize: 16,\r\n            }}\r\n            component='h3'\r\n          >\r\n            <IntlMessages id='dashboard.deals' />\r\n          </Box>\r\n          <AppSelect\r\n            menus={[\r\n              messages['dashboard.allDeals'],\r\n              messages['todo.completed'],\r\n              messages['common.pending'],\r\n            ]}\r\n            defaultValue={messages['dashboard.allDeals']}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      }\r\n      contentStyle={{px: 0}}\r\n      action={messages['common.viewAll']}\r\n      sxStyle={{height: 1}}\r\n    >\r\n      <DealsTable dealsTableData={tableData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Deals;\r\n\r\nDeals.defaultProps = {\r\n  dealsTableData: [],\r\n};\r\n\r\nDeals.propTypes = {\r\n  dealsTableData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst SocialMediaGraph = ({socialMediaData}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mt: 5,\r\n        '& .graphText': {\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: 14,\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer width='100%' height={300}>\r\n        <BarChart\r\n          barSize={8}\r\n          data={socialMediaData}\r\n          margin={{top: 0, right: 0, left: 0, bottom: 30}}\r\n        >\r\n          <CartesianGrid strokeDasharray='3 3' style={{paddingTop: 20}} />\r\n          <XAxis hide />\r\n          <YAxis hide />\r\n          <Bar dataKey='revenue'>\r\n            {socialMediaData.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={entry.color}\r\n                radius={[10, 10, 0, 0]}\r\n              />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SocialMediaGraph;\r\n\r\nSocialMediaGraph.defaultProps = {\r\n  socialMediaData: [],\r\n};\r\n\r\nSocialMediaGraph.propTypes = {\r\n  socialMediaData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport SocialMediaGraph from './SocialMediaGraph';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst SocialMediaAdvertise = (props) => {\r\n  const {socialMediaData} = props;\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard title={messages['dashboard.socialMedia']} sxStyle={{height: 1}}>\r\n      <SocialMediaGraph socialMediaData={socialMediaData} />\r\n      <Box\r\n        sx={{\r\n          mb: 1,\r\n          mx: {xs: -2, xl: -3},\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        {socialMediaData.map((item) => {\r\n          return (\r\n            <Box\r\n              sx={{\r\n                px: {xs: 2, xl: 3},\r\n              }}\r\n              key={item.id}\r\n            >\r\n              <Box\r\n                component='h4'\r\n                sx={{\r\n                  mb: 1,\r\n                  fontWeight: Fonts.MEDIUM,\r\n                  fontSize: 18,\r\n                  color: item.color,\r\n                }}\r\n              >\r\n                {item.revenue}\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  position: 'relative',\r\n                }}\r\n              >\r\n                <Box\r\n                  component='p'\r\n                  sx={{\r\n                    color: 'text.secondary',\r\n                    fontSize: 14,\r\n                    textTransform: 'capitalize',\r\n                  }}\r\n                >\r\n                  {item.name}\r\n                </Box>\r\n                <Box\r\n                  component='span'\r\n                  sx={{color: item.changeColor, fontSize: 13}}\r\n                >\r\n                  {item.change}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default SocialMediaAdvertise;\r\n\r\nSocialMediaAdvertise.defaultProps = {\r\n  socialMediaData: [],\r\n};\r\n\r\nSocialMediaAdvertise.propTypes = {\r\n  socialMediaData: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nimport AppList from '../../../../@crema/core/AppList';\r\n\r\nconst TaskList = ({todayTaskData}) => {\r\n  const [taskList, handleList] = useState(todayTaskData);\r\n\r\n  const handleChange = (e, task) => {\r\n    task.isChecked = e.target.checked;\r\n    const list = taskList.map((item) => (item.id === task.id ? task : item));\r\n    handleList(list);\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      <AppList\r\n        data={taskList}\r\n        renderRow={(task) => {\r\n          return (\r\n            <ListItem\r\n              key={task.id}\r\n              sx={{\r\n                px: 5,\r\n                py: 2,\r\n              }}\r\n              className='item-hover'\r\n            >\r\n              <ListItemIcon\r\n                sx={{\r\n                  marginTop: -2,\r\n                  minWidth: 0,\r\n                  width: {xs: 35, xl: 40},\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mr: 2,\r\n                    ml: -2,\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    color='primary'\r\n                    checked={task.isChecked}\r\n                    onChange={(e) => handleChange(e, task)}\r\n                  />\r\n                </Box>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Box\r\n                    sx={{\r\n                      fontWeight: Fonts.MEDIUM,\r\n                      fontSize: 14,\r\n                      color: task.isChecked ? 'text.secondary' : 'text.primary',\r\n                    }}\r\n                    component='span'\r\n                  >\r\n                    {task.task}\r\n                  </Box>\r\n                }\r\n                secondary={\r\n                  <Box\r\n                    component='span'\r\n                    sx={{\r\n                      fontSize: 12,\r\n                    }}\r\n                  >\r\n                    <IntlMessages id='common.scheduled' /> {task.date}\r\n                  </Box>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        }}\r\n      />\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n\r\nTaskList.defaultProps = {\r\n  todayTaskData: [],\r\n};\r\n\r\nTaskList.propTypes = {\r\n  todayTaskData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Box} from '@mui/material';\r\n\r\nconst DatePickerWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '100%',\r\n        width: '100%',\r\n        position: 'relative',\r\n        '& .PrivatePickersToolbar-root': {\r\n          display: 'none',\r\n        },\r\n        '& > div': {\r\n          minWidth: 100,\r\n          height: '100%',\r\n          '& > div': {\r\n            height: '100%',\r\n            '& > div, & .MuiCalendarPicker-root': {\r\n              height: '100%',\r\n              maxHeight: 450,\r\n              width: '100%',\r\n            },\r\n          },\r\n        },\r\n        '& .PrivatePickersFadeTransitionGroup-root': {\r\n          height: '100%',\r\n          '& > div': {\r\n            height: '100%',\r\n            '& > div': {\r\n              justifyContent: 'space-around',\r\n            },\r\n          },\r\n        },\r\n        '& .PrivatePickersSlideTransition-root': {\r\n          height: 'calc(100% - 40px)',\r\n          '& > div': {\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-around',\r\n            '& > div': {\r\n              justifyContent: 'space-around',\r\n            },\r\n          },\r\n        },\r\n        '& .MuiButtonBase-root': {\r\n          padding: '3px',\r\n          color: 'text.primary',\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DatePickerWrapper;\r\n\r\nDatePickerWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from 'react';\r\nimport DatePickerWrapper from './DatePickerWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\r\n\r\nconst DateSelector = () => {\r\n  const [value, setValue] = React.useState(new Date());\r\n\r\n  return (\r\n    <DatePickerWrapper>\r\n      <StaticDatePicker\r\n        orientation='landscape'\r\n        openTo='day'\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </DatePickerWrapper>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport DateSelector from './DateSelector';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {grey} from '@mui/material/colors';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst TodayTasks = (props) => {\r\n  const {todayTaskData} = props;\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.todayTasks']}\r\n      sxStyle={{height: 1}}\r\n      action={\r\n        <Box>\r\n          <Hidden xsDown>\r\n            <Link\r\n              sx={{\r\n                fontSize: 14,\r\n                px: {xs: 2, sm: 5},\r\n                color: grey[500],\r\n              }}\r\n              component='button'\r\n              underline='none'\r\n            >\r\n              <IntlMessages id='common.createTask' />\r\n            </Link>\r\n          </Hidden>\r\n          <Link\r\n            sx={{\r\n              fontSize: 14,\r\n              px: {xs: 2, sm: 5},\r\n            }}\r\n            color='secondary'\r\n            component='button'\r\n            underline='none'\r\n          >\r\n            <IntlMessages id='common.viewAll' />\r\n          </Link>\r\n        </Box>\r\n      }\r\n    >\r\n      <Grid container spacing={5}>\r\n        <Grid item xs={12} md={6} xl={7}>\r\n          <TaskList todayTaskData={todayTaskData} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} xl={5}>\r\n          <DateSelector />\r\n        </Grid>\r\n      </Grid>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TodayTasks;\r\n\r\nTodayTasks.defaultProps = {\r\n  todayTaskData: [],\r\n};\r\n\r\nTodayTasks.propTypes = {\r\n  todayTaskData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst GoalProgressGraph = (props) => {\r\n  const {progressGraphData} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        '& .goalChart': {\r\n          height: '320px !important',\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={340}>\r\n        <BarChart\r\n          barGap={5}\r\n          barSize={8}\r\n          data={progressGraphData}\r\n          margin={{top: 50}}\r\n        >\r\n          <XAxis dataKey='name' axisLine={false} tickLine={false} />\r\n          <YAxis hide />\r\n          <Tooltip labelStyle={{color: 'black'}} />\r\n          <Bar dataKey='progress' stackId='a' fill='#3182CE' />\r\n          <Bar dataKey='actual' stackId='a' fill='#E53E3E' />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GoalProgressGraph;\r\n\r\nGoalProgressGraph.defaultProps = {\r\n  progressGraphData: [],\r\n};\r\n\r\nGoalProgressGraph.propTypes = {\r\n  progressGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport GoalProgressGraph from './GoalProgressGraph';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst GoalProgress = ({progressGraphData}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} title={messages['dashboard.goalProgress']}>\r\n      <GoalProgressGraph progressGraphData={progressGraphData} />\r\n      <Box\r\n        sx={{\r\n          mt: 5,\r\n          px: 2,\r\n          mb: 1,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              height: {xs: 12, xl: 16},\r\n              width: {xs: 12, xl: 16},\r\n              mr: 2,\r\n              borderRadius: '50%',\r\n              backgroundColor: 'primary.main',\r\n            }}\r\n          />\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.inProgress' />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            ml: 'auto',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              height: {xs: 12, xl: 16},\r\n              width: {xs: 12, xl: 16},\r\n              mr: 2,\r\n              borderRadius: '50%',\r\n              backgroundColor: 'error.main',\r\n            }}\r\n          />\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.actual' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default GoalProgress;\r\n\r\nGoalProgress.defaultProps = {\r\n  progressGraphData: [],\r\n};\r\n\r\nGoalProgress.propTypes = {\r\n  progressGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer, XAxis} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WebTrafficGraph = ({websiteTrafficData}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={170}>\r\n      <BarChart barSize={7} data={websiteTrafficData}>\r\n        <XAxis dataKey='month' axisLine={false} tickLine={false} />\r\n        <Bar dataKey='users' fill='#E2E8F0' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default WebTrafficGraph;\r\n\r\nWebTrafficGraph.defaultProps = {\r\n  websiteTrafficData: [],\r\n};\r\n\r\nWebTrafficGraph.propTypes = {\r\n  websiteTrafficData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport WebTrafficGraph from './WebTrafficGraph';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {blue, red} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst WebTraffic = ({websiteTrafficData}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        mb: {xs: 5, md: 8},\r\n      }}\r\n      title={messages['dashboard.websiteTraffic']}\r\n    >\r\n      <WebTrafficGraph websiteTrafficData={websiteTrafficData} />\r\n      <Box\r\n        sx={{\r\n          pt: 4,\r\n          mb: 1,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box\r\n            component='h4'\r\n            sx={{\r\n              mb: 2,\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: {xs: 18, xl: 20},\r\n              color: red[500],\r\n            }}\r\n          >\r\n            1,265\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            <IntlMessages id='common.subscribers' />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            color: 'grey.400',\r\n            fontWeight: Fonts.MEDIUM,\r\n            pt: 2,\r\n            fontSize: {xs: 18, xl: 20},\r\n          }}\r\n        >\r\n          2019\r\n        </Box>\r\n        <Box>\r\n          <Box\r\n            component='h4'\r\n            sx={{\r\n              mb: 2,\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: {xs: 18, xl: 20},\r\n              color: blue[400],\r\n            }}\r\n          >\r\n            12,432\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            <IntlMessages id='common.newUsers' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default WebTraffic;\r\n\r\nWebTraffic.defaultProps = {\r\n  websiteTrafficData: [],\r\n};\r\n\r\nWebTraffic.propTypes = {\r\n  websiteTrafficData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Line, LineChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport {Box} from '@mui/material';\r\n\r\nconst ReviewsGraph = ({reviewGraphData}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mt: 'auto',\r\n        p: 0,\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={160} width='100%'>\r\n        <LineChart data={reviewGraphData}>\r\n          <Line\r\n            type='monotone'\r\n            dataKey='value'\r\n            stroke='#C6F6D5'\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReviewsGraph;\r\n\r\nReviewsGraph.defaultProps = {\r\n  reviewGraphData: [],\r\n};\r\n\r\nReviewsGraph.propTypes = {\r\n  reviewGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport ReviewsGraph from './ReviewsGraph';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {green, teal} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nconst Reviews = ({reviewGraphData}) => {\r\n  return (\r\n    <AppCard sxStyle={{backgroundColor: teal[600], color: 'white'}}>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              mb: 1,\r\n              fontWeight: Fonts.BOLD,\r\n              fontSize: 16,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.reviews' />\r\n          </Box>\r\n          <Box\r\n            component='h4'\r\n            sx={{\r\n              mb: 2,\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: {xs: 18, xl: 20},\r\n              color: green[300],\r\n            }}\r\n          >\r\n            34,042\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.reviewText' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          mb: -16,\r\n        }}\r\n      >\r\n        <ReviewsGraph reviewGraphData={reviewGraphData} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n\r\nReviews.defaultProps = {\r\n  reviewGraphData: [],\r\n};\r\n\r\nReviews.propTypes = {\r\n  reviewGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {grey} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        borderBottom: '0 none',\r\n        color: grey[500],\r\n        '& .tableCell': {\r\n          borderBottom: '0 none',\r\n          fontSize: 13,\r\n          padding: {xs: 2, xl: 4},\r\n          fontWeight: Fonts.BOLD,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell className='tableCell'>\r\n        <IntlMessages id='common.num' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='dashboard.basicInfo' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='dashboard.ticketId' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='dashboard.createDate' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='common.contact' />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport {Box} from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport {red} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableItem = (props) => {\r\n  const {row} = props;\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        borderBottom: '0 none',\r\n        '& .tableCell': {\r\n          borderBottom: '0 none',\r\n          fontSize: 13,\r\n          padding: '6px 8px',\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <TableCell scope='row' className='tableCell'>\r\n        {row.id}.\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <Box display='flex' alignItems='center'>\r\n          {row.image ? (\r\n            <Avatar\r\n              sx={{\r\n                width: {xs: 40, xl: 50},\r\n                height: {xs: 40, xl: 50},\r\n                backgroundColor: red[500],\r\n              }}\r\n              src={row.image}\r\n            />\r\n          ) : (\r\n            <Avatar\r\n              sx={{\r\n                width: {xs: 40, xl: 50},\r\n                height: {xs: 40, xl: 50},\r\n                backgroundColor: red[500],\r\n              }}\r\n            >\r\n              {row.name[0].toUpperCase()}\r\n            </Avatar>\r\n          )}\r\n          <Box component='span' ml={3.5} fontWeight={Fonts.MEDIUM}>\r\n            {row.name}\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {row.ticketId}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {row.created}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {row.contact}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  row: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\r\n\r\nconst TicketSupportTable = ({ticketSupportData}) => {\r\n  return (\r\n    <AppTableContainer sxStyle={{maxHeight: 480}}>\r\n      <Table>\r\n        <TableHead\r\n          sx={{\r\n            borderBottom: '0 none',\r\n          }}\r\n        >\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody\r\n          sx={{\r\n            borderBottom: '0 none',\r\n          }}\r\n        >\r\n          {ticketSupportData.map((row, index) => (\r\n            <TableItem key={row.name + index} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </AppTableContainer>\r\n  );\r\n};\r\n\r\nexport default TicketSupportTable;\r\n\r\nTicketSupportTable.defaultProps = {\r\n  ticketSupportData: [],\r\n};\r\n\r\nTicketSupportTable.propTypes = {\r\n  ticketSupportData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport TicketSupportTable from './TicketSupportTable';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst TicketSupport = (props) => {\r\n  const {ticketSupportData} = props;\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      title={messages['dashboard.latestTicketSupport']}\r\n      action={messages['common.viewAll']}\r\n    >\r\n      <TicketSupportTable ticketSupportData={ticketSupportData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TicketSupport;\r\n\r\nTicketSupport.defaultProps = {\r\n  ticketSupportData: [],\r\n};\r\n\r\nTicketSupport.propTypes = {\r\n  ticketSupportData: PropTypes.array,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {Grid} from '@mui/material';\r\nimport TotalRevenue from './TotalRevenue';\r\nimport QuickStats from './QuickStats';\r\nimport Statistics from './Statisitcs';\r\nimport MonthlyEarning from './MonthlyEarning';\r\nimport Deals from './Deals';\r\nimport SocialMediaAdvertise from './SocialMediaAdvertise';\r\nimport TodayTasks from './TodayTasks';\r\nimport GoalProgress from './GoalProgress';\r\nimport WebTraffic from './WebTraffic';\r\nimport Reviews from './Reviews';\r\nimport TicketSupport from './TicketSupport';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetCrmData} from '../../../redux/actions';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\n\r\nconst CRM = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetCrmData());\r\n  }, [dispatch]);\r\n\r\n  const crmData = useSelector(({dashboard}) => dashboard.crmData);\r\n\r\n  return (\r\n    <>\r\n      {crmData ? (\r\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n          <AppGridContainer>\r\n            <Grid item xs={12} md={5}>\r\n              <TotalRevenue revenueData={crmData.revenueData} />\r\n            </Grid>\r\n            <Grid item xs={12} md={7}>\r\n              <QuickStats quickStatsData={crmData.quickStatsData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <Statistics\r\n                clientsData={crmData.statisticsGraph.clientsData}\r\n                incomeData={crmData.statisticsGraph.incomeData}\r\n                projectData={crmData.statisticsGraph.projectData}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <MonthlyEarning earningGraphData={crmData.earningGraphData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <SocialMediaAdvertise socialMediaData={crmData.socialMediaData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <TodayTasks todayTaskData={crmData.todayTaskData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <Deals dealsTableData={crmData.dealsTableData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <GoalProgress progressGraphData={crmData.progressGraphData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={5}>\r\n              <WebTraffic websiteTrafficData={crmData.websiteTrafficData} />\r\n              <Reviews reviewGraphData={crmData.reviewGraphData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={7}>\r\n              <TicketSupport ticketSupportData={crmData.ticketSupportData} />\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </AppAnimate>\r\n      ) : null}\r\n\r\n      <AppInfoView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CRM;\r\n"],"sourceRoot":""}