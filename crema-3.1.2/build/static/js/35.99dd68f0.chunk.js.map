{"version":3,"sources":["../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/lab/internal/pickers/wrappers/PickerStaticWrapper.js","../node_modules/@mui/lab/internal/pickers/PickersToolbarText.js","../node_modules/@mui/lab/internal/pickers/PickersToolbarButton.js","../node_modules/@mui/lab/DateRangePicker/DateRangePickerInput.js","../node_modules/@mui/lab/DateRangePicker/date-range-manager.js","../node_modules/@mui/lab/DateRangePicker/DateRangePickerToolbar.js","../node_modules/@mui/lab/DateRangePicker/DateRangePickerViewMobile.js","../node_modules/@mui/lab/DateRangePicker/DateRangePickerViewDesktop.js","../node_modules/@mui/lab/DateRangePicker/DateRangePickerView.js","../node_modules/@mui/lab/internal/pickers/wrappers/DesktopTooltipWrapper.js","../node_modules/@mui/lab/DateRangePickerDay/DateRangePickerDay.js","../node_modules/@mui/lab/StaticDateRangePicker/StaticDateRangePicker.js","../node_modules/@mui/lab/MobileDateRangePicker/MobileDateRangePicker.js","../node_modules/@mui/lab/DesktopDateRangePicker/DesktopDateRangePicker.js","../node_modules/@mui/lab/internal/pickers/wrappers/ResponsiveWrapper.js","../node_modules/@mui/lab/DateRangePicker/DateRangePicker.js"],"names":["_excluded","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","styled","name","slot","overridesResolver","props","styles","root","ownerState","theme","_extends","display","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","flexDirection","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","deepmerge","margin","row","column","getValue","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as","getStaticWrapperUtilityClass","generateUtilityClass","generateUtilityClasses","PickerStaticWrapperRoot","skipSx","overflow","minWidth","DIALOG_WIDTH","backgroundColor","palette","background","paper","PickerStaticWrapper","displayStaticWrapperAs","classes","composeClasses","useUtilityClasses","IsStaticVariantContext","Provider","value","WrapperVariantContext","className","PickersToolbarTextRoot","Typography","transition","transitions","create","color","text","secondary","selected","primary","PickersToolbarText","clsx","PickersToolbarButtonRoot","Button","padding","textTransform","PickersToolbarButton","align","typographyClassName","variant","DateRangePickerInputRoot","alignItems","down","DateRangePickerInput","currentlySelectingRangeEnd","disableOpenPicker","endText","onBlur","onChange","open","openPicker","rawValue","start","end","readOnly","renderInput","setCurrentlySelectingRangeEnd","startText","TextFieldProps","validationError","startValidationError","endValidationError","utils","useUtils","startRef","endRef","wrapperVariant","_startRef$current","current","focus","_endRef$current","lazyHandleChangeCallback","args","executeInTheNextEventLoopTick","openRangeStartSelection","openRangeEndSelection","openOnFocus","startInputProps","useMaskedInput","date","inputString","label","focused","inputProps","onClick","undefined","onFocus","endInputProps","calculateRangeChange","range","selectedDate","newDate","isAfter","nextSelection","newRange","isBefore","_Typography","DateRangePickerToolbarRoot","PickersToolbar","penIcon","position","top","DateRangePickerToolbarContainer","DateRangePickerToolbar","isMobileKeyboardViewOpen","toggleMobileKeyboardView","toolbarFormat","toolbarTitle","startDateValue","formatByString","formats","shortDate","endDateValue","isLandscape","penIconClassName","_jsxs","onlyDayView","DateRangePickerViewMobile","changeMonth","components","componentsProps","leftArrowButtonText","maxDateProp","maxDate","minDateProp","minDate","renderDay","_","dayProps","DateRangePickerDay","rightArrowButtonText","defaultDates","useDefaultDates","PickersCalendarHeader","onMonthChange","openView","views","PickersCalendar","onFocusedDayChange","doNothing","day","DayProps","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isWithinRange","isStartOfHighlighting","isStartOfRange","isEndOfHighlighting","isEndOfRange","DateRangePickerViewDesktopRoot","DateRangePickerViewDesktopContainer","borderRight","DateRangePickerViewDesktopCalendar","minHeight","DateRangePickerViewDesktopArrowSwitcher","PickersArrowSwitcher","justifyContent","getCalendarsArray","calendars","Array","fill","DateRangePickerViewDesktop","currentMonth","disableFuture","disablePast","dateRangeProps","rangePreviewDay","setRangePreviewDay","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","previewingRange","options","previewStart","previewEnd","calculateRangePreview","handleDayChange","CalendarTransitionProps","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","map","monthOnIteration","setMonth","getMonth","onLeftClick","onRightClick","isLeftHidden","isRightHidden","isLeftDisabled","isRightDisabled","format","_createElement","TransitionProps","__","onMouseEnter","newPreviewRequest","DateRangePickerView","DateInputProps","defaultCalendarMonth","disableAutoMonthSwitching","disableHighlightToday","onDateChange","reduceAnimations","defaultReduceAnimations","shouldDisableDate","showToolbar","useCalendarState","disableSwitchToMonthOnDayFocus","calendarState","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","toShowToolbar","isValid","currentlySelectedDate","displayingMonthRange","currentMonthNumber","requestedMonthNumber","isSameYear","newMonth","addMonths","scrollToDayIfNeeded","handleChange","isFullRangeSelected","isRangeValid","MobileKeyboardInputView","ignoreInvalidInputs","sharedCalendarProps","renderView","DesktopTooltipWrapper","KeyboardDateInputComponent","onDismiss","PopperProps","TransitionComponent","inputContainerRef","popperRef","handleBlur","_inputContainerRef$cu","_popperRef$current","contains","document","activeElement","inputComponentRef","useForkRef","PickersPopper","role","containerRef","anchorEl","onClose","getDateRangePickerDayUtilityClass","dateRangePickerDayClasses","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","DateRangePickerDayRoot","rangeIntervalDayPreview","borderLeftColor","borderRightColor","outsideCurrentMonth","borderRadius","contrastText","alpha","light","isStartOfMonth","paddingLeft","marginLeft","DAY_MARGIN","isEndOfMonth","paddingRight","marginRight","DateRangePickerDayRangeIntervalPreview","border","DateRangePickerDayDay","PickersDay","transform","grey","getContrastText","isSameDay","endOfMonth","startOfMonth","slots","rangeIntervalPreview","disableMargin","allowSameDateSelection","prevProps","nextProps","areDayPropsEqual","rangePickerValueManager","emptyValue","parseInput","parseRangeInputValue","areValuesEqual","a","b","isEqual","StaticDateRangePicker","mask","passedInputFormat","inputFormat","pickerStateProps","restProps","usePickerState","pickerProps","wrapperProps","useDateRangeValidation","keyboardDate","PureDateInputComponent","MobileDateRangePicker","MobileWrapper","DesktopDateRangePicker","ResponsiveTooltipWrapper","cancelText","clearable","clearText","desktopModeMediaQuery","DialogProps","okText","showTodayButton","todayText","useMediaQuery","DateRangePicker"],"mappings":"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","file":"static/js/35.99dd68f0.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"displayStaticWrapperAs\"];\nimport * as React from 'react';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, generateUtilityClass, generateUtilityClasses } from '@mui/base';\nimport { DIALOG_WIDTH } from '../constants/dimensions';\nimport { WrapperVariantContext, IsStaticVariantContext } from './WrapperVariantContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getStaticWrapperUtilityClass(slot) {\n  return generateUtilityClass('MuiPickerStaticWrapper', slot);\n}\nexport const pickerStaticWrapperClasses = generateUtilityClasses('MuiPickerStaticWrapper', ['root']);\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getStaticWrapperUtilityClass, classes);\n};\n\nconst PickerStaticWrapperRoot = styled('div', {\n  name: 'MuiPickerStaticWrapper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root,\n  skipSx: true\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  minWidth: DIALOG_WIDTH,\n  display: 'flex',\n  flexDirection: 'column',\n  backgroundColor: theme.palette.background.paper\n}));\n\nfunction PickerStaticWrapper(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickerStaticWrapper'\n  });\n\n  const {\n    displayStaticWrapperAs\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(props);\n  const isStatic = true;\n  return /*#__PURE__*/_jsx(IsStaticVariantContext.Provider, {\n    value: isStatic,\n    children: /*#__PURE__*/_jsx(WrapperVariantContext.Provider, {\n      value: displayStaticWrapperAs,\n      children: /*#__PURE__*/_jsx(PickerStaticWrapperRoot, _extends({\n        className: classes.root\n      }, other))\n    })\n  });\n}\n\nexport default PickerStaticWrapper;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selected\", \"value\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = generateUtilityClasses('PrivatePickersToolbarText', ['selected']);\nconst PickersToolbarTextRoot = styled(Typography, {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  transition: theme.transitions.create('color'),\n  color: theme.palette.text.secondary,\n  [`&.${classes.selected}`]: {\n    color: theme.palette.text.primary\n  }\n}));\nconst PickersToolbarText = /*#__PURE__*/React.forwardRef(function PickersToolbarText(props, ref) {\n  const {\n    className,\n    selected,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/_jsx(PickersToolbarTextRoot, _extends({\n    ref: ref,\n    className: clsx(className, selected && classes.selected),\n    component: \"span\"\n  }, other, {\n    children: value\n  }));\n});\nexport default PickersToolbarText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"className\", \"selected\", \"typographyClassName\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport PickersToolbarText from './PickersToolbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PickersToolbarButtonRoot = styled(Button, {\n  skipSx: true\n})({\n  padding: 0,\n  minWidth: 16,\n  textTransform: 'none'\n});\nconst PickersToolbarButton = /*#__PURE__*/React.forwardRef(function PickersToolbarButton(props, ref) {\n  const {\n    align,\n    className,\n    selected,\n    typographyClassName,\n    value,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/_jsx(PickersToolbarButtonRoot, _extends({\n    variant: \"text\",\n    ref: ref,\n    className: className\n  }, other, {\n    children: /*#__PURE__*/_jsx(PickersToolbarText, {\n      align: align,\n      className: typographyClassName,\n      variant: variant,\n      value: value,\n      selected: selected\n    })\n  }));\n});\nexport default PickersToolbarButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useMaskedInput } from '../internal/pickers/hooks/useMaskedInput';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { executeInTheNextEventLoopTick } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DateRangePickerInputRoot = styled('div', {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'baseline',\n  [theme.breakpoints.down('xs')]: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\n/**\n * @ignore - internal component.\n */\nconst DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(props, ref) {\n  const {\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError]\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) == null ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) == null ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback((...args) => executeInTheNextEventLoopTick(() => onChange(...args)), [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined\n    }\n  }));\n  return /*#__PURE__*/_jsx(DateRangePickerInputRoot, {\n    onBlur: onBlur,\n    ref: ref,\n    children: renderInput(startInputProps, endInputProps)\n  });\n});\nexport default DateRangePickerInput;","export function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd\n}) {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\nexport function calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const {\n    newRange\n  } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}","var _Typography;\n\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/base';\nimport PickersToolbar from '../internal/pickers/PickersToolbar';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersToolbarButton from '../internal/pickers/PickersToolbarButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst classes = generateUtilityClasses('PrivateDateRangePickerToolbar', ['penIcon']);\nconst DateRangePickerToolbarRoot = styled(PickersToolbar, {\n  skipSx: true\n})({\n  [`& .${classes.penIcon}`]: {\n    position: 'relative',\n    top: 4\n  }\n});\nconst DateRangePickerToolbarContainer = styled('div', {\n  skipSx: true\n})({\n  display: 'flex'\n});\n/**\n * @ignore - internal component.\n */\n\nconst DateRangePickerToolbar = ({\n  currentlySelectingRangeEnd,\n  date: [start, end],\n  endText,\n  isMobileKeyboardViewOpen,\n  setCurrentlySelectingRangeEnd,\n  startText,\n  toggleMobileKeyboardView,\n  toolbarFormat,\n  toolbarTitle = 'Select date range'\n}) => {\n  const utils = useUtils();\n  const startDateValue = start ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate) : startText;\n  const endDateValue = end ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate) : endText;\n  return /*#__PURE__*/_jsx(DateRangePickerToolbarRoot, {\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: false,\n    penIconClassName: classes.penIcon,\n    children: /*#__PURE__*/_jsxs(DateRangePickerToolbarContainer, {\n      children: [/*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: start !== null ? 'h5' : 'h6',\n        value: startDateValue,\n        selected: currentlySelectingRangeEnd === 'start',\n        onClick: () => setCurrentlySelectingRangeEnd('start')\n      }), _Typography || (_Typography = /*#__PURE__*/_jsxs(Typography, {\n        variant: \"h5\",\n        children: [\"\\xA0\", '–', \"\\xA0\"]\n      })), /*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: end !== null ? 'h5' : 'h6',\n        value: endDateValue,\n        selected: currentlySelectingRangeEnd === 'end',\n        onClick: () => setCurrentlySelectingRangeEnd('end')\n      })]\n    })\n  });\n};\n\nexport default DateRangePickerToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeMonth\", \"components\", \"componentsProps\", \"date\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport PickersCalendarHeader from '../CalendarPicker/PickersCalendarHeader';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst onlyDayView = ['day'];\n/**\n * @ignore - internal component.\n */\n\nexport function DateRangePickerViewMobile(props) {\n  const {\n    changeMonth,\n    components,\n    componentsProps,\n    date,\n    leftArrowButtonText,\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dayProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dayProps)),\n    rightArrowButtonText\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PickersCalendarHeader, _extends({\n      components: components,\n      componentsProps: componentsProps,\n      leftArrowButtonText: leftArrowButtonText,\n      maxDate: maxDate,\n      minDate: minDate,\n      onMonthChange: changeMonth,\n      openView: \"day\",\n      rightArrowButtonText: rightArrowButtonText,\n      views: onlyDayView\n    }, other)), /*#__PURE__*/_jsx(PickersCalendar, _extends({}, other, {\n      date: date,\n      onChange: onChange,\n      onFocusedDayChange: doNothing,\n      renderDay: (day, _, DayProps) => renderDay(day, _extends({\n        isPreviewing: false,\n        isStartOfPreviewing: false,\n        isEndOfPreviewing: false,\n        isHighlighting: isWithinRange(utils, day, date),\n        isStartOfHighlighting: isStartOfRange(utils, day, date),\n        isEndOfHighlighting: isEndOfRange(utils, day, date)\n      }, DayProps))\n    }))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DateRangePickerViewDesktopRoot = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangePickerViewDesktopContainer = styled('div', {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `2px solid ${theme.palette.divider}`\n  }\n}));\nconst DateRangePickerViewDesktopCalendar = styled(PickersCalendar, {\n  skipSx: true\n})({\n  minWidth: 312,\n  minHeight: 288\n});\nconst DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher, {\n  skipSx: true\n})({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default DateRangePickerViewDesktop;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"className\", \"currentlySelectingRangeEnd\", \"date\", \"DateInputProps\", \"defaultCalendarMonth\", \"disableAutoMonthSwitching\", \"disableFuture\", \"disableHighlightToday\", \"disablePast\", \"endText\", \"isMobileKeyboardViewOpen\", \"maxDate\", \"minDate\", \"onDateChange\", \"onMonthChange\", \"open\", \"reduceAnimations\", \"setCurrentlySelectingRangeEnd\", \"shouldDisableDate\", \"showToolbar\", \"startText\", \"toggleMobileKeyboardView\", \"toolbarFormat\", \"toolbarTitle\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isRangeValid } from '../internal/pickers/date-utils';\nimport { calculateRangeChange } from './date-range-manager';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport DateRangePickerToolbar from './DateRangePickerToolbar';\nimport { useCalendarState } from '../CalendarPicker/useCalendarState';\nimport { DateRangePickerViewMobile } from './DateRangePickerViewMobile';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../internal/pickers/Picker/Picker';\nimport DateRangePickerInput from './DateRangePickerInput';\nimport { defaultReduceAnimations } from '../CalendarPicker/CalendarPicker';\nimport DateRangePickerViewDesktop from './DateRangePickerViewDesktop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * @ignore - internal component.\n */\nexport function DateRangePickerView(props) {\n  const {\n    calendars,\n    className,\n    currentlySelectingRangeEnd,\n    date,\n    DateInputProps,\n    defaultCalendarMonth,\n    disableAutoMonthSwitching = false,\n    disableFuture,\n    disableHighlightToday,\n    disablePast,\n    endText,\n    isMobileKeyboardViewOpen,\n    maxDate,\n    minDate,\n    onDateChange,\n    onMonthChange,\n    open,\n    reduceAnimations = defaultReduceAnimations,\n    setCurrentlySelectingRangeEnd,\n    shouldDisableDate,\n    showToolbar,\n    startText,\n    toggleMobileKeyboardView,\n    toolbarFormat,\n    toolbarTitle\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const [start, end] = date;\n  const {\n    changeMonth,\n    calendarState,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    changeFocusedDay\n  } = useCalendarState({\n    date: start || end,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate\n  });\n  const toShowToolbar = showToolbar != null ? showToolbar : wrapperVariant !== 'desktop';\n\n  const scrollToDayIfNeeded = day => {\n    if (!day || !utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    const currentlySelectedDate = currentlySelectingRangeEnd === 'start' ? start : end;\n\n    if (currentlySelectedDate === null) {\n      // do not scroll if one of ages is not selected\n      return;\n    }\n\n    const displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(day);\n\n    if (!utils.isSameYear(calendarState.currentMonth, day) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = currentlySelectingRangeEnd === 'start' ? currentlySelectedDate : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(currentlySelectedDate, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  };\n\n  React.useEffect(() => {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  const handleChange = React.useCallback(newDate => {\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: date,\n      currentlySelectingRangeEnd\n    });\n    setCurrentlySelectingRangeEnd(nextSelection);\n    const isFullRangeSelected = currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n    onDateChange(newRange, wrapperVariant, isFullRangeSelected ? 'finish' : 'partial');\n  }, [currentlySelectingRangeEnd, date, onDateChange, setCurrentlySelectingRangeEnd, utils, wrapperVariant]);\n\n  const renderView = () => {\n    const sharedCalendarProps = _extends({\n      date,\n      isDateDisabled,\n      changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations,\n      disableHighlightToday,\n      onMonthSwitchingAnimationEnd,\n      changeMonth,\n      currentlySelectingRangeEnd,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate\n    }, calendarState, other);\n\n    switch (wrapperVariant) {\n      case 'desktop':\n        {\n          return /*#__PURE__*/_jsx(DateRangePickerViewDesktop, _extends({\n            calendars: calendars\n          }, sharedCalendarProps));\n        }\n\n      default:\n        {\n          return /*#__PURE__*/_jsx(DateRangePickerViewMobile, _extends({}, sharedCalendarProps));\n        }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    children: [toShowToolbar && /*#__PURE__*/_jsx(DateRangePickerToolbar, {\n      date: date,\n      isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView: toggleMobileKeyboardView,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText,\n      toolbarTitle: toolbarTitle,\n      toolbarFormat: toolbarFormat\n    }), isMobileKeyboardViewOpen ? /*#__PURE__*/_jsx(MobileKeyboardInputView, {\n      children: /*#__PURE__*/_jsx(DateRangePickerInput, _extends({\n        disableOpenPicker: true,\n        ignoreInvalidInputs: true\n      }, DateInputProps))\n    }) : renderView()]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerView.propTypes = {\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  disableAutoMonthSwitching: PropTypes.bool\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useForkRef } from '@mui/material/utils';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { executeInTheNextEventLoopTick } from '../utils';\nimport PickersPopper from '../PickersPopper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction DesktopTooltipWrapper(props) {\n  const {\n    children,\n    DateInputProps,\n    KeyboardDateInputComponent,\n    onDismiss,\n    open,\n    PopperProps,\n    TransitionComponent\n  } = props;\n  const inputContainerRef = React.useRef(null);\n  const popperRef = React.useRef(null);\n\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      var _inputContainerRef$cu, _popperRef$current;\n\n      if ((_inputContainerRef$cu = inputContainerRef.current) != null && _inputContainerRef$cu.contains(document.activeElement) || (_popperRef$current = popperRef.current) != null && _popperRef$current.contains(document.activeElement)) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  const inputComponentRef = useForkRef(DateInputProps.ref, inputContainerRef);\n  return /*#__PURE__*/_jsxs(WrapperVariantContext.Provider, {\n    value: \"desktop\",\n    children: [/*#__PURE__*/_jsx(KeyboardDateInputComponent, _extends({}, DateInputProps, {\n      ref: inputComponentRef,\n      onBlur: handleBlur\n    })), /*#__PURE__*/_jsx(PickersPopper, {\n      role: \"tooltip\",\n      open: open,\n      containerRef: popperRef,\n      anchorEl: inputContainerRef.current,\n      TransitionComponent: TransitionComponent,\n      PopperProps: PopperProps,\n      onBlur: handleBlur,\n      onClose: onDismiss,\n      children: children\n    })]\n  });\n}\n\nexport default DesktopTooltipWrapper;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha, styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, generateUtilityClass, generateUtilityClasses } from '@mui/base';\nimport { DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersDay, { areDayPropsEqual } from '../PickersDay/PickersDay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getDateRangePickerDayUtilityClass(slot) {\n  return generateUtilityClass('MuiDateRangePickerDay', slot);\n}\nexport const dateRangePickerDayClasses = generateUtilityClasses('MuiDateRangePickerDay', ['root', 'rangeIntervalDayHighlight', 'rangeIntervalDayHighlightStart', 'rangeIntervalDayHighlightEnd', 'rangeIntervalPreview', 'rangeIntervalDayPreview', 'rangeIntervalDayPreviewStart', 'rangeIntervalDayPreviewEnd', 'day', 'dayOutsideRangeInterval', 'dayInsideRangeInterval', 'notSelectedDate']);\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isHighlighting,\n    outsideCurrentMonth,\n    isStartOfHighlighting,\n    isStartOfMonth,\n    isEndOfHighlighting,\n    isEndOfMonth,\n    isPreviewing,\n    isStartOfPreviewing,\n    isEndOfPreviewing,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', isHighlighting && !outsideCurrentMonth && 'rangeIntervalDayHighlight', (isStartOfHighlighting || isStartOfMonth) && 'rangeIntervalDayHighlightStart', (isEndOfHighlighting || isEndOfMonth) && 'rangeIntervalDayHighlightEnd'],\n    rangeIntervalPreview: ['rangeIntervalPreview', isPreviewing && !outsideCurrentMonth && 'rangeIntervalDayPreview', (isStartOfPreviewing || isStartOfMonth) && 'rangeIntervalDayPreviewStart', (isEndOfPreviewing || isEndOfMonth) && 'rangeIntervalDayPreviewEnd'],\n    day: ['day', !selected && 'notSelectedDate', !isHighlighting && 'dayOutsideRangeInterval', !selected && isHighlighting && 'dayInsideRangeInterval']\n  };\n  return composeClasses(slots, getDateRangePickerDayUtilityClass, classes);\n};\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nconst DateRangePickerDayRoot = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  [`&:first-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, startBorderStyle, {\n    borderLeftColor: theme.palette.divider\n  }),\n  [`&:last-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, endBorderStyle, {\n    borderRightColor: theme.palette.divider\n  })\n}, ownerState.isHighlighting && !ownerState.outsideCurrentMonth && {\n  borderRadius: 0,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: alpha(theme.palette.primary.light, 0.6),\n  '&:first-of-type': startBorderStyle,\n  '&:last-of-type': endBorderStyle\n}, (ownerState.isStartOfHighlighting || ownerState.isStartOfMonth) && _extends({}, startBorderStyle, {\n  paddingLeft: 0,\n  marginLeft: DAY_MARGIN / 2\n}), (ownerState.isEndOfHighlighting || ownerState.isEndOfMonth) && _extends({}, endBorderStyle, {\n  paddingRight: 0,\n  marginRight: DAY_MARGIN / 2\n})));\nconst DateRangePickerDayRangeIntervalPreview = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'RangeIntervalPreview'\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  // replace default day component margin with transparent border to avoid jumping on preview\n  border: '2px solid transparent'\n}, ownerState.isPreviewing && !ownerState.outsideCurrentMonth && _extends({\n  borderRadius: 0,\n  border: `2px dashed ${theme.palette.divider}`,\n  borderLeftColor: 'transparent',\n  borderRightColor: 'transparent'\n}, (ownerState.isStartOfPreviewing || ownerState.isStartOfMonth) && _extends({\n  borderLeftColor: theme.palette.divider\n}, startBorderStyle), (ownerState.isEndOfPreviewing || ownerState.isEndOfMonth) && _extends({\n  borderRightColor: theme.palette.divider\n}, endBorderStyle))));\nconst DateRangePickerDayDay = styled(PickersDay, {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Day'\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  // Required to overlap preview border\n  transform: 'scale(1.1)',\n  '& > *': {\n    transform: 'scale(0.9)'\n  }\n}, !ownerState.selected && {\n  backgroundColor: 'transparent'\n}, !ownerState.isHighlighting && {\n  '&:hover': {\n    border: `1px solid ${theme.palette.grey[500]}`\n  }\n}, !ownerState.selected && ownerState.isHighlighting && {\n  color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n}));\nconst DateRangePickerDay = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(props, ref) {\n  const {\n    className,\n    day,\n    outsideCurrentMonth,\n    isHighlighting,\n    isPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n\n  const ownerState = _extends({}, props, {\n    selected,\n    isStartOfMonth,\n    isEndOfMonth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DateRangePickerDayRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: /*#__PURE__*/_jsx(DateRangePickerDayRangeIntervalPreview, {\n      role: \"cell\",\n      className: classes.rangeIntervalPreview,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(DateRangePickerDayDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        allowSameDateSelection: true,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: classes.day,\n        ownerState: ownerState\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDay.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePickerDay API](https://mui.com/api/date-range-picker-day/)\n */\n\nexport default /*#__PURE__*/React.memo(DateRangePickerDay, (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"displayStaticWrapperAs\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useThemeProps } from '@mui/material/styles';\nimport PickerStaticWrapper from '../internal/pickers/wrappers/PickerStaticWrapper';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useDateRangeValidation } from '../internal/pickers/hooks/useValidation';\nimport { usePickerState } from '../internal/pickers/hooks/usePickerState';\nimport { DateRangePickerView } from '../DateRangePicker/DateRangePickerView';\nimport { parseRangeInputValue } from '../internal/pickers/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst rangePickerValueManager = {\n  emptyValue: [null, null],\n  parseInput: parseRangeInputValue,\n  areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1])\n};\n\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [StaticDateRangePicker API](https://mui.com/api/static-date-range-picker/)\n */\nconst StaticDateRangePicker = /*#__PURE__*/React.forwardRef(function StaticDateRangePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStaticDateRangePicker'\n  });\n\n  const {\n    calendars = 2,\n    displayStaticWrapperAs = 'mobile',\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: minDateProp,\n    maxDate: maxDateProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState('start');\n\n  const pickerStateProps = _extends({}, other, {\n    value,\n    onChange\n  });\n\n  const restProps = _extends({}, other, {\n    minDate,\n    maxDate\n  });\n\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(pickerStateProps, rangePickerValueManager);\n  const validationError = useDateRangeValidation(props);\n\n  const DateInputProps = _extends({}, inputProps, restProps, {\n    currentlySelectingRangeEnd,\n    inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    endText,\n    mask,\n    validationError,\n    ref\n  });\n\n  return /*#__PURE__*/_jsx(PickerStaticWrapper, {\n    displayStaticWrapperAs: displayStaticWrapperAs,\n    children: /*#__PURE__*/_jsx(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? StaticDateRangePicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n\n  /**\n   * If `true`, `onChange` is fired on click even if the same date is selected.\n   * @default false\n   */\n  allowSameDateSelection: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The number of calendars that render on **desktop**.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The components used for each slot.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    LeftArrowButton: PropTypes.elementType,\n    LeftArrowIcon: PropTypes.elementType,\n    OpenPickerIcon: PropTypes.elementType,\n    RightArrowButton: PropTypes.elementType,\n    RightArrowIcon: PropTypes.elementType,\n    SwitchViewButton: PropTypes.elementType,\n    SwitchViewIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    leftArrowButton: PropTypes.object,\n    rightArrowButton: PropTypes.object,\n    switchViewButton: PropTypes.object\n  }),\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, todays date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode.\n   * @default 'mobile'\n   */\n  displayStaticWrapperAs: PropTypes.oneOf(['desktop', 'mobile']),\n\n  /**\n   * Text for end input label and toolbar placeholder.\n   * @default 'End'\n   */\n  endText: PropTypes.node,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n\n  /**\n   * @ignore\n   */\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   * @default '__/__/____'\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Max selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Min selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date range) changes @DateIOType.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change. @DateIOType\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for `<DateRangePicker />` days. @DateIOType\n   * @example (date, dateRangePickerDayProps) => <DateRangePickerDay {...dateRangePickerDayProps} />\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://mui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   *  renderInput={(startProps, endProps) => (\n   *   <React.Fragment>\n   *     <TextField {...startProps} />\n   *     <Box sx={{ mx: 2 }}> to </Box>\n   *     <TextField {...endProps} />\n   *   </React.Fragment>;\n   *  )}\n   * />\n   * ````\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Text for start input label and toolbar placeholder.\n   * @default 'Start'\n   */\n  startText: PropTypes.node,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date range'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * The value of the date range picker.\n   */\n  value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.any, PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string])).isRequired\n} : void 0;\nexport default StaticDateRangePicker;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useThemeProps } from '@mui/material/styles';\nimport MobileWrapper from '../internal/pickers/wrappers/MobileWrapper';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useDateRangeValidation } from '../internal/pickers/hooks/useValidation';\nimport { usePickerState } from '../internal/pickers/hooks/usePickerState';\nimport { DateRangePickerView } from '../DateRangePicker/DateRangePickerView';\nimport DateRangePickerInput from '../DateRangePicker/DateRangePickerInput';\nimport { parseRangeInputValue } from '../internal/pickers/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PureDateInputComponent = DateRangePickerInput;\nconst rangePickerValueManager = {\n  emptyValue: [null, null],\n  parseInput: parseRangeInputValue,\n  areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1])\n};\n\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [MobileDateRangePicker API](https://mui.com/api/mobile-date-range-picker/)\n */\nconst MobileDateRangePicker = /*#__PURE__*/React.forwardRef(function MobileDateRangePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMobileDateRangePicker'\n  });\n\n  const {\n    calendars = 2,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: minDateProp,\n    maxDate: maxDateProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState('start');\n\n  const pickerStateProps = _extends({}, other, {\n    value,\n    onChange\n  });\n\n  const restProps = _extends({}, other, {\n    minDate,\n    maxDate\n  });\n\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(pickerStateProps, rangePickerValueManager);\n  const validationError = useDateRangeValidation(props);\n\n  const DateInputProps = _extends({}, inputProps, restProps, {\n    currentlySelectingRangeEnd,\n    inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    endText,\n    mask,\n    validationError,\n    ref\n  });\n\n  return /*#__PURE__*/_jsx(MobileWrapper, _extends({}, restProps, wrapperProps, {\n    DateInputProps: DateInputProps,\n    PureDateInputComponent: PureDateInputComponent,\n    children: /*#__PURE__*/_jsx(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MobileDateRangePicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n\n  /**\n   * If `true`, `onChange` is fired on click even if the same date is selected.\n   * @default false\n   */\n  allowSameDateSelection: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The number of calendars that render on **desktop**.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * Cancel text message.\n   * @default 'Cancel'\n   */\n  cancelText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, it shows the clear action in the picker dialog.\n   * @default false\n   */\n  clearable: PropTypes.bool,\n\n  /**\n   * Clear text message.\n   * @default 'Clear'\n   */\n  clearText: PropTypes.node,\n\n  /**\n   * The components used for each slot.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    LeftArrowButton: PropTypes.elementType,\n    LeftArrowIcon: PropTypes.elementType,\n    OpenPickerIcon: PropTypes.elementType,\n    RightArrowButton: PropTypes.elementType,\n    RightArrowIcon: PropTypes.elementType,\n    SwitchViewButton: PropTypes.elementType,\n    SwitchViewIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    leftArrowButton: PropTypes.object,\n    rightArrowButton: PropTypes.object,\n    switchViewButton: PropTypes.object\n  }),\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * Props applied to the [`Dialog`](/api/dialog/) element.\n   */\n  DialogProps: PropTypes.object,\n\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, todays date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Text for end input label and toolbar placeholder.\n   * @default 'End'\n   */\n  endText: PropTypes.node,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n\n  /**\n   * @ignore\n   */\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   * @default '__/__/____'\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Max selectable date. @DateIOType\n   * @default defaultMaxDate\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Min selectable date. @DateIOType\n   * @default defaultMinDate\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Ok button text.\n   * @default 'OK'\n   */\n  okText: PropTypes.node,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date range) changes @DateIOType.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change. @DateIOType\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for `<DateRangePicker />` days. @DateIOType\n   * @example (date, dateRangePickerDayProps) => <DateRangePickerDay {...dateRangePickerDayProps} />\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://mui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   *  renderInput={(startProps, endProps) => (\n   *   <React.Fragment>\n   *     <TextField {...startProps} />\n   *     <Box sx={{ mx: 2 }}> to </Box>\n   *     <TextField {...endProps} />\n   *   </React.Fragment>;\n   *  )}\n   * />\n   * ````\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, the today button is displayed. **Note** that `showClearButton` has a higher priority.\n   * @default false\n   */\n  showTodayButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Text for start input label and toolbar placeholder.\n   * @default 'Start'\n   */\n  startText: PropTypes.node,\n\n  /**\n   * Today text message.\n   * @default 'Today'\n   */\n  todayText: PropTypes.node,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date range'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * The value of the date range picker.\n   */\n  value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.any, PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string])).isRequired\n} : void 0;\nexport default MobileDateRangePicker;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\", \"PopperProps\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useThemeProps } from '@mui/material/styles';\nimport DesktopTooltipWrapper from '../internal/pickers/wrappers/DesktopTooltipWrapper';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useDateRangeValidation } from '../internal/pickers/hooks/useValidation';\nimport { usePickerState } from '../internal/pickers/hooks/usePickerState';\nimport { DateRangePickerView } from '../DateRangePicker/DateRangePickerView';\nimport DateRangePickerInput from '../DateRangePicker/DateRangePickerInput';\nimport { parseRangeInputValue } from '../internal/pickers/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst KeyboardDateInputComponent = DateRangePickerInput;\nconst rangePickerValueManager = {\n  emptyValue: [null, null],\n  parseInput: parseRangeInputValue,\n  areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1])\n};\n\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [DesktopDateRangePicker API](https://mui.com/api/desktop-date-range-picker/)\n */\nconst DesktopDateRangePicker = /*#__PURE__*/React.forwardRef(function DesktopDateRangePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDesktopDateRangePicker'\n  });\n\n  const {\n    calendars = 2,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: minDateProp,\n    maxDate: maxDateProp,\n    PopperProps,\n    TransitionComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState('start');\n\n  const pickerStateProps = _extends({}, other, {\n    value,\n    onChange\n  });\n\n  const restProps = _extends({}, other, {\n    minDate,\n    maxDate\n  });\n\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(pickerStateProps, rangePickerValueManager);\n  const validationError = useDateRangeValidation(props);\n\n  const DateInputProps = _extends({}, inputProps, restProps, {\n    currentlySelectingRangeEnd,\n    inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    endText,\n    mask,\n    validationError,\n    ref\n  });\n\n  return /*#__PURE__*/_jsx(DesktopTooltipWrapper, _extends({}, wrapperProps, {\n    DateInputProps: DateInputProps,\n    KeyboardDateInputComponent: KeyboardDateInputComponent,\n    PopperProps: PopperProps,\n    TransitionComponent: TransitionComponent,\n    children: /*#__PURE__*/_jsx(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DesktopDateRangePicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n\n  /**\n   * If `true`, `onChange` is fired on click even if the same date is selected.\n   * @default false\n   */\n  allowSameDateSelection: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The number of calendars that render on **desktop**.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The components used for each slot.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    LeftArrowButton: PropTypes.elementType,\n    LeftArrowIcon: PropTypes.elementType,\n    OpenPickerIcon: PropTypes.elementType,\n    RightArrowButton: PropTypes.elementType,\n    RightArrowIcon: PropTypes.elementType,\n    SwitchViewButton: PropTypes.elementType,\n    SwitchViewIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    leftArrowButton: PropTypes.object,\n    rightArrowButton: PropTypes.object,\n    switchViewButton: PropTypes.object\n  }),\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, todays date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Text for end input label and toolbar placeholder.\n   * @default 'End'\n   */\n  endText: PropTypes.node,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n\n  /**\n   * @ignore\n   */\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   * @default '__/__/____'\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Max selectable date. @DateIOType\n   * @default defaultMaxDate\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Min selectable date. @DateIOType\n   * @default defaultMinDate\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date range) changes @DateIOType.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change. @DateIOType\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Paper props passed down to [Paper](https://mui.com/api/paper/) component.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Popper props passed down to [Popper](https://mui.com/api/popper/) component.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for `<DateRangePicker />` days. @DateIOType\n   * @example (date, dateRangePickerDayProps) => <DateRangePickerDay {...dateRangePickerDayProps} />\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://mui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   *  renderInput={(startProps, endProps) => (\n   *   <React.Fragment>\n   *     <TextField {...startProps} />\n   *     <Box sx={{ mx: 2 }}> to </Box>\n   *     <TextField {...endProps} />\n   *   </React.Fragment>;\n   *  )}\n   * />\n   * ````\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Text for start input label and toolbar placeholder.\n   * @default 'Start'\n   */\n  startText: PropTypes.node,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date range'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * Custom component for popper [Transition](https://mui.com/components/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The value of the date range picker.\n   */\n  value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.any, PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string])).isRequired\n} : void 0;\nexport default DesktopDateRangePicker;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"cancelText\", \"clearable\", \"clearText\", \"DateInputProps\", \"desktopModeMediaQuery\", \"DialogProps\", \"KeyboardDateInputComponent\", \"okText\", \"PopperProps\", \"PureDateInputComponent\", \"showTodayButton\", \"todayText\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport MobileWrapper from './MobileWrapper';\nimport DesktopTooltipWrapper from './DesktopTooltipWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function ResponsiveTooltipWrapper(props) {\n  const {\n    cancelText,\n    clearable,\n    clearText,\n    DateInputProps,\n    desktopModeMediaQuery = '@media (pointer: fine)',\n    DialogProps,\n    KeyboardDateInputComponent,\n    okText,\n    PopperProps,\n    PureDateInputComponent,\n    showTodayButton,\n    todayText,\n    TransitionComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isDesktop = useMediaQuery(desktopModeMediaQuery);\n  return isDesktop ? /*#__PURE__*/_jsx(DesktopTooltipWrapper, _extends({\n    DateInputProps: DateInputProps,\n    KeyboardDateInputComponent: KeyboardDateInputComponent,\n    PopperProps: PopperProps,\n    TransitionComponent: TransitionComponent\n  }, other)) : /*#__PURE__*/_jsx(MobileWrapper, _extends({\n    cancelText: cancelText,\n    clearable: clearable,\n    clearText: clearText,\n    DateInputProps: DateInputProps,\n    DialogProps: DialogProps,\n    okText: okText,\n    PureDateInputComponent: PureDateInputComponent,\n    showTodayButton: showTodayButton,\n    todayText: todayText\n  }, other));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\"];\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { ResponsiveTooltipWrapper } from '../internal/pickers/wrappers/ResponsiveWrapper';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useDateRangeValidation } from '../internal/pickers/hooks/useValidation';\nimport { usePickerState } from '../internal/pickers/hooks/usePickerState';\nimport { DateRangePickerView } from './DateRangePickerView';\nimport DateRangePickerInput from './DateRangePickerInput';\nimport { parseRangeInputValue } from '../internal/pickers/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst KeyboardDateInputComponent = DateRangePickerInput;\nconst PureDateInputComponent = DateRangePickerInput;\nconst rangePickerValueManager = {\n  emptyValue: [null, null],\n  parseInput: parseRangeInputValue,\n  areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1])\n};\n\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePicker API](https://mui.com/api/date-range-picker/)\n */\nconst DateRangePicker = /*#__PURE__*/React.forwardRef(function DateRangePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePicker'\n  });\n\n  const {\n    calendars = 2,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: minDateProp,\n    maxDate: maxDateProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState('start');\n\n  const pickerStateProps = _extends({}, other, {\n    value,\n    onChange\n  });\n\n  const restProps = _extends({}, other, {\n    minDate,\n    maxDate\n  });\n\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(pickerStateProps, rangePickerValueManager);\n  const validationError = useDateRangeValidation(props);\n\n  const DateInputProps = _extends({}, inputProps, restProps, {\n    currentlySelectingRangeEnd,\n    inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    endText,\n    mask,\n    validationError,\n    ref\n  });\n\n  return /*#__PURE__*/_jsx(ResponsiveTooltipWrapper, _extends({}, restProps, wrapperProps, {\n    DateInputProps: DateInputProps,\n    KeyboardDateInputComponent: KeyboardDateInputComponent,\n    PureDateInputComponent: PureDateInputComponent,\n    children: /*#__PURE__*/_jsx(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n\n  /**\n   * If `true`, `onChange` is fired on click even if the same date is selected.\n   * @default false\n   */\n  allowSameDateSelection: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The number of calendars that render on **desktop**.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * Cancel text message.\n   * @default 'Cancel'\n   */\n  cancelText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, it shows the clear action in the picker dialog.\n   * @default false\n   */\n  clearable: PropTypes.bool,\n\n  /**\n   * Clear text message.\n   * @default 'Clear'\n   */\n  clearText: PropTypes.node,\n\n  /**\n   * The components used for each slot.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    LeftArrowButton: PropTypes.elementType,\n    LeftArrowIcon: PropTypes.elementType,\n    OpenPickerIcon: PropTypes.elementType,\n    RightArrowButton: PropTypes.elementType,\n    RightArrowIcon: PropTypes.elementType,\n    SwitchViewButton: PropTypes.elementType,\n    SwitchViewIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    leftArrowButton: PropTypes.object,\n    rightArrowButton: PropTypes.object,\n    switchViewButton: PropTypes.object\n  }),\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * CSS media query when `Mobile` mode will be changed to `Desktop`.\n   * @default '@media (pointer: fine)'\n   * @example '@media (min-width: 720px)' or theme.breakpoints.up('sm')\n   */\n  desktopModeMediaQuery: PropTypes.string,\n\n  /**\n   * Props applied to the [`Dialog`](/api/dialog/) element.\n   */\n  DialogProps: PropTypes.object,\n\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, todays date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Text for end input label and toolbar placeholder.\n   * @default 'End'\n   */\n  endText: PropTypes.node,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n\n  /**\n   * @ignore\n   */\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   * @default '__/__/____'\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Max selectable date. @DateIOType\n   * @default defaultMaxDate\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Min selectable date. @DateIOType\n   * @default defaultMinDate\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Ok button text.\n   * @default 'OK'\n   */\n  okText: PropTypes.node,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date range) changes @DateIOType.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change. @DateIOType\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Paper props passed down to [Paper](https://mui.com/api/paper/) component.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Popper props passed down to [Popper](https://mui.com/api/popper/) component.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for `<DateRangePicker />` days. @DateIOType\n   * @example (date, dateRangePickerDayProps) => <DateRangePickerDay {...dateRangePickerDayProps} />\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://mui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   *  renderInput={(startProps, endProps) => (\n   *   <React.Fragment>\n   *     <TextField {...startProps} />\n   *     <Box sx={{ mx: 2 }}> to </Box>\n   *     <TextField {...endProps} />\n   *   </React.Fragment>;\n   *  )}\n   * />\n   * ````\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, the today button is displayed. **Note** that `showClearButton` has a higher priority.\n   * @default false\n   */\n  showTodayButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Text for start input label and toolbar placeholder.\n   * @default 'Start'\n   */\n  startText: PropTypes.node,\n\n  /**\n   * Today text message.\n   * @default 'Today'\n   */\n  todayText: PropTypes.node,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date range'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * Custom component for popper [Transition](https://mui.com/components/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The value of the date range picker.\n   */\n  value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.any, PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string])).isRequired\n} : void 0;\nexport default DateRangePicker;"],"sourceRoot":""}