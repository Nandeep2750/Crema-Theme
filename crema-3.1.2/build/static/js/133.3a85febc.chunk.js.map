{"version":3,"sources":["@crema/services/db/extraPages/portFolio/sales.js","@crema/services/db/extraPages/portFolio/installation.js","pages/extraPages/KnowledgeBase/KBItem.js","pages/extraPages/KnowledgeBase/Sales.js","pages/extraPages/KnowledgeBase/Installation.js","pages/extraPages/KnowledgeBase/index.js"],"names":["salesData","id","ques","ans","tags","installationData","KbItem","data","Grid","item","xs","sm","md","Box","sx","mb","component","fontSize","fontWeight","Fonts","MEDIUM","AppScrollbar","padding","marginBottom","maxHeight","mx","map","tag","index","Chip","label","variant","margin","Sales","saleQueries","lg","color","BOLD","IntlMessages","AppGridContainer","sale","KBItem","Installation","installationQueries","KnowledgeBase","messages","useIntl","useState","filterText","setFilterText","filter","includes","AppAnimate","animation","delay","flex","textAlign","maxWidth","TextField","placeholder","style","width","InputProps","startAdornment","InputAdornment","position","value","onChange","event","target","Divider","marginTop","xl"],"mappings":"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","file":"static/js/133.3a85febc.chunk.js","sourcesContent":["export const salesData = [\r\n  {\r\n    id: 2001,\r\n    ques: 'How much one could earn using your products?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2002,\r\n    ques: 'What are some common taxes applied to these products?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2003,\r\n    ques: 'What is the commission structues you are offering to affiliates?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2004,\r\n    ques: 'How much incentive do you pay if someone reaches the sale goal?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2005,\r\n    ques: 'How much one could earn using your products?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n];\r\n","export const installationData = [\r\n  {\r\n    id: 2001,\r\n    ques: 'Approximately how many people work in your company?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2002,\r\n    ques: 'What are some common system requirement to install your software?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2003,\r\n    ques: 'What are some pre-requisites before installing your software?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2004,\r\n    ques: 'Is there any document available for instructions regarding to installation of software?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2005,\r\n    ques: 'What are some common system requirement to install your software?',\r\n    ans: \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n];\r\n","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport AppScrollbar from '../../../@crema/core/AppScrollbar';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\nimport {AppCard} from '../../../@crema';\r\n\r\nconst KbItem = ({data}) => {\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <AppCard>\r\n        <Box\r\n          sx={{mb: 2, component: 'h5', fontSize: 16, fontWeight: Fonts.MEDIUM}}\r\n        >\r\n          {data.ques}\r\n        </Box>\r\n        <AppScrollbar\r\n          sx={{\r\n            padding: 0,\r\n            marginBottom: 5,\r\n            maxHeight: 130,\r\n          }}\r\n        >\r\n          <Box component='p'>{data.ans}</Box>\r\n        </AppScrollbar>\r\n        <Box mx={-2}>\r\n          {data.tags.map((tag, index) => {\r\n            return (\r\n              <Chip\r\n                label={tag}\r\n                variant='outlined'\r\n                sx={{\r\n                  margin: 2,\r\n                  fontWeight: Fonts.MEDIUM,\r\n                }}\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      </AppCard>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default KbItem;\r\n\r\nKbItem.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport KBItem from './KBItem';\r\nimport AppGridContainer from '../../../@crema/core/AppGridContainer';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Sales = ({saleQueries}) => {\r\n  return (\r\n    <Box mb={{xs: 6, lg: 10}}>\r\n      <Box\r\n        component='h3'\r\n        color='text.primary'\r\n        mb={{xs: 4, lg: 6}}\r\n        fontSize={16}\r\n        fontWeight={Fonts.BOLD}\r\n      >\r\n        <IntlMessages id='knowledge.sales' />\r\n      </Box>\r\n      <AppGridContainer>\r\n        {saleQueries.map((sale, index) => (\r\n          <KBItem data={sale} key={index} />\r\n        ))}\r\n      </AppGridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n\r\nSales.propTypes = {\r\n  saleQueries: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport KBItem from './KBItem';\r\nimport AppGridContainer from '../../../@crema/core/AppGridContainer';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Installation = ({installationQueries}) => {\r\n  return (\r\n    <Box mb={2}>\r\n      <Box\r\n        component='h3'\r\n        color='text.primary'\r\n        mb={{xs: 4, lg: 6}}\r\n        fontSize={16}\r\n        fontWeight={Fonts.BOLD}\r\n      >\r\n        <IntlMessages id='knowledge.installation' />\r\n      </Box>\r\n      <AppGridContainer>\r\n        {installationQueries.map((data) => (\r\n          <KBItem data={data} key={data.id} />\r\n        ))}\r\n      </AppGridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Installation;\r\n\r\nInstallation.propTypes = {\r\n  installationQueries: PropTypes.array.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Divider from '@mui/material/Divider';\r\nimport {salesData} from '../../../@crema/services/db/extraPages/portFolio/sales';\r\nimport {installationData} from '../../../@crema/services/db/extraPages/portFolio/installation';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport Sales from './Sales';\r\nimport Installation from './Installation';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\n\r\nconst KnowledgeBase = () => {\r\n  const {messages} = useIntl();\r\n\r\n  const [filterText, setFilterText] = useState('');\r\n\r\n  const saleQueries =\r\n    filterText !== ''\r\n      ? salesData.filter((data) => data.ques.includes(filterText))\r\n      : salesData;\r\n\r\n  const installationQueries =\r\n    filterText !== ''\r\n      ? installationData.filter((data) => data.ques.includes(filterText))\r\n      : installationData;\r\n\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <Box flex={1}>\r\n        <Box mx='auto' textAlign='center' maxWidth={768}>\r\n          <Box\r\n            component='h2'\r\n            color='text.primary'\r\n            mb={6}\r\n            fontSize={20}\r\n            fontWeight={Fonts.MEDIUM}\r\n          >\r\n            <IntlMessages id='knowledge.howHelp' />\r\n          </Box>\r\n\r\n          <TextField\r\n            id='outlined-with-placeholder'\r\n            placeholder={messages['knowledge.AppSkeleton']}\r\n            style={{width: '100%'}}\r\n            variant='outlined'\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment\r\n                  position='start'\r\n                  sx={{\r\n                    fontWeight: Fonts.MEDIUM,\r\n                  }}\r\n                >\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            value={filterText}\r\n            onChange={(event) => setFilterText(event.target.value)}\r\n          />\r\n        </Box>\r\n\r\n        <Divider\r\n          sx={{\r\n            marginTop: {xs: 4, sm: 6, lg: 8, xl: 10},\r\n            marginBottom: {xs: 4, sm: 6, lg: 8, xl: 10},\r\n          }}\r\n        />\r\n\r\n        <Sales saleQueries={saleQueries} />\r\n\r\n        <Installation installationQueries={installationQueries} />\r\n      </Box>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default KnowledgeBase;\r\n"],"sourceRoot":""}