{"version":3,"sources":["@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/AppContainerWrapper.js","@crema/core/AppsContainer/index.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppsContainer/AppsContent/index.js","@crema/core/AppList/ListEmptyResult.js","@crema/core/AppsStarredIcon/index.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppDialog/index.js","@crema/core/AppsSideBarFolderItem/index.js","@crema/core/AppSkeleton/SidebarListSkeleton.js","@crema/core/AppSkeleton/MailDetailSkeleton.js","pages/apps/Mail/MailsList/MailContentHeader/CheckedMailActions.js","pages/apps/Mail/MailsList/MailContentHeader/MoreOptions.js","pages/apps/Mail/MailsList/MailContentHeader/index.js","@crema/core/AppSkeleton/EmailListSkeleton.js","pages/apps/Mail/MailsList/MailListItemMobile/index.styles.js","@crema/utility/helper/StringHelper.js","pages/apps/Mail/MailsList/MailListItemMobile/index.js","pages/apps/Mail/MailsList/MailListItem/index.styles.js","pages/apps/Mail/MailsList/MailListItem/index.js","pages/apps/Mail/MailsList/index.js","pages/apps/Mail/MailDetail/MailDetailHeader/index.js","pages/apps/Mail/MailDetail/MailDetailBody/ForwardMail/index.js","pages/apps/Mail/MailDetail/MailDetailBody/MessageItem.js","pages/apps/Mail/MailDetail/MailDetailBody/index.js","pages/apps/Mail/MailDetail/index.js","pages/apps/Mail/ComposeMail/index.js","pages/apps/Mail/MailSideBar/ConnectionListItem.js","pages/apps/Mail/MailSideBar/LabelItem.js","pages/apps/Mail/MailSideBar/index.js","pages/apps/Mail/index.js"],"names":["AppSidebar","props","isAppDrawerOpen","sidebarContent","dispatch","useDispatch","Slide","direction","in","mountOnEnter","unmountOnExit","Box","sx","height","width","lg","Hidden","lgUp","Drawer","open","onClose","onToggleAppDrawer","position","drawerClasses","paper","zIndex","lgDown","Card","style","getMainHeaderHeight","navStyle","screenSize","NavStyle","BIT_BUCKET","AppContainerWrapper","children","footer","rest","display","xs","sm","md","xl","AppsContainer","useSelector","common","useLayoutContext","title","fullView","flex","flexDirection","overflow","margin","padding","sxStyle","marginTop","alignItems","mb","mt","IconButton","edge","marginRight","theme","spacing","color","onClick","size","Zoom","transitionDelay","component","variant","fontSize","fontWeight","Fonts","SEMI_BOLD","pl","cardStyle","AppInfoView","defaultProps","AppsHeader","borderBottom","palette","divider","className","AppsContentContainer","styled","SimpleBarReact","paddingTop","paddingBottom","AppsContent","isDetailView","ListEmptyResult","loader","placeholder","loading","actionTitle","content","Fragment","minHeight","p","justifyContent","borderColor","borderRadius","textAlign","ml","border","text","secondary","MEDIUM","minWidth","id","AppsStarredIcon","item","onChange","warning","main","icon","checkedIcon","checked","isStarred","event","target","AppsFooter","px","py","borderTop","Transition","React","forwardRef","ref","AppDialog","maxWidth","hideClose","dividers","fullHeight","overflowY","paddingLeft","paddingRight","TransitionComponent","right","top","maxHeight","type","AppsSideBarFolderList","ListItem","marginBottom","breakpoints","up","backgroundColor","alpha","primary","getIconByName","name","AppsSideBarFolderItem","path","button","to","AppNavLink","activeClassName","mr","alias","my","SidebarItem","viewBox","x","y","rx","ry","SidebarListSkeleton","MailDetailSkeleton","speed","foregroundColor","cx","cy","r","CheckedMailActions","checkedMails","setCheckedMails","useState","isLabelOpen","onOpenLabel","isMoveToOpen","onOpenMoveToIcon","labelList","mailApp","folderList","onChangeMailFolder","onUpdateMailFolders","onSelectLabel","labelType","find","label","value","onUpdateMailLabels","AppTooltip","IntlMessages","disabled","cursor","currentTarget","Menu","anchorEl","Boolean","map","MenuItem","folder","MoreOptions","unReadOption","readOption","starredOption","unStarredOption","mailList","isMoreIcon","onOpenMoreIcon","mail","includes","isRead","onViewMoreOpen","onViewMoreClose","onChangeReadStatus","statusValue","status","onUpdateMailReadStatus","onChangeAllReadStatus","onChangeAllStarred","onUpdateMailStarredStatus","length","onChangeStarredStatus","MailContentHeader","page","onPageChange","filterText","onSetFilterText","totalMails","messages","useIntl","Checkbox","indeterminate","mailIds","AppSearchBar","iconPosition","overlap","smDown","AppsPagination","count","MailItem","EmailListSkeleton","MailMobileItemWrapper","background","default","boxShadow","black","AvatarWrapper","white","AttachmentWrapper","getStringFromHtml","htmlContent","replace","MailListItemMobile","date","onChangeCheckedMails","onChangeStarred","onViewMailDetail","getSenderName","console","log","sender","dense","clsx","active","stopPropagation","Avatar","alt","src","profilePic","pr","transition","Typography","textOverflow","whiteSpace","isReplied","subject","description","isAttachment","pt","sentOn","moment","format","split","MailItemWrapper","REGULAR","opacity","visibility","MailInfoWrapper","MainActionWrapper","transform","MailListItem","detail","marginLeft","e","MailsList","navigate","useNavigate","useParams","setPage","pathname","useLocation","useEffect","onGetMailList","concat","filter","mailId","list","toLowerCase","AppList","data","ListEmptyComponent","renderRow","smUp","MailDetailHeader","selectedMail","onUpdateSelectedMail","folderValue","ReactQuillWrapper","ReactQuill","validationSchema","yup","email","required","cc","MailForward","onSubmitForwardedMail","isShowCC","onShowCC","onShowCcInput","user","useAuthUser","validateOnChange","initialValues","onSubmit","setSubmitting","resetForm","messageId","Math","floor","random","displayName","username","bcc","setFieldValue","AppTextField","fullWidth","InputProps","startAdornment","InputAdornment","Button","MailDetailUser","MailDescriptionItem","MessageItem","message","mailLength","index","onSubmitMail","isExpanded","setExpanded","isReply","isForward","onSelectMethod","setAnchorEl","onGetMailDate","handleClick","preventDefault","handleClose","undefined","wordBreak","lineHeight","placement","toString","Popover","anchorOrigin","vertical","horizontal","flexWrap","renderHTML","ForwardMail","MailDetailBody","splice","pb","MailDetail","contentRef","createRef","onGetSelectedMail","onNullifyMail","AppAnimate","animatoin","CcBccFieldWrapper","ComposeMail","isComposeMail","onCloseComposeMail","isShowBcc","onShowBcc","isShowChip","onShowChip","LIGHT","isChecked","blue","hasAttachments","onComposeMail","isSubmitting","values","noValidate","autoComplete","Chip","test","onDelete","onBlur","connection","ListItemTextWrapper","ListItemText","ConnectionListItem","ListItemAvatar","image","LabelItemWrapper","LabelItem","MailSidebar","connectionList","setComposeMail","startIcon","AppScrollbar","List","MailDetailViewWrapper","left","Mail","onGetMailLabelList","onGetMailFolderList","onGetConnectionList","show"],"mappings":"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","file":"static/js/29.cd6c1fa8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Card from '@mui/material/Card';\r\nimport {Box, drawerClasses, Slide} from '@mui/material';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {onToggleAppDrawer} from '../../../redux/actions';\r\n\r\nconst AppSidebar = (props) => {\r\n  const {isAppDrawerOpen, sidebarContent} = props;\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Slide direction='right' in mountOnEnter unmountOnExit>\r\n      <Box\r\n        sx={{\r\n          height: '100%',\r\n          width: {\r\n            lg: 280,\r\n          },\r\n        }}\r\n      >\r\n        <Hidden lgUp>\r\n          <Drawer\r\n            open={isAppDrawerOpen}\r\n            onClose={() => dispatch(onToggleAppDrawer())}\r\n            sx={{\r\n              position: 'absolute',\r\n              [`& .${drawerClasses.paper}`]: {\r\n                width: 280,\r\n                '& .listItem': {\r\n                  zIndex: 1305,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {sidebarContent}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden lgDown>\r\n          <Card style={{height: '100%'}}>{sidebarContent}</Card>\r\n        </Hidden>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\n\r\nAppSidebar.propTypes = {\r\n  isAppDrawerOpen: PropTypes.bool,\r\n  footer: PropTypes.bool,\r\n  navStyle: PropTypes.string,\r\n  fullView: PropTypes.bool,\r\n  sidebarContent: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport {NavStyle} from '../../../shared/constants/AppEnums';\r\n\r\nconst getMainHeaderHeight = (navStyle, screenSize) => {\r\n  if (navStyle === NavStyle.BIT_BUCKET) return screenSize >= 1200 ? 0 : 70; // Header Height\r\n  return screenSize >= 600 ? 70 : 56;\r\n};\r\n\r\nconst AppContainerWrapper = ({children, navStyle, footer, ...rest}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        height: {\r\n          xs: `calc(100vh - ${\r\n            47 + // AppsHeader Height // apps title block height\r\n            40 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 0) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          sm: `calc(100vh - ${\r\n            47 + // AppsHeader Height\r\n            40 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 600) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          md: `calc(100vh - ${\r\n            47 + // AppsHeader Height\r\n            60 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 900) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          lg: `calc(100vh - ${\r\n            40 + // AppsHeader Height\r\n            60 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 1200) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          xl: `calc(100vh - ${\r\n            40 + // AppsHeader Height\r\n            100 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 1536) +\r\n            (footer ? 57 : 0)\r\n          }px) !important`,\r\n        },\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppContainerWrapper;\r\n\r\nAppContainerWrapper.propTypes = {\r\n  children: PropsTypes.node,\r\n  navStyle: PropsTypes.string,\r\n  footer: PropsTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport {Box, Slide, Zoom} from '@mui/material';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@mui/material/Card';\r\n\r\nimport {onToggleAppDrawer} from '../../../redux/actions';\r\nimport AppSidebar from './AppSidebar';\r\nimport {useLayoutContext} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AppContainerWrapper from './AppContainerWrapper';\r\n\r\nconst AppsContainer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isAppDrawerOpen = useSelector(({common}) => common.isAppDrawerOpen);\r\n  const {footer} = useLayoutContext();\r\n  const {navStyle} = useLayoutContext();\r\n  const {title, sidebarContent, fullView, children} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n        margin: -4,\r\n        padding: 4,\r\n        ...props.sxStyle,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          marginTop: fullView ? 0 : -4,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          mb: {\r\n            xs: fullView ? 4 : 2,\r\n            lg: 4,\r\n          },\r\n          mt: {\r\n            xs: fullView ? 0 : -4,\r\n            lg: 0,\r\n          },\r\n        }}\r\n      >\r\n        {fullView ? null : (\r\n          <Hidden lgUp>\r\n            <IconButton\r\n              edge='start'\r\n              sx={{\r\n                marginRight: (theme) => theme.spacing(2),\r\n              }}\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={() => dispatch(onToggleAppDrawer())}\r\n              size='large'\r\n            >\r\n              <MenuIcon\r\n                sx={{\r\n                  width: 35,\r\n                  height: 35,\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Hidden>\r\n        )}\r\n        <Zoom in style={{transitionDelay: '300ms'}}>\r\n          <Box\r\n            component='h2'\r\n            variant='h2'\r\n            sx={{\r\n              fontSize: 16,\r\n              color: 'text.primary',\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            {title}\r\n          </Box>\r\n        </Zoom>\r\n      </Box>\r\n\r\n      <AppContainerWrapper navStyle={navStyle} footer={footer}>\r\n        {sidebarContent ? (\r\n          <AppSidebar\r\n            isAppDrawerOpen={isAppDrawerOpen}\r\n            footer={footer}\r\n            fullView={fullView}\r\n            navStyle={navStyle}\r\n            sidebarContent={sidebarContent}\r\n          />\r\n        ) : null}\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: {\r\n              xs: '100%',\r\n              lg: `calc(100% - ${fullView ? 0 : 280}px)`,\r\n            },\r\n            pl: {\r\n              lg: props.fullView ? 0 : 8,\r\n            },\r\n          }}\r\n        >\r\n          <Slide direction='left' in mountOnEnter unmountOnExit>\r\n            <Card\r\n              style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                position: 'relative',\r\n                ...props.cardStyle,\r\n              }}\r\n            >\r\n              {children}\r\n            </Card>\r\n          </Slide>\r\n          <AppInfoView />\r\n        </Box>\r\n      </AppContainerWrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsContainer;\r\n\r\nAppsContainer.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nAppsContainer.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  sidebarContent: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  sxStyle: PropTypes.object,\r\n  cardStyle: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Box} from '@mui/material';\r\nconst AppsHeader = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 60,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n        padding: {\r\n          xs: '4px 10px',\r\n          xl: '12px 10px',\r\n        },\r\n      }}\r\n      className='apps-header'\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsHeader;\r\n\r\nAppsHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nAppsHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {styled} from '@mui/material/styles';\r\nimport SimpleBarReact from 'simplebar-react';\r\n\r\nconst AppsContentContainer = styled(SimpleBarReact)(() => {\r\n  return {\r\n    width: '100%',\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& .simplebar-content': {\r\n      height: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nconst AppsContent = ({isDetailView, fullView, children, ...rest}) => {\r\n  return (\r\n    <AppsContentContainer\r\n      {...rest}\r\n      sx={{\r\n        height: {\r\n          xs: `calc(100% - ${isDetailView ? 60 : 129}px)`,\r\n          sm: `calc(100% - ${fullView ? 0 : 60}px)`,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </AppsContentContainer>\r\n  );\r\n};\r\n\r\nexport default AppsContent;\r\n\r\nAppsContent.propTypes = {\r\n  children: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  isDetailView: PropTypes.bool,\r\n};\r\n\r\nAppsContent.defaultProps = {isDetailView: false};\r\n","import React from 'react';\r\nimport {Box, Button, CircularProgress, Typography} from '@mui/material';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst ListEmptyResult = ({\r\n  loader,\r\n  placeholder,\r\n  loading,\r\n  title,\r\n  actionTitle,\r\n  content,\r\n  onClick,\r\n}) => {\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <Box\r\n            sx={{\r\n              flexDirection: 'row',\r\n              minHeight: '450px',\r\n              height: '100%',\r\n              flex: 1,\r\n              display: 'flex',\r\n              p: 5,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              borderColor: 'transparent',\r\n              borderRadius: '4px',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <CircularProgress size={16} />\r\n            <Box component='span' sx={{ml: 2}}>\r\n              Loading...\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          flexDirection: 'column',\r\n          minHeight: '450px',\r\n          height: '100%',\r\n          flex: 1,\r\n          display: 'flex',\r\n          p: 5,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          border: 1,\r\n          borderColor: 'transparent',\r\n          borderRadius: '4px',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        {title ? (\r\n          <Typography\r\n            sx={{\r\n              fontSize: 14,\r\n              color: (theme) => theme.palette.text.secondary,\r\n              fontWeight: Fonts.MEDIUM,\r\n              mb: 2,\r\n            }}\r\n            component='h4'\r\n            variant='h4'\r\n          >\r\n            {title}\r\n          </Typography>\r\n        ) : null}\r\n        <Typography\r\n          sx={{\r\n            fontSize: 14,\r\n            color: (theme) => theme.palette.text.secondary,\r\n          }}\r\n        >\r\n          {content}\r\n        </Typography>\r\n\r\n        {actionTitle ? (\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            style={{mt: 7.5, height: 45, minWidth: 150}}\r\n            onClick={onClick}\r\n          >\r\n            {actionTitle}\r\n          </Button>\r\n        ) : null}\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n\r\nListEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n};\r\n\r\nListEmptyResult.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  actionTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  onClick: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  loader: PropTypes.bool,\r\n  placeholder: PropTypes.node,\r\n  content: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport {Checkbox} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppsStarredIcon = ({item, onChange}) => {\r\n  return (\r\n    <Checkbox\r\n      sx={{\r\n        color: (theme) => theme.palette.warning.main,\r\n        '&.Mui-checked': {\r\n          color: (theme) => theme.palette.warning.main,\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: 20,\r\n        },\r\n      }}\r\n      icon={<StarBorderIcon />}\r\n      checkedIcon={<StarIcon />}\r\n      checked={item.isStarred}\r\n      onChange={(event) => onChange(event.target.checked, item)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n\r\nAppsStarredIcon.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Box} from '@mui/material';\r\n\r\nconst AppsFooter = (props) => {\r\n  const {children} = props;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        px: 5,\r\n        py: 2,\r\n        borderTop: (theme) => `1px solid ${theme.palette.divider}`,\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsFooter;\r\n\r\nAppsFooter.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport {Dialog, DialogTitle, Slide} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nconst AppDialog = ({\r\n  sxStyle,\r\n  maxWidth,\r\n  hideClose,\r\n  open,\r\n  onClose,\r\n  children,\r\n  dividers,\r\n  title,\r\n  actionTitle,\r\n  fullHeight,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      sx={{\r\n        '& .MuiDialog-paper': {\r\n          width: '100%',\r\n        },\r\n        '& .MuiDialogContent-root': {\r\n          overflowY: 'hidden',\r\n          paddingLeft: 0,\r\n          paddingRight: 0,\r\n        },\r\n        ...sxStyle,\r\n      }}\r\n      maxWidth={maxWidth}\r\n      TransitionComponent={Transition}\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          fontSize: 14,\r\n          fontWeight: Fonts.MEDIUM,\r\n        }}\r\n        id='app-dialog-title'\r\n      >\r\n        {title}\r\n        {hideClose ? null : (\r\n          <IconButton\r\n            aria-label='close'\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 4,\r\n              top: 4,\r\n              color: 'grey.500',\r\n            }}\r\n            onClick={onClose}\r\n            size='large'\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent dividers={dividers}>\r\n        <AppScrollbar\r\n          sx={{\r\n            paddingTop: 1,\r\n            height: fullHeight ? '70vh' : '100%',\r\n            minHeight: '300px',\r\n            maxHeight: '400px',\r\n            paddingRight: 6,\r\n            paddingLeft: 6,\r\n          }}\r\n        >\r\n          {children}\r\n        </AppScrollbar>\r\n      </DialogContent>\r\n      {actionTitle ? (\r\n        <DialogActions>\r\n          <Button color='primary' variant='contained' type='submit'>\r\n            {actionTitle}\r\n          </Button>\r\n        </DialogActions>\r\n      ) : null}\r\n    </Dialog>\r\n  );\r\n};\r\nexport default AppDialog;\r\n\r\nAppDialog.propTypes = {\r\n  maxWidth: PropTypes.string,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.node,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  dividers: PropTypes.bool,\r\n  hideClose: PropTypes.bool,\r\n  fullHeight: PropTypes.bool,\r\n  actionTitle: PropTypes.string,\r\n  sxStyle: PropTypes.object,\r\n};\r\nAppDialog.defaultProps = {\r\n  dividers: false,\r\n  fullHeight: false,\r\n  maxWidth: 'sm',\r\n  hideClose: false,\r\n};\r\n","import React from 'react';\r\nimport {AppNavLink} from '../../index';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';\r\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\r\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport ArchiveOutlinedIcon from '@mui/icons-material/ArchiveOutlined';\r\nimport GroupOutlinedIcon from '@mui/icons-material/GroupOutlined';\r\nimport AutorenewOutlinedIcon from '@mui/icons-material/AutorenewOutlined';\r\nimport ScheduleOutlinedIcon from '@mui/icons-material/ScheduleOutlined';\r\nimport TodayOutlinedIcon from '@mui/icons-material/TodayOutlined';\r\nimport CheckCircleOutlinedIcon from '@mui/icons-material/CheckCircleOutlined';\r\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport LabelImportantIcon from '@mui/icons-material/LabelImportant';\r\nimport {alpha, styled} from '@mui/material/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst AppsSideBarFolderList = styled(ListItem)(({theme}) => {\r\n  return {\r\n    padding: '7px 16px',\r\n    borderRadius: '0 30px 30px 0',\r\n    marginBottom: 1,\r\n    marginTop: 1,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n\r\n    '& svg': {\r\n      fontSize: '18px',\r\n    },\r\n\r\n    '&:hover,&:focus,&.active': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      color: theme.palette.primary.main,\r\n\r\n      '& .material-icons, & svg, & .MuiTypography-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n\r\n      '& .material-icons, & .MuiTypography-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      '& .list-item-text': {\r\n        '& .MuiTypography-body1': {\r\n          fontWeight: Fonts.SEMI_BOLD,\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst getIconByName = (name) => {\r\n  switch (name) {\r\n    case 'inbox':\r\n      return <EmailOutlinedIcon />;\r\n    case 'sent':\r\n      return <SendOutlinedIcon />;\r\n    case 'draft':\r\n      return <DraftsOutlinedIcon />;\r\n    case 'starred':\r\n      return <StarBorderOutlinedIcon />;\r\n    case 'spam':\r\n      return <InfoOutlinedIcon />;\r\n    case 'trash':\r\n      return <DeleteOutlineIcon />;\r\n    case 'archive':\r\n      return <ArchiveOutlinedIcon />;\r\n    case 'all':\r\n      return <GroupOutlinedIcon />;\r\n    case 'frequent':\r\n      return <AutorenewOutlinedIcon />;\r\n    case 'priority':\r\n      return <LabelImportantIcon />;\r\n    case 'scheduled':\r\n      return <ScheduleOutlinedIcon />;\r\n    case 'today':\r\n      return <TodayOutlinedIcon />;\r\n    case 'completed':\r\n      return <CheckCircleOutlinedIcon />;\r\n    case 'deleted':\r\n      return <DeleteOutlineIcon />;\r\n    default:\r\n      return <PersonOutlinedIcon />;\r\n  }\r\n};\r\n\r\nconst AppsSideBarFolderItem = ({item, path}) => {\r\n  return (\r\n    <AppsSideBarFolderList\r\n      button\r\n      key={item.id}\r\n      to={path}\r\n      component={AppNavLink}\r\n      activeClassName='active'\r\n    >\r\n      <ListItemIcon\r\n        sx={{\r\n          minWidth: 10,\r\n          mr: 3.5,\r\n          '& .material-icons, & svg': {\r\n            fontSize: 22,\r\n            color: (theme) => theme.palette.text.secondary,\r\n          },\r\n        }}\r\n      >\r\n        {getIconByName(item.alias)}\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={item.name}\r\n        sx={{\r\n          my: 0,\r\n          '& .MuiTypography-body1': {\r\n            fontSize: 14,\r\n            mb: 0.5,\r\n          },\r\n        }}\r\n        className='list-item-text'\r\n      />\r\n    </AppsSideBarFolderList>\r\n  );\r\n};\r\n\r\nexport default AppsSideBarFolderItem;\r\nAppsSideBarFolderItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst SidebarItem = () => (\r\n  <ContentLoader viewBox='0 0 200 45'>\r\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\r\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\r\n  </ContentLoader>\r\n);\r\nconst SidebarListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SidebarListSkeleton;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const MailDetailSkeleton = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    backgroundColor='#f3f3f3'\r\n    height={600}\r\n    foregroundColor='#ecebeb'\r\n    {...props}\r\n  >\r\n    <rect x='100' y='35' rx='3' ry='3' width='188' height='12' />\r\n    <rect x='100' y='55' rx='3' ry='3' width='152' height='10' />\r\n    <rect x='105' y='106' rx='3' ry='3' width='510' height='8' />\r\n    <rect x='105' y='132' rx='3' ry='3' width='480' height='8' />\r\n    <rect x='105' y='158' rx='3' ry='3' width='510' height='8' />\r\n    <rect x='105' y='178' rx='3' ry='3' width='478' height='8' />\r\n    <rect x='105' y='198' rx='3' ry='3' width='510' height='8' />\r\n    <rect x='105' y='218' rx='3' ry='3' width='478' height='8' />\r\n    <circle cx='50' cy='50' r='25' />\r\n  </ContentLoader>\r\n);\r\n","import React, {useState} from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport ArchiveOutlinedIcon from '@mui/icons-material/ArchiveOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ShopTwoOutlinedIcon from '@mui/icons-material/ShopTwoOutlined';\r\nimport {\r\n  onUpdateMailFolders,\r\n  onUpdateMailLabels,\r\n} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\n\r\nconst CheckedMailActions = (props) => {\r\n  const {checkedMails, setCheckedMails} = props;\r\n  const dispatch = useDispatch();\r\n  const [isLabelOpen, onOpenLabel] = useState(null);\r\n\r\n  const [isMoveToOpen, onOpenMoveToIcon] = useState(null);\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const onLabelOpen = (event) => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onMoveToOpen = (event) => {\r\n    onOpenMoveToIcon(event.currentTarget);\r\n  };\r\n\r\n  const onMoveToClose = () => {\r\n    onOpenMoveToIcon(null);\r\n  };\r\n\r\n  const onChangeMailFolder = (type) => {\r\n    dispatch(onUpdateMailFolders(checkedMails, type));\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  const onSelectLabel = (event) => {\r\n    const labelType = labelList.find(\r\n      (label) => label.id === event.target.value,\r\n    );\r\n    dispatch(onUpdateMailLabels(checkedMails, labelType));\r\n    setCheckedMails([]);\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <AppTooltip title={<IntlMessages id='common.archive' />}>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n          }}\r\n          onClick={() => onChangeMailFolder(127)}\r\n          size='large'\r\n        >\r\n          <ArchiveOutlinedIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n              display: 'block',\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </AppTooltip>\r\n\r\n      <AppTooltip title={<IntlMessages id='common.reportSpam' />}>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n          }}\r\n          onClick={() => onChangeMailFolder(125)}\r\n          size='large'\r\n        >\r\n          <InfoOutlinedIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n              display: 'block',\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </AppTooltip>\r\n\r\n      <AppTooltip title={<IntlMessages id='common.trash' />}>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n          }}\r\n          onClick={() => onChangeMailFolder(126)}\r\n          size='large'\r\n        >\r\n          <DeleteOutlinedIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n              display: 'block',\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </AppTooltip>\r\n\r\n      <AppTooltip title={<IntlMessages id='common.label' />}>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n          }}\r\n          onClick={onLabelOpen}\r\n          size='large'\r\n        >\r\n          <LabelOutlinedIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n              display: 'block',\r\n            }}\r\n            value={1}\r\n          />\r\n        </IconButton>\r\n      </AppTooltip>\r\n\r\n      <Menu\r\n        anchorEl={isLabelOpen}\r\n        open={Boolean(isLabelOpen)}\r\n        onClose={onLabelClose}\r\n      >\r\n        {labelList.map((label) => {\r\n          return (\r\n            <MenuItem onClick={onSelectLabel} value={label.id} key={label.id}>\r\n              {label.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n\r\n      <AppTooltip title={<IntlMessages id='common.moveTo' />}>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n          }}\r\n          onClick={onMoveToOpen}\r\n          size='large'\r\n        >\r\n          <ShopTwoOutlinedIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n              display: 'block',\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </AppTooltip>\r\n\r\n      <Menu\r\n        anchorEl={isMoveToOpen}\r\n        open={Boolean(isMoveToOpen)}\r\n        onClose={onMoveToClose}\r\n      >\r\n        {folderList.map((folder) => {\r\n          return (\r\n            <MenuItem\r\n              onClick={() => onChangeMailFolder(folder.id)}\r\n              key={folder.id}\r\n            >\r\n              {folder.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckedMailActions;\r\n\r\nCheckedMailActions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nCheckedMailActions.propTypes = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onUpdateMailReadStatus,\r\n  onUpdateMailStarredStatus,\r\n} from '../../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\n\r\nconst MoreOptions = (props) => {\r\n  const {checkedMails, setCheckedMails, path} = props;\r\n\r\n  let unReadOption;\r\n  let readOption;\r\n  let starredOption;\r\n  let unStarredOption;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const [isMoreIcon, onOpenMoreIcon] = useState(null);\r\n\r\n  mailList.map((mail) => {\r\n    if (checkedMails.includes(mail.id) && mail.isRead) {\r\n      unReadOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isRead) {\r\n      readOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && mail.isStarred) {\r\n      unStarredOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isStarred) {\r\n      starredOption = true;\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const onViewMoreOpen = (event) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeReadStatus = (statusValue) => {\r\n    const status = !!statusValue;\r\n    dispatch(onUpdateMailReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeAllReadStatus = (statusValue) => {\r\n    const status = !!statusValue;\r\n    const checkedMails = mailList.map((mail) => mail.id);\r\n    dispatch(onUpdateMailReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeAllStarred = (status) => {\r\n    const checkedMails = mailList.map((mail) => mail.id);\r\n    dispatch(\r\n      onUpdateMailStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeStarredStatus = (status) => {\r\n    dispatch(\r\n      onUpdateMailStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {checkedMails.length > 0 ? (\r\n        <Box component='span' sx={{ml: {xs: 'auto', sm: 0}}}>\r\n          <AppTooltip title={<IntlMessages id='common.more' />}>\r\n            <IconButton\r\n              sx={{\r\n                color: (theme) => theme.palette.text.disabled,\r\n              }}\r\n              onClick={onViewMoreOpen}\r\n              size='large'\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </AppTooltip>\r\n\r\n          <Menu\r\n            anchorEl={isMoreIcon}\r\n            open={Boolean(isMoreIcon)}\r\n            onClose={onViewMoreClose}\r\n          >\r\n            {readOption ? (\r\n              <MenuItem onClick={() => onChangeReadStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsRead' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {unReadOption ? (\r\n              <MenuItem onClick={() => onChangeReadStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsUnread' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {starredOption ? (\r\n              <MenuItem onClick={() => onChangeStarredStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsImportant' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {unStarredOption ? (\r\n              <MenuItem onClick={() => onChangeStarredStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsNotImportant' />\r\n              </MenuItem>\r\n            ) : null}\r\n          </Menu>\r\n        </Box>\r\n      ) : (\r\n        <Box component='span' sx={{ml: {xs: 'auto', sm: 0}}}>\r\n          <AppTooltip title={<IntlMessages id='common.more' />}>\r\n            <IconButton\r\n              sx={{\r\n                color: (theme) => theme.palette.text.disabled,\r\n              }}\r\n              onClick={onViewMoreOpen}\r\n              size='large'\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </AppTooltip>\r\n\r\n          <Menu\r\n            anchorEl={isMoreIcon}\r\n            open={Boolean(isMoreIcon)}\r\n            onClose={onViewMoreClose}\r\n          >\r\n            <MenuItem onClick={() => onChangeAllReadStatus(1)}>\r\n              <IntlMessages id='mailApp.markAllAsRead' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllReadStatus(0)}>\r\n              <IntlMessages id='mailApp.markAllAsUnread' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllStarred(1)}>\r\n              <IntlMessages id='mailApp.markAllAsImportant' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllStarred(0)}>\r\n              <IntlMessages id='mailApp.markAllAsNotImportant' />\r\n            </MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoreOptions;\r\n\r\nMoreOptions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nMoreOptions.propTypes = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n  path: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox/index';\r\nimport {useSelector} from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport {Hidden} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport CheckedMailActions from './CheckedMailActions';\r\nimport MoreOptions from './MoreOptions';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport AppSearchBar from '../../../../../@crema/core/AppSearchBar';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst MailContentHeader = (props) => {\r\n  const {\r\n    path,\r\n    checkedMails,\r\n    setCheckedMails,\r\n    page,\r\n    onPageChange,\r\n    filterText,\r\n    onSetFilterText,\r\n  } = props;\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const mailIds = mailList.map((mail) => mail.id);\r\n      setCheckedMails(mailIds);\r\n    } else {\r\n      setCheckedMails([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          width: {xs: '100%', sm: 'auto'},\r\n        }}\r\n      >\r\n        <Box component='span'>\r\n          <Checkbox\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            color='primary'\r\n            indeterminate={\r\n              checkedMails.length > 0 && checkedMails.length < mailList.length\r\n            }\r\n            checked={\r\n              mailList.length > 0 && checkedMails.length === mailList.length\r\n            }\r\n            onChange={onHandleMasterCheckbox}\r\n          />\r\n        </Box>\r\n        <Box sx={{mr: 5}}>\r\n          <AppSearchBar\r\n            iconPosition='right'\r\n            overlap={false}\r\n            value={filterText}\r\n            onChange={(event) => onSetFilterText(event.target.value)}\r\n            placeholder={messages['common.searchHere']}\r\n          />\r\n        </Box>\r\n        {checkedMails.length > 0 ? (\r\n          <CheckedMailActions\r\n            checkedMails={checkedMails}\r\n            setCheckedMails={setCheckedMails}\r\n          />\r\n        ) : null}\r\n\r\n        <MoreOptions\r\n          checkedMails={checkedMails}\r\n          path={path}\r\n          setCheckedMails={setCheckedMails}\r\n        />\r\n      </Box>\r\n      <Hidden smDown>\r\n        {mailList.length > 0 ? (\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              ml: {sm: 'auto'},\r\n            }}\r\n          >\r\n            <AppsPagination\r\n              count={totalMails}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </Box>\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailContentHeader;\r\n\r\nMailContentHeader.defaultProps = {\r\n  checkedMails: [],\r\n  page: 0,\r\n};\r\n\r\nMailContentHeader.propTypes = {\r\n  checkedMails: PropTypes.array,\r\n  setCheckedMails: PropTypes.func,\r\n  filterText: PropTypes.string,\r\n  onSetFilterText: PropTypes.func,\r\n  page: PropTypes.number,\r\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  onPageChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const MailItem = () => (\r\n  <ContentLoader viewBox='10 0 430 25'>\r\n    <rect x='15' y='10' rx='0' ry='0' width='10' height='10' />\r\n    <rect x='30' y='10' rx='10' ry='10' width='10' height='10' />\r\n    <rect x='50' y='10' rx='0' ry='0' width='40' height='10' />\r\n    <rect x='100' y='10' rx='0' ry='0' width='300' height='10' />\r\n    <rect x='410' y='10' rx='0' ry='0' width='20' height='10' />\r\n  </ContentLoader>\r\n);\r\nconst EmailListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmailListSkeleton;\r\n","import {alpha} from '@mui/material';\r\nimport {styled} from '@mui/material/styles';\r\nimport ListItem from '@mui/material/ListItem';\r\n\r\nexport const MailMobileItemWrapper = styled(ListItem)((props) => {\r\n  return {\r\n    display: 'flex',\r\n    backgroundColor: props.mail.isRead\r\n      ? alpha(props.theme.palette.background.default, 0.8)\r\n      : props.theme.palette.background.paper,\r\n    alignItems: 'flex-start',\r\n    borderBottom: `1px solid ${props.theme.palette.divider}`,\r\n    paddingTop: 6,\r\n    paddingBottom: 8,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    cursor: 'pointer',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    '&.active': {\r\n      backgroundColor: alpha(props.theme.palette.primary.main, 0.1),\r\n      boxShadow: `0 3px 5px 0 ${alpha(props.theme.palette.common.black, 0.08)}`,\r\n    },\r\n  };\r\n});\r\n\r\nexport const AvatarWrapper = styled('div')(({theme}) => {\r\n  return {\r\n    '& .avatar': {\r\n      width: 36,\r\n      height: 36,\r\n    },\r\n    '&.checked': {\r\n      width: 36,\r\n      height: 36,\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: '50%',\r\n    },\r\n  };\r\n});\r\n\r\nexport const AttachmentWrapper = styled('div')(({theme}) => {\r\n  return {\r\n    position: 'relative',\r\n    border: `solid 1px ${theme.palette.divider}`,\r\n    borderRadius: 30,\r\n    padding: '5px 12px',\r\n    display: 'inline-block',\r\n    marginRight: 10,\r\n    color: (theme) => theme.palette.text.secondary,\r\n    marginTop: 5,\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: 16,\r\n      display: 'block',\r\n    },\r\n  };\r\n});\r\n","export const getStringFromHtml = (htmlContent) => {\r\n  return htmlContent.replace(/(<([^>]+)>)/gi, '');\r\n};\r\n","import React from 'react';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\n\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {\r\n  AttachmentWrapper,\r\n  AvatarWrapper,\r\n  MailMobileItemWrapper,\r\n} from './index.styles';\r\nimport {getStringFromHtml} from '../../../../../@crema/utility/helper/StringHelper';\r\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst MailListItemMobile = (props) => {\r\n  const {\r\n    mail,\r\n    checkedMails,\r\n    onChangeCheckedMails,\r\n    onChangeStarred,\r\n    onViewMailDetail,\r\n  } = props;\r\n\r\n  const messages = mail.messages.length;\r\n  const onGetMailDate = (date) => {\r\n    if (\r\n      moment(date, 'ddd, MMM DD, YYYY').format() ===\r\n      moment('ddd, MMM DD, YYYY').format()\r\n    ) {\r\n      return moment(date).format('LT');\r\n    } else {\r\n      return date.split(',')[1];\r\n    }\r\n  };\r\n\r\n  const getSenderName = () => {\r\n    if (messages === 1) {\r\n      console.log('mail.messages[0]: ', mail);\r\n      return mail.messages[0].sender.name;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages})`;\r\n    }\r\n  };\r\n  const getLastSenderName = () => {\r\n    if (messages === 1) {\r\n      return mail.messages[0].sender.name;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages})`;\r\n    }\r\n  };\r\n  const getLastMessage = () => {\r\n    return getStringFromHtml(mail.messages[0].description);\r\n  };\r\n  const getSenderImage = () => {\r\n    if (messages === 1) {\r\n      return mail.messages[0].sender.profilePic;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages})`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MailMobileItemWrapper\r\n      mail={mail}\r\n      dense\r\n      button\r\n      key={mail.id}\r\n      className={clsx('item-hover', {\r\n        active: checkedMails.includes(mail.id),\r\n      })}\r\n      onClick={() => onViewMailDetail(mail)}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mr: 3.5,\r\n          mt: 1,\r\n        }}\r\n      >\r\n        <AvatarWrapper\r\n          className={clsx({\r\n            checked: checkedMails.includes(mail.id),\r\n          })}\r\n          onClick={(event) => {\r\n            event.stopPropagation();\r\n            onChangeCheckedMails(!checkedMails.includes(mail.id), mail.id);\r\n          }}\r\n        >\r\n          {checkedMails.includes(mail.id) ? (\r\n            <CheckOutlinedIcon />\r\n          ) : (\r\n            <Avatar\r\n              className='avatar'\r\n              alt={getSenderName()}\r\n              src={getSenderImage()}\r\n            />\r\n          )}\r\n        </AvatarWrapper>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          width: 'calc(100% - 50px)',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: 'calc(100% - 60px)',\r\n            pr: 2,\r\n            transition: 'all 0.4s ease',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 14,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {mail.isReplied\r\n              ? `${getSenderName()}, me(${messages})`\r\n              : getLastSenderName()}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              color: (theme) => theme.palette.text.secondary,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {mail.subject}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              color: (theme) => theme.palette.text.secondary,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {getLastMessage()}\r\n          </Typography>\r\n          {mail.isAttachment ? (\r\n            <AttachmentWrapper>\r\n              <AttachFileIcon />\r\n            </AttachmentWrapper>\r\n          ) : null}\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            minWidth: 60,\r\n            pt: 0.75,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n            transition: 'all 0.4s ease',\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 12,\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          >\r\n            {onGetMailDate(mail.sentOn)}\r\n          </Box>\r\n\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mt: 'auto',\r\n            }}\r\n            onClick={(event) => event.stopPropagation()}\r\n          >\r\n            <AppsStarredIcon item={mail} onChange={onChangeStarred} />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </MailMobileItemWrapper>\r\n  );\r\n};\r\n\r\nexport default MailListItemMobile;\r\n\r\nMailListItemMobile.defaultProps = {\r\n  labelList: [],\r\n  checkedMails: [],\r\n};\r\n\r\nMailListItemMobile.propTypes = {\r\n  mail: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  checkedMails: PropTypes.array,\r\n  onChangeCheckedMails: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  onViewMailDetail: PropTypes.func,\r\n};\r\n","import {alpha} from '@mui/material';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\n\r\nimport {styled} from '@mui/material/styles';\r\nimport ListItem from '@mui/material/ListItem';\r\n\r\nexport const MailItemWrapper = styled(ListItem)((props) => {\r\n  return {\r\n    fontWeight: props.mail.isRead ? Fonts.REGULAR : Fonts.MEDIUM,\r\n    display: 'flex',\r\n    backgroundColor: props.mail.isRead\r\n      ? alpha(props.theme.palette.background.default, 0.8)\r\n      : props.theme.palette.background.paper,\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    borderBottom: `1px solid ${props.theme.palette.divider}`,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    cursor: 'pointer',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    [props.theme.breakpoints.up('sm')]: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    [props.theme.breakpoints.up('xl')]: {\r\n      paddingTop: 6,\r\n      paddingBottom: 6,\r\n    },\r\n    '&:hover': {\r\n      '& .main-action-wrapper': {\r\n        opacity: 1,\r\n        visibility: 'visible',\r\n        right: 0,\r\n      },\r\n      '& .mail-time': {\r\n        opacity: 0,\r\n        visibility: 'hidden',\r\n      },\r\n      '& .mail-info-content': {\r\n        width: 'calc(100% - 170px)',\r\n      },\r\n    },\r\n    '&.active': {\r\n      backgroundColor: alpha(props.theme.palette.primary.main, 0.1),\r\n      boxShadow: `0 3px 5px 0 ${alpha(props.theme.palette.common.black, 0.08)}`,\r\n    },\r\n    '& .avatar': {\r\n      width: 36,\r\n      height: 36,\r\n    },\r\n  };\r\n});\r\n\r\nexport const MailInfoWrapper = styled('div')(({theme}) => {\r\n  return {\r\n    width: '100%',\r\n    padding: '5px 0 8px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 'calc(100% - 262px)',\r\n      padding: 0,\r\n      paddingLeft: 16,\r\n    },\r\n    '& .fontBold': {\r\n      fontWeight: Fonts.MEDIUM,\r\n    },\r\n  };\r\n});\r\n\r\nexport const MainActionWrapper = styled('div')(() => {\r\n  return {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    right: -30,\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    zIndex: 1,\r\n    transition: 'all 0.4s ease',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    '& .MuiButtonBase-root': {\r\n      padding: 9,\r\n    },\r\n  };\r\n});\r\n","import React from 'react';\r\nimport {Checkbox} from '@mui/material';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\r\n\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport ArchiveOutlinedIcon from '@mui/icons-material/ArchiveOutlined';\r\nimport MailOutlinedIcon from '@mui/icons-material/MailOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport {\r\n  MailItemWrapper,\r\n  MailInfoWrapper,\r\n  MainActionWrapper,\r\n} from './index.styles';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onUpdateMailFolders,\r\n  onUpdateMailReadStatus,\r\n} from '../../../../../redux/actions';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\n\r\nconst MailListItem = (props) => {\r\n  const {\r\n    mail,\r\n    checkedMails,\r\n    onChangeCheckedMails,\r\n    onChangeStarred,\r\n    onViewMailDetail,\r\n  } = props;\r\n\r\n  const messages = mail.messages.length;\r\n  const dispatch = useDispatch();\r\n  const onGetMailDate = (date) => {\r\n    if (\r\n      moment(date, 'ddd, MMM DD, YYYY').format() ===\r\n      moment('ddd, MMM DD, YYYY').format()\r\n    ) {\r\n      return moment(date).format('LT');\r\n    } else {\r\n      return date.split(',')[1];\r\n    }\r\n  };\r\n\r\n  const onArchive = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(onUpdateMailFolders([mail.id], 127));\r\n  };\r\n  const onUpdateReadStatus = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(onUpdateMailReadStatus([mail.id], !mail.isRead));\r\n  };\r\n  const onReportSpam = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(onUpdateMailFolders([mail.id], 125));\r\n  };\r\n  const onDelete = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(onUpdateMailFolders([mail.id], 126));\r\n  };\r\n\r\n  const getSenderName = () => {\r\n    if (messages === 1) {\r\n      return mail.messages[0].sender.name;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages})`;\r\n    }\r\n  };\r\n  const getLastSenderName = () => {\r\n    if (messages === 1) {\r\n      return mail.messages[0].sender.name;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages})`;\r\n    }\r\n  };\r\n  const getSenderImage = () => {\r\n    if (messages === 1) {\r\n      return mail.messages[0].sender.profilePic;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages})`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MailItemWrapper\r\n      mail={mail}\r\n      dense\r\n      button\r\n      key={mail.id}\r\n      className={clsx('item-hover', {\r\n        active: checkedMails.includes(mail.id),\r\n      })}\r\n      onClick={() => onViewMailDetail(mail)}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          width: {xs: '100%', sm: 'auto'},\r\n        }}\r\n      >\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            display: 'inline-block',\r\n          }}\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          <Checkbox\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            checked={checkedMails.includes(mail.id)}\r\n            onChange={(event) =>\r\n              onChangeCheckedMails(event.target.checked, mail.id)\r\n            }\r\n            color='primary'\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mr: 2.5,\r\n            display: {xs: 'none', sm: 'inline-block'},\r\n            '& .MuiCheckbox-root': {\r\n              color: (theme) => theme.palette.warning.main,\r\n            },\r\n          }}\r\n          component='span'\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          <AppsStarredIcon item={mail} onChange={onChangeStarred} />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mr: 3.5,\r\n          }}\r\n        >\r\n          <Avatar\r\n            className='avatar'\r\n            alt={getSenderName()}\r\n            src={getSenderImage()}\r\n          />\r\n        </Box>\r\n\r\n        <Typography\r\n          sx={{\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            fontWeight: mail.isRead ? Fonts.REGULAR : Fonts.MEDIUM,\r\n            fontSize: 14,\r\n            width: {sm: '120px'},\r\n          }}\r\n          className={clsx(!mail.isRead ? 'fontBold' : '')}\r\n        >\r\n          {mail.isReplied\r\n            ? `${getSenderName()}, me(${messages})`\r\n            : getLastSenderName()}\r\n        </Typography>\r\n      </Box>\r\n\r\n      <MailInfoWrapper>\r\n        <Box\r\n          className='mail-info-content'\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            width: 'calc(100% - 120px)',\r\n            transition: 'all 0.4s ease',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              mr: 3,\r\n              mb: 0,\r\n            }}\r\n            component='p'\r\n            className={clsx(!mail.isRead ? 'fontBold' : '')}\r\n          >\r\n            {mail.subject}\r\n          </Box>\r\n          {mail.isAttachment ? (\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                color: 'text.secondary',\r\n                position: 'relative',\r\n                '& .MuiSvgIcon-root': {\r\n                  fontSize: 16,\r\n                  display: 'block',\r\n                },\r\n              }}\r\n            >\r\n              <AttachFileIcon />\r\n            </Box>\r\n          ) : null}\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            {mail.detail}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          className='mail-time'\r\n          component='span'\r\n          sx={{\r\n            px: 2.5,\r\n            minWidth: 110,\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            transition: 'all 0.4s ease',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              color: mail.label.color,\r\n            }}\r\n            component='span'\r\n          >\r\n            <LabelOutlinedIcon\r\n              sx={{\r\n                display: 'block',\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              whiteSpace: 'pre',\r\n              fontWeight: Fonts.MEDIUM,\r\n              pl: 2,\r\n            }}\r\n          >\r\n            {onGetMailDate(mail.sentOn)}\r\n          </Box>\r\n        </Box>\r\n\r\n        <MainActionWrapper className='main-action-wrapper'>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={onArchive}\r\n            size='large'\r\n          >\r\n            <ArchiveOutlinedIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={onDelete}\r\n            size='large'\r\n          >\r\n            <DeleteOutlinedIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={onUpdateReadStatus}\r\n            size='large'\r\n          >\r\n            {mail.isRead ? <MailOutlinedIcon /> : <DraftsOutlinedIcon />}\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={onReportSpam}\r\n            size='large'\r\n          >\r\n            <InfoOutlinedIcon />\r\n          </IconButton>\r\n        </MainActionWrapper>\r\n      </MailInfoWrapper>\r\n    </MailItemWrapper>\r\n  );\r\n};\r\n\r\nexport default MailListItem;\r\n\r\nMailListItem.defaultProps = {\r\n  labelList: [],\r\n  checkedMails: [],\r\n};\r\n\r\nMailListItem.propTypes = {\r\n  mail: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  checkedMails: PropTypes.array,\r\n  onChangeCheckedMails: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  onViewMailDetail: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useNavigate, useLocation, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport MailContentHeader from './MailContentHeader';\r\nimport {\r\n  onGetMailList,\r\n  onUpdateMailStarredStatus,\r\n} from '../../../../redux/actions';\r\nimport {Hidden} from '@mui/material';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsFooter from '@crema/core/AppsContainer/AppsFooter';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport EmailListSkeleton from '@crema/core/AppSkeleton/EmailListSkeleton';\r\nimport MailListItemMobile from './MailListItemMobile';\r\nimport MailListItem from './MailListItem';\r\n\r\nconst MailsList = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {folder, label} = useParams();\r\n\r\n  const [filterText, onSetFilterText] = useState('');\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const path = pathname.split('/');\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n    if (folder) {\r\n      dispatch(onGetMailList('folder', folder, page));\r\n    }\r\n    if (label) {\r\n      dispatch(onGetMailList('label', label, page));\r\n    }\r\n  }, [dispatch, folder, label, page]);\r\n\r\n  const [checkedMails, setCheckedMails] = useState([]);\r\n\r\n  const onPageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const onChangeCheckedMails = (checked, id) => {\r\n    if (checked) {\r\n      setCheckedMails(checkedMails.concat(id));\r\n    } else {\r\n      setCheckedMails(checkedMails.filter((mailId) => mailId !== id));\r\n    }\r\n  };\r\n\r\n  const onViewMailDetail = (mail) => {\r\n    if (label) navigate(`/apps/mail/label/${label}/${mail.id}`);\r\n    if (folder) navigate(`/apps/mail/${folder}/${mail.id}`);\r\n  };\r\n\r\n  const onChangeStarred = (checked, mail) => {\r\n    dispatch(\r\n      onUpdateMailStarredStatus([mail.id], checked, path[path.length - 1]),\r\n    );\r\n  };\r\n  const onGetFilteredMails = () => {\r\n    if (filterText === '') {\r\n      return mailList;\r\n    } else {\r\n      return mailList.filter(\r\n        (mail) =>\r\n          mail.subject.toLowerCase().includes(filterText.toLowerCase()) ||\r\n          mail.detail.toLowerCase().includes(filterText.toLowerCase()),\r\n      );\r\n    }\r\n  };\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  const list = onGetFilteredMails();\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <MailContentHeader\r\n          checkedMails={checkedMails}\r\n          setCheckedMails={setCheckedMails}\r\n          onPageChange={onPageChange}\r\n          filterText={filterText}\r\n          onSetFilterText={onSetFilterText}\r\n          page={page}\r\n          path={path}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        <Hidden smDown>\r\n          <AppList\r\n            sx={{\r\n              paddingTop: 0,\r\n              paddingBottom: 0,\r\n            }}\r\n            data={list}\r\n            ListEmptyComponent={\r\n              <ListEmptyResult\r\n                loading={loading}\r\n                placeholder={<EmailListSkeleton />}\r\n              />\r\n            }\r\n            renderRow={(mail) => (\r\n              <MailListItem\r\n                key={mail.id}\r\n                mail={mail}\r\n                labelList={labelList}\r\n                onChangeCheckedMails={onChangeCheckedMails}\r\n                checkedMails={checkedMails}\r\n                onViewMailDetail={onViewMailDetail}\r\n                onChangeStarred={onChangeStarred}\r\n              />\r\n            )}\r\n          />\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <AppList\r\n            sx={{\r\n              paddingTop: 0,\r\n              paddingBottom: 0,\r\n            }}\r\n            data={list}\r\n            ListEmptyComponent={\r\n              <ListEmptyResult\r\n                loading={loading}\r\n                placeholder={<EmailListSkeleton />}\r\n              />\r\n            }\r\n            renderRow={(mail) => (\r\n              <MailListItemMobile\r\n                key={mail.id}\r\n                mail={mail}\r\n                labelList={labelList}\r\n                checkedMails={checkedMails}\r\n                onChangeCheckedMails={onChangeCheckedMails}\r\n                onViewMailDetail={onViewMailDetail}\r\n                onChangeStarred={onChangeStarred}\r\n              />\r\n            )}\r\n          />\r\n        </Hidden>\r\n      </AppsContent>\r\n      <Hidden smUp>\r\n        {list.length > 0 ? (\r\n          <AppsFooter>\r\n            <AppsPagination\r\n              count={totalMails}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </AppsFooter>\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailsList;\r\n","import React from 'react';\r\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport ArchiveOutlinedIcon from '@mui/icons-material/ArchiveOutlined';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MarkunreadOutlinedIcon from '@mui/icons-material/MarkunreadOutlined';\r\nimport {onUpdateSelectedMail} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {Box} from '@mui/material';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst MailDetailHeader = (props) => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const [isLabelOpen, onOpenLabel] = React.useState(null);\r\n\r\n  const [isMoreIcon, onOpenMoreIcon] = React.useState(null);\r\n\r\n  const onClickBackButton = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const onLabelOpen = (event) => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onViewMoreOpen = (event) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onSelectLabel = (event) => {\r\n    const mail = selectedMail;\r\n    mail.label = event.target.value;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onChangeMailFolder = (type) => {\r\n    const mail = selectedMail;\r\n    mail.folderValue = type;\r\n    dispatch(onUpdateSelectedMail(mail, type));\r\n    navigate(-1);\r\n  };\r\n\r\n  const onChangeReadStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isRead = false;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    navigate(-1);\r\n  };\r\n\r\n  const onChangeStarredStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isStarred = !mail.isStarred;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  if (!selectedMail) return null;\r\n  return (\r\n    <>\r\n      <AppTooltip title={<IntlMessages id='common.back' />}>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n          }}\r\n          onClick={onClickBackButton}\r\n        >\r\n          <KeyboardBackspaceIcon />\r\n        </IconButton>\r\n      </AppTooltip>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <AppTooltip title={<IntlMessages id='common.archive' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={() => onChangeMailFolder(127)}\r\n          >\r\n            <ArchiveOutlinedIcon />\r\n          </IconButton>\r\n        </AppTooltip>\r\n\r\n        <AppTooltip title={<IntlMessages id='common.reportSpam' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={() => onChangeMailFolder(125)}\r\n          >\r\n            <InfoOutlinedIcon />\r\n          </IconButton>\r\n        </AppTooltip>\r\n\r\n        <AppTooltip title={<IntlMessages id='common.trash' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={() => onChangeMailFolder(126)}\r\n          >\r\n            <DeleteOutlinedIcon />\r\n          </IconButton>\r\n        </AppTooltip>\r\n\r\n        <AppTooltip title={<IntlMessages id='mailApp.markAsUnread' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={() => onChangeReadStatus()}\r\n          >\r\n            <MarkunreadOutlinedIcon />\r\n          </IconButton>\r\n        </AppTooltip>\r\n\r\n        <AppTooltip title={<IntlMessages id='common.label' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            value={1}\r\n            onClick={onLabelOpen}\r\n          >\r\n            <LabelOutlinedIcon />\r\n          </IconButton>\r\n        </AppTooltip>\r\n\r\n        <Menu\r\n          anchorEl={isLabelOpen}\r\n          open={Boolean(isLabelOpen)}\r\n          onClose={onLabelClose}\r\n        >\r\n          {labelList.map((label) => {\r\n            return (\r\n              <MenuItem onClick={onSelectLabel} value={label.id} key={label.id}>\r\n                {label.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Menu>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          ml: 'auto',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <AppTooltip title={<IntlMessages id='common.more' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            onClick={onViewMoreOpen}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </AppTooltip>\r\n\r\n        <Menu\r\n          anchorEl={isMoreIcon}\r\n          open={Boolean(isMoreIcon)}\r\n          onClose={onViewMoreClose}\r\n        >\r\n          <MenuItem onClick={onChangeReadStatus}>\r\n            <IntlMessages id='mailApp.markAsUnread' />\r\n          </MenuItem>\r\n          <MenuItem onClick={onChangeStarredStatus}>\r\n            {selectedMail.isStarred ? (\r\n              <IntlMessages id='mailApp.markAsNotImportant' />\r\n            ) : (\r\n              <IntlMessages id='mailApp.markAsImportant' />\r\n            )}\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailDetailHeader;\r\n\r\nMailDetailHeader.propTypes = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Button from '@mui/material/Button/index';\r\nimport InputAdornment from '@mui/material/InputAdornment/index';\r\nimport {Form, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\nimport AppTextField from '@crema/core/AppFormComponents/AppTextField';\r\nimport ReactQuill from 'react-quill';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst ReactQuillWrapper = styled(ReactQuill)(() => {\r\n  return {\r\n    '& .ql-toolbar': {\r\n      borderRadius: '8px 8px 0 0',\r\n    },\r\n    '& .ql-container': {\r\n      borderRadius: '0 0 8px 8px',\r\n      minHeight: 150,\r\n      maxHeight: 200,\r\n    },\r\n  };\r\n});\r\n\r\nconst validationSchema = yup.object({\r\n  to: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  cc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n});\r\n\r\nconst MailForward = ({onSubmitForwardedMail}) => {\r\n  const [isShowCC, onShowCC] = useState(false);\r\n\r\n  const onShowCcInput = () => {\r\n    onShowCC(true);\r\n  };\r\n\r\n  const {user} = useAuthUser();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        border: 1,\r\n        borderColor: 'grey.300',\r\n        borderRadius: 2,\r\n        ml: {md: 12.5},\r\n        mt: 4,\r\n        mb: 3,\r\n        p: 5,\r\n      }}\r\n    >\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          to: '',\r\n          cc: '',\r\n          content: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n          console.log('data: ', data);\r\n          setSubmitting(true);\r\n          const mail = {\r\n            messageId: Math.floor(Math.random()) * 1000,\r\n            sender: {\r\n              name: user.displayName ? user.displayName : user.username,\r\n              email: user.email,\r\n              profilePic: '',\r\n            },\r\n            to: [\r\n              {\r\n                name: data.to ? data.to : user.username,\r\n                email: data.to,\r\n                profilePic: '',\r\n              },\r\n            ],\r\n            cc: [],\r\n            bcc: [],\r\n            description: data.content ? data.content : 'No Message',\r\n            isStarred: false,\r\n            sentOn: moment().format('llll'),\r\n          };\r\n          console.log('mail: ', mail);\r\n          onSubmitForwardedMail(mail);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({setFieldValue}) => (\r\n          <Form>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                mb: 4,\r\n              }}\r\n            >\r\n              <AppTextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment\r\n                      position='start'\r\n                      sx={{\r\n                        fontWeight: Fonts.MEDIUM,\r\n                      }}\r\n                    >\r\n                      <IntlMessages id='common.to' />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                name='to'\r\n              />\r\n\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  ml: 4,\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={onShowCcInput}\r\n              >\r\n                <IntlMessages id='common.cc' />\r\n              </Box>\r\n            </Box>\r\n\r\n            {isShowCC ? (\r\n              <Box\r\n                sx={{\r\n                  mb: 4,\r\n                }}\r\n              >\r\n                <AppTextField\r\n                  placeholder={messages['common.cc']}\r\n                  fullWidth\r\n                  name='cc'\r\n                />\r\n              </Box>\r\n            ) : null}\r\n\r\n            <Box\r\n              sx={{\r\n                mb: 4,\r\n              }}\r\n            >\r\n              <ReactQuillWrapper\r\n                theme='snow'\r\n                placeholder={messages['common.writeContent']}\r\n                onChange={(value) => setFieldValue('content', value)}\r\n              />\r\n            </Box>\r\n\r\n            <div style={{textAlign: 'right'}}>\r\n              <Button type='submit' color='primary' variant='outlined'>\r\n                <IntlMessages id='common.send' />\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MailForward;\r\n\r\nMailForward.propTypes = {\r\n  onSubmitForwardedMail: PropTypes.func,\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AppTooltip from '../../../../../@crema/core/AppTooltip';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport {Checkbox, Popover, Typography} from '@mui/material';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport {IoArrowUndoOutline} from 'react-icons/io5';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport ForwardMail from './ForwardMail';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {BiChevronDown} from 'react-icons/bi';\r\nimport {getStringFromHtml} from '../../../../../@crema/utility/helper/StringHelper';\r\nimport renderHTML from 'react-render-html';\r\nimport clsx from 'clsx';\r\n\r\nimport {styled} from '@mui/material/styles';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst MailDetailUser = styled('div')(({theme}) => {\r\n  return {\r\n    display: 'flex',\r\n    width: '100%',\r\n    '&.has-expanded': {\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 'calc(100% - 200px)',\r\n        paddingRight: 8,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 'calc(100% - 300px)',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst MailDescriptionItem = styled('div')(({theme}) => {\r\n  return {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '&:not(:last-of-type)': {\r\n      marginBottom: 4,\r\n    },\r\n    '& .mail-description-name': {\r\n      width: 80,\r\n      color: theme.palette.text.disabled,\r\n      textAlign: 'right',\r\n      paddingRight: 15,\r\n    },\r\n  };\r\n});\r\n\r\nconst MessageItem = ({\r\n  message,\r\n  mailLength,\r\n  index,\r\n  onSubmitMail,\r\n  onChangeStarred,\r\n}) => {\r\n  const [isExpanded, setExpanded] = useState(mailLength === index + 1);\r\n\r\n  const [{isReply, isForward}, onSelectMethod] = useState({\r\n    isReply: false,\r\n    isForward: false,\r\n  });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const onReplyToMail = () => {\r\n    onSelectMethod({isReply: true, isForward: false});\r\n  };\r\n\r\n  const onSubmitForwardedMail = (mail) => {\r\n    onSelectMethod({\r\n      isReply: false,\r\n      isForward: false,\r\n    });\r\n    onSubmitMail(mail, index);\r\n  };\r\n\r\n  const onGetMailDate = (date) => {\r\n    return moment(date).format('ddd, MMM DD, YYYY');\r\n  };\r\n\r\n  const onGetMailTime = (date) => {\r\n    return moment(date).format('LT');\r\n  };\r\n\r\n  const getSenderName = () => {\r\n    return message.sender.name;\r\n  };\r\n\r\n  const getSenderImage = () => {\r\n    return message.sender.profilePic;\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  console.log('anchorEl, open: ', anchorEl, open);\r\n  const mailDescription = () => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          padding: '12px 16px',\r\n          color: (theme) => theme.palette.text.primary,\r\n        }}\r\n      >\r\n        <MailDescriptionItem>\r\n          <span className='mail-description-name'>from:</span>\r\n          <span>\r\n            <strong>{message.sender.name}</strong>\r\n            <span style={{fontSize: 12}}> {`<${message.sender.email}>`}</span>\r\n          </span>\r\n        </MailDescriptionItem>\r\n        <MailDescriptionItem>\r\n          <span className='mail-description-name'>reply-to:</span>\r\n          <span>{message.to[0].email}</span>\r\n        </MailDescriptionItem>\r\n        <MailDescriptionItem>\r\n          <span className='mail-description-name'>date:</span>\r\n          <span>{onGetMailDate()}</span>\r\n        </MailDescriptionItem>\r\n        <MailDescriptionItem>\r\n          <span className='mail-description-name'>subject:</span>\r\n          <span>how you get new orders easily</span>\r\n        </MailDescriptionItem>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const getHeaderDescription = () => {\r\n    if (isExpanded) {\r\n      return (\r\n        <>\r\n          <span\r\n            onClick={handleClick}\r\n            style={{\r\n              display: 'inline-flex',\r\n              whiteSpace: 'nowrap',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <AppTooltip\r\n              title={message.to.map((user) => user.name)}\r\n              placement='bottom'\r\n            >\r\n              <>\r\n                {`to ${message.to.map((user) => user.email).toString()}`}\r\n                <span style={{marginTop: 0, fontSize: 18}}>\r\n                  <BiChevronDown />\r\n                </span>\r\n              </>\r\n            </AppTooltip>\r\n          </span>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n          >\r\n            {mailDescription()}\r\n          </Popover>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <Box\r\n          sx={{\r\n            display: 'block',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          {getStringFromHtml(message.description)}\r\n        </Box>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '&:not(:last-of-type)': {\r\n          borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\r\n          mb: 3.75,\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: {xs: 'column', md: 'row'},\r\n          mb: 3.75,\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <MailDetailUser\r\n          className={clsx({'has-expanded': isExpanded})}\r\n          onClick={() => {\r\n            if (mailLength !== index + 1) setExpanded(!isExpanded);\r\n          }}\r\n        >\r\n          <Avatar\r\n            sx={{\r\n              width: 36,\r\n              height: 36,\r\n            }}\r\n            src={getSenderImage()}\r\n            alt={getSenderName()}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              position: 'relative',\r\n              width: 'calc(100% - 55px)',\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            <Typography\r\n              component='h3'\r\n              sx={{\r\n                mb: 0.5,\r\n                color: (theme) => theme.palette.primary.main,\r\n                fontSize: 14,\r\n                fontWeight: Fonts.MEDIUM,\r\n                '& span': {\r\n                  color: (theme) => theme.palette.text.secondary,\r\n                  fontSize: 12,\r\n                  wordBreak: 'break-all',\r\n                  ml: 1,\r\n                },\r\n              }}\r\n            >\r\n              {message.sender.name}\r\n              {isExpanded ? (\r\n                <span>{`<${message.sender.email}>`}</span>\r\n              ) : (\r\n                <span>{onGetMailDate(message.sentOn)}</span>\r\n              )}\r\n            </Typography>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                color: 'text.secondary',\r\n                wordBreak: 'break-all',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                lineHeight: 1,\r\n                display: 'block',\r\n              }}\r\n            >\r\n              {getHeaderDescription()}\r\n            </Box>\r\n          </Box>\r\n        </MailDetailUser>\r\n\r\n        {isExpanded ? (\r\n          <Box\r\n            sx={{\r\n              ml: {xs: 0, md: 'auto'},\r\n              mt: {xs: 1.5, md: 0},\r\n              color: 'text.secondary',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              flexWrap: 'wrap',\r\n              justifyContent: {md: 'flex-end'},\r\n            }}\r\n          >\r\n            <Box component='span'>{onGetMailDate(message.sentOn)}</Box>,\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 1,\r\n              }}\r\n            >\r\n              {onGetMailTime(message.sentOn)}\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                ml: {xs: 'auto', md: 3},\r\n                mr: -3,\r\n              }}\r\n            >\r\n              <AppTooltip title={<IntlMessages id='common.starred' />}>\r\n                <Checkbox\r\n                  sx={{\r\n                    color: (theme) => theme.palette.warning.main,\r\n                    padding: 1.5,\r\n                    '&.Mui-checked': {\r\n                      color: (theme) => theme.palette.warning.main,\r\n                    },\r\n                  }}\r\n                  icon={<StarBorderIcon />}\r\n                  checkedIcon={<StarIcon />}\r\n                  checked={message.isStarred}\r\n                  onChange={(event) => onChangeStarred(event)}\r\n                />\r\n              </AppTooltip>\r\n\r\n              <AppTooltip title={<IntlMessages id='common.reply' />}>\r\n                <IconButton\r\n                  sx={{\r\n                    padding: 1.75,\r\n                    '& svg': {\r\n                      fontSize: 22,\r\n                    },\r\n                  }}\r\n                  onClick={onReplyToMail}\r\n                  size='large'\r\n                >\r\n                  <IoArrowUndoOutline className='pointer' />\r\n                </IconButton>\r\n              </AppTooltip>\r\n\r\n              <AppTooltip title={<IntlMessages id='common.more' />}>\r\n                <IconButton\r\n                  sx={{\r\n                    padding: 1.75,\r\n                    '& svg': {\r\n                      fontSize: 22,\r\n                    },\r\n                  }}\r\n                  size='large'\r\n                >\r\n                  <MoreVertIcon className='pointer' />\r\n                </IconButton>\r\n              </AppTooltip>\r\n            </Box>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n\r\n      {isExpanded ? (\r\n        <Box\r\n          sx={{\r\n            mb: 5,\r\n            ml: {md: 12.5},\r\n            mr: {md: 8},\r\n          }}\r\n        >\r\n          {renderHTML(message.description)}\r\n        </Box>\r\n      ) : null}\r\n\r\n      {isForward || isReply ? (\r\n        <ForwardMail\r\n          selectedMail={message}\r\n          onSubmitForwardedMail={onSubmitForwardedMail}\r\n        />\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n\r\nMessageItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  mailLength: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onSubmitMail: PropTypes.func.isRequired,\r\n  onChangeStarred: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onUpdateSelectedMail} from '../../../../../redux/actions';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport MessageItem from './MessageItem';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport AppTooltip from '../../../../../@crema/core/AppTooltip';\r\n\r\nconst MailDetailBody = (props) => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitMail = (message, index) => {\r\n    let messages = selectedMail.messages;\r\n    messages.splice(index + 1, 0, message);\r\n    selectedMail.messages = messages;\r\n    dispatch(onUpdateSelectedMail(selectedMail));\r\n  };\r\n\r\n  const onChangeStarred = (message, isStarred) => {\r\n    message.isStarred = isStarred;\r\n    selectedMail.messages = selectedMail.messages.map((data) =>\r\n      data.messageId === message.messageId ? message : data,\r\n    );\r\n    dispatch(onUpdateSelectedMail(selectedMail));\r\n  };\r\n  return (\r\n    <Box sx={{px: 5, py: 1}}>\r\n      {selectedMail ? (\r\n        <>\r\n          <Box\r\n            sx={{\r\n              pt: 1,\r\n              pb: 3,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                fontSize: {xs: 16, sm: 18},\r\n                marginRight: 3,\r\n                paddingLeft: {xs: 0, sm: 12.5},\r\n              }}\r\n            >\r\n              {selectedMail.subject}\r\n            </Box>\r\n            <AppTooltip title={selectedMail.label.name}>\r\n              <span\r\n                style={{\r\n                  color: selectedMail.label.color,\r\n                  height: 22,\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <LabelOutlinedIcon />\r\n              </span>\r\n            </AppTooltip>\r\n          </Box>\r\n          {selectedMail.messages.map((message, index) => (\r\n            <MessageItem\r\n              key={index}\r\n              index={index}\r\n              mailLength={selectedMail.messages.length}\r\n              message={message}\r\n              onSubmitMail={onSubmitMail}\r\n              onChangeStarred={onChangeStarred}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MailDetailBody;\r\n\r\nMailDetailBody.propTypes = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React, {createRef, useEffect} from 'react';\r\nimport MailDetailHeader from './MailDetailHeader';\r\nimport MailDetailBody from './MailDetailBody';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onGetSelectedMail,\r\n  onNullifyMail,\r\n  onUpdateMailReadStatus,\r\n} from '../../../../redux/actions';\r\nimport {useParams} from 'react-router-dom';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppAnimate from '@crema/core/AppAnimate';\r\nimport {MailDetailSkeleton} from '@crema/core/AppSkeleton/MailDetailSkeleton';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst MailDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const contentRef = createRef();\r\n\r\n  const {id} = useParams();\r\n  const selectedMail = useSelector(({mailApp}) => mailApp.selectedMail);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetSelectedMail(id));\r\n    return () => {\r\n      onNullifyMail();\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedMail && !selectedMail.isRead) {\r\n      dispatch(onUpdateMailReadStatus([selectedMail.id], true));\r\n    }\r\n  }, [dispatch, selectedMail]);\r\n\r\n  if (!selectedMail) {\r\n    return <MailDetailSkeleton />;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n      ref={contentRef}\r\n    >\r\n      <AppsHeader>\r\n        <MailDetailHeader selectedMail={selectedMail} />\r\n      </AppsHeader>\r\n      <AppsContent isDetailView>\r\n        <AppAnimate animatoin='transition.slideUpIn'>\r\n          <MailDetailBody selectedMail={selectedMail} />\r\n        </AppAnimate>\r\n      </AppsContent>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MailDetail;\r\n","import React, {useState} from 'react';\r\nimport {Form, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {onComposeMail} from '../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Chip from '@mui/material/Chip';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {AppInfoView} from '@crema';\r\nimport Button from '@mui/material/Button';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\nimport AppTextField from '@crema/core/AppFormComponents/AppTextField';\r\nimport AppDialog from '../../../../@crema/core/AppDialog';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {blue} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst ReactQuillWrapper = styled(ReactQuill)(() => {\r\n  return {\r\n    '& .ql-toolbar': {\r\n      borderRadius: '8px 8px 0 0',\r\n    },\r\n    '& .ql-container': {\r\n      borderRadius: '0 0 8px 8px',\r\n      minHeight: 150,\r\n      maxHeight: 200,\r\n    },\r\n  };\r\n});\r\n\r\nconst CcBccFieldWrapper = styled('div')(() => {\r\n  return {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& .ccBccTextField .MuiOutlinedInput-adornedStart': {\r\n      paddingRight: 78,\r\n    },\r\n    '& .ccBccView': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      right: 18,\r\n      top: 35,\r\n    },\r\n  };\r\n});\r\n\r\nexport const isValidEmail = (value) => {\r\n  return value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  to: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  cc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n  bcc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n});\r\n\r\nconst ComposeMail = (props) => {\r\n  const {isComposeMail, onCloseComposeMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const [isShowBcc, onShowBcc] = useState(false);\r\n\r\n  const [isShowCC, onShowCC] = useState(false);\r\n\r\n  const [isShowChip, onShowChip] = useState(false);\r\n\r\n  const handleBlur = (to) => {\r\n    if (to !== '') {\r\n      onShowChip(true);\r\n    }\r\n  };\r\n\r\n  const {user} = useAuthUser();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppDialog\r\n      sxStyle={{\r\n        '& .MuiDialog-paperWidthSm': {\r\n          maxWidth: 600,\r\n          width: '100%',\r\n        },\r\n        '& .MuiTypography-h6': {\r\n          fontWeight: Fonts.LIGHT,\r\n        },\r\n      }}\r\n      dividers\r\n      open={isComposeMail}\r\n      onClose={() => onCloseComposeMail(false)}\r\n      title={<IntlMessages id='mailApp.compose' />}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          to: '',\r\n          cc: '',\r\n          bcc: '',\r\n          subject: '',\r\n          content: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n          const mail = {\r\n            id: Math.floor(Math.random()) * 1000,\r\n            isChecked: false,\r\n            isStarred: false,\r\n            label: {\r\n              id: 212,\r\n              name: 'Personal',\r\n              alias: 'personal',\r\n              color: blue[500],\r\n            },\r\n\r\n            hasAttachments: false,\r\n            isRead: true,\r\n            folderValue: 122,\r\n            sentOn: moment().format('llll'),\r\n            messages: [\r\n              {\r\n                messageId: 1,\r\n                sender: {\r\n                  name: user.displayName ? user.displayName : user.username,\r\n                  email: user.username,\r\n                  profilePic: '',\r\n                },\r\n                to: [\r\n                  {\r\n                    name: data.to ? data.to : user.username,\r\n                    email: data.to,\r\n                    profilePic: '',\r\n                  },\r\n                ],\r\n                cc: [],\r\n                bcc: [],\r\n                description: data.content ? data.content : 'No Message',\r\n                isStarred: false,\r\n                sentOn: 'Mon, Oct 14, 2021 8:30 PM',\r\n              },\r\n            ],\r\n            subject: data.subject !== '' ? data.subject : 'No Subject',\r\n          };\r\n          console.log('Success:', mail);\r\n          dispatch(onComposeMail(mail, pathname));\r\n          onCloseComposeMail(false);\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        {({isSubmitting, values, setFieldValue}) => (\r\n          <Form\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n            }}\r\n            noValidate\r\n            autoComplete='off'\r\n          >\r\n            <Box\r\n              sx={{\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <CcBccFieldWrapper>\r\n                {!isShowChip ? (\r\n                  <AppTextField\r\n                    className='ccBccTextField'\r\n                    fullWidth\r\n                    label={messages['common.to']}\r\n                    variant='outlined'\r\n                    margin='normal'\r\n                    name='to'\r\n                    onBlur={() => handleBlur(values.to)}\r\n                  />\r\n                ) : (\r\n                  <Chip\r\n                    label={values.to}\r\n                    color={isValidEmail(values.to) ? '' : 'secondary'}\r\n                    onDelete={() => onShowChip(false)}\r\n                    variant='outlined'\r\n                  />\r\n                )}\r\n\r\n                <div className='ccBccView'>\r\n                  <Box\r\n                    component='span'\r\n                    sx={{\r\n                      ml: 4,\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    onClick={() => onShowCC(!isShowCC)}\r\n                  >\r\n                    <IntlMessages id='common.cc' />\r\n                  </Box>\r\n\r\n                  <Box\r\n                    component='span'\r\n                    sx={{\r\n                      ml: 4,\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    onClick={() => onShowBcc(!isShowBcc)}\r\n                  >\r\n                    <IntlMessages id='common.bcc' />\r\n                  </Box>\r\n                </div>\r\n              </CcBccFieldWrapper>\r\n\r\n              {isShowCC ? (\r\n                <Box\r\n                  sx={{\r\n                    width: 1,\r\n                  }}\r\n                >\r\n                  <AppTextField\r\n                    variant='outlined'\r\n                    label={messages['common.cc']}\r\n                    placeholder={messages['common.cc']}\r\n                    fullWidth\r\n                    margin='normal'\r\n                    name='cc'\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n\r\n              {isShowBcc ? (\r\n                <Box\r\n                  sx={{\r\n                    width: 1,\r\n                  }}\r\n                >\r\n                  <AppTextField\r\n                    variant='outlined'\r\n                    label={messages['common.bcc']}\r\n                    placeholder={messages['common.bcc']}\r\n                    fullWidth\r\n                    margin='normal'\r\n                    name='bcc'\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n              <Box\r\n                sx={{\r\n                  mb: 3,\r\n                }}\r\n              >\r\n                <AppTextField\r\n                  variant='outlined'\r\n                  placeholder={messages['common.subject']}\r\n                  label={messages['common.subject']}\r\n                  fullWidth\r\n                  margin='normal'\r\n                  name='subject'\r\n                />\r\n              </Box>\r\n\r\n              <Box\r\n                sx={{\r\n                  mb: 3,\r\n                }}\r\n              >\r\n                <ReactQuillWrapper\r\n                  theme='snow'\r\n                  placeholder={messages['common.writeContent']}\r\n                  onChange={(value) => setFieldValue('content', value)}\r\n                />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                pt: 3,\r\n                textAlign: 'right',\r\n              }}\r\n            >\r\n              <Button\r\n                sx={{\r\n                  position: 'relative',\r\n                  minWidth: 100,\r\n                }}\r\n                variant='outlined'\r\n                color='primary'\r\n                type='submit'\r\n                disabled={isSubmitting}\r\n              >\r\n                <IntlMessages id='common.send' />\r\n              </Button>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <AppInfoView />\r\n    </AppDialog>\r\n  );\r\n};\r\n\r\nexport default ComposeMail;\r\n\r\nComposeMail.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nComposeMail.propTypes = {\r\n  isComposeMail: PropTypes.bool.isRequired,\r\n  onCloseComposeMail: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst ListItemTextWrapper = styled(ListItemText)(() => {\r\n  return {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    '& .MuiTypography-body1': {\r\n      fontSize: 14,\r\n      lineHeight: 1.1,\r\n    },\r\n    '& .MuiListItemText-secondary': {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  };\r\n});\r\n\r\nconst ConnectionListItem = (props) => {\r\n  const {connection} = props;\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        key={connection.id}\r\n        sx={{\r\n          px: 0,\r\n          cursor: 'pointer',\r\n        }}\r\n        alignItems='flex-start'\r\n      >\r\n        <ListItemAvatar\r\n          sx={{\r\n            mt: 0,\r\n            minWidth: 10,\r\n            mr: 3.5,\r\n          }}\r\n        >\r\n          <Avatar\r\n            sx={{\r\n              width: 36,\r\n              height: 36,\r\n            }}\r\n            alt={connection.name}\r\n            src={connection.image}\r\n          />\r\n        </ListItemAvatar>\r\n        <ListItemTextWrapper\r\n          primary={\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                mb: 0,\r\n                fontWeight: Fonts.MEDIUM,\r\n              }}\r\n            >\r\n              {connection.name}\r\n            </Box>\r\n          }\r\n          secondary={connection.status}\r\n        />\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConnectionListItem;\r\n\r\nConnectionListItem.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nConnectionListItem.propTypes = {\r\n  connection: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {AppNavLink} from '@crema';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\n\r\nimport {alpha, styled} from '@mui/material/styles';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst LabelItemWrapper = styled(ListItem)(({theme}) => {\r\n  return {\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    borderRadius: '0 30px 30px 0',\r\n    marginBottom: 1,\r\n    marginTop: 1,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n\r\n    '& .MuiSvgIcon-root': {\r\n      marginRight: 14,\r\n      fontSize: 20,\r\n    },\r\n\r\n    '&:hover,&:focus,&.active': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      color: theme.palette.primary.main,\r\n    },\r\n\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n      '& $listItemText': {\r\n        '& .MuiTypography-body1': {\r\n          fontWeight: Fonts.SEMI_BOLD,\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst LabelItem = ({label}) => {\r\n  return (\r\n    <LabelItemWrapper\r\n      key={label.id}\r\n      button\r\n      to={`/apps/mail/label/${label.alias}`}\r\n      component={AppNavLink}\r\n      activeClassName='active'\r\n    >\r\n      <LabelOutlinedIcon style={{color: `${label.color}`}} />\r\n      <ListItemText\r\n        sx={{\r\n          '& .MuiTypography-body1': {\r\n            fontSize: 14,\r\n          },\r\n        }}\r\n        primary={label.name}\r\n      />\r\n    </LabelItemWrapper>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.propTypes = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport {useSelector} from 'react-redux';\r\nimport ComposeMail from '../ComposeMail';\r\nimport ConnectionListItem from './ConnectionListItem';\r\nimport AppsSideBarFolderItem from '@crema/core/AppsSideBarFolderItem';\r\nimport LabelItem from './LabelItem';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '@crema/core/AppSkeleton/SidebarListSkeleton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {Zoom} from '@mui/material';\r\n\r\nconst MailSidebar = () => {\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const connectionList = useSelector(({mailApp}) => mailApp.connectionList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const [isComposeMail, setComposeMail] = useState(false);\r\n\r\n  const onOpenComposeMail = () => {\r\n    setComposeMail(true);\r\n  };\r\n\r\n  const onCloseComposeMail = () => {\r\n    setComposeMail(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {labelList && connectionList && folderList ? (\r\n        <>\r\n          <Box\r\n            sx={{\r\n              px: {xs: 4, md: 5},\r\n              pt: {xs: 4, md: 5},\r\n              pb: 2.5,\r\n            }}\r\n          >\r\n            <Zoom in style={{transitionDelay: '300ms'}}>\r\n              <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                sx={{\r\n                  padding: '8px 28px',\r\n                  borderRadius: 30,\r\n                  '& .MuiSvgIcon-root': {\r\n                    fontSize: 26,\r\n                  },\r\n                }}\r\n                startIcon={<AddIcon />}\r\n                onClick={onOpenComposeMail}\r\n              >\r\n                <IntlMessages id='common.compose' />\r\n              </Button>\r\n            </Zoom>\r\n          </Box>\r\n\r\n          <AppScrollbar\r\n            sx={{\r\n              height: 'calc(100% - 76px)',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                pr: 4,\r\n                pb: {xs: 4, md: 5, lg: 6.2},\r\n              }}\r\n            >\r\n              <List\r\n                sx={{\r\n                  mb: {xs: 2, xl: 5},\r\n                }}\r\n                component='nav'\r\n                aria-label='main mailbox folders'\r\n              >\r\n                <AppList\r\n                  data={folderList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={\r\n                        <Box\r\n                          sx={{\r\n                            px: {xs: 4, md: 5, lg: 6.2},\r\n                          }}\r\n                        >\r\n                          <SidebarPlaceholder />\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  }\r\n                  renderRow={(item) => (\r\n                    <AppsSideBarFolderItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      path={`/apps/mail/${item.alias}`}\r\n                    />\r\n                  )}\r\n                />\r\n              </List>\r\n\r\n              <Box\r\n                component='h4'\r\n                sx={{\r\n                  mt: {xs: 4, xl: 5},\r\n                  px: {xs: 4, md: 5, lg: 6.2},\r\n                  fontWeight: Fonts.SEMI_BOLD,\r\n                }}\r\n              >\r\n                <IntlMessages id='common.labels' />\r\n              </Box>\r\n\r\n              <List\r\n                sx={{\r\n                  mb: {xs: 2, xl: 5},\r\n                }}\r\n                component='nav'\r\n                aria-label='main mailbox folders'\r\n              >\r\n                <AppList\r\n                  data={labelList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={\r\n                        <Box\r\n                          sx={{\r\n                            px: {xs: 4, md: 5, lg: 6.2},\r\n                          }}\r\n                        >\r\n                          <SidebarPlaceholder />\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  }\r\n                  renderRow={(label) => (\r\n                    <LabelItem key={label.id} label={label} />\r\n                  )}\r\n                />\r\n              </List>\r\n\r\n              <Box\r\n                component='h4'\r\n                sx={{\r\n                  mt: {xs: 4, xl: 5},\r\n                  px: {xs: 4, md: 5, lg: 6.2},\r\n                  fontWeight: Fonts.SEMI_BOLD,\r\n                }}\r\n              >\r\n                <IntlMessages id='common.connections' />\r\n              </Box>\r\n\r\n              <List style={{paddingBottom: 0}}>\r\n                <AppList\r\n                  data={connectionList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={\r\n                        <Box\r\n                          sx={{\r\n                            px: {xs: 4, md: 5, lg: 6.2},\r\n                          }}\r\n                        >\r\n                          <SidebarPlaceholder />\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  }\r\n                  renderRow={(connection) => (\r\n                    <Box\r\n                      key={connection.id}\r\n                      sx={{\r\n                        px: {xs: 4, md: 5, lg: 6.2},\r\n                      }}\r\n                    >\r\n                      <ConnectionListItem connection={connection} />\r\n                    </Box>\r\n                  )}\r\n                />\r\n              </List>\r\n            </Box>\r\n          </AppScrollbar>\r\n        </>\r\n      ) : null}\r\n\r\n      <ComposeMail\r\n        isComposeMail={isComposeMail}\r\n        onCloseComposeMail={onCloseComposeMail}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailSidebar;\r\n","import React, {useEffect} from 'react';\r\nimport MailsList from './MailsList';\r\nimport MailDetail from './MailDetail';\r\nimport {\r\n  onGetConnectionList,\r\n  onGetMailFolderList,\r\n  onGetMailLabelList,\r\n} from '../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppsContainer from '@crema/core/AppsContainer';\r\nimport MailSidebar from './MailSideBar';\r\nimport {useIntl} from 'react-intl';\r\nimport {useParams} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst MailDetailViewWrapper = styled(Box)(({theme}) => {\r\n  return {\r\n    transition: 'all 0.5s ease',\r\n    transform: 'translateX(100%)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n    '&.show': {\r\n      transform: 'translateX(0)',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n    },\r\n  };\r\n});\r\n\r\nconst Mail = () => {\r\n  const dispatch = useDispatch();\r\n  const {id} = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetMailLabelList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetMailFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetConnectionList());\r\n  }, [dispatch]);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppsContainer\r\n      title={messages['mailApp.mail']}\r\n      sidebarContent={<MailSidebar />}\r\n    >\r\n      <MailsList />\r\n      <MailDetailViewWrapper\r\n        className={clsx({\r\n          show: id,\r\n        })}\r\n      >\r\n        <MailDetail />\r\n      </MailDetailViewWrapper>\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default Mail;\r\n\r\nMail.defaultProps = {};\r\n\r\nMail.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\n"],"sourceRoot":""}