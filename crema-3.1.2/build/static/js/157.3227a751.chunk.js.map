{"version":3,"sources":["pages/muiComponents/utils/Popper/SimplePopper.js","webpack:///./src/pages/muiComponents/utils/Popper/SimplePopper.js?a0f9","pages/muiComponents/utils/Popper/TransitionsPopper.js","webpack:///./src/pages/muiComponents/utils/Popper/TransitionsPopper.js?3fb8","pages/muiComponents/utils/Popper/PositionedPopper.js","pages/muiComponents/utils/Popper/VirtualElementPopper.js","pages/muiComponents/utils/Popper/index.js","webpack:///./src/pages/muiComponents/utils/Popper/PositionedPopper.js?04a3","webpack:///./src/pages/muiComponents/utils/Popper/VirtualElementPopper.js?ec54"],"names":["SimplePopper","React","anchorEl","setAnchorEl","open","Boolean","id","undefined","type","onClick","event","currentTarget","Box","sx","border","p","bgcolor","TransitionsPopper","setOpen","previousOpen","transition","TransitionProps","Fade","timeout","PositionedPopper","placement","setPlacement","handleClick","newPlacement","prev","width","Paper","Typography","Grid","container","justifyContent","item","Button","xs","alignItems","direction","VirtualElementPopper","handleClose","onMouseLeave","onMouseUp","selection","window","getSelection","anchorOffset","focusOffset","getBoundingClientRect","getRangeAt","Popper","AppComponentHeader","title","description","refUrl","AppGridContainer","md","AppComponentCard","component","source","noScrollbar"],"mappings":"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","file":"static/js/157.3227a751.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Popper from '@mui/material/Popper';\r\n\r\nexport default function SimplePopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <button aria-describedby={id} type='button' onClick={handleClick}>\r\n        Toggle Popper\r\n      </button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl}>\r\n        <Box sx={{border: 1, p: 1, bgcolor: 'background.paper'}}>\r\n          The content of the Popper.\r\n        </Box>\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Popper from '@mui/material/Popper';\\r\\n\\r\\nexport default function SimplePopper() {\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n\\r\\n  const handleClick = (event) => {\\r\\n    setAnchorEl(anchorEl ? null : event.currentTarget);\\r\\n  };\\r\\n\\r\\n  const open = Boolean(anchorEl);\\r\\n  const id = open ? 'simple-popper' : undefined;\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <button aria-describedby={id} type='button' onClick={handleClick}>\\r\\n        Toggle Popper\\r\\n      </button>\\r\\n      <Popper id={id} open={open} anchorEl={anchorEl}>\\r\\n        <Box sx={{border: 1, p: 1, bgcolor: 'background.paper'}}>\\r\\n          The content of the Popper.\\r\\n        </Box>\\r\\n      </Popper>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Popper from '@mui/material/Popper';\r\nimport Fade from '@mui/material/Fade';\r\n\r\nexport default function TransitionsPopper() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen((previousOpen) => !previousOpen);\r\n  };\r\n\r\n  const canBeOpen = open && Boolean(anchorEl);\r\n  const id = canBeOpen ? 'transition-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <button aria-describedby={id} type='button' onClick={handleClick}>\r\n        Toggle Popper\r\n      </button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl} transition>\r\n        {({TransitionProps}) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Box sx={{border: 1, p: 1, bgcolor: 'background.paper'}}>\r\n              The content of the Popper.\r\n            </Box>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Popper from '@mui/material/Popper';\\r\\nimport Fade from '@mui/material/Fade';\\r\\n\\r\\nexport default function TransitionsPopper() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n\\r\\n  const handleClick = (event) => {\\r\\n    setAnchorEl(event.currentTarget);\\r\\n    setOpen((previousOpen) => !previousOpen);\\r\\n  };\\r\\n\\r\\n  const canBeOpen = open && Boolean(anchorEl);\\r\\n  const id = canBeOpen ? 'transition-popper' : undefined;\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <button aria-describedby={id} type='button' onClick={handleClick}>\\r\\n        Toggle Popper\\r\\n      </button>\\r\\n      <Popper id={id} open={open} anchorEl={anchorEl} transition>\\r\\n        {({TransitionProps}) => (\\r\\n          <Fade {...TransitionProps} timeout={350}>\\r\\n            <Box sx={{border: 1, p: 1, bgcolor: 'background.paper'}}>\\r\\n              The content of the Popper.\\r\\n            </Box>\\r\\n          </Fade>\\r\\n        )}\\r\\n      </Popper>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Popper from '@mui/material/Popper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Fade from '@mui/material/Fade';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nexport default function PositionedPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState();\r\n\r\n  const handleClick = (newPlacement) => (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen((prev) => placement !== newPlacement || !prev);\r\n    setPlacement(newPlacement);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{width: 500}}>\r\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition>\r\n        {({TransitionProps}) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography sx={{p: 2}}>The content of the Popper.</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justifyContent='center'>\r\n        <Grid item>\r\n          <Button onClick={handleClick('top-start')}>top-start</Button>\r\n          <Button onClick={handleClick('top')}>top</Button>\r\n          <Button onClick={handleClick('top-end')}>top-end</Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent='center'>\r\n        <Grid item xs={6}>\r\n          <Button onClick={handleClick('left-start')}>left-start</Button>\r\n          <br />\r\n          <Button onClick={handleClick('left')}>left</Button>\r\n          <br />\r\n          <Button onClick={handleClick('left-end')}>left-end</Button>\r\n        </Grid>\r\n        <Grid item container xs={6} alignItems='flex-end' direction='column'>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right-start')}>right-start</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right')}>right</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right-end')}>right-end</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent='center'>\r\n        <Grid item>\r\n          <Button onClick={handleClick('bottom-start')}>bottom-start</Button>\r\n          <Button onClick={handleClick('bottom')}>bottom</Button>\r\n          <Button onClick={handleClick('bottom-end')}>bottom-end</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Popper from '@mui/material/Popper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Fade from '@mui/material/Fade';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nexport default function VirtualElementPopper() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    const selection = window.getSelection();\r\n\r\n    // Resets when the selection has a length of 0\r\n    if (!selection || selection.anchorOffset === selection.focusOffset) {\r\n      handleClose();\r\n      return;\r\n    }\r\n\r\n    const getBoundingClientRect = () =>\r\n      selection.getRangeAt(0).getBoundingClientRect();\r\n\r\n    setOpen(true);\r\n    setAnchorEl({\r\n      getBoundingClientRect,\r\n    });\r\n  };\r\n\r\n  const id = open ? 'virtual-element-popper' : undefined;\r\n\r\n  return (\r\n    <div onMouseLeave={handleClose}>\r\n      <Typography aria-describedby={id} onMouseUp={handleMouseUp}>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam ipsum\r\n        purus, bibendum sit amet vulputate eget, porta semper ligula. Donec\r\n        bibendum vulputate erat, ac fringilla mi finibus nec. Donec ac dolor sed\r\n        dolor porttitor blandit vel vel purus. Fusce vel malesuada ligula. Nam\r\n        quis vehicula ante, eu finibus est. Proin ullamcorper fermentum orci,\r\n        quis finibus massa. Nunc lobortis, massa ut rutrum ultrices, metus metus\r\n        finibus ex, sit amet facilisis neque enim sed neque. Quisque accumsan\r\n        metus vel maximus consequat. Suspendisse lacinia tellus a libero\r\n        volutpat maximus.\r\n      </Typography>\r\n      <Popper\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        transition\r\n        placement='bottom-start'\r\n      >\r\n        {({TransitionProps}) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography sx={{p: 2}}>The content of the Popper.</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport SimplePopper from './SimplePopper';\r\nimport SimplePopperSource from '!raw-loader!./SimplePopper';\r\n\r\nimport TransitionsPopper from './TransitionsPopper';\r\nimport TransitionsPopperSource from '!raw-loader!./TransitionsPopper';\r\n\r\nimport PositionedPopper from './PositionedPopper';\r\nimport PositionedPopperSource from '!raw-loader!./PositionedPopper';\r\n\r\nimport VirtualElementPopper from './VirtualElementPopper';\r\nimport VirtualElementPopperSource from '!raw-loader!./VirtualElementPopper';\r\n\r\nconst Popper = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Popper'\r\n        description='A Popper can be used to display some content on top of another. Its an alternative to react-popper.'\r\n        refUrl='https://mui.com/components/popper/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Simple Popper'\r\n            component={SimplePopper}\r\n            source={SimplePopperSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Transitions Popper'\r\n            component={TransitionsPopper}\r\n            source={TransitionsPopperSource}\r\n            noScrollbar\r\n            description='Popper has built-in support for react-transition-group.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Positioned Popper'\r\n            component={PositionedPopper}\r\n            source={PositionedPopperSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Virtual Element Popper'\r\n            component={VirtualElementPopper}\r\n            source={VirtualElementPopperSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popper;\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Popper from '@mui/material/Popper';\\r\\nimport Typography from '@mui/material/Typography';\\r\\nimport Grid from '@mui/material/Grid';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport Fade from '@mui/material/Fade';\\r\\nimport Paper from '@mui/material/Paper';\\r\\n\\r\\nexport default function PositionedPopper() {\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [placement, setPlacement] = React.useState();\\r\\n\\r\\n  const handleClick = (newPlacement) => (event) => {\\r\\n    setAnchorEl(event.currentTarget);\\r\\n    setOpen((prev) => placement !== newPlacement || !prev);\\r\\n    setPlacement(newPlacement);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{width: 500}}>\\r\\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition>\\r\\n        {({TransitionProps}) => (\\r\\n          <Fade {...TransitionProps} timeout={350}>\\r\\n            <Paper>\\r\\n              <Typography sx={{p: 2}}>The content of the Popper.</Typography>\\r\\n            </Paper>\\r\\n          </Fade>\\r\\n        )}\\r\\n      </Popper>\\r\\n      <Grid container justifyContent='center'>\\r\\n        <Grid item>\\r\\n          <Button onClick={handleClick('top-start')}>top-start</Button>\\r\\n          <Button onClick={handleClick('top')}>top</Button>\\r\\n          <Button onClick={handleClick('top-end')}>top-end</Button>\\r\\n        </Grid>\\r\\n      </Grid>\\r\\n      <Grid container justifyContent='center'>\\r\\n        <Grid item xs={6}>\\r\\n          <Button onClick={handleClick('left-start')}>left-start</Button>\\r\\n          <br />\\r\\n          <Button onClick={handleClick('left')}>left</Button>\\r\\n          <br />\\r\\n          <Button onClick={handleClick('left-end')}>left-end</Button>\\r\\n        </Grid>\\r\\n        <Grid item container xs={6} alignItems='flex-end' direction='column'>\\r\\n          <Grid item>\\r\\n            <Button onClick={handleClick('right-start')}>right-start</Button>\\r\\n          </Grid>\\r\\n          <Grid item>\\r\\n            <Button onClick={handleClick('right')}>right</Button>\\r\\n          </Grid>\\r\\n          <Grid item>\\r\\n            <Button onClick={handleClick('right-end')}>right-end</Button>\\r\\n          </Grid>\\r\\n        </Grid>\\r\\n      </Grid>\\r\\n      <Grid container justifyContent='center'>\\r\\n        <Grid item>\\r\\n          <Button onClick={handleClick('bottom-start')}>bottom-start</Button>\\r\\n          <Button onClick={handleClick('bottom')}>bottom</Button>\\r\\n          <Button onClick={handleClick('bottom-end')}>bottom-end</Button>\\r\\n        </Grid>\\r\\n      </Grid>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Popper from '@mui/material/Popper';\\r\\nimport Typography from '@mui/material/Typography';\\r\\nimport Fade from '@mui/material/Fade';\\r\\nimport Paper from '@mui/material/Paper';\\r\\n\\r\\nexport default function VirtualElementPopper() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const handleMouseUp = () => {\\r\\n    const selection = window.getSelection();\\r\\n\\r\\n    // Resets when the selection has a length of 0\\r\\n    if (!selection || selection.anchorOffset === selection.focusOffset) {\\r\\n      handleClose();\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    const getBoundingClientRect = () =>\\r\\n      selection.getRangeAt(0).getBoundingClientRect();\\r\\n\\r\\n    setOpen(true);\\r\\n    setAnchorEl({\\r\\n      getBoundingClientRect,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const id = open ? 'virtual-element-popper' : undefined;\\r\\n\\r\\n  return (\\r\\n    <div onMouseLeave={handleClose}>\\r\\n      <Typography aria-describedby={id} onMouseUp={handleMouseUp}>\\r\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam ipsum\\r\\n        purus, bibendum sit amet vulputate eget, porta semper ligula. Donec\\r\\n        bibendum vulputate erat, ac fringilla mi finibus nec. Donec ac dolor sed\\r\\n        dolor porttitor blandit vel vel purus. Fusce vel malesuada ligula. Nam\\r\\n        quis vehicula ante, eu finibus est. Proin ullamcorper fermentum orci,\\r\\n        quis finibus massa. Nunc lobortis, massa ut rutrum ultrices, metus metus\\r\\n        finibus ex, sit amet facilisis neque enim sed neque. Quisque accumsan\\r\\n        metus vel maximus consequat. Suspendisse lacinia tellus a libero\\r\\n        volutpat maximus.\\r\\n      </Typography>\\r\\n      <Popper\\r\\n        id={id}\\r\\n        open={open}\\r\\n        anchorEl={anchorEl}\\r\\n        transition\\r\\n        placement='bottom-start'\\r\\n      >\\r\\n        {({TransitionProps}) => (\\r\\n          <Fade {...TransitionProps} timeout={350}>\\r\\n            <Paper>\\r\\n              <Typography sx={{p: 2}}>The content of the Popper.</Typography>\\r\\n            </Paper>\\r\\n          </Fade>\\r\\n        )}\\r\\n      </Popper>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}