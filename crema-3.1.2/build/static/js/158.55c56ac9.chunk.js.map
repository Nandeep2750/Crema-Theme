{"version":3,"sources":["pages/muiComponents/utils/Portal/SimplePortal.js","pages/muiComponents/utils/Portal/index.js","webpack:///./src/pages/muiComponents/utils/Portal/SimplePortal.js?7032"],"names":["SimplePortal","React","show","setShow","container","type","onClick","Box","sx","p","my","border","current","ref","Portal","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","component","source","noScrollbar"],"mappings":"2LAIe,SAASA,IACtB,MAAwBC,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAYH,SAAa,MAM/B,OACE,gCACE,wBAAQI,KAAK,SAASC,QANN,WAClBH,GAASD,IAKP,SACGA,EAAO,mBAAqB,mBAE/B,eAACK,EAAA,EAAD,CAAKC,GAAI,CAACC,EAAG,EAAGC,GAAI,EAAGC,OAAQ,aAA/B,8CAEGT,EACC,cAAC,IAAD,CAAQE,UAAWA,EAAUQ,QAA7B,SACE,iEAEA,QAEN,cAACL,EAAA,EAAD,CAAKC,GAAI,CAACC,EAAG,EAAGC,GAAI,EAAGC,OAAQ,aAAcE,IAAKT,OCOzCU,UAvBA,WACb,OACE,qCACE,cAACC,EAAA,EAAD,CACEC,MAAM,SACNC,YAAY,mGACZC,OAAO,uCAGT,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACER,MAAM,eACNS,UAAWzB,EACX0B,OCvBG,s3BDwBHC,aAAW","file":"static/js/158.55c56ac9.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Portal from '@mui/material/Portal';\r\n\r\nexport default function SimplePortal() {\r\n  const [show, setShow] = React.useState(false);\r\n  const container = React.useRef(null);\r\n\r\n  const handleClick = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type='button' onClick={handleClick}>\r\n        {show ? 'Unmount children' : 'Mount children'}\r\n      </button>\r\n      <Box sx={{p: 1, my: 1, border: '1px solid'}}>\r\n        It looks like I will render here.\r\n        {show ? (\r\n          <Portal container={container.current}>\r\n            <span>But I actually render here!</span>\r\n          </Portal>\r\n        ) : null}\r\n      </Box>\r\n      <Box sx={{p: 1, my: 1, border: '1px solid'}} ref={container} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport SimplePortal from './SimplePortal';\r\nimport SimplePortalSource from '!raw-loader!./SimplePortal';\r\n\r\nconst Portal = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Portal'\r\n        description='The portal component renders its children into a new \"subtree\" outside of current DOM hierarchy.'\r\n        refUrl='https://mui.com/components/portal/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='SimplePortal'\r\n            component={SimplePortal}\r\n            source={SimplePortalSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Portal from '@mui/material/Portal';\\r\\n\\r\\nexport default function SimplePortal() {\\r\\n  const [show, setShow] = React.useState(false);\\r\\n  const container = React.useRef(null);\\r\\n\\r\\n  const handleClick = () => {\\r\\n    setShow(!show);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <button type='button' onClick={handleClick}>\\r\\n        {show ? 'Unmount children' : 'Mount children'}\\r\\n      </button>\\r\\n      <Box sx={{p: 1, my: 1, border: '1px solid'}}>\\r\\n        It looks like I will render here.\\r\\n        {show ? (\\r\\n          <Portal container={container.current}>\\r\\n            <span>But I actually render here!</span>\\r\\n          </Portal>\\r\\n        ) : null}\\r\\n      </Box>\\r\\n      <Box sx={{p: 1, my: 1, border: '1px solid'}} ref={container} />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}