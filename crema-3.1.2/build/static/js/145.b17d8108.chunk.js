(this.webpackJsonphister=this.webpackJsonphister||[]).push([[145],{2313:function(e,r,n){"use strict";n.r(r);var a=n(2),t=n(72),i=n(60),o=n(1458),c=n(38),l=n(5),s=n(14),m=n(1466),u=n(1455),d=n(984),p=n(2262),b=n(1);function j(){var e=a.useState(null),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsx)(p.a,{label:"Basic example",value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}})})}var f=n(2265);function x(){var e=a.useState(new Date),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsx)(f.a,{displayStaticWrapperAs:"mobile",value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}})})}var v=n(1615),T=n(2264),k=n(2263);function P(){var e=a.useState(new Date("2018-01-01T00:00:00.000Z")),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsxs)(v.a,{spacing:3,children:[Object(b.jsx)(T.a,{label:"For mobile",value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}}),Object(b.jsx)(k.a,{label:"For desktop",value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}}),Object(b.jsx)(p.a,{value:n,onChange:t,renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}})]})})}function h(){var e=a.useState(null),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsxs)(v.a,{spacing:3,children:[Object(b.jsx)(p.a,{label:"disabled",disabled:!0,value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}}),Object(b.jsx)(p.a,{label:"read-only",readOnly:!0,value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}})]})})}var O=n(1929),F=n(1928),S=n(2192),g=n(365),w=n(1592),D=n(1575),L={en:g.a,fr:O.a,ru:F.a,ar:S.a};function V(){var e=a.useState("ru"),r=Object(s.a)(e,2),n=r[0],t=r[1],i=a.useState(new Date),o=Object(s.a)(i,2),c=o[0],j=o[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,locale:L[n],children:Object(b.jsxs)("div",{children:[Object(b.jsx)(D.a,{value:n,exclusive:!0,sx:{mb:2,display:"block"},children:Object.keys(L).map((function(e){return Object(b.jsx)(w.a,{value:e,onClick:function(){t(e)},children:e},e)}))}),Object(b.jsx)(p.a,{value:c,onChange:function(e){return j(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}})]})})}function A(){var e=a.useState(new Date("2020-01-01 12:00")),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsxs)(v.a,{spacing:3,children:[Object(b.jsx)(p.a,{renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))},value:n,label:"min/max time",onChange:function(e){t(e)},minTime:new Date(0,0,0,8),maxTime:new Date(0,0,0,18,45)}),Object(b.jsx)(p.a,{renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))},label:"Disable odd hours",value:n,onChange:function(e){t(e)},shouldDisableTime:function(e,r){return!!("hours"===r&&e%2)}})]})})}function z(){var e=a.useState(new Date),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsx)(f.a,{ampm:!0,orientation:"landscape",openTo:"minutes",value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}})})}var C=n(2266);function I(){var e=a.useState(new Date),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsx)(C.a,{date:n,onChange:function(e){return t(e)}})})}function R(){var e=a.useState(new Date),r=Object(s.a)(e,2),n=r[0],t=r[1];return Object(b.jsx)(d.b,{dateAdapter:u.a,children:Object(b.jsxs)(v.a,{spacing:3,children:[Object(b.jsx)(p.a,{ampm:!1,openTo:"hours",views:["hours","minutes","seconds"],inputFormat:"HH:mm:ss",mask:"__:__:__",label:"With seconds",value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}}),Object(b.jsx)(p.a,{ampmInClock:!0,views:["minutes","seconds"],inputFormat:"mm:ss",mask:"__:__",label:"Minutes and seconds",value:n,onChange:function(e){t(e)},renderInput:function(e){return Object(b.jsx)(m.a,Object(l.a)({},e))}})]})})}r.default=function(){return Object(b.jsxs)(b.Fragment,{children:[Object(b.jsx)(t.a,{title:"TimePicker",description:"Time pickers allow the user to select a single time.",refUrl:"https://mui.com/components/time-picker/"}),Object(b.jsxs)(i.a,{children:[Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"BasicTimePicker",component:j,source:"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\n\r\nexport default function BasicTimePicker() {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <TimePicker\r\n        label='Basic example'\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"The date picker is rendered as a modal dialog on mobile, and a textbox with a popup on desktop."})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"ResponsiveTimePickers",component:P,source:"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport Stack from '@mui/material/Stack';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\nimport MobileTimePicker from '@mui/lab/MobileTimePicker';\r\nimport DesktopTimePicker from '@mui/lab/DesktopTimePicker';\r\n\r\nexport default function ResponsiveTimePickers() {\r\n  const [value, setValue] = React.useState(\r\n    new Date('2018-01-01T00:00:00.000Z'),\r\n  );\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <MobileTimePicker\r\n          label='For mobile'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <DesktopTimePicker\r\n          label='For desktop'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <TimePicker\r\n          value={value}\r\n          onChange={setValue}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"The time picker component is designed and optimized for the device it runs on."})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"FormPropsTimePickers",component:h,source:"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport Stack from '@mui/material/Stack';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\n\r\nexport default function FormPropsTimePickers() {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <TimePicker\r\n          label='disabled'\r\n          disabled\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <TimePicker\r\n          label='read-only'\r\n          readOnly\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"The time picker component can be disabled or read-only."})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"LocalizedTimePicker",component:V,source:"import * as React from 'react';\r\nimport frLocale from 'date-fns/locale/fr';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport arSaLocale from 'date-fns/locale/ar-SA';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\n\r\nconst localeMap = {\r\n  en: enLocale,\r\n  fr: frLocale,\r\n  ru: ruLocale,\r\n  ar: arSaLocale,\r\n};\r\n\r\nexport default function LocalizedTimePicker() {\r\n  const [locale, setLocale] = React.useState('ru');\r\n  const [value, setValue] = React.useState(new Date());\r\n\r\n  const selectLocale = (newLocale) => {\r\n    setLocale(newLocale);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider\r\n      dateAdapter={AdapterDateFns}\r\n      locale={localeMap[locale]}\r\n    >\r\n      <div>\r\n        <ToggleButtonGroup\r\n          value={locale}\r\n          exclusive\r\n          sx={{mb: 2, display: 'block'}}\r\n        >\r\n          {Object.keys(localeMap).map((localeItem) => (\r\n            <ToggleButton\r\n              key={localeItem}\r\n              value={localeItem}\r\n              onClick={() => selectLocale(localeItem)}\r\n            >\r\n              {localeItem}\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n        <TimePicker\r\n          value={value}\r\n          onChange={(newValue) => setValue(newValue)}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </div>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"Use LocalizationProvider to change the date-engine locale that is used to render the time picker. The time picker will automatically adjust to the locales time setting, i.e. the 12-hour or 24-hour format. This can be controlled with ampm prop."})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"TimeValidationTimePicker",component:A,source:"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\n\r\nexport default function TimeValidationTimePicker() {\r\n  const [value, setValue] = React.useState(new Date('2020-01-01 12:00'));\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <TimePicker\r\n          renderInput={(params) => <TextField {...params} />}\r\n          value={value}\r\n          label='min/max time'\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          minTime={new Date(0, 0, 0, 8)}\r\n          maxTime={new Date(0, 0, 0, 18, 45)}\r\n        />\r\n        <TimePicker\r\n          renderInput={(params) => <TextField {...params} />}\r\n          label='Disable odd hours'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          shouldDisableTime={(timeValue, clockType) => {\r\n            if (clockType === 'hours' && timeValue % 2) {\r\n              return true;\r\n            }\r\n\r\n            return false;\r\n          }}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"SecondsTimePicker",component:R,source:"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nexport default function SecondsTimePicker() {\r\n  const [value, setValue] = React.useState(new Date());\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <TimePicker\r\n          ampm={false}\r\n          openTo='hours'\r\n          views={['hours', 'minutes', 'seconds']}\r\n          inputFormat='HH:mm:ss'\r\n          mask='__:__:__'\r\n          label='With seconds'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <TimePicker\r\n          ampmInClock\r\n          views={['minutes', 'seconds']}\r\n          inputFormat='mm:ss'\r\n          mask='__:__'\r\n          label='Minutes and seconds'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"The seconds input can be used for selection of a precise time point."})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"StaticTimePickerLandscape",component:z,source:"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport StaticTimePicker from '@mui/lab/StaticTimePicker';\r\n\r\nexport default function StaticTimePickerLandscape() {\r\n  const [value, setValue] = React.useState(new Date());\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <StaticTimePicker\r\n        ampm\r\n        orientation='landscape'\r\n        openTo='minutes'\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:""})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"SubComponentsTimePickers",component:I,source:"import * as React from 'react';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport ClockPicker from '@mui/lab/ClockPicker';\r\n\r\nexport default function SubComponentsTimePickers() {\r\n  const [date, setDate] = React.useState(new Date());\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <ClockPicker date={date} onChange={(newDate) => setDate(newDate)} />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"Some lower-level sub-components (ClockPicker) are also exported. These are rendered without a wrapper or outer logic (masked input, date values parsing and validation, etc.)."})}),Object(b.jsx)(o.a,{item:!0,xs:12,md:6,children:Object(b.jsx)(c.a,{title:"StaticTimePickerDemo",component:x,source:"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport StaticTimePicker from '@mui/lab/StaticTimePicker';\r\n\r\nexport default function StaticTimePickerDemo() {\r\n  const [value, setValue] = React.useState(new Date());\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <StaticTimePicker\r\n        displayStaticWrapperAs='mobile'\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"Its possible to render any time picker inline. This will enable building custom popover/modal containers."})})]})]})}}}]);
//# sourceMappingURL=145.b17d8108.chunk.js.map