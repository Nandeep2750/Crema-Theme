(this.webpackJsonphister=this.webpackJsonphister||[]).push([[158],{2382:function(r,n,e){"use strict";e.r(n);var t=e(2),o=e(72),l=e(60),c=e(1458),i=e(38),s=e(14),a=e(206),u=e(1537),d=e(1);function h(){var r=t.useState(!1),n=Object(s.a)(r,2),e=n[0],o=n[1],l=t.useRef(null);return Object(d.jsxs)("div",{children:[Object(d.jsx)("button",{type:"button",onClick:function(){o(!e)},children:e?"Unmount children":"Mount children"}),Object(d.jsxs)(a.a,{sx:{p:1,my:1,border:"1px solid"},children:["It looks like I will render here.",e?Object(d.jsx)(u.a,{container:l.current,children:Object(d.jsx)("span",{children:"But I actually render here!"})}):null]}),Object(d.jsx)(a.a,{sx:{p:1,my:1,border:"1px solid"},ref:l})]})}n.default=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)(o.a,{title:"Portal",description:'The portal component renders its children into a new "subtree" outside of current DOM hierarchy.',refUrl:"https://mui.com/components/portal/"}),Object(d.jsx)(l.a,{children:Object(d.jsx)(c.a,{item:!0,xs:12,md:6,children:Object(d.jsx)(i.a,{title:"SimplePortal",component:h,source:"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Portal from '@mui/material/Portal';\r\n\r\nexport default function SimplePortal() {\r\n  const [show, setShow] = React.useState(false);\r\n  const container = React.useRef(null);\r\n\r\n  const handleClick = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type='button' onClick={handleClick}>\r\n        {show ? 'Unmount children' : 'Mount children'}\r\n      </button>\r\n      <Box sx={{p: 1, my: 1, border: '1px solid'}}>\r\n        It looks like I will render here.\r\n        {show ? (\r\n          <Portal container={container.current}>\r\n            <span>But I actually render here!</span>\r\n          </Portal>\r\n        ) : null}\r\n      </Box>\r\n      <Box sx={{p: 1, my: 1, border: '1px solid'}} ref={container} />\r\n    </div>\r\n  );\r\n}\r\n",noScrollbar:!0})})})]})}}}]);
//# sourceMappingURL=158.55c56ac9.chunk.js.map