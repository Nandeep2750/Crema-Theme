{"version":3,"sources":["pages/auth/AuthWrapper.js","pages/auth/ForgetPassword/ForgetPasswordJwtAuth.js","pages/auth/ForgetPassword/index.js"],"names":["AuthWrapper","children","sx","flex","display","flexDirection","justifyContent","alignItems","maxWidth","minHeight","xs","sm","width","overflow","position","lg","padding","backgroundColor","theme","palette","grey","color","common","white","fontSize","component","fontWeight","Fonts","BOLD","mb","validationSchema","yup","email","IntlMessages","id","required","ForgetPasswordJwtAuth","Box","xl","AppLogo","Typography","variant","text","primary","SEMI_BOLD","pt","style","marginRight","MEDIUM","main","textDecoration","to","validateOnChange","initialValues","onSubmit","data","setSubmitting","resetForm","isSubmitting","textAlign","AppTextField","placeholder","name","label","Button","disabled","REGULAR","textTransform","minWidth","type","AppInfoView","ForgetPassword"],"mappings":"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","file":"static/js/107.72e4e288.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Typography} from '@mui/material';\r\nimport {Fonts} from '../../shared/constants/AppEnums';\r\n\r\nconst AuthWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          maxWidth: 900,\r\n          minHeight: {xs: 320, sm: 450},\r\n          width: '100%',\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: {xs: '100%', sm: '50%', lg: '40%'},\r\n            padding: {xs: 5, lg: 10},\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: {xs: '100%', sm: '50%', lg: '60%'},\r\n            position: 'relative',\r\n            padding: {xs: 5, lg: 10},\r\n            display: {xs: 'none', sm: 'flex'},\r\n            alignItems: {sm: 'center'},\r\n            justifyContent: {sm: 'center'},\r\n            flexDirection: {sm: 'column'},\r\n            backgroundColor: (theme) => theme.palette.grey[900],\r\n            color: (theme) => theme.palette.common.white,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              maxWidth: 320,\r\n            }}\r\n          >\r\n            <Typography\r\n              component='h2'\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 30,\r\n                mb: 4,\r\n              }}\r\n            >\r\n              Welcome to Crema!\r\n            </Typography>\r\n            <Typography>\r\n              Crema is purely based on Material ui components and follows\r\n              Material ui guidelines.\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n\r\nAuthWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport {Form, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppTextField from '@crema/core/AppFormComponents/AppTextField';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport AppLogo from '../../../@crema/core/AppLayout/components/AppLogo';\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPasswordJwtAuth = () => {\r\n  return (\r\n    <AuthWrapper>\r\n      <Box sx={{width: '100%'}}>\r\n        <Box sx={{mb: {xs: 8, xl: 10}}}>\r\n          <Box\r\n            sx={{\r\n              mb: 5,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <AppLogo />\r\n          </Box>\r\n          <Typography\r\n            variant='h2'\r\n            component='h2'\r\n            sx={{\r\n              mb: 1.5,\r\n              color: (theme) => theme.palette.text.primary,\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n              fontSize: {xs: 14, xl: 16},\r\n            }}\r\n          >\r\n            <IntlMessages id='common.forgetPassword' />\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{\r\n              pt: 3,\r\n              fontSize: 15,\r\n              color: 'grey.500',\r\n            }}\r\n          >\r\n            <span style={{marginRight: 4}}>\r\n              <IntlMessages id='common.alreadyHavePassword' />\r\n            </span>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                fontWeight: Fonts.MEDIUM,\r\n                '& a': {\r\n                  color: (theme) => theme.palette.primary.main,\r\n                  textDecoration: 'none',\r\n                },\r\n              }}\r\n            >\r\n              <Link to='/signin'>\r\n                <IntlMessages id='common.signIn' />\r\n              </Link>\r\n            </Box>\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n          <Box sx={{flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n            <Formik\r\n              validateOnChange={true}\r\n              initialValues={{\r\n                email: '',\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(data, {setSubmitting, resetForm}) => {\r\n                setSubmitting(true);\r\n                //reset password api goes here\r\n                setSubmitting(false);\r\n                resetForm();\r\n              }}\r\n            >\r\n              {({isSubmitting}) => (\r\n                <Form style={{textAlign: 'left'}}>\r\n                  <Box sx={{mb: {xs: 5, lg: 8}}}>\r\n                    <AppTextField\r\n                      placeholder='Email'\r\n                      name='email'\r\n                      label={<IntlMessages id='common.emailAddress' />}\r\n                      sx={{\r\n                        width: '100%',\r\n                        '& .MuiInputBase-input': {\r\n                          fontSize: 14,\r\n                        },\r\n                      }}\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n\r\n                  <div>\r\n                    <Button\r\n                      variant='contained'\r\n                      color='primary'\r\n                      disabled={isSubmitting}\r\n                      sx={{\r\n                        fontWeight: Fonts.REGULAR,\r\n                        textTransform: 'capitalize',\r\n                        fontSize: 16,\r\n                        minWidth: 160,\r\n                      }}\r\n                      type='submit'\r\n                    >\r\n                      <IntlMessages id='common.sendNewPassword' />\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Box>\r\n\r\n          <AppInfoView />\r\n        </Box>\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordJwtAuth;\r\n","import React from 'react';\r\nimport ForgetPasswordJwtAuth from './ForgetPasswordJwtAuth';\r\n\r\nconst ForgetPassword = () => {\r\n  return <ForgetPasswordJwtAuth />;\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"sourceRoot":""}