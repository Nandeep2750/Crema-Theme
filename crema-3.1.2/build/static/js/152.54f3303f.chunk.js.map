{"version":3,"sources":["pages/muiComponents/navigation/Stepper/HorizontalLinearStepper.js","webpack:///./src/pages/muiComponents/navigation/Stepper/HorizontalLinearStepper.js?48d9","pages/muiComponents/navigation/Stepper/HorizontalNonLinearStepper.js","webpack:///./src/pages/muiComponents/navigation/Stepper/HorizontalNonLinearStepper.js?7c3a","pages/muiComponents/navigation/Stepper/HorizontalLabelPositionBelowStepper.js","webpack:///./src/pages/muiComponents/navigation/Stepper/HorizontalLabelPositionBelowStepper.js?8580","pages/muiComponents/navigation/Stepper/HorizontalStepperWithError.js","webpack:///./src/pages/muiComponents/navigation/Stepper/HorizontalStepperWithError.js?d3e7","pages/muiComponents/navigation/Stepper/CustomizedSteppers.js","webpack:///./src/pages/muiComponents/navigation/Stepper/CustomizedSteppers.js?70c0","pages/muiComponents/navigation/Stepper/VerticalLinearStepper.js","webpack:///./src/pages/muiComponents/navigation/Stepper/VerticalLinearStepper.js?bbf2","pages/muiComponents/navigation/Stepper/TextMobileStepper.js","webpack:///./src/pages/muiComponents/navigation/Stepper/TextMobileStepper.js?1ac6","pages/muiComponents/navigation/Stepper/SwipeableTextMobileStepper.js","pages/muiComponents/navigation/Stepper/DotsMobileStepper.js","pages/muiComponents/navigation/Stepper/ProgressMobileStepper.js","pages/muiComponents/navigation/Stepper/index.js","webpack:///./src/pages/muiComponents/navigation/Stepper/SwipeableTextMobileStepper.js?2c49","webpack:///./src/pages/muiComponents/navigation/Stepper/DotsMobileStepper.js?8dd1","webpack:///./src/pages/muiComponents/navigation/Stepper/ProgressMobileStepper.js?fbb2"],"names":["steps","HorizontalLinearStepper","React","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","step","isStepSkipped","has","Box","sx","width","map","label","index","stepProps","labelProps","optional","Typography","variant","completed","Step","StepLabel","length","mt","mb","display","flexDirection","pt","flex","Button","onClick","color","disabled","prevActiveStep","mr","Error","prevSkipped","newSkipped","values","add","delete","HorizontalNonLinearStepper","setCompleted","totalSteps","completedSteps","Object","keys","allStepsCompleted","handleNext","newActiveStep","findIndex","i","nonLinear","StepButton","newCompleted","HorizontalLabelPositionBelowStepper","alternativeLabel","HorizontalStepperWithError","error","QontoConnector","styled","StepConnector","theme","stepConnectorClasses","top","left","right","active","line","borderColor","palette","mode","grey","borderTopWidth","borderRadius","QontoStepIconRoot","ownerState","height","alignItems","zIndex","fontSize","backgroundColor","QontoStepIcon","props","className","ColorlibConnector","backgroundImage","border","ColorlibStepIconRoot","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","CustomizedSteppers","Stack","spacing","connector","StepIconComponent","description","VerticalLinearStepper","handleBack","maxWidth","orientation","StepContent","Paper","square","elevation","p","TextMobileStepper","useTheme","maxSteps","flexGrow","pl","bgcolor","MobileStepper","position","nextButton","size","direction","backButton","AutoPlaySwipeableViews","autoPlay","SwipeableViews","images","imgPath","SwipeableTextMobileStepper","axis","onChangeIndex","enableMouseEvents","Math","abs","component","overflow","src","alt","DotsMobileStepper","ProgressMobileStepper","Stepper","AppComponentHeader","title","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","source","noScrollbar"],"mappings":"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","file":"static/js/152.54f3303f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst steps = [\r\n  'Select campaign settings',\r\n  'Create an ad group',\r\n  'Create an ad',\r\n];\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{width: '100%'}}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant='caption'>Optional</Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === steps.length ? (\r\n        <React.Fragment>\r\n          <Typography sx={{mt: 2, mb: 1}}>\r\n            All steps completed - you&apos;re finished\r\n          </Typography>\r\n          <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\r\n            <Box sx={{flex: '1 1 auto'}} />\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Typography sx={{mt: 2, mb: 1}}>Step {activeStep + 1}</Typography>\r\n          <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\r\n            <Button\r\n              color='inherit'\r\n              disabled={activeStep === 0}\r\n              onClick={handleBack}\r\n              sx={{mr: 1}}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Box sx={{flex: '1 1 auto'}} />\r\n            {isStepOptional(activeStep) && (\r\n              <Button color='inherit' onClick={handleSkip} sx={{mr: 1}}>\r\n                Skip\r\n              </Button>\r\n            )}\r\n\r\n            <Button onClick={handleNext}>\r\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stepper from '@mui/material/Stepper';\\r\\nimport Step from '@mui/material/Step';\\r\\nimport StepLabel from '@mui/material/StepLabel';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport Typography from '@mui/material/Typography';\\r\\n\\r\\nconst steps = [\\r\\n  'Select campaign settings',\\r\\n  'Create an ad group',\\r\\n  'Create an ad',\\r\\n];\\r\\n\\r\\nexport default function HorizontalLinearStepper() {\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [skipped, setSkipped] = React.useState(new Set());\\r\\n\\r\\n  const isStepOptional = (step) => {\\r\\n    return step === 1;\\r\\n  };\\r\\n\\r\\n  const isStepSkipped = (step) => {\\r\\n    return skipped.has(step);\\r\\n  };\\r\\n\\r\\n  const handleNext = () => {\\r\\n    let newSkipped = skipped;\\r\\n    if (isStepSkipped(activeStep)) {\\r\\n      newSkipped = new Set(newSkipped.values());\\r\\n      newSkipped.delete(activeStep);\\r\\n    }\\r\\n\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n    setSkipped(newSkipped);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleSkip = () => {\\r\\n    if (!isStepOptional(activeStep)) {\\r\\n      // You probably want to guard against something like this,\\r\\n      // it should never occur unless someone's actively trying to break something.\\r\\n      throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\r\\n    }\\r\\n\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n    setSkipped((prevSkipped) => {\\r\\n      const newSkipped = new Set(prevSkipped.values());\\r\\n      newSkipped.add(activeStep);\\r\\n      return newSkipped;\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{width: '100%'}}>\\r\\n      <Stepper activeStep={activeStep}>\\r\\n        {steps.map((label, index) => {\\r\\n          const stepProps = {};\\r\\n          const labelProps = {};\\r\\n          if (isStepOptional(index)) {\\r\\n            labelProps.optional = (\\r\\n              <Typography variant='caption'>Optional</Typography>\\r\\n            );\\r\\n          }\\r\\n          if (isStepSkipped(index)) {\\r\\n            stepProps.completed = false;\\r\\n          }\\r\\n          return (\\r\\n            <Step key={label} {...stepProps}>\\r\\n              <StepLabel {...labelProps}>{label}</StepLabel>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n      {activeStep === steps.length ? (\\r\\n        <React.Fragment>\\r\\n          <Typography sx={{mt: 2, mb: 1}}>\\r\\n            All steps completed - you&apos;re finished\\r\\n          </Typography>\\r\\n          <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\\r\\n            <Box sx={{flex: '1 1 auto'}} />\\r\\n            <Button onClick={handleReset}>Reset</Button>\\r\\n          </Box>\\r\\n        </React.Fragment>\\r\\n      ) : (\\r\\n        <React.Fragment>\\r\\n          <Typography sx={{mt: 2, mb: 1}}>Step {activeStep + 1}</Typography>\\r\\n          <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\\r\\n            <Button\\r\\n              color='inherit'\\r\\n              disabled={activeStep === 0}\\r\\n              onClick={handleBack}\\r\\n              sx={{mr: 1}}\\r\\n            >\\r\\n              Back\\r\\n            </Button>\\r\\n            <Box sx={{flex: '1 1 auto'}} />\\r\\n            {isStepOptional(activeStep) && (\\r\\n              <Button color='inherit' onClick={handleSkip} sx={{mr: 1}}>\\r\\n                Skip\\r\\n              </Button>\\r\\n            )}\\r\\n\\r\\n            <Button onClick={handleNext}>\\r\\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n            </Button>\\r\\n          </Box>\\r\\n        </React.Fragment>\\r\\n      )}\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepButton from '@mui/material/StepButton';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst steps = [\r\n  'Select campaign settings',\r\n  'Create an ad group',\r\n  'Create an ad',\r\n];\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n\r\n  return (\r\n    <Box sx={{width: '100%'}}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label} completed={completed[index]}>\r\n            <StepButton color='inherit' onClick={handleStep(index)}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <React.Fragment>\r\n            <Typography sx={{mt: 2, mb: 1}}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\r\n              <Box sx={{flex: '1 1 auto'}} />\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </Box>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Typography sx={{mt: 2, mb: 1}}>Step {activeStep + 1}</Typography>\r\n            <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\r\n              <Button\r\n                color='inherit'\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                sx={{mr: 1}}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Box sx={{flex: '1 1 auto'}} />\r\n              <Button onClick={handleNext} sx={{mr: 1}}>\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant='caption' sx={{display: 'inline-block'}}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1\r\n                      ? 'Finish'\r\n                      : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </Box>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stepper from '@mui/material/Stepper';\\r\\nimport Step from '@mui/material/Step';\\r\\nimport StepButton from '@mui/material/StepButton';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport Typography from '@mui/material/Typography';\\r\\n\\r\\nconst steps = [\\r\\n  'Select campaign settings',\\r\\n  'Create an ad group',\\r\\n  'Create an ad',\\r\\n];\\r\\n\\r\\nexport default function HorizontalNonLinearStepper() {\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [completed, setCompleted] = React.useState({});\\r\\n\\r\\n  const totalSteps = () => {\\r\\n    return steps.length;\\r\\n  };\\r\\n\\r\\n  const completedSteps = () => {\\r\\n    return Object.keys(completed).length;\\r\\n  };\\r\\n\\r\\n  const isLastStep = () => {\\r\\n    return activeStep === totalSteps() - 1;\\r\\n  };\\r\\n\\r\\n  const allStepsCompleted = () => {\\r\\n    return completedSteps() === totalSteps();\\r\\n  };\\r\\n\\r\\n  const handleNext = () => {\\r\\n    const newActiveStep =\\r\\n      isLastStep() && !allStepsCompleted()\\r\\n        ? // It's the last step, but not all steps have been completed,\\r\\n          // find the first step that has been completed\\r\\n          steps.findIndex((step, i) => !(i in completed))\\r\\n        : activeStep + 1;\\r\\n    setActiveStep(newActiveStep);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleStep = (step) => () => {\\r\\n    setActiveStep(step);\\r\\n  };\\r\\n\\r\\n  const handleComplete = () => {\\r\\n    const newCompleted = completed;\\r\\n    newCompleted[activeStep] = true;\\r\\n    setCompleted(newCompleted);\\r\\n    handleNext();\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n    setCompleted({});\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{width: '100%'}}>\\r\\n      <Stepper nonLinear activeStep={activeStep}>\\r\\n        {steps.map((label, index) => (\\r\\n          <Step key={label} completed={completed[index]}>\\r\\n            <StepButton color='inherit' onClick={handleStep(index)}>\\r\\n              {label}\\r\\n            </StepButton>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <div>\\r\\n        {allStepsCompleted() ? (\\r\\n          <React.Fragment>\\r\\n            <Typography sx={{mt: 2, mb: 1}}>\\r\\n              All steps completed - you&apos;re finished\\r\\n            </Typography>\\r\\n            <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\\r\\n              <Box sx={{flex: '1 1 auto'}} />\\r\\n              <Button onClick={handleReset}>Reset</Button>\\r\\n            </Box>\\r\\n          </React.Fragment>\\r\\n        ) : (\\r\\n          <React.Fragment>\\r\\n            <Typography sx={{mt: 2, mb: 1}}>Step {activeStep + 1}</Typography>\\r\\n            <Box sx={{display: 'flex', flexDirection: 'row', pt: 2}}>\\r\\n              <Button\\r\\n                color='inherit'\\r\\n                disabled={activeStep === 0}\\r\\n                onClick={handleBack}\\r\\n                sx={{mr: 1}}\\r\\n              >\\r\\n                Back\\r\\n              </Button>\\r\\n              <Box sx={{flex: '1 1 auto'}} />\\r\\n              <Button onClick={handleNext} sx={{mr: 1}}>\\r\\n                Next\\r\\n              </Button>\\r\\n              {activeStep !== steps.length &&\\r\\n                (completed[activeStep] ? (\\r\\n                  <Typography variant='caption' sx={{display: 'inline-block'}}>\\r\\n                    Step {activeStep + 1} already completed\\r\\n                  </Typography>\\r\\n                ) : (\\r\\n                  <Button onClick={handleComplete}>\\r\\n                    {completedSteps() === totalSteps() - 1\\r\\n                      ? 'Finish'\\r\\n                      : 'Complete Step'}\\r\\n                  </Button>\\r\\n                ))}\\r\\n            </Box>\\r\\n          </React.Fragment>\\r\\n        )}\\r\\n      </div>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\n\r\nconst steps = [\r\n  'Select master blaster campaign settings',\r\n  'Create an ad group',\r\n  'Create an ad',\r\n];\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  return (\r\n    <Box sx={{width: '100%'}}>\r\n      <Stepper activeStep={1} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stepper from '@mui/material/Stepper';\\r\\nimport Step from '@mui/material/Step';\\r\\nimport StepLabel from '@mui/material/StepLabel';\\r\\n\\r\\nconst steps = [\\r\\n  'Select master blaster campaign settings',\\r\\n  'Create an ad group',\\r\\n  'Create an ad',\\r\\n];\\r\\n\\r\\nexport default function HorizontalLabelPositionBelowStepper() {\\r\\n  return (\\r\\n    <Box sx={{width: '100%'}}>\\r\\n      <Stepper activeStep={1} alternativeLabel>\\r\\n        {steps.map((label) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst steps = [\r\n  'Select campaign settings',\r\n  'Create an ad group',\r\n  'Create an ad',\r\n];\r\n\r\nexport default function HorizontalStepperWithError() {\r\n  const isStepFailed = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  return (\r\n    <Box sx={{width: '100%'}}>\r\n      <Stepper activeStep={1}>\r\n        {steps.map((label, index) => {\r\n          const labelProps = {};\r\n          if (isStepFailed(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant='caption' color='error'>\r\n                Alert message\r\n              </Typography>\r\n            );\r\n\r\n            labelProps.error = true;\r\n          }\r\n\r\n          return (\r\n            <Step key={label}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stepper from '@mui/material/Stepper';\\r\\nimport Step from '@mui/material/Step';\\r\\nimport StepLabel from '@mui/material/StepLabel';\\r\\nimport Typography from '@mui/material/Typography';\\r\\n\\r\\nconst steps = [\\r\\n  'Select campaign settings',\\r\\n  'Create an ad group',\\r\\n  'Create an ad',\\r\\n];\\r\\n\\r\\nexport default function HorizontalStepperWithError() {\\r\\n  const isStepFailed = (step) => {\\r\\n    return step === 1;\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{width: '100%'}}>\\r\\n      <Stepper activeStep={1}>\\r\\n        {steps.map((label, index) => {\\r\\n          const labelProps = {};\\r\\n          if (isStepFailed(index)) {\\r\\n            labelProps.optional = (\\r\\n              <Typography variant='caption' color='error'>\\r\\n                Alert message\\r\\n              </Typography>\\r\\n            );\\r\\n\\r\\n            labelProps.error = true;\\r\\n          }\\r\\n\\r\\n          return (\\r\\n            <Step key={label}>\\r\\n              <StepLabel {...labelProps}>{label}</StepLabel>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {styled} from '@mui/material/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Check from '@mui/icons-material/Check';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\r\nimport VideoLabelIcon from '@mui/icons-material/VideoLabel';\r\nimport StepConnector, {stepConnectorClasses} from '@mui/material/StepConnector';\r\n\r\nconst QontoConnector = styled(StepConnector)(({theme}) => ({\r\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\r\n    top: 10,\r\n    left: 'calc(-50% + 16px)',\r\n    right: 'calc(50% + 16px)',\r\n  },\r\n  [`&.${stepConnectorClasses.active}`]: {\r\n    [`& .${stepConnectorClasses.line}`]: {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  [`&.${stepConnectorClasses.completed}`]: {\r\n    [`& .${stepConnectorClasses.line}`]: {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  [`& .${stepConnectorClasses.line}`]: {\r\n    borderColor:\r\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\r\n    borderTopWidth: 3,\r\n    borderRadius: 1,\r\n  },\r\n}));\r\n\r\nconst QontoStepIconRoot = styled('div')(({theme, ownerState}) => ({\r\n  color: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#eaeaf0',\r\n  display: 'flex',\r\n  height: 22,\r\n  alignItems: 'center',\r\n  ...(ownerState.active && {\r\n    color: '#784af4',\r\n  }),\r\n  '& .QontoStepIcon-completedIcon': {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n  '& .QontoStepIcon-circle': {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n}));\r\n\r\nfunction QontoStepIcon(props) {\r\n  const {active, completed, className} = props;\r\n\r\n  return (\r\n    <QontoStepIconRoot ownerState={{active}} className={className}>\r\n      {completed ? (\r\n        <Check className='QontoStepIcon-completedIcon' />\r\n      ) : (\r\n        <div className='QontoStepIcon-circle' />\r\n      )}\r\n    </QontoStepIconRoot>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   * @default false\r\n   */\r\n  active: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   * @default false\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = styled(StepConnector)(({theme}) => ({\r\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\r\n    top: 22,\r\n  },\r\n  [`&.${stepConnectorClasses.active}`]: {\r\n    [`& .${stepConnectorClasses.line}`]: {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  [`&.${stepConnectorClasses.completed}`]: {\r\n    [`& .${stepConnectorClasses.line}`]: {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  [`& .${stepConnectorClasses.line}`]: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor:\r\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n}));\r\n\r\nconst ColorlibStepIconRoot = styled('div')(({theme, ownerState}) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\r\n  zIndex: 1,\r\n  color: '#fff',\r\n  width: 50,\r\n  height: 50,\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  ...(ownerState.active && {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  }),\r\n  ...(ownerState.completed && {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n  }),\r\n}));\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const {active, completed, className} = props;\r\n\r\n  const icons = {\r\n    1: <SettingsIcon />,\r\n    2: <GroupAddIcon />,\r\n    3: <VideoLabelIcon />,\r\n  };\r\n\r\n  return (\r\n    <ColorlibStepIconRoot\r\n      ownerState={{completed, active}}\r\n      className={className}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </ColorlibStepIconRoot>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   * @default false\r\n   */\r\n  active: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   * @default false\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst steps = [\r\n  'Select campaign settings',\r\n  'Create an ad group',\r\n  'Create an ad',\r\n];\r\n\r\nexport default function CustomizedSteppers() {\r\n  return (\r\n    <Stack sx={{width: '100%'}} spacing={4}>\r\n      <Stepper alternativeLabel activeStep={1} connector={<QontoConnector />}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={1}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </Stack>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Stack from '@mui/material/Stack';\\r\\nimport Stepper from '@mui/material/Stepper';\\r\\nimport Step from '@mui/material/Step';\\r\\nimport StepLabel from '@mui/material/StepLabel';\\r\\nimport Check from '@mui/icons-material/Check';\\r\\nimport SettingsIcon from '@mui/icons-material/Settings';\\r\\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\\r\\nimport VideoLabelIcon from '@mui/icons-material/VideoLabel';\\r\\nimport StepConnector, {stepConnectorClasses} from '@mui/material/StepConnector';\\r\\n\\r\\nconst QontoConnector = styled(StepConnector)(({theme}) => ({\\r\\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\\r\\n    top: 10,\\r\\n    left: 'calc(-50% + 16px)',\\r\\n    right: 'calc(50% + 16px)',\\r\\n  },\\r\\n  [`&.${stepConnectorClasses.active}`]: {\\r\\n    [`& .${stepConnectorClasses.line}`]: {\\r\\n      borderColor: '#784af4',\\r\\n    },\\r\\n  },\\r\\n  [`&.${stepConnectorClasses.completed}`]: {\\r\\n    [`& .${stepConnectorClasses.line}`]: {\\r\\n      borderColor: '#784af4',\\r\\n    },\\r\\n  },\\r\\n  [`& .${stepConnectorClasses.line}`]: {\\r\\n    borderColor:\\r\\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\\r\\n    borderTopWidth: 3,\\r\\n    borderRadius: 1,\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst QontoStepIconRoot = styled('div')(({theme, ownerState}) => ({\\r\\n  color: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#eaeaf0',\\r\\n  display: 'flex',\\r\\n  height: 22,\\r\\n  alignItems: 'center',\\r\\n  ...(ownerState.active && {\\r\\n    color: '#784af4',\\r\\n  }),\\r\\n  '& .QontoStepIcon-completedIcon': {\\r\\n    color: '#784af4',\\r\\n    zIndex: 1,\\r\\n    fontSize: 18,\\r\\n  },\\r\\n  '& .QontoStepIcon-circle': {\\r\\n    width: 8,\\r\\n    height: 8,\\r\\n    borderRadius: '50%',\\r\\n    backgroundColor: 'currentColor',\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction QontoStepIcon(props) {\\r\\n  const {active, completed, className} = props;\\r\\n\\r\\n  return (\\r\\n    <QontoStepIconRoot ownerState={{active}} className={className}>\\r\\n      {completed ? (\\r\\n        <Check className='QontoStepIcon-completedIcon' />\\r\\n      ) : (\\r\\n        <div className='QontoStepIcon-circle' />\\r\\n      )}\\r\\n    </QontoStepIconRoot>\\r\\n  );\\r\\n}\\r\\n\\r\\nQontoStepIcon.propTypes = {\\r\\n  /**\\r\\n   * Whether this step is active.\\r\\n   * @default false\\r\\n   */\\r\\n  active: PropTypes.bool,\\r\\n  className: PropTypes.string,\\r\\n  /**\\r\\n   * Mark the step as completed. Is passed to child components.\\r\\n   * @default false\\r\\n   */\\r\\n  completed: PropTypes.bool,\\r\\n};\\r\\n\\r\\nconst ColorlibConnector = styled(StepConnector)(({theme}) => ({\\r\\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\\r\\n    top: 22,\\r\\n  },\\r\\n  [`&.${stepConnectorClasses.active}`]: {\\r\\n    [`& .${stepConnectorClasses.line}`]: {\\r\\n      backgroundImage:\\r\\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\r\\n    },\\r\\n  },\\r\\n  [`&.${stepConnectorClasses.completed}`]: {\\r\\n    [`& .${stepConnectorClasses.line}`]: {\\r\\n      backgroundImage:\\r\\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\r\\n    },\\r\\n  },\\r\\n  [`& .${stepConnectorClasses.line}`]: {\\r\\n    height: 3,\\r\\n    border: 0,\\r\\n    backgroundColor:\\r\\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\\r\\n    borderRadius: 1,\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst ColorlibStepIconRoot = styled('div')(({theme, ownerState}) => ({\\r\\n  backgroundColor:\\r\\n    theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\\r\\n  zIndex: 1,\\r\\n  color: '#fff',\\r\\n  width: 50,\\r\\n  height: 50,\\r\\n  display: 'flex',\\r\\n  borderRadius: '50%',\\r\\n  justifyContent: 'center',\\r\\n  alignItems: 'center',\\r\\n  ...(ownerState.active && {\\r\\n    backgroundImage:\\r\\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\\r\\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\\r\\n  }),\\r\\n  ...(ownerState.completed && {\\r\\n    backgroundImage:\\r\\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\\r\\n  }),\\r\\n}));\\r\\n\\r\\nfunction ColorlibStepIcon(props) {\\r\\n  const {active, completed, className} = props;\\r\\n\\r\\n  const icons = {\\r\\n    1: <SettingsIcon />,\\r\\n    2: <GroupAddIcon />,\\r\\n    3: <VideoLabelIcon />,\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ColorlibStepIconRoot\\r\\n      ownerState={{completed, active}}\\r\\n      className={className}\\r\\n    >\\r\\n      {icons[String(props.icon)]}\\r\\n    </ColorlibStepIconRoot>\\r\\n  );\\r\\n}\\r\\n\\r\\nColorlibStepIcon.propTypes = {\\r\\n  /**\\r\\n   * Whether this step is active.\\r\\n   * @default false\\r\\n   */\\r\\n  active: PropTypes.bool,\\r\\n  className: PropTypes.string,\\r\\n  /**\\r\\n   * Mark the step as completed. Is passed to child components.\\r\\n   * @default false\\r\\n   */\\r\\n  completed: PropTypes.bool,\\r\\n  /**\\r\\n   * The label displayed in the step icon.\\r\\n   */\\r\\n  icon: PropTypes.node,\\r\\n};\\r\\n\\r\\nconst steps = [\\r\\n  'Select campaign settings',\\r\\n  'Create an ad group',\\r\\n  'Create an ad',\\r\\n];\\r\\n\\r\\nexport default function CustomizedSteppers() {\\r\\n  return (\\r\\n    <Stack sx={{width: '100%'}} spacing={4}>\\r\\n      <Stepper alternativeLabel activeStep={1} connector={<QontoConnector />}>\\r\\n        {steps.map((label) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Stepper\\r\\n        alternativeLabel\\r\\n        activeStep={1}\\r\\n        connector={<ColorlibConnector />}\\r\\n      >\\r\\n        {steps.map((label) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n    </Stack>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst steps = [\r\n  {\r\n    label: 'Select campaign settings',\r\n    description: `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`,\r\n  },\r\n  {\r\n    label: 'Create an ad group',\r\n    description:\r\n      'An ad group contains one or more ads which target a shared set of keywords.',\r\n  },\r\n  {\r\n    label: 'Create an ad',\r\n    description: `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`,\r\n  },\r\n];\r\n\r\nexport default function VerticalLinearStepper() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{maxWidth: 400}}>\r\n      <Stepper activeStep={activeStep} orientation='vertical'>\r\n        {steps.map((step, index) => (\r\n          <Step key={step.label}>\r\n            <StepLabel\r\n              optional={\r\n                index === 2 ? (\r\n                  <Typography variant='caption'>Last step</Typography>\r\n                ) : null\r\n              }\r\n            >\r\n              {step.label}\r\n            </StepLabel>\r\n            <StepContent>\r\n              <Typography>{step.description}</Typography>\r\n              <Box sx={{mb: 2}}>\r\n                <div>\r\n                  <Button\r\n                    variant='contained'\r\n                    onClick={handleNext}\r\n                    sx={{mt: 1, mr: 1}}\r\n                  >\r\n                    {index === steps.length - 1 ? 'Finish' : 'Continue'}\r\n                  </Button>\r\n                  <Button\r\n                    disabled={index === 0}\r\n                    onClick={handleBack}\r\n                    sx={{mt: 1, mr: 1}}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Box>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} sx={{p: 3}}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} sx={{mt: 1, mr: 1}}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stepper from '@mui/material/Stepper';\\r\\nimport Step from '@mui/material/Step';\\r\\nimport StepLabel from '@mui/material/StepLabel';\\r\\nimport StepContent from '@mui/material/StepContent';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Typography from '@mui/material/Typography';\\r\\n\\r\\nconst steps = [\\r\\n  {\\r\\n    label: 'Select campaign settings',\\r\\n    description: `For each ad campaign that you create, you can control how much\\r\\n              you're willing to spend on clicks and conversions, which networks\\r\\n              and geographical locations you want your ads to show on, and more.`,\\r\\n  },\\r\\n  {\\r\\n    label: 'Create an ad group',\\r\\n    description:\\r\\n      'An ad group contains one or more ads which target a shared set of keywords.',\\r\\n  },\\r\\n  {\\r\\n    label: 'Create an ad',\\r\\n    description: `Try out different ad text to see what brings in the most customers,\\r\\n              and learn how to enhance your ads using features like ad extensions.\\r\\n              If you run into any problems with your ads, find out how to tell if\\r\\n              they're running and how to resolve approval issues.`,\\r\\n  },\\r\\n];\\r\\n\\r\\nexport default function VerticalLinearStepper() {\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{maxWidth: 400}}>\\r\\n      <Stepper activeStep={activeStep} orientation='vertical'>\\r\\n        {steps.map((step, index) => (\\r\\n          <Step key={step.label}>\\r\\n            <StepLabel\\r\\n              optional={\\r\\n                index === 2 ? (\\r\\n                  <Typography variant='caption'>Last step</Typography>\\r\\n                ) : null\\r\\n              }\\r\\n            >\\r\\n              {step.label}\\r\\n            </StepLabel>\\r\\n            <StepContent>\\r\\n              <Typography>{step.description}</Typography>\\r\\n              <Box sx={{mb: 2}}>\\r\\n                <div>\\r\\n                  <Button\\r\\n                    variant='contained'\\r\\n                    onClick={handleNext}\\r\\n                    sx={{mt: 1, mr: 1}}\\r\\n                  >\\r\\n                    {index === steps.length - 1 ? 'Finish' : 'Continue'}\\r\\n                  </Button>\\r\\n                  <Button\\r\\n                    disabled={index === 0}\\r\\n                    onClick={handleBack}\\r\\n                    sx={{mt: 1, mr: 1}}\\r\\n                  >\\r\\n                    Back\\r\\n                  </Button>\\r\\n                </div>\\r\\n              </Box>\\r\\n            </StepContent>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      {activeStep === steps.length && (\\r\\n        <Paper square elevation={0} sx={{p: 3}}>\\r\\n          <Typography>All steps completed - you&apos;re finished</Typography>\\r\\n          <Button onClick={handleReset} sx={{mt: 1, mr: 1}}>\\r\\n            Reset\\r\\n          </Button>\\r\\n        </Paper>\\r\\n      )}\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\n\r\nconst steps = [\r\n  {\r\n    label: 'Select campaign settings',\r\n    description: `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`,\r\n  },\r\n  {\r\n    label: 'Create an ad group',\r\n    description:\r\n      'An ad group contains one or more ads which target a shared set of keywords.',\r\n  },\r\n  {\r\n    label: 'Create an ad',\r\n    description: `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`,\r\n  },\r\n];\r\n\r\nexport default function TextMobileStepper() {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = steps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{maxWidth: 400, flexGrow: 1}}>\r\n      <Paper\r\n        square\r\n        elevation={0}\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          height: 50,\r\n          pl: 2,\r\n          bgcolor: 'background.default',\r\n        }}\r\n      >\r\n        <Typography>{steps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <Box sx={{height: 255, maxWidth: 400, width: '100%', p: 2}}>\r\n        {steps[activeStep].description}\r\n      </Box>\r\n      <MobileStepper\r\n        variant='text'\r\n        steps={maxSteps}\r\n        position='static'\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button\r\n            size='small'\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n          >\r\n            Next\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport {useTheme} from '@mui/material/styles';\\r\\nimport MobileStepper from '@mui/material/MobileStepper';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Typography from '@mui/material/Typography';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\\r\\n\\r\\nconst steps = [\\r\\n  {\\r\\n    label: 'Select campaign settings',\\r\\n    description: `For each ad campaign that you create, you can control how much\\r\\n              you're willing to spend on clicks and conversions, which networks\\r\\n              and geographical locations you want your ads to show on, and more.`,\\r\\n  },\\r\\n  {\\r\\n    label: 'Create an ad group',\\r\\n    description:\\r\\n      'An ad group contains one or more ads which target a shared set of keywords.',\\r\\n  },\\r\\n  {\\r\\n    label: 'Create an ad',\\r\\n    description: `Try out different ad text to see what brings in the most customers,\\r\\n              and learn how to enhance your ads using features like ad extensions.\\r\\n              If you run into any problems with your ads, find out how to tell if\\r\\n              they're running and how to resolve approval issues.`,\\r\\n  },\\r\\n];\\r\\n\\r\\nexport default function TextMobileStepper() {\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const maxSteps = steps.length;\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{maxWidth: 400, flexGrow: 1}}>\\r\\n      <Paper\\r\\n        square\\r\\n        elevation={0}\\r\\n        sx={{\\r\\n          display: 'flex',\\r\\n          alignItems: 'center',\\r\\n          height: 50,\\r\\n          pl: 2,\\r\\n          bgcolor: 'background.default',\\r\\n        }}\\r\\n      >\\r\\n        <Typography>{steps[activeStep].label}</Typography>\\r\\n      </Paper>\\r\\n      <Box sx={{height: 255, maxWidth: 400, width: '100%', p: 2}}>\\r\\n        {steps[activeStep].description}\\r\\n      </Box>\\r\\n      <MobileStepper\\r\\n        variant='text'\\r\\n        steps={maxSteps}\\r\\n        position='static'\\r\\n        activeStep={activeStep}\\r\\n        nextButton={\\r\\n          <Button\\r\\n            size='small'\\r\\n            onClick={handleNext}\\r\\n            disabled={activeStep === maxSteps - 1}\\r\\n          >\\r\\n            Next\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowLeft />\\r\\n            ) : (\\r\\n              <KeyboardArrowRight />\\r\\n            )}\\r\\n          </Button>\\r\\n        }\\r\\n        backButton={\\r\\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowRight />\\r\\n            ) : (\\r\\n              <KeyboardArrowLeft />\\r\\n            )}\\r\\n            Back\\r\\n          </Button>\\r\\n        }\\r\\n      />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {autoPlay} from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst images = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n];\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = images.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{maxWidth: 400, flexGrow: 1}}>\r\n      <Paper\r\n        square\r\n        elevation={0}\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          height: 50,\r\n          pl: 2,\r\n          bgcolor: 'background.default',\r\n        }}\r\n      >\r\n        <Typography>{images[activeStep].label}</Typography>\r\n      </Paper>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {images.map((step, index) => (\r\n          <div key={step.label}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <Box\r\n                component='img'\r\n                sx={{\r\n                  height: 255,\r\n                  display: 'block',\r\n                  maxWidth: 400,\r\n                  overflow: 'hidden',\r\n                  width: '100%',\r\n                }}\r\n                src={step.imgPath}\r\n                alt={step.label}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position='static'\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button\r\n            size='small'\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n          >\r\n            Next\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\n\r\nexport default function DotsMobileStepper() {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant='dots'\r\n      steps={6}\r\n      position='static'\r\n      activeStep={activeStep}\r\n      sx={{maxWidth: 400, flexGrow: 1}}\r\n      nextButton={\r\n        <Button size='small' onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowLeft />\r\n          ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowRight />\r\n          ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\n\r\nexport default function ProgressMobileStepper() {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant='progress'\r\n      steps={6}\r\n      position='static'\r\n      activeStep={activeStep}\r\n      sx={{maxWidth: 400, flexGrow: 1}}\r\n      nextButton={\r\n        <Button size='small' onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowLeft />\r\n          ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowRight />\r\n          ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport HorizontalLinearStepper from './HorizontalLinearStepper';\r\nimport HorizontalLinearStepperSource from '!raw-loader!./HorizontalLinearStepper';\r\n\r\nimport HorizontalNonLinearStepper from './HorizontalNonLinearStepper';\r\nimport HorizontalNonLinearStepperSource from '!raw-loader!./HorizontalNonLinearStepper';\r\n\r\nimport HorizontalLabelPositionBelowStepper from './HorizontalLabelPositionBelowStepper';\r\nimport HorizontalLabelPositionBelowStepperSource from '!raw-loader!./HorizontalLabelPositionBelowStepper';\r\n\r\nimport HorizontalStepperWithError from './HorizontalStepperWithError';\r\nimport HorizontalStepperWithErrorSource from '!raw-loader!./HorizontalStepperWithError';\r\n\r\nimport CustomizedSteppers from './CustomizedSteppers';\r\nimport CustomizedSteppersSource from '!raw-loader!./CustomizedSteppers';\r\n\r\nimport VerticalLinearStepper from './VerticalLinearStepper';\r\nimport VerticalLinearStepperSource from '!raw-loader!./VerticalLinearStepper';\r\n\r\nimport TextMobileStepper from './TextMobileStepper';\r\nimport TextMobileStepperSource from '!raw-loader!./TextMobileStepper';\r\n\r\nimport SwipeableTextMobileStepper from './SwipeableTextMobileStepper';\r\nimport SwipeableTextMobileStepperSource from '!raw-loader!./SwipeableTextMobileStepper';\r\n\r\nimport DotsMobileStepper from './DotsMobileStepper';\r\nimport DotsMobileStepperSource from '!raw-loader!./DotsMobileStepper';\r\n\r\nimport ProgressMobileStepper from './ProgressMobileStepper';\r\nimport ProgressMobileStepperSource from '!raw-loader!./ProgressMobileStepper';\r\n\r\nconst Stepper = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Stepper'\r\n        description='Steppers convey progress through numbered steps. It provides a wizard-like workflow.'\r\n        refUrl='https://mui.com/components/steppers/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Horizontal stepper'\r\n            component={HorizontalLinearStepper}\r\n            source={HorizontalLinearStepperSource}\r\n            noScrollbar\r\n            description='Horizontal steppers are ideal when the contents of one step depend on an earlier step.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='HorizontalNonLinearStepper'\r\n            component={HorizontalNonLinearStepper}\r\n            source={HorizontalNonLinearStepperSource}\r\n            noScrollbar\r\n            description='Non-linear steppers allow the user to enter a multi-step flow at any point.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='HorizontalLabelPositionBelowStepper'\r\n            component={HorizontalLabelPositionBelowStepper}\r\n            source={HorizontalLabelPositionBelowStepperSource}\r\n            noScrollbar\r\n            description='Labels can be placed below the step icon by setting the alternativeLabel prop on the Stepper component.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='HorizontalStepperWithError'\r\n            component={HorizontalStepperWithError}\r\n            source={HorizontalStepperWithErrorSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='CustomizedSteppers'\r\n            component={CustomizedSteppers}\r\n            source={CustomizedSteppersSource}\r\n            noScrollbar\r\n            description='Here is an example of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='VerticalLinearStepper'\r\n            component={VerticalLinearStepper}\r\n            source={VerticalLinearStepperSource}\r\n            noScrollbar\r\n            description='Vertical steppers are designed for narrow screen sizes. They are ideal for mobile. All the features of the horizontal stepper can be implemented.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='TextMobileStepper'\r\n            component={TextMobileStepper}\r\n            source={TextMobileStepperSource}\r\n            noScrollbar\r\n            description='The current step and total number of steps are displayed as text.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='SwipeableTextMobileStepper'\r\n            component={SwipeableTextMobileStepper}\r\n            source={SwipeableTextMobileStepperSource}\r\n            noScrollbar\r\n            description='This demo uses react-swipeable-views to create a carousel.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='DotsMobileStepper'\r\n            component={DotsMobileStepper}\r\n            source={DotsMobileStepperSource}\r\n            noScrollbar\r\n            description='Use dots when the number of steps is small.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='ProgressMobileStepper'\r\n            component={ProgressMobileStepper}\r\n            source={ProgressMobileStepperSource}\r\n            noScrollbar\r\n            description='Use a progress bar when there are many steps, or if there are steps that need to be inserted during the process (based on responses to earlier steps).'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stepper;\r\n","export default \"import * as React from 'react';\\r\\nimport {useTheme} from '@mui/material/styles';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport MobileStepper from '@mui/material/MobileStepper';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Typography from '@mui/material/Typography';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\\r\\nimport SwipeableViews from 'react-swipeable-views';\\r\\nimport {autoPlay} from 'react-swipeable-views-utils';\\r\\n\\r\\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\\r\\n\\r\\nconst images = [\\r\\n  {\\r\\n    label: 'San Francisco – Oakland Bay Bridge, United States',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bird',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bali, Indonesia',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\\r\\n  },\\r\\n  {\\r\\n    label: 'Goč, Serbia',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n];\\r\\n\\r\\nfunction SwipeableTextMobileStepper() {\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const maxSteps = images.length;\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleStepChange = (step) => {\\r\\n    setActiveStep(step);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{maxWidth: 400, flexGrow: 1}}>\\r\\n      <Paper\\r\\n        square\\r\\n        elevation={0}\\r\\n        sx={{\\r\\n          display: 'flex',\\r\\n          alignItems: 'center',\\r\\n          height: 50,\\r\\n          pl: 2,\\r\\n          bgcolor: 'background.default',\\r\\n        }}\\r\\n      >\\r\\n        <Typography>{images[activeStep].label}</Typography>\\r\\n      </Paper>\\r\\n      <AutoPlaySwipeableViews\\r\\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\\r\\n        index={activeStep}\\r\\n        onChangeIndex={handleStepChange}\\r\\n        enableMouseEvents\\r\\n      >\\r\\n        {images.map((step, index) => (\\r\\n          <div key={step.label}>\\r\\n            {Math.abs(activeStep - index) <= 2 ? (\\r\\n              <Box\\r\\n                component='img'\\r\\n                sx={{\\r\\n                  height: 255,\\r\\n                  display: 'block',\\r\\n                  maxWidth: 400,\\r\\n                  overflow: 'hidden',\\r\\n                  width: '100%',\\r\\n                }}\\r\\n                src={step.imgPath}\\r\\n                alt={step.label}\\r\\n              />\\r\\n            ) : null}\\r\\n          </div>\\r\\n        ))}\\r\\n      </AutoPlaySwipeableViews>\\r\\n      <MobileStepper\\r\\n        steps={maxSteps}\\r\\n        position='static'\\r\\n        activeStep={activeStep}\\r\\n        nextButton={\\r\\n          <Button\\r\\n            size='small'\\r\\n            onClick={handleNext}\\r\\n            disabled={activeStep === maxSteps - 1}\\r\\n          >\\r\\n            Next\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowLeft />\\r\\n            ) : (\\r\\n              <KeyboardArrowRight />\\r\\n            )}\\r\\n          </Button>\\r\\n        }\\r\\n        backButton={\\r\\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowRight />\\r\\n            ) : (\\r\\n              <KeyboardArrowLeft />\\r\\n            )}\\r\\n            Back\\r\\n          </Button>\\r\\n        }\\r\\n      />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default SwipeableTextMobileStepper;\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport {useTheme} from '@mui/material/styles';\\r\\nimport MobileStepper from '@mui/material/MobileStepper';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\\r\\n\\r\\nexport default function DotsMobileStepper() {\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <MobileStepper\\r\\n      variant='dots'\\r\\n      steps={6}\\r\\n      position='static'\\r\\n      activeStep={activeStep}\\r\\n      sx={{maxWidth: 400, flexGrow: 1}}\\r\\n      nextButton={\\r\\n        <Button size='small' onClick={handleNext} disabled={activeStep === 5}>\\r\\n          Next\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowLeft />\\r\\n          ) : (\\r\\n            <KeyboardArrowRight />\\r\\n          )}\\r\\n        </Button>\\r\\n      }\\r\\n      backButton={\\r\\n        <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowRight />\\r\\n          ) : (\\r\\n            <KeyboardArrowLeft />\\r\\n          )}\\r\\n          Back\\r\\n        </Button>\\r\\n      }\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport {useTheme} from '@mui/material/styles';\\r\\nimport MobileStepper from '@mui/material/MobileStepper';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\\r\\n\\r\\nexport default function ProgressMobileStepper() {\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <MobileStepper\\r\\n      variant='progress'\\r\\n      steps={6}\\r\\n      position='static'\\r\\n      activeStep={activeStep}\\r\\n      sx={{maxWidth: 400, flexGrow: 1}}\\r\\n      nextButton={\\r\\n        <Button size='small' onClick={handleNext} disabled={activeStep === 5}>\\r\\n          Next\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowLeft />\\r\\n          ) : (\\r\\n            <KeyboardArrowRight />\\r\\n          )}\\r\\n        </Button>\\r\\n      }\\r\\n      backButton={\\r\\n        <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowRight />\\r\\n          ) : (\\r\\n            <KeyboardArrowLeft />\\r\\n          )}\\r\\n          Back\\r\\n        </Button>\\r\\n      }\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}