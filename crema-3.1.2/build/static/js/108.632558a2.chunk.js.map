{"version":3,"sources":["pages/dashboards/Widgets/CountryMap/MapChart.js","pages/dashboards/Analytics/WelcomeCard/index.js","pages/dashboards/Analytics/SalesState/MixBarChart.js","pages/dashboards/Analytics/SalesState/index.js","pages/dashboards/Analytics/StateCards/StatGraphs.js","pages/dashboards/Analytics/StateCards/index.js","pages/dashboards/Analytics/VisitorPageView/StatGraphs.js","pages/dashboards/Analytics/VisitorPageView/index.js","pages/dashboards/Analytics/ActiveVisitors/VisitorsGraph.js","pages/dashboards/Analytics/ActiveVisitors/index.js","pages/dashboards/Analytics/TopSelling/ProductCell.js","pages/dashboards/Analytics/TopSelling/index.js","pages/dashboards/Analytics/EarningByCountry/index.js","pages/dashboards/Analytics/TicketsSupport/index.js","pages/dashboards/Analytics/PageVisits/VisitsTable/TableHeading.js","pages/dashboards/Analytics/PageVisits/VisitsTable/TableItem.js","pages/dashboards/Analytics/PageVisits/VisitsTable/index.js","pages/dashboards/Analytics/PageVisits/index.js","pages/dashboards/Analytics/OrderNTransaction/TransactionTable/TableHeading.js","pages/dashboards/Analytics/OrderNTransaction/TransactionTable/TableItem.js","pages/dashboards/Analytics/OrderNTransaction/TransactionTable/index.js","pages/dashboards/Analytics/OrderNTransaction/index.js","pages/dashboards/Analytics/TrafficSource/index.js","pages/dashboards/Analytics/InfoWidget/index.js","pages/dashboards/Analytics/index.js"],"names":["allStates","id","val","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","MapChart","className","projection","geography","geographies","map","geo","stroke","fill","rsmKey","centroid","geoCentroid","cur","find","s","Object","keys","indexOf","coordinates","y","fontSize","textAnchor","subject","dx","dy","x","alignmentBaseline","getWelcomeIcon","iconType","color","WelcomeCard","data","messages","useIntl","AppCard","sxStyle","mb","xs","md","Box","sx","flex","display","flexDirection","sm","mr","xl","justifyContent","component","fontWeight","Fonts","REGULAR","MEDIUM","mx","AppScrollbar","maxWidth","px","item","index","mt","alignItems","backgroundColor","theme","alpha","palette","primary","main","width","height","minWidth","padding","borderRadius","icon","position","lineHeight","marginBottom","counts","type","marginRight","objectFit","alt","src","MixBarChart","ResponsiveContainer","BarChart","barSize","margin","top","right","left","bottom","XAxis","dataKey","Tooltip","Bar","stackId","defaultProps","SalesState","salesState","chartData","title","action","AppSelect","menus","defaultValue","onChange","console","log","textAlign","AppGridContainer","Grid","ml","AppList","animation","delay","duration","containerStyle","overflow","renderRow","pl","py","Avatar","amount","textOverflow","whiteSpace","StatGraphs","strokeColor","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","labelStyle","Area","strokeWidth","fillOpacity","StateCard","IconButton","p","value","growth","green","red","graphData","LineChart","tickLine","axisLine","CartesianGrid","horizontal","vertical","Line","dot","activeDot","r","VisitorPageView","VisitorsGraph","ActiveVisitors","contentStyle","pt","BOLD","pb","slug","Link","secondary","marginTop","textDecoration","ProductCell","name","description","price","Hidden","xsDown","AppCircularProgress","activeColor","thickness","hidePercentage","rate","pr","TopSelling","products","footer","EarningByCountry","earningData","flexWrap","textTransform","country","TicketsSupport","tickets","React","useState","expanded","setExpanded","style","Accordion","boxShadow","borderBottom","divider","panel","event","isExpanded","AccordionSummary","grey","borderTop","expandIcon","opened","AccordionDetails","AppLinearProgress","overAllPercentage","open","close","hold","TableHeading","TableRow","background","paper","TableCell","align","TableItem","scope","page","success","pageView","visitors","VisitsTable","visitsData","AppTableContainer","maxHeight","Table","stickyHeader","TableHead","TableBody","slice","PageVisits","pageVisits","getPaymentStatusColor","status","customer","date","paymentType","getPaymentTypeColor","TransactionTable","transactionData","OrderNTransaction","styled","props","disableGutters","elevation","square","default","transform","darken","MuiAccordionDetails","spacing","TrafficSource","trafficData","LIGHT","session","InfoWidget","bgColor","count","details","Analytics","dispatch","useDispatch","useEffect","onGetAnalyticsData","analyticsData","useSelector","dashboard","AppAnimate","lg","welcomeCard","revenueCards","salesChartData","visitorsPageView","activeVisitors","topSellingProduct","infoWidgets","AppInfoView"],"mappings":"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","file":"static/js/108.632558a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {geoCentroid} from 'd3-geo';\r\nimport {\r\n  Annotation,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n} from 'react-simple-maps';\r\n\r\nconst allStates = [\r\n  {id: 'AL', val: '01'},\r\n  {id: 'AK', val: '02'},\r\n  {id: 'AS', val: '60'},\r\n  {id: 'AZ', val: '04'},\r\n  {id: 'AR', val: '05'},\r\n  {id: 'CA', val: '06'},\r\n  {id: 'CO', val: '08'},\r\n  {id: 'CT', val: '09'},\r\n  {id: 'DE', val: '10'},\r\n  {id: 'DC', val: '11'},\r\n  {id: 'FL', val: '12'},\r\n  {id: 'FM', val: '64'},\r\n  {id: 'GA', val: '13'},\r\n  {id: 'GU', val: '66'},\r\n  {id: 'HI', val: '15'},\r\n  {id: 'ID', val: '16'},\r\n  {id: 'IL', val: '17'},\r\n  {id: 'IN', val: '18'},\r\n  {id: 'IA', val: '19'},\r\n  {id: 'KS', val: '20'},\r\n  {id: 'KY', val: '21'},\r\n  {id: 'LA', val: '22'},\r\n  {id: 'ME', val: '23'},\r\n  {id: 'MH', val: '68'},\r\n  {id: 'MD', val: '24'},\r\n  {id: 'MA', val: '25'},\r\n  {id: 'MI', val: '26'},\r\n  {id: 'MN', val: '27'},\r\n  {id: 'MS', val: '28'},\r\n  {id: 'MO', val: '29'},\r\n  {id: 'MT', val: '30'},\r\n  {id: 'NE', val: '31'},\r\n  {id: 'NV', val: '32'},\r\n  {id: 'NH', val: '33'},\r\n  {id: 'NJ', val: '34'},\r\n  {id: 'NM', val: '35'},\r\n  {id: 'NY', val: '36'},\r\n  {id: 'NC', val: '37'},\r\n  {id: 'ND', val: '38'},\r\n  {id: 'MP', val: '69'},\r\n  {id: 'OH', val: '39'},\r\n  {id: 'OK', val: '40'},\r\n  {id: 'OR', val: '41'},\r\n  {id: 'PW', val: '70'},\r\n  {id: 'PA', val: '42'},\r\n  {id: 'PR', val: '72'},\r\n  {id: 'RI', val: '44'},\r\n  {id: 'SC', val: '45'},\r\n  {id: 'SD', val: '46'},\r\n  {id: 'TN', val: '47'},\r\n  {id: 'TX', val: '48'},\r\n  {id: 'UM', val: '74'},\r\n  {id: 'UT', val: '49'},\r\n  {id: 'VT', val: '50'},\r\n  {id: 'VA', val: '51'},\r\n  {id: 'VI', val: '78'},\r\n  {id: 'WA', val: '53'},\r\n  {id: 'WV', val: '54'},\r\n  {id: 'WI', val: '55'},\r\n  {id: 'WY', val: '56'},\r\n];\r\n\r\nconst geoUrl = 'https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json';\r\n\r\nconst offsets = {\r\n  VT: [50, -8],\r\n  NH: [34, 2],\r\n  MA: [30, -1],\r\n  RI: [28, 2],\r\n  CT: [35, 10],\r\n  NJ: [34, 1],\r\n  DE: [33, 0],\r\n  MD: [47, 10],\r\n  DC: [49, 21],\r\n};\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap className='map-chart' projection='geoAlbersUsa'>\r\n      <Geographies geography={geoUrl}>\r\n        {({geographies}) => (\r\n          <>\r\n            {geographies.map((geo) => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                stroke='#FFF'\r\n                geography={geo}\r\n                fill='#DDD'\r\n              />\r\n            ))}\r\n            {geographies.map((geo) => {\r\n              const centroid = geoCentroid(geo);\r\n              const cur = allStates.find((s) => s.val === geo.id);\r\n              return (\r\n                <g key={geo.rsmKey + '-name'}>\r\n                  {cur &&\r\n                    centroid[0] > -160 &&\r\n                    centroid[0] < -67 &&\r\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                      <Marker coordinates={centroid}>\r\n                        <text y='2' fontSize={14} textAnchor='middle'>\r\n                          {cur.id}\r\n                        </text>\r\n                      </Marker>\r\n                    ) : (\r\n                      <Annotation\r\n                        subject={centroid}\r\n                        dx={offsets[cur.id][0]}\r\n                        dy={offsets[cur.id][1]}\r\n                      >\r\n                        <text x={4} fontSize={14} alignmentBaseline='middle'>\r\n                          {cur.id}\r\n                        </text>\r\n                      </Annotation>\r\n                    ))}\r\n                </g>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React from 'react';\r\nimport {Box, alpha} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport {useIntl} from 'react-intl';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {HiOutlineMailOpen} from 'react-icons/hi';\r\nimport {BiMessageDetail} from 'react-icons/bi';\r\nimport {CgFileDocument} from 'react-icons/cg';\r\nimport AppScrollbar from '../../../../@crema/core/AppScrollbar';\r\n\r\nconst getWelcomeIcon = (iconType) => {\r\n  switch (iconType) {\r\n    case 'HiOutlineMailOpen':\r\n      return <HiOutlineMailOpen color='#0A8FDC' className='icon' />;\r\n    case 'BiMessageDetail':\r\n      return <BiMessageDetail color='#0A8FDC' className='icon' />;\r\n    default:\r\n      return <CgFileDocument color='#0A8FDC' className='icon' />;\r\n  }\r\n};\r\n\r\nconst WelcomeCard = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        mb: {xs: 5, md: 8},\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: 'flex',\r\n          flexDirection: {xs: 'column', sm: 'row'},\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mr: {xs: 2, xl: 3},\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mb: {md: 12},\r\n            }}\r\n          >\r\n            <Box\r\n              component='h5'\r\n              sx={{\r\n                color: 'text.secondary',\r\n                fontWeight: Fonts.REGULAR,\r\n                mb: 0.5,\r\n                fontSize: 16,\r\n              }}\r\n            >\r\n              {messages['dashboard.analytics.welcome']}\r\n            </Box>\r\n            <Box\r\n              component='h3'\r\n              sx={{\r\n                color: 'text.primary',\r\n                fontWeight: Fonts.MEDIUM,\r\n                fontSize: 20,\r\n                mb: 3,\r\n              }}\r\n            >\r\n              {messages['dashboard.analytics.eddieMassy']}\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              mx: -3,\r\n            }}\r\n          >\r\n            <AppScrollbar\r\n              sx={{\r\n                maxWidth: '100%',\r\n                px: 3,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  mx: -3,\r\n                }}\r\n              >\r\n                {data.map((item, index) => (\r\n                  <Box\r\n                    key={'box-' + index}\r\n                    sx={{\r\n                      px: 3,\r\n                      mt: 3,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        mr: 4,\r\n                        backgroundColor: (theme) =>\r\n                          alpha(theme.palette.primary.main, 0.1),\r\n                        width: {xs: 46, md: 60},\r\n                        height: {xs: 46, md: 60},\r\n                        minWidth: {xs: 46, md: 60},\r\n                        fontSize: {xs: 24, md: 26},\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        padding: 1.25,\r\n                        borderRadius: '50%',\r\n                      }}\r\n                    >\r\n                      {getWelcomeIcon(item.icon)}\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        color: 'text.secondary',\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          color: 'text.primary',\r\n                          fontWeight: Fonts.MEDIUM,\r\n                          fontSize: 18,\r\n                          position: 'relative',\r\n                          lineHeight: 1,\r\n                          marginBottom: 0.5,\r\n                        }}\r\n                        component='h5'\r\n                      >\r\n                        {item.counts}\r\n                      </Box>\r\n\r\n                      <Box component='p'>{item.type}</Box>\r\n                    </Box>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </AppScrollbar>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n            marginRight: -2.5,\r\n            marginBottom: -5,\r\n            maxWidth: {sm: 150, xl: 180},\r\n            '& img': {\r\n              width: '100%',\r\n              height: '100%',\r\n              objectFit: 'contain',\r\n            },\r\n          }}\r\n        >\r\n          <img alt='welcome' src={'/assets/images/dashboard/welcomImage.svg'} />\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default WelcomeCard;\r\n\r\nWelcomeCard.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {BarChart, Bar, XAxis, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MixBarChart = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={270}>\r\n      <BarChart\r\n        barSize={7}\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <XAxis dataKey='name' dy={10} />\r\n        <Tooltip />\r\n        <Bar dataKey='AS' stackId='a' fill='#49BD65' />\r\n        <Bar dataKey='Rev' stackId='a' fill='#0A8FDC' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MixBarChart;\r\n\r\nMixBarChart.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nMixBarChart.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport AppList from '@crema/core/AppList';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MixBarChart from './MixBarChart';\r\n\r\nconst SalesState = ({salesState, chartData}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const getData = (data) => {\r\n    return data;\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.analytics.salesState']}\r\n      sxStyle={{height: 1}}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n        }}\r\n      >\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            textAlign: {xs: 'center', sm: 'left'},\r\n            color: 'text.secondary',\r\n            mt: -3,\r\n            mb: 2,\r\n          }}\r\n        >\r\n          1343 {messages['dashboard.analytics.salesThisWeek']}\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mt: 'auto',\r\n          }}\r\n        >\r\n          <AppGridContainer>\r\n            <Grid item xs={12} sm={7}>\r\n              <Box\r\n                sx={{\r\n                  width: 1,\r\n                  height: 1,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  justifyContent: 'center',\r\n                  alignItems: {xs: 'center', sm: 'flex-start'},\r\n                }}\r\n              >\r\n                <MixBarChart data={chartData} />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={5}>\r\n              <Box\r\n                sx={{\r\n                  width: 1,\r\n                  ml: 2,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'flex-start',\r\n                }}\r\n              >\r\n                <AppList\r\n                  animation='transition.slideRightBigIn'\r\n                  delay={200}\r\n                  duration={400}\r\n                  containerStyle={{width: '100%', overflow: 'hidden'}}\r\n                  data={getData(salesState)}\r\n                  renderRow={(item) => (\r\n                    <Box\r\n                      key={'salesState-' + item.id}\r\n                      sx={{\r\n                        pl: {xl: 6},\r\n                        py: {xs: 2, md: 4},\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        width: '100%',\r\n                        overflow: 'hidden',\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        src={item.icon}\r\n                        alt='icon'\r\n                        sx={{height: 50, width: 50}}\r\n                      />\r\n\r\n                      <Box\r\n                        position='relative'\r\n                        sx={{\r\n                          ml: 4,\r\n                          overflow: 'hidden',\r\n                          width: 'calc(100% - 66px)',\r\n                        }}\r\n                      >\r\n                        <Box\r\n                          component='h3'\r\n                          sx={{\r\n                            display: 'inline-block',\r\n                            fontWeight: Fonts.MEDIUM,\r\n                            mb: 0.5,\r\n                            fontSize: 16,\r\n                          }}\r\n                        >\r\n                          ${item.amount}\r\n                        </Box>\r\n                        <Box\r\n                          component='p'\r\n                          sx={{\r\n                            color: 'text.secondary',\r\n                            fontSize: 14,\r\n                            overflow: 'hidden',\r\n                            textOverflow: 'ellipsis',\r\n                            whiteSpace: 'nowrap',\r\n                            width: '100%',\r\n                          }}\r\n                        >\r\n                          {item.type}\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  )}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\nexport default SalesState;\r\n\r\nSalesState.defaultProps = {\r\n  salesState: [],\r\n};\r\n\r\nSalesState.propTypes = {\r\n  salesState: PropTypes.array,\r\n  chartData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatGraphs = ({data, strokeColor}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={80}>\r\n      <AreaChart data={data} margin={{top: 25, right: 0, left: 0, bottom: 0}}>\r\n        <defs>\r\n          <linearGradient id='colorPv' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor={strokeColor} stopOpacity={0.15} />\r\n            <stop offset='95%' stopColor={strokeColor} stopOpacity={0.01} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='number'\r\n          stroke={strokeColor}\r\n          strokeWidth={3}\r\n          fillOpacity={1}\r\n          fill='url(#colorPv)'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatGraphs;\r\n\r\nStatGraphs.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nStatGraphs.propTypes = {\r\n  data: PropTypes.array,\r\n  strokeColor: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport {green, red} from '@mui/material/colors';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport StatGraphs from './StatGraphs';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StateCard = ({data}) => {\r\n  return (\r\n    <AppCard>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flex: 1,\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flex: 1,\r\n            flexDirection: 'row',\r\n          }}\r\n        >\r\n          <IconButton\r\n            sx={{\r\n              height: 50,\r\n              width: 50,\r\n              p: 0,\r\n              mr: 4,\r\n            }}\r\n          >\r\n            <img alt='icon' src={data.icon} />\r\n          </IconButton>\r\n          <Box\r\n            sx={{\r\n              position: 'relative',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 0.5,\r\n              }}\r\n            >\r\n              <Box\r\n                component='h3'\r\n                sx={{\r\n                  display: 'inline-block',\r\n                  fontWeight: Fonts.MEDIUM,\r\n                  fontSize: 18,\r\n                }}\r\n              >\r\n                {data.value}\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  ml: 3,\r\n                  fontSize: 14,\r\n                  fontWeight: Fonts.MEDIUM,\r\n                  color: data.growth > 0.0 ? green[500] : red[500],\r\n                }}\r\n                component='span'\r\n              >\r\n                {data.growth}%\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                fontSize: 14,\r\n                color: 'text.secondary',\r\n                mb: 1,\r\n              }}\r\n            >\r\n              {data.type}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            margin: '0 -24px -20px',\r\n          }}\r\n        >\r\n          <StatGraphs data={data.graphData} strokeColor={data.strokeColor} />\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default StateCard;\r\n\r\nStateCard.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatGraphs = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={350}>\r\n      <LineChart data={data} margin={{top: 50, right: 0, left: -25, bottom: 0}}>\r\n        <XAxis\r\n          dataKey='name'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          padding={{left: 20, right: 20}}\r\n        />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <CartesianGrid stroke='#eee' horizontal={true} vertical={false} />\r\n        <Line\r\n          type='monotone'\r\n          dataKey='Page'\r\n          stroke='#0698ec'\r\n          dot={false}\r\n          strokeWidth={2}\r\n          activeDot={{r: 4}}\r\n        />\r\n        <Line\r\n          type='monotone'\r\n          dot={false}\r\n          strokeWidth={2}\r\n          dataKey='Visitor'\r\n          stroke='#f44d50'\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatGraphs;\r\n\r\nStatGraphs.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nStatGraphs.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatGraphs from './StatGraphs';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst VisitorPageView = ({data}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.analytics.visitorsPageViews']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <StatGraphs data={data} />\r\n    </AppCard>\r\n  );\r\n};\r\nexport default VisitorPageView;\r\n\r\nVisitorPageView.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nVisitorPageView.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst VisitorsGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={240}>\r\n      <BarChart barSize={3} data={data}>\r\n        <Bar dataKey='value' fill='#3335' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default VisitorsGraph;\r\n\r\nVisitorsGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nVisitorsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport VisitorsGraph from './VisitorsGraph';\r\nimport {green, red} from '@mui/material/colors';\r\nimport Link from '@mui/material/Link';\r\nimport {useIntl} from 'react-intl';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst ActiveVisitors = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard contentStyle={{padding: 0}}>\r\n      <Box\r\n        sx={{\r\n          pt: {xs: 5, sm: 5, xl: 5},\r\n          backgroundColor: '#49bd65',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            px: 6,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              color: '#FFFFFF',\r\n              mb: 2,\r\n              fontWeight: Fonts.BOLD,\r\n              fontSize: 16,\r\n            }}\r\n            component='h3'\r\n          >\r\n            {messages['dashboard.analytics.activeVisitors']}\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              color: '#FFF8',\r\n            }}\r\n          >\r\n            {messages['dashboard.analytics.pageViewPerMinutes']}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mt: 'auto',\r\n          }}\r\n        >\r\n          <VisitorsGraph data={data.graphData} />\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          pt: 5,\r\n          pb: 1,\r\n          px: 6,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mb: 0.5,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: 'inline-block',\r\n                fontWeight: Fonts.MEDIUM,\r\n                fontSize: 18,\r\n              }}\r\n              component='h3'\r\n            >\r\n              {data.value}\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                ml: 3,\r\n                fontSize: 16,\r\n                fontWeight: Fonts.MEDIUM,\r\n                color: data.growth > 0.0 ? green[500] : red[500],\r\n              }}\r\n              component='span'\r\n            >\r\n              {data.growth}% Then yesterday\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n              color: 'text.secondary',\r\n              mb: 1,\r\n            }}\r\n          >\r\n            {data.slug}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            textAlign: 'right',\r\n          }}\r\n        >\r\n          <Link\r\n            component='button'\r\n            sx={{\r\n              color: (theme) => theme.palette.secondary.main,\r\n              fontSize: 16,\r\n              marginTop: {xs: 1.5, xl: 4},\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            View Report\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ActiveVisitors;\r\n\r\nActiveVisitors.defaultProps = {};\r\n\r\nActiveVisitors.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCircularProgress from '@crema/core/AppCircularProgress';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProductCell = ({data}) => {\r\n  return (\r\n    <Box\r\n      key={data.id}\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: 2,\r\n        px: 5,\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          '& .logo': {\r\n            height: 70,\r\n            width: 70,\r\n            borderRadius: 2.5,\r\n            overflow: 'hidden',\r\n          },\r\n        }}\r\n      >\r\n        <img className='logo' alt='' src={data.icon} />\r\n\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            ml: 4,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              color: 'primary.main',\r\n              display: 'inline-block',\r\n              fontWeight: Fonts.MEDIUM,\r\n              mb: 0.5,\r\n              fontSize: 14,\r\n            }}\r\n            component='h3'\r\n          >\r\n            {data.name}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 12,\r\n              color: 'text.secondary',\r\n              mb: 1,\r\n            }}\r\n          >\r\n            {data.description}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            ${data.price}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Hidden xsDown>\r\n        <Box\r\n          sx={{\r\n            ml: 'auto',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              height: 50,\r\n              width: 50,\r\n            }}\r\n          >\r\n            <AppCircularProgress\r\n              minWidth={50}\r\n              maxWidth={50}\r\n              activeColor={data.color}\r\n              thickness={4}\r\n              hidePercentage\r\n              value={data.rate}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              ml: 2,\r\n              mr: -2,\r\n              p: 2,\r\n              pr: 0,\r\n            }}\r\n          >\r\n            <Box>\r\n              <Box\r\n                sx={{\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                Sales\r\n              </Box>\r\n              <Box>{data.rate}%</Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                ml: 2,\r\n                color: 'grey.400',\r\n              }}\r\n            >\r\n              <NavigateNextIcon />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Hidden>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductCell;\r\n\r\nProductCell.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport ProductCell from './ProductCell';\r\nimport {useIntl} from 'react-intl';\r\nimport AppList from '@crema/core/AppList';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TopSelling = ({products}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.analytics.topSellingProducts']}\r\n      footer={'+12 ' + messages['common.more']}\r\n    >\r\n      <AppList\r\n        animation='transition.slideRightBigIn'\r\n        data={products}\r\n        renderRow={(data, index) => <ProductCell key={index} data={data} />}\r\n      />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TopSelling;\r\n\r\nTopSelling.propTypes = {\r\n  products: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport MapChart from '../../Widgets/CountryMap/MapChart';\r\nimport {Box} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst EarningByCountry = ({earningData}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.analytics.earningByCountries']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <Box\r\n        sx={{\r\n          height: 224,\r\n          '& .map-chart': {\r\n            width: '100%',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <MapChart />\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        {earningData.map((data) => (\r\n          <Box\r\n            sx={{\r\n              px: 4.5,\r\n              mb: 2,\r\n            }}\r\n            key={data.id}\r\n          >\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                mb: 1,\r\n                fontWeight: Fonts.MEDIUM,\r\n                fontSize: 20,\r\n              }}\r\n            >\r\n              ${data.amount}\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  height: {xs: 8, xl: 10},\r\n                  width: {xs: 8, xl: 10},\r\n                  borderRadius: '50%',\r\n                  display: 'block',\r\n                  backgroundColor: data.color,\r\n                  p: 1,\r\n                  mr: 2,\r\n                }}\r\n              />\r\n              <Box\r\n                component='p'\r\n                sx={{\r\n                  color: 'text.secondary',\r\n                  fontSize: 14,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {data.country}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default EarningByCountry;\r\n\r\nEarningByCountry.propTypes = {\r\n  earningData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {Box} from '@mui/material';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\n\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AppLinearProgress from '@crema/core/AppLinearProgress';\r\nimport WatchLaterIcon from '@mui/icons-material/WatchLater';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TicketsSupport = ({tickets}) => {\r\n  const [expanded, setExpanded] = React.useState(1);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        mb: {xs: 5, md: 8},\r\n      }}\r\n      contentStyle={{padding: 0}}\r\n      footer={\r\n        <Box\r\n          sx={{\r\n            color: 'text.secondary',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <WatchLaterIcon style={{fontSize: 16}} />\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              ml: 2,\r\n            }}\r\n          >\r\n            Last update 30 min ago\r\n          </Box>\r\n        </Box>\r\n      }\r\n    >\r\n      {tickets.map((data) => (\r\n        <Accordion\r\n          sx={{\r\n            position: 'relative',\r\n            boxShadow: 'none',\r\n            borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\r\n            mb: '-1px',\r\n            '&:last-of-type': {\r\n              borderRadius: 0,\r\n            },\r\n          }}\r\n          key={data.id}\r\n          expanded={expanded === data.id}\r\n          onChange={handleChange(data.id)}\r\n        >\r\n          <AccordionSummary\r\n            sx={{\r\n              padding: '0 24px',\r\n              '& .MuiSvgIcon-root': {\r\n                color: (theme) => theme.palette.grey[500],\r\n              },\r\n              '&.Mui-expanded': {\r\n                borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\r\n                borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\r\n              },\r\n            }}\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel1bh-content'\r\n            id='panel1bh-header'\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <Box\r\n                component='h3'\r\n                sx={{\r\n                  color: 'text.primary',\r\n                  fontWeight: Fonts.BOLD,\r\n                  fontSize: 16,\r\n                }}\r\n              >\r\n                {data.name}\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  ml: 'auto',\r\n                  color: 'text.secondary',\r\n                  fontWeight: Fonts.MEDIUM,\r\n                }}\r\n              >\r\n                {data.opened} Open\r\n              </Box>\r\n            </Box>\r\n          </AccordionSummary>\r\n          <AccordionDetails\r\n            sx={{\r\n              padding: '5px 24px',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  mb: 4,\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mb: 1,\r\n                  }}\r\n                >\r\n                  Open\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      flex: 1,\r\n                    }}\r\n                  >\r\n                    <AppLinearProgress\r\n                      value={data.overAllPercentage.open}\r\n                      activeColor='#5ABE20'\r\n                    />\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      ml: 4,\r\n                      color: 'text.secondary',\r\n                    }}\r\n                    component='span'\r\n                  >\r\n                    {data.overAllPercentage.open}%\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  mb: 4,\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mb: 1,\r\n                  }}\r\n                >\r\n                  Closed\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      flex: 1,\r\n                    }}\r\n                  >\r\n                    <AppLinearProgress\r\n                      value={data.overAllPercentage.close}\r\n                      activeColor='#F44D54'\r\n                    />\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      ml: 4,\r\n                      color: 'text.secondary',\r\n                    }}\r\n                    component='span'\r\n                  >\r\n                    {data.overAllPercentage.close}%\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  mb: 4,\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mb: 1,\r\n                  }}\r\n                >\r\n                  On Hold\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      flex: 1,\r\n                    }}\r\n                  >\r\n                    <AppLinearProgress\r\n                      value={data.overAllPercentage.hold}\r\n                      activeColor='#F59821'\r\n                    />\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      ml: 4,\r\n                      color: 'text.secondary',\r\n                    }}\r\n                    component='span'\r\n                  >\r\n                    {data.overAllPercentage.hold}%\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TicketsSupport;\r\n\r\nTicketsSupport.propTypes = {\r\n  tickets: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {grey} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        borderBottom: '0 none',\r\n        color: grey[500],\r\n        '& .tableCell': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          backgroundColor: (theme) => theme.palette.background.paper,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell className='tableCell'>Page name</TableCell>\r\n      <TableCell align='right' className='tableCell'>\r\n        Page Views\r\n      </TableCell>\r\n      <TableCell align='right' className='tableCell'>\r\n        Unique Visitors\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport {Box} from '@mui/material';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\n\r\nconst TableItem = ({data}) => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        '& .tableCell': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      key={data.id}\r\n      className='item-hover'\r\n    >\r\n      <TableCell component='th' scope='data' className='tableCell'>\r\n        {data.page}\r\n      </TableCell>\r\n      <TableCell align='right' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n          }}\r\n        >\r\n          <ArrowDropUpIcon\r\n            sx={{\r\n              color: (theme) => theme.palette.success.main,\r\n              width: 30,\r\n              height: 30,\r\n            }}\r\n          />{' '}\r\n          {data.pageView}\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='right' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n          }}\r\n        >\r\n          <ArrowDropDownIcon\r\n            sx={{\r\n              color: (theme) => theme.palette.secondary.main,\r\n              width: 30,\r\n              height: 30,\r\n            }}\r\n          />\r\n          {data.visitors}\r\n        </Box>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport AppTableContainer from '@crema/core/AppTableContainer';\r\n\r\nconst VisitsTable = ({visitsData}) => {\r\n  const getData = (data) => {\r\n    return data.slice(0, 11);\r\n  };\r\n\r\n  return (\r\n    <AppTableContainer sxStyle={{maxHeight: 530}}>\r\n      <Table stickyHeader className='table'>\r\n        <TableHead sx={{borderBottom: '0 none'}}>\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody sx={{borderBottom: '0 none'}}>\r\n          {getData(visitsData).map((data) => (\r\n            <TableItem data={data} key={data.id} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </AppTableContainer>\r\n  );\r\n};\r\n\r\nexport default VisitsTable;\r\n\r\nVisitsTable.defaultProps = {\r\n  visitsData: [],\r\n};\r\n\r\nVisitsTable.propTypes = {\r\n  visitsData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport VisitsTable from './VisitsTable';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PageVisits = ({pageVisits}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      title={messages['dashboard.analytics.pageVisits']}\r\n      action={messages['common.viewAll']}\r\n    >\r\n      <VisitsTable visitsData={pageVisits} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default PageVisits;\r\n\r\nPageVisits.propTypes = {\r\n  pageVisits: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {grey} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        color: grey[500],\r\n        '& .tableCell': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell className='tableCell'>OrderID</TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        Customer\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        Order Date\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        Payment\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        Status\r\n      </TableCell>\r\n      <TableCell align='right' className='tableCell' />\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n\r\nconst TableItem = ({data}) => {\r\n  const getPaymentTypeColor = () => {\r\n    switch (data.paymentType) {\r\n      case 'COD': {\r\n        return '#F84E4E';\r\n      }\r\n      case 'Prepaid': {\r\n        return '#43C888';\r\n      }\r\n      default: {\r\n        return '#E2A72E';\r\n      }\r\n    }\r\n  };\r\n  const getPaymentStatusColor = () => {\r\n    switch (data.status) {\r\n      case 'In Transit': {\r\n        return '#F84E4E';\r\n      }\r\n      case 'Delivered': {\r\n        return '#43C888';\r\n      }\r\n      default: {\r\n        return '#E2A72E';\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow\r\n      key={data.name}\r\n      sx={{\r\n        '& .tableCell': {\r\n          fontSize: 13,\r\n          padding: '12px 8px',\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <TableCell component='th' scope='row' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            color: (theme) => theme.palette.primary.main,\r\n            borderBottom: (theme) => `1px solid ${theme.palette.primary.main}`,\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          {data.id}\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.customer}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.date}\r\n      </TableCell>\r\n      <TableCell\r\n        align='left'\r\n        className='tableCell'\r\n        style={{color: getPaymentTypeColor()}}\r\n      >\r\n        {data.paymentType}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            color: getPaymentStatusColor(),\r\n            backgroundColor: getPaymentStatusColor() + '44',\r\n            padding: '3px 10px',\r\n            borderRadius: 1,\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          {data.status}\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='right' className='tableCell'>\r\n        <MoreHorizIcon />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport AppTableContainer from '@crema/core/AppTableContainer';\r\n\r\nconst TransactionTable = ({transactionData}) => {\r\n  return (\r\n    <AppTableContainer>\r\n      <Table className='table'>\r\n        <TableHead>\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody>\r\n          {transactionData.map((data) => (\r\n            <TableItem data={data} key={data.id} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </AppTableContainer>\r\n  );\r\n};\r\n\r\nexport default TransactionTable;\r\n\r\nTransactionTable.defaultProps = {\r\n  transactionData: [],\r\n};\r\n\r\nTransactionTable.propTypes = {\r\n  transactionData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport TransactionTable from './TransactionTable';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OrderNTransaction = ({transactionData}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{px: 0}}\r\n      title={messages['dashboard.analytics.ordersTransaction']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <TransactionTable transactionData={transactionData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default OrderNTransaction;\r\n\r\nOrderNTransaction.propTypes = {\r\n  transactionData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box, darken} from '@mui/material';\r\nimport AppLinearProgress from '@crema/core/AppLinearProgress';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {styled} from '@mui/material/styles';\r\nimport MuiAccordion from '@mui/material/Accordion';\r\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\r\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({theme}) => ({\r\n  '&:before': {\r\n    display: 'none',\r\n  },\r\n  '&.Mui-expanded': {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => <MuiAccordionSummary {...props} />)(\r\n  ({theme}) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n      transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiLinearProgress-root': {\r\n      backgroundColor: darken(theme.palette.background.paper, 0.1),\r\n    },\r\n    '&.Mui-expanded': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  }),\r\n);\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({theme}) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n\r\nconst TrafficSource = ({trafficData}) => {\r\n  const [expanded, setExpanded] = React.useState(1);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard title={messages['dashboard.analytics.trafficSource']}>\r\n      {trafficData.map((data) => (\r\n        <Accordion\r\n          key={data.id}\r\n          expanded={expanded === data.id}\r\n          onChange={handleChange(data.id)}\r\n        >\r\n          <AccordionSummary\r\n            expanded={expanded === data.id ? 'selected' : ''}\r\n            aria-controls='panel1bh-content'\r\n            id='panel1bh-header'\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                flex: 1,\r\n                flexDirection: 'column',\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  mb: 2,\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'space-between',\r\n                }}\r\n              >\r\n                <Box>{data.title}</Box>\r\n                <Box\r\n                  component='span'\r\n                  sx={{\r\n                    color: 'text.secondary',\r\n                  }}\r\n                >\r\n                  {data.value}%\r\n                </Box>\r\n              </Box>\r\n              <AppLinearProgress\r\n                value={data.value}\r\n                thickness={10}\r\n                activeColor='#0698EC'\r\n              />\r\n            </Box>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                flex: 1,\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  ml: 2,\r\n                  fontWeight: Fonts.LIGHT,\r\n                }}\r\n              >\r\n                {data.session}\r\n              </Box>\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  ml: 2,\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                Session\r\n              </Box>\r\n            </Box>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TrafficSource;\r\n\r\nTrafficSource.propTypes = {\r\n  trafficData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InfoWidget = ({data}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1, backgroundColor: data.bgColor}}\r\n      contentStyle={{px: 2}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 1,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mb: 4,\r\n            '& img': {\r\n              height: {xs: 60, md: 70, xl: 80},\r\n              width: {xs: 60, md: 70, xl: 80},\r\n            },\r\n          }}\r\n        >\r\n          <img src={data.icon} alt='icon' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              color: 'text.primary',\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 18,\r\n            }}\r\n          >\r\n            {data.count}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            {data.details}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default InfoWidget;\r\n\r\nInfoWidget.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {Grid} from '@mui/material';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\n\r\nimport {onGetAnalyticsData} from '../../../redux/actions';\r\nimport WelcomeCard from './WelcomeCard/index';\r\nimport SalesState from './SalesState';\r\nimport StateCard from './StateCards';\r\nimport VisitorPageView from './VisitorPageView';\r\nimport ActiveVisitors from './ActiveVisitors';\r\nimport TopSelling from './TopSelling';\r\nimport EarningByCountry from './EarningByCountry';\r\nimport TicketsSupport from './TicketsSupport';\r\nimport PageVisits from './PageVisits';\r\nimport OrderNTransaction from './OrderNTransaction';\r\nimport TrafficSource from './TrafficSource';\r\nimport InfoWidget from './InfoWidget';\r\nimport AppAnimate from '@crema/core/AppAnimate';\r\n\r\nconst Analytics = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetAnalyticsData());\r\n  }, [dispatch]);\r\n\r\n  const analyticsData = useSelector(({dashboard}) => dashboard.analyticsData);\r\n\r\n  return (\r\n    <>\r\n      {analyticsData ? (\r\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n          <AppGridContainer>\r\n            <Grid item xs={12} lg={6}>\r\n              <WelcomeCard data={analyticsData.welcomeCard} />\r\n\r\n              <AppGridContainer>\r\n                <Grid item xs={12} sm={6}>\r\n                  <StateCard data={analyticsData.revenueCards[0]} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <StateCard data={analyticsData.revenueCards[1]} />\r\n                </Grid>\r\n              </AppGridContainer>\r\n            </Grid>\r\n            <Grid item xs={12} lg={6}>\r\n              <SalesState\r\n                salesState={analyticsData.salesState}\r\n                chartData={analyticsData.salesChartData}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={8} xl={9}>\r\n              <VisitorPageView data={analyticsData.visitorsPageView} />\r\n            </Grid>\r\n            <Grid item xs={12} md={4} xl={3}>\r\n              <ActiveVisitors data={analyticsData.activeVisitors} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TopSelling products={analyticsData.topSellingProduct} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <EarningByCountry earningData={analyticsData.earningData} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TicketsSupport tickets={analyticsData.tickets} />\r\n\r\n              <AppGridContainer>\r\n                {analyticsData.infoWidgets.map((data, index) => (\r\n                  <Grid item xs={12} md={4} key={'grid-' + index}>\r\n                    <InfoWidget data={data} />\r\n                  </Grid>\r\n                ))}\r\n              </AppGridContainer>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <PageVisits pageVisits={analyticsData.pageVisits} />\r\n            </Grid>\r\n            <Grid item xs={12} md={9}>\r\n              <OrderNTransaction\r\n                transactionData={analyticsData.transactionData}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <TrafficSource trafficData={analyticsData.trafficData} />\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </AppAnimate>\r\n      ) : null}\r\n\r\n      <AppInfoView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"sourceRoot":""}