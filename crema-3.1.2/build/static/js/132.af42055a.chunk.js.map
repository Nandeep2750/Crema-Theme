{"version":3,"sources":["pages/extraPages/ContactUs/ContactUsForm/index.js","pages/extraPages/ContactUs/SendMessage/index.js","@crema/services/db/extraPages/contactUs/index.js","pages/extraPages/ContactUs/Address/AddressWrapper.js","pages/extraPages/ContactUs/Address/index.js","pages/extraPages/ContactUs/SimpleMap.js","pages/extraPages/ContactUs/index.js"],"names":["ContactUsForm","autoComplete","AppGridContainer","spacing","Grid","item","xs","md","AppTextField","name","fullWidth","label","IntlMessages","id","multiline","rows","variant","Button","sx","position","minWidth","color","type","SendMessage","sendMessage","Box","maxWidth","mb","lg","Typography","component","fontSize","fontWeight","Fonts","BOLD","description","contactUsData","AddressWrapper","children","backgroundColor","theme","palette","background","default","borderRadius","display","alignItems","py","px","width","height","paper","primary","main","justifyContent","mr","Address","ml","className","SimpleMapExampleGoogleMap","withGoogleMap","defaultZoom","options","scrollwheel","defaultCenter","lat","lng","SimpleMap","styleName","this","props","containerElement","style","maxHeight","mapElement","Component","validationSchema","yup","fullName","required","email","message","ContactUs","AppAnimate","animation","delay","validateOnChange","validateOnBlur","initialValues","onSubmit","data","setSubmitting","console","log"],"mappings":"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","file":"static/js/132.af42055a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport {Form} from 'formik';\r\nimport AppTextField from '@crema/core/AppFormComponents/AppTextField';\r\n\r\nconst ContactUsForm = () => {\r\n  return (\r\n    <Form autoComplete='off'>\r\n      <AppGridContainer spacing={4}>\r\n        <Grid item xs={12} md={12}>\r\n          <AppTextField\r\n            name='fullName'\r\n            fullWidth\r\n            label={<IntlMessages id='common.fullName' />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <AppTextField\r\n            name='email'\r\n            fullWidth\r\n            label={<IntlMessages id='common.email' />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <AppTextField\r\n            fullWidth\r\n            multiline\r\n            name='message'\r\n            rows='3'\r\n            variant='outlined'\r\n            label={<IntlMessages id='common.messageHere' />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <Button\r\n            sx={{\r\n              position: 'relative',\r\n              minWidth: 100,\r\n            }}\r\n            color='primary'\r\n            variant='contained'\r\n            type='submit'\r\n          >\r\n            <IntlMessages id='common.submit' />\r\n          </Button>\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ContactUsForm;\r\n","import React from 'react';\r\nimport {Box, Typography} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SendMessage = ({sendMessage}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: 500,\r\n        mb: {xs: 5, md: 6, lg: 7},\r\n      }}\r\n    >\r\n      <Typography\r\n        component='h3'\r\n        sx={{\r\n          mb: 2.5,\r\n          fontSize: {xs: 18, md: 20},\r\n          fontWeight: Fonts.BOLD,\r\n        }}\r\n      >\r\n        <IntlMessages id='extraPages.sendUsMessage' />\r\n      </Typography>\r\n      <Typography>{sendMessage.description}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n\r\nSendMessage.propTypes = {\r\n  sendMessage: PropTypes.object,\r\n};\r\n","const contactUsData = {\r\n  sendMessage: {\r\n    description:\r\n      \"The clean and well commented code allows easy customization of the theme. It's designed for describing your app, agency or business.\",\r\n  },\r\n};\r\n\r\nexport default contactUsData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Box} from '@mui/material';\r\n\r\nconst AddressWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: (theme) => theme.palette.background.default,\r\n        borderRadius: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        mb: 5,\r\n        py: 3.75,\r\n        px: 5,\r\n        '& .avatar-icon': {\r\n          width: {xs: 40, md: 48},\r\n          height: {xs: 40, md: 48},\r\n          backgroundColor: (theme) => theme.palette.background.paper,\r\n          color: (theme) => theme.palette.primary.main,\r\n          borderRadius: '50%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          mr: {xs: 3.5, md: 4},\r\n          '& svg': {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddressWrapper;\r\n\r\nAddressWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport {Box, Typography} from '@mui/material';\r\nimport {HiOutlineLocationMarker} from 'react-icons/hi';\r\nimport {FiMail, FiPhone} from 'react-icons/fi';\r\nimport AddressWrapper from './AddressWrapper';\r\n\r\nconst Address = () => {\r\n  return (\r\n    <Box sx={{position: 'relative', ml: {lg: 5}}}>\r\n      <AddressWrapper>\r\n        <Box className='avatar-icon'>\r\n          <HiOutlineLocationMarker />\r\n        </Box>\r\n        <Typography>\r\n          795 Folsom Ave, Suite 600 <br /> San Francisco, CA 94107\r\n        </Typography>\r\n      </AddressWrapper>\r\n      <AddressWrapper>\r\n        <Box className='avatar-icon'>\r\n          <FiPhone />\r\n        </Box>\r\n        <Typography>(120) 456-789-123</Typography>\r\n      </AddressWrapper>\r\n      <AddressWrapper>\r\n        <Box className='avatar-icon'>\r\n          <FiMail />\r\n        </Box>\r\n        <Typography>support@yourmail.com</Typography>\r\n      </AddressWrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import React, {Component} from 'react';\r\nimport {GoogleMap, withGoogleMap} from 'react-google-maps';\r\nimport PropTypes from 'prop-types';\r\nimport '../../../shared/vendors/maps.css';\r\n\r\n/*\r\n * Sample From: https://developers.google.com/maps/documentation/javascript/examples/map-simple\r\n */\r\n\r\nconst SimpleMapExampleGoogleMap = withGoogleMap(() => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    options={{\r\n      scrollwheel: false,\r\n    }}\r\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}\r\n  />\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class SimpleMap extends Component {\r\n  render() {\r\n    let styleName = this.props.styleName;\r\n    if (!styleName) {\r\n      styleName = 'cr-embed-responsive-21by9';\r\n    }\r\n    return (\r\n      <SimpleMapExampleGoogleMap\r\n        containerElement={\r\n          <div\r\n            className={`cr-embed-responsive ${styleName}`}\r\n            style={{maxHeight: 300}}\r\n          />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSimpleMap.propTypes = {\r\n  styleName: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {AppCard} from '../../../@crema';\r\nimport ContactUsForm from './ContactUsForm';\r\nimport AppGridContainer from '../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport SendMessage from './SendMessage';\r\nimport contactUsData from '../../../@crema/services/db/extraPages/contactUs';\r\nimport Address from './Address';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\nimport SimpleMap from './SimpleMap';\r\nimport Box from '@mui/material/Box';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\n\r\nconst validationSchema = yup.object({\r\n  fullName: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  message: yup.string().required(<IntlMessages id='validation.message' />),\r\n});\r\n\r\nconst ContactUs = () => {\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <AppCard>\r\n        <Box sx={{mb: 5, maxHeight: '40%'}}>\r\n          <SimpleMap />\r\n        </Box>\r\n        <SendMessage sendMessage={contactUsData.sendMessage} />\r\n        <AppGridContainer>\r\n          <Grid item xs={12} md={6}>\r\n            <Formik\r\n              validateOnChange={false}\r\n              validateOnBlur={true}\r\n              initialValues={{\r\n                fullName: '',\r\n                email: '',\r\n                message: '',\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(data, {setSubmitting}) => {\r\n                setSubmitting(true);\r\n                console.log('data: ', data);\r\n                //TODO Api Call here to save user info\r\n                setSubmitting(false);\r\n              }}\r\n            >\r\n              <ContactUsForm />\r\n            </Formik>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Address />\r\n          </Grid>\r\n        </AppGridContainer>\r\n      </AppCard>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"],"sourceRoot":""}