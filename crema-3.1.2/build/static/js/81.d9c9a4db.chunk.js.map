{"version":3,"sources":["../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/RadioGroup/RadioGroup.js","../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../node_modules/@mui/material/Radio/RadioButtonIcon.js","../node_modules/@mui/material/Radio/radioClasses.js","../node_modules/@mui/material/Radio/Radio.js","../node_modules/@mui/material/RadioGroup/useRadioGroup.js","pages/muiComponents/inputs/Radio/RadioButtonsGroup.js","pages/muiComponents/inputs/Radio/Direction.js","webpack:///./src/pages/muiComponents/inputs/Radio/Direction.js?c88b","pages/muiComponents/inputs/Radio/Controlled.js","pages/muiComponents/inputs/Radio/StandaloneRadioButtons.js","webpack:///./src/pages/muiComponents/inputs/Radio/StandaloneRadioButtons.js?cdf4","pages/muiComponents/inputs/Radio/Size.js","webpack:///./src/pages/muiComponents/inputs/Radio/Size.js?7afa","pages/muiComponents/inputs/Radio/Color.js","pages/muiComponents/inputs/Radio/LabelPlacement.js","webpack:///./src/pages/muiComponents/inputs/Radio/LabelPlacement.js?3045","pages/muiComponents/inputs/Radio/ShowError.js","webpack:///./src/pages/muiComponents/inputs/Radio/ShowError.js?1fa5","pages/muiComponents/inputs/Radio/Customization.js","pages/muiComponents/inputs/Radio/index.js","webpack:///./src/pages/muiComponents/inputs/Radio/RadioButtonsGroup.js?be5b","webpack:///./src/pages/muiComponents/inputs/Radio/Controlled.js?52d2","webpack:///./src/pages/muiComponents/inputs/Radio/Color.js?245c","webpack:///./src/pages/muiComponents/inputs/Radio/Customization.js?16be"],"names":["RadioGroupContext","React","undefined","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","name","overridesResolver","props","styles","ownerState","root","row","_extends","display","flexDirection","flexWrap","FormGroup","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","RadioGroup","actions","children","defaultValue","nameProp","onChange","valueProp","value","rootRef","useControlled","controlled","default","setValueState","focus","input","current","querySelector","handleRef","useForkRef","useId","Provider","event","target","role","createSvgIcon","d","RadioButtonIconRoot","position","RadioButtonIconBackground","RadioButtonUncheckedIcon","skipSx","transform","RadioButtonIconDot","RadioButtonCheckedIcon","theme","left","transition","transitions","create","easing","easeIn","duration","shortest","checked","easeOut","RadioButtonIcon","fontSize","_jsxs","background","dot","getRadioUtilityClass","radioClasses","RadioRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","capitalize","color","palette","text","secondary","backgroundColor","alpha","action","active","main","hoverOpacity","disabled","defaultCheckedIcon","defaultIcon","Radio","_defaultIcon$props$fo","_defaultCheckedIcon$p","a","b","checkedProp","checkedIcon","icon","onChangeProp","size","radioGroup","createChainedFunction","String","type","RadioButtonsGroup","FormControl","component","FormLabel","FormControlLabel","control","label","RowRadioButtonsGroup","ControlledRadioButtonsGroup","setValue","RadioButtons","selectedValue","setSelectedValue","handleChange","inputProps","SizeRadioButtons","controlProps","item","sx","ColorRadioButtons","pink","FormControlLabelPlacement","labelPlacement","ErrorRadios","error","setError","helperText","setHelperText","onSubmit","preventDefault","m","variant","FormHelperText","Button","mt","mr","BpIcon","borderRadius","width","height","boxShadow","mode","backgroundImage","outline","outlineOffset","BpCheckedIcon","content","BpRadio","bgcolor","disableRipple","CustomizedRadios","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","xs","md","AppComponentCard","source","noScrollbar"],"mappings":"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","file":"static/js/81.d9c9a4db.chunk.js","sourcesContent":["import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    row\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n\n  const handleChange = event => {\n    setValueState(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  const name = useId(nameProp);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: {\n      name,\n      onChange: handleChange,\n      value\n    },\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span')({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon, {\n  skipSx: true\n})({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon, {\n  skipSx: true\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n\n  const ownerState = _extends({}, props, {\n    checked\n  });\n\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary']);\nexport default radioClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\n\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary,\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  } // The value could be a number, the DOM will stringify it anyway.\n\n\n  return String(a) === String(b);\n}\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\n\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\n\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function RadioButtonsGroup() {\r\n  return (\r\n    <FormControl component='fieldset'>\r\n      <FormLabel component='legend'>Gender</FormLabel>\r\n      <RadioGroup\r\n        aria-label='gender'\r\n        defaultValue='female'\r\n        name='radio-buttons-group'\r\n      >\r\n        <FormControlLabel value='female' control={<Radio />} label='Female' />\r\n        <FormControlLabel value='male' control={<Radio />} label='Male' />\r\n        <FormControlLabel value='other' control={<Radio />} label='Other' />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function RowRadioButtonsGroup() {\r\n  return (\r\n    <FormControl component='fieldset'>\r\n      <FormLabel component='legend'>Gender</FormLabel>\r\n      <RadioGroup row aria-label='gender' name='row-radio-buttons-group'>\r\n        <FormControlLabel value='female' control={<Radio />} label='Female' />\r\n        <FormControlLabel value='male' control={<Radio />} label='Male' />\r\n        <FormControlLabel value='other' control={<Radio />} label='Other' />\r\n        <FormControlLabel\r\n          value='disabled'\r\n          disabled\r\n          control={<Radio />}\r\n          label='other'\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Radio from '@mui/material/Radio';\\r\\nimport RadioGroup from '@mui/material/RadioGroup';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport FormLabel from '@mui/material/FormLabel';\\r\\n\\r\\nexport default function RowRadioButtonsGroup() {\\r\\n  return (\\r\\n    <FormControl component='fieldset'>\\r\\n      <FormLabel component='legend'>Gender</FormLabel>\\r\\n      <RadioGroup row aria-label='gender' name='row-radio-buttons-group'>\\r\\n        <FormControlLabel value='female' control={<Radio />} label='Female' />\\r\\n        <FormControlLabel value='male' control={<Radio />} label='Male' />\\r\\n        <FormControlLabel value='other' control={<Radio />} label='Other' />\\r\\n        <FormControlLabel\\r\\n          value='disabled'\\r\\n          disabled\\r\\n          control={<Radio />}\\r\\n          label='other'\\r\\n        />\\r\\n      </RadioGroup>\\r\\n    </FormControl>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function ControlledRadioButtonsGroup() {\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component='fieldset'>\r\n      <FormLabel component='legend'>Gender</FormLabel>\r\n      <RadioGroup\r\n        aria-label='gender'\r\n        name='controlled-radio-buttons-group'\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        <FormControlLabel value='female' control={<Radio />} label='Female' />\r\n        <FormControlLabel value='male' control={<Radio />} label='Male' />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\n\r\nexport default function RadioButtons() {\r\n  const [selectedValue, setSelectedValue] = React.useState('a');\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Radio\r\n        checked={selectedValue === 'a'}\r\n        onChange={handleChange}\r\n        value='a'\r\n        name='radio-buttons'\r\n        inputProps={{'aria-label': 'A'}}\r\n      />\r\n      <Radio\r\n        checked={selectedValue === 'b'}\r\n        onChange={handleChange}\r\n        value='b'\r\n        name='radio-buttons'\r\n        inputProps={{'aria-label': 'B'}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Radio from '@mui/material/Radio';\\r\\n\\r\\nexport default function RadioButtons() {\\r\\n  const [selectedValue, setSelectedValue] = React.useState('a');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setSelectedValue(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Radio\\r\\n        checked={selectedValue === 'a'}\\r\\n        onChange={handleChange}\\r\\n        value='a'\\r\\n        name='radio-buttons'\\r\\n        inputProps={{'aria-label': 'A'}}\\r\\n      />\\r\\n      <Radio\\r\\n        checked={selectedValue === 'b'}\\r\\n        onChange={handleChange}\\r\\n        value='b'\\r\\n        name='radio-buttons'\\r\\n        inputProps={{'aria-label': 'B'}}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\n\r\nexport default function SizeRadioButtons() {\r\n  const [selectedValue, setSelectedValue] = React.useState('a');\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const controlProps = (item) => ({\r\n    checked: selectedValue === item,\r\n    onChange: handleChange,\r\n    value: item,\r\n    name: 'size-radio-button-demo',\r\n    inputProps: {'aria-label': item},\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Radio {...controlProps('a')} size='small' />\r\n      <Radio {...controlProps('b')} />\r\n      <Radio\r\n        {...controlProps('c')}\r\n        sx={{\r\n          '& .MuiSvgIcon-root': {\r\n            fontSize: 28,\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Radio from '@mui/material/Radio';\\r\\n\\r\\nexport default function SizeRadioButtons() {\\r\\n  const [selectedValue, setSelectedValue] = React.useState('a');\\r\\n  const handleChange = (event) => {\\r\\n    setSelectedValue(event.target.value);\\r\\n  };\\r\\n\\r\\n  const controlProps = (item) => ({\\r\\n    checked: selectedValue === item,\\r\\n    onChange: handleChange,\\r\\n    value: item,\\r\\n    name: 'size-radio-button-demo',\\r\\n    inputProps: {'aria-label': item},\\r\\n  });\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Radio {...controlProps('a')} size='small' />\\r\\n      <Radio {...controlProps('b')} />\\r\\n      <Radio\\r\\n        {...controlProps('c')}\\r\\n        sx={{\\r\\n          '& .MuiSvgIcon-root': {\\r\\n            fontSize: 28,\\r\\n          },\\r\\n        }}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {pink} from '@mui/material/colors';\r\nimport Radio from '@mui/material/Radio';\r\n\r\nexport default function ColorRadioButtons() {\r\n  const [selectedValue, setSelectedValue] = React.useState('a');\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const controlProps = (item) => ({\r\n    checked: selectedValue === item,\r\n    onChange: handleChange,\r\n    value: item,\r\n    name: 'color-radio-button-demo',\r\n    inputProps: {'aria-label': item},\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Radio {...controlProps('a')} />\r\n      <Radio {...controlProps('b')} color='secondary' />\r\n      <Radio {...controlProps('c')} color='success' />\r\n      <Radio {...controlProps('d')} color='default' />\r\n      <Radio\r\n        {...controlProps('e')}\r\n        sx={{\r\n          color: pink[800],\r\n          '&.Mui-checked': {\r\n            color: pink[600],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function FormControlLabelPlacement() {\r\n  return (\r\n    <FormControl component='fieldset'>\r\n      <FormLabel component='legend'>labelPlacement</FormLabel>\r\n      <RadioGroup row aria-label='position' name='position' defaultValue='top'>\r\n        <FormControlLabel\r\n          value='top'\r\n          control={<Radio />}\r\n          label='Top'\r\n          labelPlacement='top'\r\n        />\r\n        <FormControlLabel\r\n          value='start'\r\n          control={<Radio />}\r\n          label='Start'\r\n          labelPlacement='start'\r\n        />\r\n        <FormControlLabel\r\n          value='bottom'\r\n          control={<Radio />}\r\n          label='Bottom'\r\n          labelPlacement='bottom'\r\n        />\r\n        <FormControlLabel value='end' control={<Radio />} label='End' />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Radio from '@mui/material/Radio';\\r\\nimport RadioGroup from '@mui/material/RadioGroup';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport FormLabel from '@mui/material/FormLabel';\\r\\n\\r\\nexport default function FormControlLabelPlacement() {\\r\\n  return (\\r\\n    <FormControl component='fieldset'>\\r\\n      <FormLabel component='legend'>labelPlacement</FormLabel>\\r\\n      <RadioGroup row aria-label='position' name='position' defaultValue='top'>\\r\\n        <FormControlLabel\\r\\n          value='top'\\r\\n          control={<Radio />}\\r\\n          label='Top'\\r\\n          labelPlacement='top'\\r\\n        />\\r\\n        <FormControlLabel\\r\\n          value='start'\\r\\n          control={<Radio />}\\r\\n          label='Start'\\r\\n          labelPlacement='start'\\r\\n        />\\r\\n        <FormControlLabel\\r\\n          value='bottom'\\r\\n          control={<Radio />}\\r\\n          label='Bottom'\\r\\n          labelPlacement='bottom'\\r\\n        />\\r\\n        <FormControlLabel value='end' control={<Radio />} label='End' />\\r\\n      </RadioGroup>\\r\\n    </FormControl>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function ErrorRadios() {\r\n  const [value, setValue] = React.useState('');\r\n  const [error, setError] = React.useState(false);\r\n  const [helperText, setHelperText] = React.useState('Choose wisely');\r\n\r\n  const handleRadioChange = (event) => {\r\n    setValue(event.target.value);\r\n    setHelperText(' ');\r\n    setError(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (value === 'best') {\r\n      setHelperText('You got it!');\r\n      setError(false);\r\n    } else if (value === 'worst') {\r\n      setHelperText('Sorry, wrong answer!');\r\n      setError(true);\r\n    } else {\r\n      setHelperText('Please select an option.');\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl\r\n        sx={{m: 3}}\r\n        component='fieldset'\r\n        error={error}\r\n        variant='standard'\r\n      >\r\n        <FormLabel component='legend'>Pop quiz: MUI is...</FormLabel>\r\n        <RadioGroup\r\n          aria-label='quiz'\r\n          name='quiz'\r\n          value={value}\r\n          onChange={handleRadioChange}\r\n        >\r\n          <FormControlLabel\r\n            value='best'\r\n            control={<Radio />}\r\n            label='The best!'\r\n          />\r\n          <FormControlLabel\r\n            value='worst'\r\n            control={<Radio />}\r\n            label='The worst.'\r\n          />\r\n        </RadioGroup>\r\n        <FormHelperText>{helperText}</FormHelperText>\r\n        <Button sx={{mt: 1, mr: 1}} type='submit' variant='outlined'>\r\n          Check Answer\r\n        </Button>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Radio from '@mui/material/Radio';\\r\\nimport RadioGroup from '@mui/material/RadioGroup';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport FormHelperText from '@mui/material/FormHelperText';\\r\\nimport FormLabel from '@mui/material/FormLabel';\\r\\nimport Button from '@mui/material/Button';\\r\\n\\r\\nexport default function ErrorRadios() {\\r\\n  const [value, setValue] = React.useState('');\\r\\n  const [error, setError] = React.useState(false);\\r\\n  const [helperText, setHelperText] = React.useState('Choose wisely');\\r\\n\\r\\n  const handleRadioChange = (event) => {\\r\\n    setValue(event.target.value);\\r\\n    setHelperText(' ');\\r\\n    setError(false);\\r\\n  };\\r\\n\\r\\n  const handleSubmit = (event) => {\\r\\n    event.preventDefault();\\r\\n\\r\\n    if (value === 'best') {\\r\\n      setHelperText('You got it!');\\r\\n      setError(false);\\r\\n    } else if (value === 'worst') {\\r\\n      setHelperText('Sorry, wrong answer!');\\r\\n      setError(true);\\r\\n    } else {\\r\\n      setHelperText('Please select an option.');\\r\\n      setError(true);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <form onSubmit={handleSubmit}>\\r\\n      <FormControl\\r\\n        sx={{m: 3}}\\r\\n        component='fieldset'\\r\\n        error={error}\\r\\n        variant='standard'\\r\\n      >\\r\\n        <FormLabel component='legend'>Pop quiz: MUI is...</FormLabel>\\r\\n        <RadioGroup\\r\\n          aria-label='quiz'\\r\\n          name='quiz'\\r\\n          value={value}\\r\\n          onChange={handleRadioChange}\\r\\n        >\\r\\n          <FormControlLabel\\r\\n            value='best'\\r\\n            control={<Radio />}\\r\\n            label='The best!'\\r\\n          />\\r\\n          <FormControlLabel\\r\\n            value='worst'\\r\\n            control={<Radio />}\\r\\n            label='The worst.'\\r\\n          />\\r\\n        </RadioGroup>\\r\\n        <FormHelperText>{helperText}</FormHelperText>\\r\\n        <Button sx={{mt: 1, mr: 1}} type='submit' variant='outlined'>\\r\\n          Check Answer\\r\\n        </Button>\\r\\n      </FormControl>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nconst BpIcon = styled('span')(({theme}) => ({\r\n  borderRadius: '50%',\r\n  width: 16,\r\n  height: 16,\r\n  boxShadow:\r\n    theme.palette.mode === 'dark'\r\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\r\n      : 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#394b59' : '#f5f8fa',\r\n  backgroundImage:\r\n    theme.palette.mode === 'dark'\r\n      ? 'linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))'\r\n      : 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n  '.Mui-focusVisible &': {\r\n    outline: '2px auto rgba(19,124,189,.6)',\r\n    outlineOffset: 2,\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#30404d' : '#ebf1f5',\r\n  },\r\n  'input:disabled ~ &': {\r\n    boxShadow: 'none',\r\n    background:\r\n      theme.palette.mode === 'dark'\r\n        ? 'rgba(57,75,89,.5)'\r\n        : 'rgba(206,217,224,.5)',\r\n  },\r\n}));\r\n\r\nconst BpCheckedIcon = styled(BpIcon)({\r\n  backgroundColor: '#137cbd',\r\n  backgroundImage:\r\n    'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n  '&:before': {\r\n    display: 'block',\r\n    width: 16,\r\n    height: 16,\r\n    backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n    content: '\"\"',\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor: '#106ba3',\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction BpRadio(props) {\r\n  return (\r\n    <Radio\r\n      sx={{\r\n        '&:hover': {\r\n          bgcolor: 'transparent',\r\n        },\r\n      }}\r\n      disableRipple\r\n      color='default'\r\n      checkedIcon={<BpCheckedIcon />}\r\n      icon={<BpIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function CustomizedRadios() {\r\n  return (\r\n    <FormControl component='fieldset'>\r\n      <FormLabel component='legend'>Gender</FormLabel>\r\n      <RadioGroup\r\n        defaultValue='female'\r\n        aria-label='gender'\r\n        name='customized-radios'\r\n      >\r\n        <FormControlLabel value='female' control={<BpRadio />} label='Female' />\r\n        <FormControlLabel value='male' control={<BpRadio />} label='Male' />\r\n        <FormControlLabel value='other' control={<BpRadio />} label='Other' />\r\n        <FormControlLabel\r\n          value='disabled'\r\n          disabled\r\n          control={<BpRadio />}\r\n          label='(Disabled option)'\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport RadioButtonsGroup from './RadioButtonsGroup';\r\nimport RadioButtonsGroupSource from '!raw-loader!./RadioButtonsGroup';\r\nimport RowRadioButtonsGroup from './Direction';\r\nimport RowRadioButtonsGroupSource from '!raw-loader!./Direction';\r\nimport ControlledRadioButtonsGroup from './Controlled';\r\nimport ControlledRadioButtonsGroupSource from '!raw-loader!./Controlled';\r\nimport RadioButtons from './StandaloneRadioButtons';\r\nimport RadioButtonsSource from '!raw-loader!./StandaloneRadioButtons';\r\nimport SizeRadioButtons from './Size';\r\nimport SizeRadioButtonsSource from '!raw-loader!./Size';\r\nimport ColorRadioButtons from './Color';\r\nimport ColorRadioButtonsSource from '!raw-loader!./Color';\r\nimport FormControlLabelPlacement from './LabelPlacement';\r\nimport FormControlLabelPlacementSource from '!raw-loader!./LabelPlacement';\r\nimport ErrorRadios from './ShowError';\r\nimport ErrorRadiosSource from '!raw-loader!./ShowError';\r\nimport CustomizedRadios from './Customization';\r\nimport CustomizedRadiosSource from '!raw-loader!./Customization';\r\n\r\nconst Radio = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Radio'\r\n        description='Radio buttons allow the user to select one option from a set.'\r\n        refUrl='https://mui.com/components/radio-buttons/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Radio group'\r\n            component={RadioButtonsGroup}\r\n            source={RadioButtonsGroupSource}\r\n            noScrollbar\r\n            description='RadioGroup is a helpful wrapper used to group Radio components that provides an easier API, and proper keyboard accessibility to the group.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Show error'\r\n            component={ErrorRadios}\r\n            source={ErrorRadiosSource}\r\n            noScrollbar\r\n            description='In general, radio buttons should have a value selected by default. If this is not the case, you can display an error if no value is selected when the form is submitted:'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Controlled'\r\n            component={ControlledRadioButtonsGroup}\r\n            source={ControlledRadioButtonsGroupSource}\r\n            noScrollbar\r\n            description='You can control the radio with the value and onChange props:'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Label placement'\r\n            component={FormControlLabelPlacement}\r\n            source={FormControlLabelPlacementSource}\r\n            noScrollbar\r\n            description='You can change the placement of the label with the FormControlLabel component labelPlacement prop:'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Direction'\r\n            component={RowRadioButtonsGroup}\r\n            source={RowRadioButtonsGroupSource}\r\n            noScrollbar\r\n            description='To lay out the buttons horizontally, set the row prop:'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Standalone radio buttons'\r\n            component={RadioButtons}\r\n            source={RadioButtonsSource}\r\n            noScrollbar\r\n            description='Radio can also be used standalone, without the RadioGroup wrapper.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Size'\r\n            component={SizeRadioButtons}\r\n            source={SizeRadioButtonsSource}\r\n            noScrollbar\r\n            description='Use the size prop or customize the font size of the svg icons to change the size of the radios.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Color'\r\n            component={ColorRadioButtons}\r\n            source={ColorRadioButtonsSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Customization'\r\n            component={CustomizedRadios}\r\n            source={CustomizedRadiosSource}\r\n            noScrollbar\r\n            description='Here is an example of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","export default \"import * as React from 'react';\\r\\nimport Radio from '@mui/material/Radio';\\r\\nimport RadioGroup from '@mui/material/RadioGroup';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport FormLabel from '@mui/material/FormLabel';\\r\\n\\r\\nexport default function RadioButtonsGroup() {\\r\\n  return (\\r\\n    <FormControl component='fieldset'>\\r\\n      <FormLabel component='legend'>Gender</FormLabel>\\r\\n      <RadioGroup\\r\\n        aria-label='gender'\\r\\n        defaultValue='female'\\r\\n        name='radio-buttons-group'\\r\\n      >\\r\\n        <FormControlLabel value='female' control={<Radio />} label='Female' />\\r\\n        <FormControlLabel value='male' control={<Radio />} label='Male' />\\r\\n        <FormControlLabel value='other' control={<Radio />} label='Other' />\\r\\n      </RadioGroup>\\r\\n    </FormControl>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Radio from '@mui/material/Radio';\\r\\nimport RadioGroup from '@mui/material/RadioGroup';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport FormLabel from '@mui/material/FormLabel';\\r\\n\\r\\nexport default function ControlledRadioButtonsGroup() {\\r\\n  const [value, setValue] = React.useState('female');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setValue(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <FormControl component='fieldset'>\\r\\n      <FormLabel component='legend'>Gender</FormLabel>\\r\\n      <RadioGroup\\r\\n        aria-label='gender'\\r\\n        name='controlled-radio-buttons-group'\\r\\n        value={value}\\r\\n        onChange={handleChange}\\r\\n      >\\r\\n        <FormControlLabel value='female' control={<Radio />} label='Female' />\\r\\n        <FormControlLabel value='male' control={<Radio />} label='Male' />\\r\\n      </RadioGroup>\\r\\n    </FormControl>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport {pink} from '@mui/material/colors';\\r\\nimport Radio from '@mui/material/Radio';\\r\\n\\r\\nexport default function ColorRadioButtons() {\\r\\n  const [selectedValue, setSelectedValue] = React.useState('a');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setSelectedValue(event.target.value);\\r\\n  };\\r\\n\\r\\n  const controlProps = (item) => ({\\r\\n    checked: selectedValue === item,\\r\\n    onChange: handleChange,\\r\\n    value: item,\\r\\n    name: 'color-radio-button-demo',\\r\\n    inputProps: {'aria-label': item},\\r\\n  });\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Radio {...controlProps('a')} />\\r\\n      <Radio {...controlProps('b')} color='secondary' />\\r\\n      <Radio {...controlProps('c')} color='success' />\\r\\n      <Radio {...controlProps('d')} color='default' />\\r\\n      <Radio\\r\\n        {...controlProps('e')}\\r\\n        sx={{\\r\\n          color: pink[800],\\r\\n          '&.Mui-checked': {\\r\\n            color: pink[600],\\r\\n          },\\r\\n        }}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Radio from '@mui/material/Radio';\\r\\nimport RadioGroup from '@mui/material/RadioGroup';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport FormLabel from '@mui/material/FormLabel';\\r\\n\\r\\nconst BpIcon = styled('span')(({theme}) => ({\\r\\n  borderRadius: '50%',\\r\\n  width: 16,\\r\\n  height: 16,\\r\\n  boxShadow:\\r\\n    theme.palette.mode === 'dark'\\r\\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\\r\\n      : 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\\r\\n  backgroundColor: theme.palette.mode === 'dark' ? '#394b59' : '#f5f8fa',\\r\\n  backgroundImage:\\r\\n    theme.palette.mode === 'dark'\\r\\n      ? 'linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))'\\r\\n      : 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\\r\\n  '.Mui-focusVisible &': {\\r\\n    outline: '2px auto rgba(19,124,189,.6)',\\r\\n    outlineOffset: 2,\\r\\n  },\\r\\n  'input:hover ~ &': {\\r\\n    backgroundColor: theme.palette.mode === 'dark' ? '#30404d' : '#ebf1f5',\\r\\n  },\\r\\n  'input:disabled ~ &': {\\r\\n    boxShadow: 'none',\\r\\n    background:\\r\\n      theme.palette.mode === 'dark'\\r\\n        ? 'rgba(57,75,89,.5)'\\r\\n        : 'rgba(206,217,224,.5)',\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst BpCheckedIcon = styled(BpIcon)({\\r\\n  backgroundColor: '#137cbd',\\r\\n  backgroundImage:\\r\\n    'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\\r\\n  '&:before': {\\r\\n    display: 'block',\\r\\n    width: 16,\\r\\n    height: 16,\\r\\n    backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\\r\\n    content: '\\\"\\\"',\\r\\n  },\\r\\n  'input:hover ~ &': {\\r\\n    backgroundColor: '#106ba3',\\r\\n  },\\r\\n});\\r\\n\\r\\n// Inspired by blueprintjs\\r\\nfunction BpRadio(props) {\\r\\n  return (\\r\\n    <Radio\\r\\n      sx={{\\r\\n        '&:hover': {\\r\\n          bgcolor: 'transparent',\\r\\n        },\\r\\n      }}\\r\\n      disableRipple\\r\\n      color='default'\\r\\n      checkedIcon={<BpCheckedIcon />}\\r\\n      icon={<BpIcon />}\\r\\n      {...props}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default function CustomizedRadios() {\\r\\n  return (\\r\\n    <FormControl component='fieldset'>\\r\\n      <FormLabel component='legend'>Gender</FormLabel>\\r\\n      <RadioGroup\\r\\n        defaultValue='female'\\r\\n        aria-label='gender'\\r\\n        name='customized-radios'\\r\\n      >\\r\\n        <FormControlLabel value='female' control={<BpRadio />} label='Female' />\\r\\n        <FormControlLabel value='male' control={<BpRadio />} label='Male' />\\r\\n        <FormControlLabel value='other' control={<BpRadio />} label='Other' />\\r\\n        <FormControlLabel\\r\\n          value='disabled'\\r\\n          disabled\\r\\n          control={<BpRadio />}\\r\\n          label='(Disabled option)'\\r\\n        />\\r\\n      </RadioGroup>\\r\\n    </FormControl>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}