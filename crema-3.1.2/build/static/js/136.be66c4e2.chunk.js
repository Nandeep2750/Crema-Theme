(this.webpackJsonphister=this.webpackJsonphister||[]).push([[136],{2295:function(e,r,n){"use strict";n.r(r);var a=n(2),t=n(72),l=n(60),i=n(1458),o=n(38),c=n(1650),s=n(1652),b=n(1566),d=n(1469),m=n(1651),p=n(1649),g=n(604),h=n(1);function u(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var T=[u("Frozen yoghurt",159,6,24,4),u("Ice cream sandwich",237,9,37,4.3),u("Eclair",262,16,24,6),u("Cupcake",305,3.7,67,4.3),u("Gingerbread",356,16,49,3.9)];function j(){return Object(h.jsx)(d.a,{component:g.a,children:Object(h.jsxs)(c.a,{sx:{minWidth:650},"aria-label":"simple table",children:[Object(h.jsx)(m.a,{children:Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{children:"Dessert (100g serving)"}),Object(h.jsx)(b.a,{align:"right",children:"Calories"}),Object(h.jsx)(b.a,{align:"right",children:"Fat\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Carbs\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Protein\xa0(g)"})]})}),Object(h.jsx)(s.a,{children:T.map((function(e){return Object(h.jsxs)(p.a,{sx:{"&:last-child td, &:last-child th":{border:0}},children:[Object(h.jsx)(b.a,{component:"th",scope:"row",children:e.name}),Object(h.jsx)(b.a,{align:"right",children:e.calories}),Object(h.jsx)(b.a,{align:"right",children:e.fat}),Object(h.jsx)(b.a,{align:"right",children:e.carbs}),Object(h.jsx)(b.a,{align:"right",children:e.protein})]},e.name)}))})]})})}var C=n(1599),w=[{field:"id",headerName:"ID",width:70},{field:"firstName",headerName:"First name",width:130},{field:"lastName",headerName:"Last name",width:130},{field:"age",headerName:"Age",type:"number",width:90},{field:"fullName",headerName:"Full name",description:"This column has a value getter and is not sortable.",sortable:!1,width:160,valueGetter:function(e){return"".concat(e.getValue(e.id,"firstName")||""," ").concat(e.getValue(e.id,"lastName")||"")}}],x=[{id:1,lastName:"Snow",firstName:"Jon",age:35},{id:2,lastName:"Lannister",firstName:"Cersei",age:42},{id:3,lastName:"Lannister",firstName:"Jaime",age:45},{id:4,lastName:"Stark",firstName:"Arya",age:16},{id:5,lastName:"Targaryen",firstName:"Daenerys",age:null},{id:6,lastName:"Melisandre",firstName:null,age:150},{id:7,lastName:"Clifford",firstName:"Ferrara",age:44},{id:8,lastName:"Frances",firstName:"Rossini",age:36},{id:9,lastName:"Roxie",firstName:"Harvey",age:65}];function f(){return Object(h.jsx)("div",{style:{height:400,width:"100%"},children:Object(h.jsx)(C.a,{rows:x,columns:w,pageSize:5,rowsPerPageOptions:[5],checkboxSelection:!0})})}function y(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var P=[y("Frozen yoghurt",159,6,24,4),y("Ice cream sandwich",237,9,37,4.3),y("Eclair",262,16,24,6),y("Cupcake",305,3.7,67,4.3),y("Gingerbread",356,16,49,3.9)];function O(){return Object(h.jsx)(d.a,{component:g.a,children:Object(h.jsxs)(c.a,{sx:{minWidth:650},size:"small","aria-label":"a dense table",children:[Object(h.jsx)(m.a,{children:Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{children:"Dessert (100g serving)"}),Object(h.jsx)(b.a,{align:"right",children:"Calories"}),Object(h.jsx)(b.a,{align:"right",children:"Fat\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Carbs\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Protein\xa0(g)"})]})}),Object(h.jsx)(s.a,{children:P.map((function(e){return Object(h.jsxs)(p.a,{sx:{"&:last-child td, &:last-child th":{border:0}},children:[Object(h.jsx)(b.a,{component:"th",scope:"row",children:e.name}),Object(h.jsx)(b.a,{align:"right",children:e.calories}),Object(h.jsx)(b.a,{align:"right",children:e.fat}),Object(h.jsx)(b.a,{align:"right",children:e.carbs}),Object(h.jsx)(b.a,{align:"right",children:e.protein})]},e.name)}))})]})})}var R=n(14),S=n(5),v=n(145),D=n(206),B=n(1468),k=n(2373),I=n(1591),N=n(223),F=n(1624),A=n(718),H=n(1451),z=n(1585),W=n(1559),L=n(1625),q=n.n(L),E=n(2045),U=n.n(E),G=n(1799);function M(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var K=[M("Cupcake",305,3.7,67,4.3),M("Donut",452,25,51,4.9),M("Eclair",262,16,24,6),M("Frozen yoghurt",159,6,24,4),M("Gingerbread",356,16,49,3.9),M("Honeycomb",408,3.2,87,6.5),M("Ice cream sandwich",237,9,37,4.3),M("Jelly Bean",375,0,94,0),M("KitKat",518,26,65,7),M("Lollipop",392,.2,98,0),M("Marshmallow",318,0,81,2),M("Nougat",360,19,9,37),M("Oreo",437,18,63,4)];function J(e,r,n){return r[n]<e[n]?-1:r[n]>e[n]?1:0}function $(e,r){return"desc"===e?function(e,n){return J(e,n,r)}:function(e,n){return-J(e,n,r)}}function X(e,r){var n=e.map((function(e,r){return[e,r]}));return n.sort((function(e,n){var a=r(e[0],n[0]);return 0!==a?a:e[1]-n[1]})),n.map((function(e){return e[0]}))}var V=[{id:"name",numeric:!1,disablePadding:!0,label:"Dessert\xa0(100g serving)"},{id:"calories",numeric:!0,disablePadding:!1,label:"Calories"},{id:"fat",numeric:!0,disablePadding:!1,label:"Fat\xa0(g)"},{id:"carbs",numeric:!0,disablePadding:!1,label:"Carbs\xa0(g)"},{id:"protein",numeric:!0,disablePadding:!1,label:"Protein\xa0(g)"}];function _(e){var r=e.onSelectAllClick,n=e.order,a=e.orderBy,t=e.numSelected,l=e.rowCount,i=e.onRequestSort;return Object(h.jsx)(m.a,{children:Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{padding:"checkbox",children:Object(h.jsx)(F.a,{color:"primary",indeterminate:t>0&&t<l,checked:l>0&&t===l,onChange:r,inputProps:{"aria-label":"select all desserts"}})}),V.map((function(e){return Object(h.jsx)(b.a,{align:e.numeric?"right":"left",padding:e.disablePadding?"none":"normal",sortDirection:a===e.id&&n,children:Object(h.jsxs)(k.a,{active:a===e.id,direction:a===e.id?n:"asc",onClick:(r=e.id,function(e){i(e,r)}),children:[e.label,a===e.id?Object(h.jsx)(D.a,{component:"span",sx:G.a,children:"desc"===n?"sorted descending":"sorted ascending"}):null]})},e.id);var r}))]})})}var Q=function(e){var r=e.numSelected;return Object(h.jsxs)(I.a,{sx:Object(S.a)({pl:{sm:2},pr:{xs:1,sm:1}},r>0&&{bgcolor:function(e){return Object(v.a)(e.palette.primary.main,e.palette.action.activatedOpacity)}}),children:[r>0?Object(h.jsxs)(N.a,{sx:{flex:"1 1 100%"},color:"inherit",variant:"subtitle1",component:"div",children:[r," selected"]}):Object(h.jsx)(N.a,{sx:{flex:"1 1 100%"},variant:"h6",id:"tableTitle",component:"div",children:"Nutrition"}),r>0?Object(h.jsx)(H.a,{title:"Delete",children:Object(h.jsx)(A.a,{children:Object(h.jsx)(q.a,{})})}):Object(h.jsx)(H.a,{title:"Filter list",children:Object(h.jsx)(A.a,{children:Object(h.jsx)(U.a,{})})})]})};function Y(){var e=a.useState("asc"),r=Object(R.a)(e,2),n=r[0],t=r[1],l=a.useState("calories"),i=Object(R.a)(l,2),o=i[0],m=i[1],u=a.useState([]),T=Object(R.a)(u,2),j=T[0],C=T[1],w=a.useState(0),x=Object(R.a)(w,2),f=x[0],y=x[1],P=a.useState(!1),O=Object(R.a)(P,2),S=O[0],v=O[1],k=a.useState(5),I=Object(R.a)(k,2),N=I[0],A=I[1],H=f>0?Math.max(0,(1+f)*N-K.length):0;return Object(h.jsxs)(D.a,{sx:{width:"100%"},children:[Object(h.jsxs)(g.a,{sx:{width:"100%",mb:2},children:[Object(h.jsx)(Q,{numSelected:j.length}),Object(h.jsx)(d.a,{children:Object(h.jsxs)(c.a,{sx:{minWidth:750},"aria-labelledby":"tableTitle",size:S?"small":"medium",children:[Object(h.jsx)(_,{numSelected:j.length,order:n,orderBy:o,onSelectAllClick:function(e){if(e.target.checked){var r=K.map((function(e){return e.name}));C(r)}else C([])},onRequestSort:function(e,r){t(o===r&&"asc"===n?"desc":"asc"),m(r)},rowCount:K.length}),Object(h.jsxs)(s.a,{children:[X(K,$(n,o)).slice(f*N,f*N+N).map((function(e,r){var n,a=(n=e.name,-1!==j.indexOf(n)),t="enhanced-table-checkbox-".concat(r);return Object(h.jsxs)(p.a,{hover:!0,onClick:function(r){return function(e,r){var n=j.indexOf(r),a=[];-1===n?a=a.concat(j,r):0===n?a=a.concat(j.slice(1)):n===j.length-1?a=a.concat(j.slice(0,-1)):n>0&&(a=a.concat(j.slice(0,n),j.slice(n+1))),C(a)}(0,e.name)},role:"checkbox","aria-checked":a,tabIndex:-1,selected:a,children:[Object(h.jsx)(b.a,{padding:"checkbox",children:Object(h.jsx)(F.a,{color:"primary",checked:a,inputProps:{"aria-labelledby":t}})}),Object(h.jsx)(b.a,{component:"th",id:t,scope:"row",padding:"none",children:e.name}),Object(h.jsx)(b.a,{align:"right",children:e.calories}),Object(h.jsx)(b.a,{align:"right",children:e.fat}),Object(h.jsx)(b.a,{align:"right",children:e.carbs}),Object(h.jsx)(b.a,{align:"right",children:e.protein})]},e.name)})),H>0&&Object(h.jsx)(p.a,{style:{height:(S?33:53)*H},children:Object(h.jsx)(b.a,{colSpan:6})})]})]})}),Object(h.jsx)(B.a,{rowsPerPageOptions:[5,10,25],component:"div",count:K.length,rowsPerPage:N,page:f,onPageChange:function(e,r){y(r)},onRowsPerPageChange:function(e){A(parseInt(e.target.value,10)),y(0)}})]}),Object(h.jsx)(z.a,{control:Object(h.jsx)(W.a,{checked:S,onChange:function(e){v(e.target.checked)}}),label:"Dense padding"})]})}var Z=[{id:"name",label:"Name",minWidth:170},{id:"code",label:"ISO\xa0Code",minWidth:100},{id:"population",label:"Population",minWidth:170,align:"right",format:function(e){return e.toLocaleString("en-US")}},{id:"size",label:"Size\xa0(km\xb2)",minWidth:170,align:"right",format:function(e){return e.toLocaleString("en-US")}},{id:"density",label:"Density",minWidth:170,align:"right",format:function(e){return e.toFixed(2)}}];function ee(e,r,n,a){return{name:e,code:r,population:n,size:a,density:n/a}}var re=[ee("India","IN",1324171354,3287263),ee("China","CN",1403500365,9596961),ee("Italy","IT",60483973,301340),ee("United States","US",327167434,9833520),ee("Canada","CA",37602103,9984670),ee("Australia","AU",25475400,7692024),ee("Germany","DE",83019200,357578),ee("Ireland","IE",4857e3,70273),ee("Mexico","MX",126577691,1972550),ee("Japan","JP",126317e3,377973),ee("France","FR",67022e3,640679),ee("United Kingdom","GB",67545757,242495),ee("Russia","RU",146793744,17098246),ee("Nigeria","NG",200962417,923768),ee("Brazil","BR",210147125,8515767)];function ne(){var e=a.useState(0),r=Object(R.a)(e,2),n=r[0],t=r[1],l=a.useState(10),i=Object(R.a)(l,2),o=i[0],u=i[1];return Object(h.jsxs)(g.a,{sx:{width:"100%"},children:[Object(h.jsx)(d.a,{sx:{maxHeight:440},children:Object(h.jsxs)(c.a,{stickyHeader:!0,"aria-label":"sticky table",children:[Object(h.jsxs)(m.a,{children:[Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{align:"center",colSpan:2,children:"Country"}),Object(h.jsx)(b.a,{align:"center",colSpan:3,children:"Details"})]}),Object(h.jsx)(p.a,{children:Z.map((function(e){return Object(h.jsx)(b.a,{align:e.align,style:{top:57,minWidth:e.minWidth},children:e.label},e.id)}))})]}),Object(h.jsx)(s.a,{children:re.slice(n*o,n*o+o).map((function(e){return Object(h.jsx)(p.a,{hover:!0,role:"checkbox",tabIndex:-1,children:Z.map((function(r){var n=e[r.id];return Object(h.jsx)(b.a,{align:r.align,children:r.format&&"number"===typeof n?r.format(n):n},r.id)}))},e.code)}))})]})}),Object(h.jsx)(B.a,{rowsPerPageOptions:[10,25,100],component:"div",count:re.length,rowsPerPage:o,page:n,onPageChange:function(e,r){t(r)},onRowsPerPageChange:function(e){u(+e.target.value),t(0)}})]})}var ae=n(79),te=n(2387),le=n(2047),ie=n.n(le),oe=n(1693),ce=n.n(oe),se=n(1692),be=n.n(se),de=n(2046),me=n.n(de);function pe(e){var r=Object(ae.a)(),n=e.count,a=e.page,t=e.rowsPerPage,l=e.onPageChange;return Object(h.jsxs)(D.a,{sx:{flexShrink:0,ml:2.5},children:[Object(h.jsx)(A.a,{onClick:function(e){l(e,0)},disabled:0===a,"aria-label":"first page",children:"rtl"===r.direction?Object(h.jsx)(me.a,{}):Object(h.jsx)(ie.a,{})}),Object(h.jsx)(A.a,{onClick:function(e){l(e,a-1)},disabled:0===a,"aria-label":"previous page",children:"rtl"===r.direction?Object(h.jsx)(be.a,{}):Object(h.jsx)(ce.a,{})}),Object(h.jsx)(A.a,{onClick:function(e){l(e,a+1)},disabled:a>=Math.ceil(n/t)-1,"aria-label":"next page",children:"rtl"===r.direction?Object(h.jsx)(ce.a,{}):Object(h.jsx)(be.a,{})}),Object(h.jsx)(A.a,{onClick:function(e){l(e,Math.max(0,Math.ceil(n/t)-1))},disabled:a>=Math.ceil(n/t)-1,"aria-label":"last page",children:"rtl"===r.direction?Object(h.jsx)(ie.a,{}):Object(h.jsx)(me.a,{})})]})}function ge(e,r,n){return{name:e,calories:r,fat:n}}var he=[ge("Cupcake",305,3.7),ge("Donut",452,25),ge("Eclair",262,16),ge("Frozen yoghurt",159,6),ge("Gingerbread",356,16),ge("Honeycomb",408,3.2),ge("Ice cream sandwich",237,9),ge("Jelly Bean",375,0),ge("KitKat",518,26),ge("Lollipop",392,.2),ge("Marshmallow",318,0),ge("Nougat",360,19),ge("Oreo",437,18)].sort((function(e,r){return e.calories<r.calories?-1:1}));function ue(){var e=a.useState(0),r=Object(R.a)(e,2),n=r[0],t=r[1],l=a.useState(5),i=Object(R.a)(l,2),o=i[0],m=i[1],u=n>0?Math.max(0,(1+n)*o-he.length):0;return Object(h.jsx)(d.a,{component:g.a,children:Object(h.jsxs)(c.a,{sx:{minWidth:500},"aria-label":"custom pagination table",children:[Object(h.jsxs)(s.a,{children:[(o>0?he.slice(n*o,n*o+o):he).map((function(e){return Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{component:"th",scope:"row",children:e.name}),Object(h.jsx)(b.a,{style:{width:160},align:"right",children:e.calories}),Object(h.jsx)(b.a,{style:{width:160},align:"right",children:e.fat})]},e.name)})),u>0&&Object(h.jsx)(p.a,{style:{height:53*u},children:Object(h.jsx)(b.a,{colSpan:6})})]}),Object(h.jsx)(te.a,{children:Object(h.jsx)(p.a,{children:Object(h.jsx)(B.a,{rowsPerPageOptions:[5,10,25,{label:"All",value:-1}],colSpan:3,count:he.length,rowsPerPage:o,page:n,SelectProps:{inputProps:{"aria-label":"rows per page"},native:!0},onPageChange:function(e,r){t(r)},onRowsPerPageChange:function(e){m(parseInt(e.target.value,10)),t(0)},ActionsComponent:pe})})})]})})}var Te=[{id:"name",label:"Name",minWidth:170},{id:"code",label:"ISO\xa0Code",minWidth:100},{id:"population",label:"Population",minWidth:170,align:"right",format:function(e){return e.toLocaleString("en-US")}},{id:"size",label:"Size\xa0(km\xb2)",minWidth:170,align:"right",format:function(e){return e.toLocaleString("en-US")}},{id:"density",label:"Density",minWidth:170,align:"right",format:function(e){return e.toFixed(2)}}];function je(e,r,n,a){return{name:e,code:r,population:n,size:a,density:n/a}}var Ce=[je("India","IN",1324171354,3287263),je("China","CN",1403500365,9596961),je("Italy","IT",60483973,301340),je("United States","US",327167434,9833520),je("Canada","CA",37602103,9984670),je("Australia","AU",25475400,7692024),je("Germany","DE",83019200,357578),je("Ireland","IE",4857e3,70273),je("Mexico","MX",126577691,1972550),je("Japan","JP",126317e3,377973),je("France","FR",67022e3,640679),je("United Kingdom","GB",67545757,242495),je("Russia","RU",146793744,17098246),je("Nigeria","NG",200962417,923768),je("Brazil","BR",210147125,8515767)];function we(){var e=a.useState(0),r=Object(R.a)(e,2),n=r[0],t=r[1],l=a.useState(10),i=Object(R.a)(l,2),o=i[0],u=i[1];return Object(h.jsxs)(g.a,{sx:{width:"100%",overflow:"hidden"},children:[Object(h.jsx)(d.a,{sx:{maxHeight:440},children:Object(h.jsxs)(c.a,{stickyHeader:!0,"aria-label":"sticky table",children:[Object(h.jsx)(m.a,{children:Object(h.jsx)(p.a,{children:Te.map((function(e){return Object(h.jsx)(b.a,{align:e.align,style:{minWidth:e.minWidth},children:e.label},e.id)}))})}),Object(h.jsx)(s.a,{children:Ce.slice(n*o,n*o+o).map((function(e){return Object(h.jsx)(p.a,{hover:!0,role:"checkbox",tabIndex:-1,children:Te.map((function(r){var n=e[r.id];return Object(h.jsx)(b.a,{align:r.align,children:r.format&&"number"===typeof n?r.format(n):n},r.id)}))},e.code)}))})]})}),Object(h.jsx)(B.a,{rowsPerPageOptions:[10,25,100],component:"div",count:Ce.length,rowsPerPage:o,page:n,onPageChange:function(e,r){t(r)},onRowsPerPageChange:function(e){u(+e.target.value),t(0)}})]})}var xe=n(6),fe=n(17),ye=n(711),Pe=Object(fe.a)(b.a)((function(e){var r,n=e.theme;return r={},Object(xe.a)(r,"&.".concat(ye.a.head),{backgroundColor:n.palette.common.black,color:n.palette.common.white}),Object(xe.a)(r,"&.".concat(ye.a.body),{fontSize:14}),r})),Oe=Object(fe.a)(p.a)((function(e){return{"&:nth-of-type(odd)":{backgroundColor:e.theme.palette.action.hover},"&:last-child td, &:last-child th":{border:0}}}));function Re(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var Se=[Re("Frozen yoghurt",159,6,24,4),Re("Ice cream sandwich",237,9,37,4.3),Re("Eclair",262,16,24,6),Re("Cupcake",305,3.7,67,4.3),Re("Gingerbread",356,16,49,3.9)];function ve(){return Object(h.jsx)(d.a,{component:g.a,children:Object(h.jsxs)(c.a,{sx:{minWidth:700},"aria-label":"customized table",children:[Object(h.jsx)(m.a,{children:Object(h.jsxs)(p.a,{children:[Object(h.jsx)(Pe,{children:"Dessert (100g serving)"}),Object(h.jsx)(Pe,{align:"right",children:"Calories"}),Object(h.jsx)(Pe,{align:"right",children:"Fat\xa0(g)"}),Object(h.jsx)(Pe,{align:"right",children:"Carbs\xa0(g)"}),Object(h.jsx)(Pe,{align:"right",children:"Protein\xa0(g)"})]})}),Object(h.jsx)(s.a,{children:Se.map((function(e){return Object(h.jsxs)(Oe,{children:[Object(h.jsx)(Pe,{component:"th",scope:"row",children:e.name}),Object(h.jsx)(Pe,{align:"right",children:e.calories}),Object(h.jsx)(Pe,{align:"right",children:e.fat}),Object(h.jsx)(Pe,{align:"right",children:e.carbs}),Object(h.jsx)(Pe,{align:"right",children:e.protein})]},e.name)}))})]})})}var De=n(1576),Be=n(1732),ke=n.n(Be),Ie=n(1724),Ne=n.n(Ie);function Fe(e,r,n,a,t,l){return{name:e,calories:r,fat:n,carbs:a,protein:t,price:l,history:[{date:"2020-01-05",customerId:"11091700",amount:3},{date:"2020-01-02",customerId:"Anonymous",amount:1}]}}function Ae(e){var r=e.row,n=a.useState(!1),t=Object(R.a)(n,2),l=t[0],i=t[1];return Object(h.jsxs)(a.Fragment,{children:[Object(h.jsxs)(p.a,{sx:{"& > *":{borderBottom:"unset"}},children:[Object(h.jsx)(b.a,{children:Object(h.jsx)(A.a,{"aria-label":"expand row",size:"small",onClick:function(){return i(!l)},children:l?Object(h.jsx)(Ne.a,{}):Object(h.jsx)(ke.a,{})})}),Object(h.jsx)(b.a,{component:"th",scope:"row",children:r.name}),Object(h.jsx)(b.a,{align:"right",children:r.calories}),Object(h.jsx)(b.a,{align:"right",children:r.fat}),Object(h.jsx)(b.a,{align:"right",children:r.carbs}),Object(h.jsx)(b.a,{align:"right",children:r.protein})]}),Object(h.jsx)(p.a,{children:Object(h.jsx)(b.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6,children:Object(h.jsx)(De.a,{in:l,timeout:"auto",unmountOnExit:!0,children:Object(h.jsxs)(D.a,{sx:{margin:1},children:[Object(h.jsx)(N.a,{variant:"h6",gutterBottom:!0,component:"div",children:"History"}),Object(h.jsxs)(c.a,{size:"small","aria-label":"purchases",children:[Object(h.jsx)(m.a,{children:Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{children:"Date"}),Object(h.jsx)(b.a,{children:"Customer"}),Object(h.jsx)(b.a,{align:"right",children:"Amount"}),Object(h.jsx)(b.a,{align:"right",children:"Total price ($)"})]})}),Object(h.jsx)(s.a,{children:r.history.map((function(e){return Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{component:"th",scope:"row",children:e.date}),Object(h.jsx)(b.a,{children:e.customerId}),Object(h.jsx)(b.a,{align:"right",children:e.amount}),Object(h.jsx)(b.a,{align:"right",children:Math.round(e.amount*r.price*100)/100})]},e.date)}))})]})]})})})})]})}var He=[Fe("Frozen yoghurt",159,6,24,4,3.99),Fe("Ice cream sandwich",237,9,37,4.3,4.99),Fe("Eclair",262,16,24,6,3.79),Fe("Cupcake",305,3.7,67,4.3,2.5),Fe("Gingerbread",356,16,49,3.9,1.5)];function ze(){return Object(h.jsx)(d.a,{component:g.a,children:Object(h.jsxs)(c.a,{"aria-label":"collapsible table",children:[Object(h.jsx)(m.a,{children:Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{}),Object(h.jsx)(b.a,{children:"Dessert (100g serving)"}),Object(h.jsx)(b.a,{align:"right",children:"Calories"}),Object(h.jsx)(b.a,{align:"right",children:"Fat\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Carbs\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Protein\xa0(g)"})]})}),Object(h.jsx)(s.a,{children:He.map((function(e){return Object(h.jsx)(Ae,{row:e},e.name)}))})]})})}function We(e){return"".concat(e.toFixed(2))}function Le(e,r,n){var a=function(e,r){return e*r}(r,n);return{desc:e,qty:r,unit:n,price:a}}var qe=[Le("Paperclips (Box)",100,1.15),Le("Paper (Case)",10,45.99),Le("Waste Basket",2,17.99)],Ee=qe.map((function(e){return e.price})).reduce((function(e,r){return e+r}),0),Ue=.07*Ee,Ge=Ue+Ee;function Me(){return Object(h.jsx)(d.a,{component:g.a,children:Object(h.jsxs)(c.a,{sx:{minWidth:700},"aria-label":"spanning table",children:[Object(h.jsxs)(m.a,{children:[Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{align:"center",colSpan:3,children:"Details"}),Object(h.jsx)(b.a,{align:"right",children:"Price"})]}),Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{children:"Desc"}),Object(h.jsx)(b.a,{align:"right",children:"Qty."}),Object(h.jsx)(b.a,{align:"right",children:"Unit"}),Object(h.jsx)(b.a,{align:"right",children:"Sum"})]})]}),Object(h.jsxs)(s.a,{children:[qe.map((function(e){return Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{children:e.desc}),Object(h.jsx)(b.a,{align:"right",children:e.qty}),Object(h.jsx)(b.a,{align:"right",children:e.unit}),Object(h.jsx)(b.a,{align:"right",children:We(e.price)})]},e.desc)})),Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{rowSpan:3}),Object(h.jsx)(b.a,{colSpan:2,children:"Subtotal"}),Object(h.jsx)(b.a,{align:"right",children:We(Ee)})]}),Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{children:"Tax"}),Object(h.jsx)(b.a,{align:"right",children:"".concat((.07*100).toFixed(0)," %")}),Object(h.jsx)(b.a,{align:"right",children:We(Ue)})]}),Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{colSpan:2,children:"Total"}),Object(h.jsx)(b.a,{align:"right",children:We(Ge)})]})]})]})})}function Ke(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var Je=[Ke("Frozen yoghurt",159,6,24,4),Ke("Ice cream sandwich",237,9,37,4.3),Ke("Eclair",262,16,24,6)];function $e(){return Object(h.jsx)(d.a,{component:g.a,children:Object(h.jsxs)(c.a,{sx:{minWidth:650},"aria-label":"caption table",children:[Object(h.jsx)("caption",{children:"A basic table example with a caption"}),Object(h.jsx)(m.a,{children:Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{children:"Dessert (100g serving)"}),Object(h.jsx)(b.a,{align:"right",children:"Calories"}),Object(h.jsx)(b.a,{align:"right",children:"Fat\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Carbs\xa0(g)"}),Object(h.jsx)(b.a,{align:"right",children:"Protein\xa0(g)"})]})}),Object(h.jsx)(s.a,{children:Je.map((function(e){return Object(h.jsxs)(p.a,{children:[Object(h.jsx)(b.a,{component:"th",scope:"row",children:e.name}),Object(h.jsx)(b.a,{align:"right",children:e.calories}),Object(h.jsx)(b.a,{align:"right",children:e.fat}),Object(h.jsx)(b.a,{align:"right",children:e.carbs}),Object(h.jsx)(b.a,{align:"right",children:e.protein})]},e.name)}))})]})})}r.default=function(){return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(t.a,{title:"Table",description:"Tables display sets of data. They can be fully customized.",refUrl:"https://mui.com/components/tables/"}),Object(h.jsxs)(l.a,{children:[Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Basic table",component:j,source:"import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function BasicTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 650}} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align='right'>Calories</TableCell>\r\n            <TableCell align='right'>Fat&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{'&:last-child td, &:last-child th': {border: 0}}}\r\n            >\r\n              <TableCell component='th' scope='row'>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align='right'>{row.calories}</TableCell>\r\n              <TableCell align='right'>{row.fat}</TableCell>\r\n              <TableCell align='right'>{row.carbs}</TableCell>\r\n              <TableCell align='right'>{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"A simple example with no frills."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Data Table",component:f,source:"import * as React from 'react';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\n\r\nconst columns = [\r\n  {field: 'id', headerName: 'ID', width: 70},\r\n  {field: 'firstName', headerName: 'First name', width: 130},\r\n  {field: 'lastName', headerName: 'Last name', width: 130},\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 90,\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params) =>\r\n      `${params.getValue(params.id, 'firstName') || ''} ${\r\n        params.getValue(params.id, 'lastName') || ''\r\n      }`,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  {id: 1, lastName: 'Snow', firstName: 'Jon', age: 35},\r\n  {id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42},\r\n  {id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45},\r\n  {id: 4, lastName: 'Stark', firstName: 'Arya', age: 16},\r\n  {id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null},\r\n  {id: 6, lastName: 'Melisandre', firstName: null, age: 150},\r\n  {id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44},\r\n  {id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36},\r\n  {id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65},\r\n];\r\n\r\nexport default function DataTable() {\r\n  return (\r\n    <div style={{height: 400, width: '100%'}}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n        checkboxSelection\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"The Table component has a close mapping to the native <table> elements. This constraint makes building rich data tables challenging."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Dense Table",component:O,source:"import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 650}} size='small' aria-label='a dense table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align='right'>Calories</TableCell>\r\n            <TableCell align='right'>Fat&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{'&:last-child td, &:last-child th': {border: 0}}}\r\n            >\r\n              <TableCell component='th' scope='row'>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align='right'>{row.calories}</TableCell>\r\n              <TableCell align='right'>{row.fat}</TableCell>\r\n              <TableCell align='right'>{row.carbs}</TableCell>\r\n              <TableCell align='right'>{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"A simple example of a dense table with no frills."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Enhanced Table",component:Y,source:"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {alpha} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport {visuallyHidden} from '@mui/utils';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Dessert\xa0(100g serving)',\r\n  },\r\n  {\r\n    id: 'calories',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Calories',\r\n  },\r\n  {\r\n    id: 'fat',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Fat\xa0(g)',\r\n  },\r\n  {\r\n    id: 'carbs',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Carbs\xa0(g)',\r\n  },\r\n  {\r\n    id: 'protein',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Protein\xa0(g)',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding='checkbox'>\r\n          <Checkbox\r\n            color='primary'\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component='span' sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const {numSelected} = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: {sm: 2},\r\n        pr: {xs: 1, sm: 1},\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{flex: '1 1 100%'}}\r\n          color='inherit'\r\n          variant='subtitle1'\r\n          component='div'\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{flex: '1 1 100%'}}\r\n          variant='h6'\r\n          id='tableTitle'\r\n          component='div'\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title='Delete'>\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title='Filter list'>\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{width: '100%'}}>\r\n      <Paper sx={{width: '100%', mb: 2}}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{minWidth: 750}}\r\n            aria-labelledby='tableTitle'\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role='checkbox'\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding='checkbox'>\r\n                        <Checkbox\r\n                          color='primary'\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component='th'\r\n                        id={labelId}\r\n                        scope='row'\r\n                        padding='none'\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align='right'>{row.calories}</TableCell>\r\n                      <TableCell align='right'>{row.fat}</TableCell>\r\n                      <TableCell align='right'>{row.carbs}</TableCell>\r\n                      <TableCell align='right'>{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component='div'\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label='Dense padding'\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"This example demonstrates the use of Checkbox and clickable rows for selection, with a custom Toolbar. It uses the TableSortLabel component to help style column headings."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"ColumnGrouping",component:ne,source:"import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst columns = [\r\n  {id: 'name', label: 'Name', minWidth: 170},\r\n  {id: 'code', label: 'ISO\\u00a0Code', minWidth: 100},\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return {name, code, population, size, density};\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nexport default function ColumnGrouping() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{width: '100%'}}>\r\n      <TableContainer sx={{maxHeight: 440}}>\r\n        <Table stickyHeader aria-label='sticky table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align='center' colSpan={2}>\r\n                Country\r\n              </TableCell>\r\n              <TableCell align='center' colSpan={3}>\r\n                Details\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{top: 57, minWidth: column.minWidth}}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role='checkbox' tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component='div'\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"You can group column headers by rendering multiple table rows inside a table head:"})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"CustomPaginationActionsTable",component:ue,source:"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const {count, page, rowsPerPage, onPageChange} = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{flexShrink: 0, ml: 2.5}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='first page'\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='previous page'\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='next page'\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='last page'\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return {name, calories, fat};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 500}} aria-label='custom pagination table'>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component='th' scope='row'>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell style={{width: 160}} align='right'>\r\n                {row.calories}\r\n              </TableCell>\r\n              <TableCell style={{width: 160}} align='right'>\r\n                {row.fat}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{height: 53 * emptyRows}}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, {label: 'All', value: -1}]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'rows per page',\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"The ActionsComponent prop of the TablePagination component allows the implementation of custom actions."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Sticky Head Table",component:we,source:"import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst columns = [\r\n  {id: 'name', label: 'Name', minWidth: 170},\r\n  {id: 'code', label: 'ISO\\u00a0Code', minWidth: 100},\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return {name, code, population, size, density};\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nexport default function StickyHeadTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{width: '100%', overflow: 'hidden'}}>\r\n      <TableContainer sx={{maxHeight: 440}}>\r\n        <Table stickyHeader aria-label='sticky table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{minWidth: column.minWidth}}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role='checkbox' tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component='div'\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"Here is an example of a table with scrollable rows and fixed column headers. It leverages the stickyHeader prop."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Column Grouping Table",component:ve,source:"import * as React from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, {tableCellClasses} from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst StyledTableCell = styled(TableCell)(({theme}) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({theme}) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function ColumnGroupingTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 700}} aria-label='customized table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align='right'>Calories</StyledTableCell>\r\n            <StyledTableCell align='right'>Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align='right'>Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align='right'>Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component='th' scope='row'>\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>{row.calories}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.fat}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"You can group column headers by rendering multiple table rows inside a table head:"})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"CollapsibleTable",component:ze,source:"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      {\r\n        date: '2020-01-05',\r\n        customerId: '11091700',\r\n        amount: 3,\r\n      },\r\n      {\r\n        date: '2020-01-02',\r\n        customerId: 'Anonymous',\r\n        amount: 1,\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const {row} = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{'& > *': {borderBottom: 'unset'}}}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label='expand row'\r\n            size='small'\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component='th' scope='row'>\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align='right'>{row.calories}</TableCell>\r\n        <TableCell align='right'>{row.fat}</TableCell>\r\n        <TableCell align='right'>{row.carbs}</TableCell>\r\n        <TableCell align='right'>{row.protein}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>\r\n          <Collapse in={open} timeout='auto' unmountOnExit>\r\n            <Box sx={{margin: 1}}>\r\n              <Typography variant='h6' gutterBottom component='div'>\r\n                History\r\n              </Typography>\r\n              <Table size='small' aria-label='purchases'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align='right'>Amount</TableCell>\r\n                    <TableCell align='right'>Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component='th' scope='row'>\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align='right'>{historyRow.amount}</TableCell>\r\n                      <TableCell align='right'>\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label='collapsible table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align='right'>Calories</TableCell>\r\n            <TableCell align='right'>Fat&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"An example of a table with expandable rows, revealing more information. It utilizes the Collapse component."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Spanning Table",component:Me,source:"import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return {desc, qty, unit, price};\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({price}) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 700}} aria-label='spanning table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='center' colSpan={3}>\r\n              Details\r\n            </TableCell>\r\n            <TableCell align='right'>Price</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align='right'>Qty.</TableCell>\r\n            <TableCell align='right'>Unit</TableCell>\r\n            <TableCell align='right'>Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align='right'>{row.qty}</TableCell>\r\n              <TableCell align='right'>{row.unit}</TableCell>\r\n              <TableCell align='right'>{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align='right'>{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align='right'>{`${(TAX_RATE * 100).toFixed(\r\n              0,\r\n            )} %`}</TableCell>\r\n            <TableCell align='right'>{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align='right'>{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"A simple example with spanning rows & columns."})}),Object(h.jsx)(i.a,{item:!0,xs:12,children:Object(h.jsx)(o.a,{title:"Acccessible Table",component:$e,source:"import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n];\r\n\r\nexport default function AcccessibleTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 650}} aria-label='caption table'>\r\n        <caption>A basic table example with a caption</caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align='right'>Calories</TableCell>\r\n            <TableCell align='right'>Fat&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component='th' scope='row'>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align='right'>{row.calories}</TableCell>\r\n              <TableCell align='right'>{row.fat}</TableCell>\r\n              <TableCell align='right'>{row.carbs}</TableCell>\r\n              <TableCell align='right'>{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"A caption functions like a heading for a table. Most screen readers announce the content of captions. Captions help users to find a table and understand what its about and decide if they want to read it."})})]})]})}}}]);
//# sourceMappingURL=136.be66c4e2.chunk.js.map