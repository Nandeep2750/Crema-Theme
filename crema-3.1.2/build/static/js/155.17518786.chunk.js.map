{"version":3,"sources":["pages/muiComponents/utils/ClickawayListener/ClickAway.js","webpack:///./src/pages/muiComponents/utils/ClickawayListener/ClickAway.js?de89","pages/muiComponents/utils/ClickawayListener/PortalClickAway.js","webpack:///./src/pages/muiComponents/utils/ClickawayListener/PortalClickAway.js?2062","pages/muiComponents/utils/ClickawayListener/index.js"],"names":["ClickAway","React","open","setOpen","ClickAwayListener","onClickAway","Box","sx","position","type","onClick","prev","top","right","left","zIndex","border","p","bgcolor","PortalClickAway","Portal","width","transform","ClickawayListener","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","component","source","noScrollbar","PortalClickAwaySource"],"mappings":"2LAIe,SAASA,IACtB,MAAwBC,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAqBA,OACE,cAACC,EAAA,EAAD,CAAmBC,YAhBG,WACtBF,GAAQ,IAeR,SACE,eAACG,EAAA,EAAD,CAAKC,GAAI,CAACC,SAAU,YAApB,UACE,wBAAQC,KAAK,SAASC,QAtBR,WAClBP,GAAQ,SAACQ,GAAD,OAAWA,MAqBf,gCAGCT,EACC,cAACI,EAAA,EAAD,CAAKC,GAlBE,CACbC,SAAU,WACVI,IAAK,GACLC,MAAO,EACPC,KAAM,EACNC,OAAQ,EACRC,OAAQ,YACRC,EAAG,EACHC,QAAS,oBAUH,oEAGE,UCpCG,I,UCKA,SAASC,IACtB,MAAwBlB,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAqBA,OACE,cAACC,EAAA,EAAD,CAAmBC,YAhBG,WACtBF,GAAQ,IAeR,SACE,gCACE,wBAAQM,KAAK,SAASC,QAtBR,WAClBP,GAAQ,SAACQ,GAAD,OAAWA,MAqBf,gCAGCT,EACC,cAACkB,EAAA,EAAD,UACE,cAACd,EAAA,EAAD,CAAKC,GAnBA,CACbC,SAAU,QACVa,MAAO,IACPT,IAAK,MACLE,KAAM,MACNQ,UAAW,wBACXN,OAAQ,YACRC,EAAG,EACHC,QAAS,oBAWD,sEAIA,UCvCG,uoCC8DAK,UAlDW,WACxB,OACE,qCACE,cAACC,EAAA,EAAD,CACEC,MAAM,qBACNC,YAAY,sHACZC,OAAO,mDAGT,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACER,MAAM,YACNS,UAAWlC,EACXmC,OH1BG,uhCG2BHT,YAAY,qGAGZU,aAAW,MAGf,cAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACER,MAAM,oBACNS,UAAWf,EACXgB,OAAQE,EACRX,YAAY,kHAGZU,aAAW,MAGf,cAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACER,MAAM,oBACNS,UAAWf,EACXgB,OAAQE,EACRX,YAAY,mLAKZU,aAAW","file":"static/js/155.17518786.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\n\r\nexport default function ClickAway() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const styles = {\r\n    position: 'absolute',\r\n    top: 28,\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    border: '1px solid',\r\n    p: 1,\r\n    bgcolor: 'background.paper',\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <Box sx={{position: 'relative'}}>\r\n        <button type='button' onClick={handleClick}>\r\n          Open menu dropdown\r\n        </button>\r\n        {open ? (\r\n          <Box sx={styles}>\r\n            Click me, I will stay visible until you click outside.\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\\r\\n\\r\\nexport default function ClickAway() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClick = () => {\\r\\n    setOpen((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  const handleClickAway = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const styles = {\\r\\n    position: 'absolute',\\r\\n    top: 28,\\r\\n    right: 0,\\r\\n    left: 0,\\r\\n    zIndex: 1,\\r\\n    border: '1px solid',\\r\\n    p: 1,\\r\\n    bgcolor: 'background.paper',\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ClickAwayListener onClickAway={handleClickAway}>\\r\\n      <Box sx={{position: 'relative'}}>\\r\\n        <button type='button' onClick={handleClick}>\\r\\n          Open menu dropdown\\r\\n        </button>\\r\\n        {open ? (\\r\\n          <Box sx={styles}>\\r\\n            Click me, I will stay visible until you click outside.\\r\\n          </Box>\\r\\n        ) : null}\\r\\n      </Box>\\r\\n    </ClickAwayListener>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Portal from '@mui/material/Portal';\r\n\r\nexport default function PortalClickAway() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const styles = {\r\n    position: 'fixed',\r\n    width: 200,\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    border: '1px solid',\r\n    p: 1,\r\n    bgcolor: 'background.paper',\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <div>\r\n        <button type='button' onClick={handleClick}>\r\n          Open menu dropdown\r\n        </button>\r\n        {open ? (\r\n          <Portal>\r\n            <Box sx={styles}>\r\n              Click me, I will stay visible until you click outside.\r\n            </Box>\r\n          </Portal>\r\n        ) : null}\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\\r\\nimport Portal from '@mui/material/Portal';\\r\\n\\r\\nexport default function PortalClickAway() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClick = () => {\\r\\n    setOpen((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  const handleClickAway = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const styles = {\\r\\n    position: 'fixed',\\r\\n    width: 200,\\r\\n    top: '50%',\\r\\n    left: '50%',\\r\\n    transform: 'translate(-50%, -50%)',\\r\\n    border: '1px solid',\\r\\n    p: 1,\\r\\n    bgcolor: 'background.paper',\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ClickAwayListener onClickAway={handleClickAway}>\\r\\n      <div>\\r\\n        <button type='button' onClick={handleClick}>\\r\\n          Open menu dropdown\\r\\n        </button>\\r\\n        {open ? (\\r\\n          <Portal>\\r\\n            <Box sx={styles}>\\r\\n              Click me, I will stay visible until you click outside.\\r\\n            </Box>\\r\\n          </Portal>\\r\\n        ) : null}\\r\\n      </div>\\r\\n    </ClickAwayListener>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport ClickAway from './ClickAway';\r\nimport ClickAwaySource from '!raw-loader!./ClickAway';\r\n\r\nimport PortalClickAway from './PortalClickAway';\r\nimport PortalClickAwaySource from '!raw-loader!./PortalClickAway';\r\n\r\nconst ClickawayListener = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Clickaway Listener'\r\n        description='Detect if a click event happened outside of an element. It listens for clicks that occur somewhere in the document.'\r\n        refUrl='https://mui.com/components/click-away-listener'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='ClickAway'\r\n            component={ClickAway}\r\n            source={ClickAwaySource}\r\n            description='For instance, if you need to hide a menu dropdown when people click anywhere else on your page:\r\n\r\n'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Portal Click Away'\r\n            component={PortalClickAway}\r\n            source={PortalClickAwaySource}\r\n            description='The following demo uses Portal to render the dropdown into a new \"subtree\" outside of current DOM hierarchy.\r\n\r\n'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Portal Click Away'\r\n            component={PortalClickAway}\r\n            source={PortalClickAwaySource}\r\n            description='By default, the component responds to the trailing events (click + touch end). However, you can configure it to respond to the leading events (mouse down + touch start).\r\n\r\n.\r\n\r\n'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClickawayListener;\r\n"],"sourceRoot":""}