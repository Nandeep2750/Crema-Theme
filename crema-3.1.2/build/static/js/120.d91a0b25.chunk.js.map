{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","pages/muiComponents/utils/Transitions/SimpleCollapse.js","webpack:///./src/pages/muiComponents/utils/Transitions/SimpleCollapse.js?9c2e","pages/muiComponents/utils/Transitions/SimpleFade.js","webpack:///./src/pages/muiComponents/utils/Transitions/SimpleFade.js?7de7","pages/muiComponents/utils/Transitions/SimpleGrow.js","webpack:///./src/pages/muiComponents/utils/Transitions/SimpleGrow.js?722d","pages/muiComponents/utils/Transitions/SimpleSlide.js","webpack:///./src/pages/muiComponents/utils/Transitions/SimpleSlide.js?7710","pages/muiComponents/utils/Transitions/SlideFromContainer.js","webpack:///./src/pages/muiComponents/utils/Transitions/SlideFromContainer.js?82f7","pages/muiComponents/utils/Transitions/SimpleZoom.js","webpack:///./src/pages/muiComponents/utils/Transitions/SimpleZoom.js?4510","pages/muiComponents/utils/Transitions/TransitionGroupExample.js","pages/muiComponents/utils/Transitions/index.js","webpack:///./src/pages/muiComponents/utils/Transitions/TransitionGroupExample.js?1b23"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","icon","Paper","sx","m","elevation","Box","component","width","height","fill","theme","palette","common","white","stroke","divider","strokeWidth","points","SimpleCollapse","React","checked","setChecked","FormControlLabel","control","Switch","onChange","prev","label","display","justifyContent","Collapse","in","collapsedSize","orientation","SimpleFade","Fade","SimpleGrow","Grow","style","transformOrigin","timeout","SimpleSlide","Slide","direction","mountOnEnter","unmountOnExit","SlideFromContainer","containerRef","padding","borderRadius","bgcolor","mode","overflow","ref","container","current","SimpleZoom","Zoom","transitionDelay","FRUITS","renderItem","item","handleRemoveFruit","ListItem","secondaryAction","IconButton","edge","title","onClick","ListItemText","primary","TransitionGroupExample","slice","fruitsInBasket","setFruitsInBasket","filter","i","addFruitButton","Button","variant","disabled","length","nextHiddenItem","find","includes","mt","List","map","Transitions","AppComponentHeader","description","refUrl","AppGridContainer","Grid","xs","md","AppComponentCard","source","noScrollbar"],"mappings":"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","file":"static/js/120.d91a0b25.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport Paper from '@mui/material/Paper';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst icon = (\r\n  <Paper sx={{m: 1}} elevation={4}>\r\n    <Box component='svg' sx={{width: 100, height: 100}}>\r\n      <Box\r\n        component='polygon'\r\n        sx={{\r\n          fill: (theme) => theme.palette.common.white,\r\n          stroke: (theme) => theme.palette.divider,\r\n          strokeWidth: 1,\r\n        }}\r\n        points='0,100 50,00, 100,100'\r\n      />\r\n    </Box>\r\n  </Paper>\r\n);\r\n\r\nexport default function SimpleCollapse() {\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{height: 300}}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label='Show'\r\n      />\r\n      <Box\r\n        sx={{\r\n          '& > :not(style)': {\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            height: 120,\r\n            width: 250,\r\n          },\r\n        }}\r\n      >\r\n        <div>\r\n          <Collapse in={checked}>{icon}</Collapse>\r\n          <Collapse in={checked} collapsedSize={40}>\r\n            {icon}\r\n          </Collapse>\r\n        </div>\r\n        <div>\r\n          <Box sx={{width: '50%'}}>\r\n            <Collapse orientation='horizontal' in={checked}>\r\n              {icon}\r\n            </Collapse>\r\n          </Box>\r\n          <Box sx={{width: '50%'}}>\r\n            <Collapse orientation='horizontal' in={checked} collapsedSize={40}>\r\n              {icon}\r\n            </Collapse>\r\n          </Box>\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\n\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Switch from '@mui/material/Switch';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Collapse from '@mui/material/Collapse';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\n\\r\\nconst icon = (\\r\\n  <Paper sx={{m: 1}} elevation={4}>\\r\\n    <Box component='svg' sx={{width: 100, height: 100}}>\\r\\n      <Box\\r\\n        component='polygon'\\r\\n        sx={{\\r\\n          fill: (theme) => theme.palette.common.white,\\r\\n          stroke: (theme) => theme.palette.divider,\\r\\n          strokeWidth: 1,\\r\\n        }}\\r\\n        points='0,100 50,00, 100,100'\\r\\n      />\\r\\n    </Box>\\r\\n  </Paper>\\r\\n);\\r\\n\\r\\nexport default function SimpleCollapse() {\\r\\n  const [checked, setChecked] = React.useState(false);\\r\\n\\r\\n  const handleChange = () => {\\r\\n    setChecked((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{height: 300}}>\\r\\n      <FormControlLabel\\r\\n        control={<Switch checked={checked} onChange={handleChange} />}\\r\\n        label='Show'\\r\\n      />\\r\\n      <Box\\r\\n        sx={{\\r\\n          '& > :not(style)': {\\r\\n            display: 'flex',\\r\\n            justifyContent: 'space-around',\\r\\n            height: 120,\\r\\n            width: 250,\\r\\n          },\\r\\n        }}\\r\\n      >\\r\\n        <div>\\r\\n          <Collapse in={checked}>{icon}</Collapse>\\r\\n          <Collapse in={checked} collapsedSize={40}>\\r\\n            {icon}\\r\\n          </Collapse>\\r\\n        </div>\\r\\n        <div>\\r\\n          <Box sx={{width: '50%'}}>\\r\\n            <Collapse orientation='horizontal' in={checked}>\\r\\n              {icon}\\r\\n            </Collapse>\\r\\n          </Box>\\r\\n          <Box sx={{width: '50%'}}>\\r\\n            <Collapse orientation='horizontal' in={checked} collapsedSize={40}>\\r\\n              {icon}\\r\\n            </Collapse>\\r\\n          </Box>\\r\\n        </div>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport Paper from '@mui/material/Paper';\r\nimport Fade from '@mui/material/Fade';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst icon = (\r\n  <Paper sx={{m: 1}} elevation={4}>\r\n    <Box component='svg' sx={{width: 100, height: 100}}>\r\n      <Box\r\n        component='polygon'\r\n        sx={{\r\n          fill: (theme) => theme.palette.common.white,\r\n          stroke: (theme) => theme.palette.divider,\r\n          strokeWidth: 1,\r\n        }}\r\n        points='0,100 50,00, 100,100'\r\n      />\r\n    </Box>\r\n  </Paper>\r\n);\r\n\r\nexport default function SimpleFade() {\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{height: 180}}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label='Show'\r\n      />\r\n      <Box sx={{display: 'flex'}}>\r\n        <Fade in={checked}>{icon}</Fade>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\n\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Switch from '@mui/material/Switch';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Fade from '@mui/material/Fade';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\n\\r\\nconst icon = (\\r\\n  <Paper sx={{m: 1}} elevation={4}>\\r\\n    <Box component='svg' sx={{width: 100, height: 100}}>\\r\\n      <Box\\r\\n        component='polygon'\\r\\n        sx={{\\r\\n          fill: (theme) => theme.palette.common.white,\\r\\n          stroke: (theme) => theme.palette.divider,\\r\\n          strokeWidth: 1,\\r\\n        }}\\r\\n        points='0,100 50,00, 100,100'\\r\\n      />\\r\\n    </Box>\\r\\n  </Paper>\\r\\n);\\r\\n\\r\\nexport default function SimpleFade() {\\r\\n  const [checked, setChecked] = React.useState(false);\\r\\n\\r\\n  const handleChange = () => {\\r\\n    setChecked((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{height: 180}}>\\r\\n      <FormControlLabel\\r\\n        control={<Switch checked={checked} onChange={handleChange} />}\\r\\n        label='Show'\\r\\n      />\\r\\n      <Box sx={{display: 'flex'}}>\\r\\n        <Fade in={checked}>{icon}</Fade>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grow from '@mui/material/Grow';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst icon = (\r\n  <Paper sx={{m: 1}} elevation={4}>\r\n    <Box component='svg' sx={{width: 100, height: 100}}>\r\n      <Box\r\n        component='polygon'\r\n        sx={{\r\n          fill: (theme) => theme.palette.common.white,\r\n          stroke: (theme) => theme.palette.divider,\r\n          strokeWidth: 1,\r\n        }}\r\n        points='0,100 50,00, 100,100'\r\n      />\r\n    </Box>\r\n  </Paper>\r\n);\r\n\r\nexport default function SimpleGrow() {\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{height: 180}}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label='Show'\r\n      />\r\n      <Box sx={{display: 'flex'}}>\r\n        <Grow in={checked}>{icon}</Grow>\r\n        {/* Conditionally applies the timeout prop to change the entry speed. */}\r\n        <Grow\r\n          in={checked}\r\n          style={{transformOrigin: '0 0 0'}}\r\n          {...(checked ? {timeout: 1000} : {})}\r\n        >\r\n          {icon}\r\n        </Grow>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\n\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Switch from '@mui/material/Switch';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Grow from '@mui/material/Grow';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\n\\r\\nconst icon = (\\r\\n  <Paper sx={{m: 1}} elevation={4}>\\r\\n    <Box component='svg' sx={{width: 100, height: 100}}>\\r\\n      <Box\\r\\n        component='polygon'\\r\\n        sx={{\\r\\n          fill: (theme) => theme.palette.common.white,\\r\\n          stroke: (theme) => theme.palette.divider,\\r\\n          strokeWidth: 1,\\r\\n        }}\\r\\n        points='0,100 50,00, 100,100'\\r\\n      />\\r\\n    </Box>\\r\\n  </Paper>\\r\\n);\\r\\n\\r\\nexport default function SimpleGrow() {\\r\\n  const [checked, setChecked] = React.useState(false);\\r\\n\\r\\n  const handleChange = () => {\\r\\n    setChecked((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{height: 180}}>\\r\\n      <FormControlLabel\\r\\n        control={<Switch checked={checked} onChange={handleChange} />}\\r\\n        label='Show'\\r\\n      />\\r\\n      <Box sx={{display: 'flex'}}>\\r\\n        <Grow in={checked}>{icon}</Grow>\\r\\n        {/* Conditionally applies the timeout prop to change the entry speed. */}\\r\\n        <Grow\\r\\n          in={checked}\\r\\n          style={{transformOrigin: '0 0 0'}}\\r\\n          {...(checked ? {timeout: 1000} : {})}\\r\\n        >\\r\\n          {icon}\\r\\n        </Grow>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport Paper from '@mui/material/Paper';\r\nimport Slide from '@mui/material/Slide';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst icon = (\r\n  <Paper sx={{m: 1}} elevation={4}>\r\n    <Box component='svg' sx={{width: 100, height: 100}}>\r\n      <Box\r\n        component='polygon'\r\n        sx={{\r\n          fill: (theme) => theme.palette.common.white,\r\n          stroke: (theme) => theme.palette.divider,\r\n          strokeWidth: 1,\r\n        }}\r\n        points='0,100 50,00, 100,100'\r\n      />\r\n    </Box>\r\n  </Paper>\r\n);\r\n\r\nexport default function SimpleSlide() {\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{height: 180}}>\r\n      <Box sx={{width: `calc(100px + 16px)`}}>\r\n        <FormControlLabel\r\n          control={<Switch checked={checked} onChange={handleChange} />}\r\n          label='Show'\r\n        />\r\n        <Slide direction='up' in={checked} mountOnEnter unmountOnExit>\r\n          {icon}\r\n        </Slide>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\n\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Switch from '@mui/material/Switch';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Slide from '@mui/material/Slide';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\n\\r\\nconst icon = (\\r\\n  <Paper sx={{m: 1}} elevation={4}>\\r\\n    <Box component='svg' sx={{width: 100, height: 100}}>\\r\\n      <Box\\r\\n        component='polygon'\\r\\n        sx={{\\r\\n          fill: (theme) => theme.palette.common.white,\\r\\n          stroke: (theme) => theme.palette.divider,\\r\\n          strokeWidth: 1,\\r\\n        }}\\r\\n        points='0,100 50,00, 100,100'\\r\\n      />\\r\\n    </Box>\\r\\n  </Paper>\\r\\n);\\r\\n\\r\\nexport default function SimpleSlide() {\\r\\n  const [checked, setChecked] = React.useState(false);\\r\\n\\r\\n  const handleChange = () => {\\r\\n    setChecked((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{height: 180}}>\\r\\n      <Box sx={{width: `calc(100px + 16px)`}}>\\r\\n        <FormControlLabel\\r\\n          control={<Switch checked={checked} onChange={handleChange} />}\\r\\n          label='Show'\\r\\n        />\\r\\n        <Slide direction='up' in={checked} mountOnEnter unmountOnExit>\\r\\n          {icon}\\r\\n        </Slide>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport Paper from '@mui/material/Paper';\r\nimport Slide from '@mui/material/Slide';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst icon = (\r\n  <Paper sx={{m: 1, width: 100, height: 100}} elevation={4}>\r\n    <Box component='svg' sx={{width: 100, height: 100}}>\r\n      <Box\r\n        component='polygon'\r\n        sx={{\r\n          fill: (theme) => theme.palette.common.white,\r\n          stroke: (theme) => theme.palette.divider,\r\n          strokeWidth: 1,\r\n        }}\r\n        points='0,100 50,00, 100,100'\r\n      />\r\n    </Box>\r\n  </Paper>\r\n);\r\n\r\nexport default function SlideFromContainer() {\r\n  const [checked, setChecked] = React.useState(false);\r\n  const containerRef = React.useRef(null);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 180,\r\n        width: 240,\r\n        display: 'flex',\r\n        padding: 2,\r\n        borderRadius: 1,\r\n        bgcolor: (theme) =>\r\n          theme.palette.mode === 'light' ? 'grey.100' : 'grey.900',\r\n        overflow: 'hidden',\r\n      }}\r\n      ref={containerRef}\r\n    >\r\n      <Box sx={{width: 200}}>\r\n        <FormControlLabel\r\n          control={<Switch checked={checked} onChange={handleChange} />}\r\n          label='Show from target'\r\n        />\r\n        <Slide direction='up' in={checked} container={containerRef.current}>\r\n          {icon}\r\n        </Slide>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\n\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Switch from '@mui/material/Switch';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Slide from '@mui/material/Slide';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\n\\r\\nconst icon = (\\r\\n  <Paper sx={{m: 1, width: 100, height: 100}} elevation={4}>\\r\\n    <Box component='svg' sx={{width: 100, height: 100}}>\\r\\n      <Box\\r\\n        component='polygon'\\r\\n        sx={{\\r\\n          fill: (theme) => theme.palette.common.white,\\r\\n          stroke: (theme) => theme.palette.divider,\\r\\n          strokeWidth: 1,\\r\\n        }}\\r\\n        points='0,100 50,00, 100,100'\\r\\n      />\\r\\n    </Box>\\r\\n  </Paper>\\r\\n);\\r\\n\\r\\nexport default function SlideFromContainer() {\\r\\n  const [checked, setChecked] = React.useState(false);\\r\\n  const containerRef = React.useRef(null);\\r\\n\\r\\n  const handleChange = () => {\\r\\n    setChecked((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box\\r\\n      sx={{\\r\\n        height: 180,\\r\\n        width: 240,\\r\\n        display: 'flex',\\r\\n        padding: 2,\\r\\n        borderRadius: 1,\\r\\n        bgcolor: (theme) =>\\r\\n          theme.palette.mode === 'light' ? 'grey.100' : 'grey.900',\\r\\n        overflow: 'hidden',\\r\\n      }}\\r\\n      ref={containerRef}\\r\\n    >\\r\\n      <Box sx={{width: 200}}>\\r\\n        <FormControlLabel\\r\\n          control={<Switch checked={checked} onChange={handleChange} />}\\r\\n          label='Show from target'\\r\\n        />\\r\\n        <Slide direction='up' in={checked} container={containerRef.current}>\\r\\n          {icon}\\r\\n        </Slide>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport Paper from '@mui/material/Paper';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst icon = (\r\n  <Paper sx={{m: 1}} elevation={4}>\r\n    <Box component='svg' sx={{width: 100, height: 100}}>\r\n      <Box\r\n        component='polygon'\r\n        sx={{\r\n          fill: (theme) => theme.palette.common.white,\r\n          stroke: (theme) => theme.palette.divider,\r\n          strokeWidth: 1,\r\n        }}\r\n        points='0,100 50,00, 100,100'\r\n      />\r\n    </Box>\r\n  </Paper>\r\n);\r\n\r\nexport default function SimpleZoom() {\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{height: 180}}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label='Show'\r\n      />\r\n      <Box sx={{display: 'flex'}}>\r\n        <Zoom in={checked}>{icon}</Zoom>\r\n        <Zoom in={checked} style={{transitionDelay: checked ? '500ms' : '0ms'}}>\r\n          {icon}\r\n        </Zoom>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\n\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Switch from '@mui/material/Switch';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Zoom from '@mui/material/Zoom';\\r\\nimport FormControlLabel from '@mui/material/FormControlLabel';\\r\\n\\r\\nconst icon = (\\r\\n  <Paper sx={{m: 1}} elevation={4}>\\r\\n    <Box component='svg' sx={{width: 100, height: 100}}>\\r\\n      <Box\\r\\n        component='polygon'\\r\\n        sx={{\\r\\n          fill: (theme) => theme.palette.common.white,\\r\\n          stroke: (theme) => theme.palette.divider,\\r\\n          strokeWidth: 1,\\r\\n        }}\\r\\n        points='0,100 50,00, 100,100'\\r\\n      />\\r\\n    </Box>\\r\\n  </Paper>\\r\\n);\\r\\n\\r\\nexport default function SimpleZoom() {\\r\\n  const [checked, setChecked] = React.useState(false);\\r\\n\\r\\n  const handleChange = () => {\\r\\n    setChecked((prev) => !prev);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{height: 180}}>\\r\\n      <FormControlLabel\\r\\n        control={<Switch checked={checked} onChange={handleChange} />}\\r\\n        label='Show'\\r\\n      />\\r\\n      <Box sx={{display: 'flex'}}>\\r\\n        <Zoom in={checked}>{icon}</Zoom>\\r\\n        <Zoom in={checked} style={{transitionDelay: checked ? '500ms' : '0ms'}}>\\r\\n          {icon}\\r\\n        </Zoom>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {TransitionGroup} from 'react-transition-group';\r\n\r\nconst FRUITS = [\r\n  '🍏 Apple',\r\n  '🍌 Banana',\r\n  '🍍 Pineapple',\r\n  '🥥 Coconut',\r\n  '🍉 Watermelon',\r\n];\r\n\r\nfunction renderItem({item, handleRemoveFruit}) {\r\n  return (\r\n    <ListItem\r\n      secondaryAction={\r\n        <IconButton\r\n          edge='end'\r\n          aria-label='delete'\r\n          title='Delete'\r\n          onClick={() => handleRemoveFruit(item)}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <ListItemText primary={item} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default function TransitionGroupExample() {\r\n  const [fruitsInBasket, setFruitsInBasket] = React.useState(\r\n    FRUITS.slice(0, 3),\r\n  );\r\n\r\n  const handleAddFruit = () => {\r\n    const nextHiddenItem = FRUITS.find((i) => !fruitsInBasket.includes(i));\r\n    if (nextHiddenItem) {\r\n      setFruitsInBasket((prev) => [nextHiddenItem, ...prev]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFruit = (item) => {\r\n    setFruitsInBasket((prev) => [...prev.filter((i) => i !== item)]);\r\n  };\r\n\r\n  const addFruitButton = (\r\n    <Button\r\n      variant='contained'\r\n      disabled={fruitsInBasket.length >= FRUITS.length}\r\n      onClick={handleAddFruit}\r\n    >\r\n      Add fruit to basket\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {addFruitButton}\r\n      <Box sx={{mt: 1}}>\r\n        <List>\r\n          <TransitionGroup>\r\n            {fruitsInBasket.map((item) => (\r\n              <Collapse key={item}>\r\n                {renderItem({item, handleRemoveFruit})}\r\n              </Collapse>\r\n            ))}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport SimpleCollapse from './SimpleCollapse';\r\nimport SimpleCollapseSource from '!raw-loader!./SimpleCollapse';\r\n\r\nimport SimpleFade from './SimpleFade';\r\nimport SimpleFadeSource from '!raw-loader!./SimpleFade';\r\n\r\nimport SimpleGrow from './SimpleGrow';\r\nimport SimpleGrowSource from '!raw-loader!./SimpleGrow';\r\n\r\nimport SimpleSlide from './SimpleSlide';\r\nimport SimpleSlideSource from '!raw-loader!./SimpleSlide';\r\n\r\nimport SlideFromContainer from './SlideFromContainer';\r\nimport SlideFromContainerSource from '!raw-loader!./SlideFromContainer';\r\n\r\nimport SimpleZoom from './SimpleZoom';\r\nimport SimpleZoomSource from '!raw-loader!./SimpleZoom';\r\n\r\nimport TransitionGroupExample from './TransitionGroupExample';\r\nimport TransitionGroupExampleSource from '!raw-loader!./TransitionGroupExample';\r\n\r\nconst Transitions = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Transitions'\r\n        description='Transitions help to make a UI expressive and easy to use.'\r\n        refUrl='https://mui.com/components/transitions/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='SimpleCollapse'\r\n            component={SimpleCollapse}\r\n            source={SimpleCollapseSource}\r\n            description=' Expand from the start edge of the child element. Use the orientation prop if you need a horizontal collapse. The collapsedSize prop can be used to set the minimum width/height when not expanded.'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Simple Fade'\r\n            component={SimpleFade}\r\n            source={SimpleFadeSource}\r\n            description=' Fade in from transparent to opaque.'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='SimpleGrow'\r\n            component={SimpleGrow}\r\n            source={SimpleGrowSource}\r\n            description=' Expands outwards from the center of the child element, while also fading in from transparent to opaque.'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Simple Slide'\r\n            component={SimpleSlide}\r\n            source={SimpleSlideSource}\r\n            description=' Slide in from the edge of the screen. The direction prop controls which edge of the screen the transition starts from.'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='SlideFromContainer'\r\n            component={SlideFromContainer}\r\n            source={SlideFromContainerSource}\r\n            description=' The Slide component also accepts container prop, which is a reference to a DOM node. If this prop is set, the Slide component will slide from the edge of that DOM node.'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Simple Zoom'\r\n            component={SimpleZoom}\r\n            source={SimpleZoomSource}\r\n            description='Expand outwards from the center of the child element.'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='TransitionGroupExample'\r\n            component={TransitionGroupExample}\r\n            source={TransitionGroupExampleSource}\r\n            description='To animate a component when it is mounted or unmounted, you can use the TransitionGroup component from react-transition-group. As components are added or removed, the in prop is toggled automatically by TransitionGroup.'\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transitions;\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport Collapse from '@mui/material/Collapse';\\r\\nimport IconButton from '@mui/material/IconButton';\\r\\nimport List from '@mui/material/List';\\r\\nimport ListItem from '@mui/material/ListItem';\\r\\nimport ListItemText from '@mui/material/ListItemText';\\r\\nimport DeleteIcon from '@mui/icons-material/Delete';\\r\\nimport {TransitionGroup} from 'react-transition-group';\\r\\n\\r\\nconst FRUITS = [\\r\\n  '🍏 Apple',\\r\\n  '🍌 Banana',\\r\\n  '🍍 Pineapple',\\r\\n  '🥥 Coconut',\\r\\n  '🍉 Watermelon',\\r\\n];\\r\\n\\r\\nfunction renderItem({item, handleRemoveFruit}) {\\r\\n  return (\\r\\n    <ListItem\\r\\n      secondaryAction={\\r\\n        <IconButton\\r\\n          edge='end'\\r\\n          aria-label='delete'\\r\\n          title='Delete'\\r\\n          onClick={() => handleRemoveFruit(item)}\\r\\n        >\\r\\n          <DeleteIcon />\\r\\n        </IconButton>\\r\\n      }\\r\\n    >\\r\\n      <ListItemText primary={item} />\\r\\n    </ListItem>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default function TransitionGroupExample() {\\r\\n  const [fruitsInBasket, setFruitsInBasket] = React.useState(\\r\\n    FRUITS.slice(0, 3),\\r\\n  );\\r\\n\\r\\n  const handleAddFruit = () => {\\r\\n    const nextHiddenItem = FRUITS.find((i) => !fruitsInBasket.includes(i));\\r\\n    if (nextHiddenItem) {\\r\\n      setFruitsInBasket((prev) => [nextHiddenItem, ...prev]);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleRemoveFruit = (item) => {\\r\\n    setFruitsInBasket((prev) => [...prev.filter((i) => i !== item)]);\\r\\n  };\\r\\n\\r\\n  const addFruitButton = (\\r\\n    <Button\\r\\n      variant='contained'\\r\\n      disabled={fruitsInBasket.length >= FRUITS.length}\\r\\n      onClick={handleAddFruit}\\r\\n    >\\r\\n      Add fruit to basket\\r\\n    </Button>\\r\\n  );\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      {addFruitButton}\\r\\n      <Box sx={{mt: 1}}>\\r\\n        <List>\\r\\n          <TransitionGroup>\\r\\n            {fruitsInBasket.map((item) => (\\r\\n              <Collapse key={item}>\\r\\n                {renderItem({item, handleRemoveFruit})}\\r\\n              </Collapse>\\r\\n            ))}\\r\\n          </TransitionGroup>\\r\\n        </List>\\r\\n      </Box>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}