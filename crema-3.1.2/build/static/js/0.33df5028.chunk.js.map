{"version":3,"sources":["../node_modules/@mui/utils/esm/visuallyHidden.js","../node_modules/@mui/base/SliderUnstyled/sliderUnstyledClasses.js","../node_modules/@mui/base/SliderUnstyled/SliderValueLabelUnstyled.js","../node_modules/@mui/material/Slider/Slider.js","../node_modules/@mui/base/SliderUnstyled/SliderUnstyled.js"],"names":["visuallyHidden","border","clip","height","margin","overflow","padding","position","whiteSpace","width","getSliderUtilityClass","slot","generateUtilityClass","sliderUnstyledClasses","generateUtilityClasses","SliderValueLabelUnstyled","props","children","className","value","theme","classes","open","offset","clsx","valueLabelOpen","circle","valueLabelCircle","label","valueLabelLabel","useValueLabelClasses","React","_jsxs","_jsx","_excluded","sliderClasses","_extends","SliderRoot","styled","name","overridesResolver","styles","ownerState","marks","marksProp","step","Array","Math","floor","max","min","map","_","index","marked","length","some","mark","root","capitalize","color","size","orientation","vertical","track","trackInverted","trackFalse","borderRadius","boxSizing","display","cursor","touchAction","palette","main","WebkitTapHighlightColor","marginBottom","marginRight","colorAdjust","disabled","pointerEvents","grey","dragging","thumb","transition","SliderRail","rail","backgroundColor","opacity","top","transform","left","SliderTrack","mode","lighten","darken","transitions","create","duration","shortest","borderColor","SliderThumb","outline","alignItems","justifyContent","content","boxShadow","shadows","focusVisible","alpha","active","SliderValueLabel","valueLabel","typography","body2","fontWeight","transformOrigin","common","white","fontSize","pxToRem","bottom","SliderMark","shouldForwardProp","prop","slotShouldForwardProp","markActive","background","paper","SliderMarkLabel","markLabel","markLabelActive","text","secondary","primary","propTypes","PropTypes","node","shape","string","object","oneOf","defaultValue","oneOfType","arrayOf","number","bool","getAriaLabel","func","getAriaValueText","isRtl","isRequired","onChange","onChangeCommitted","scale","valueLabelDisplay","valueLabelFormat","shouldSpreadOwnerState","Component","isHostComponent","Slider","sliderProps","ref","_componentsProps$root","_componentsProps$thum","_componentsProps$trac","_componentsProps$valu","useThemeProps","useTheme","direction","components","componentsProps","other","_objectWithoutPropertiesLoose","extendUtilityClasses","SliderUnstyled","Root","Rail","Track","Thumb","ValueLabel","Mark","MarkLabel","asc","a","b","clamp","findClosest","values","currentValue","reduce","acc","distance","abs","trackFinger","event","touchId","undefined","current","changedTouches","i","touch","identifier","x","clientX","y","clientY","valueToPercent","roundValueToStep","nearest","round","Number","toFixed","num","parts","toExponential","split","matissaDecimalPart","parseInt","decimalPart","toString","getDecimalPrecision","setValueIndex","newValue","output","slice","sort","focusThumb","sliderRef","activeIndex","setActive","doc","ownerDocument","contains","activeElement","getAttribute","querySelector","focus","cachedSupportsTouchActionNone","axisProps","horizontal","percent","leap","right","Identity","doesSupportTouchActionNone","CSS","supports","Forward","ariaLabel","ariaLabelledby","ariaValuetext","component","classesProp","disableSwap","onMouseDown","tabIndex","valueProp","setOpen","setDragging","moveCount","useControlled","controlled","default","valueDerived","setValueState","handleChange","thumbIndex","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","range","isArray","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","onBlur","handleFocusVisible","onFocus","focusVisibleRef","setFocusVisible","handleFocusRef","useForkRef","handleRef","handleFocus","currentTarget","handleBlur","handleMouseOver","useEventCallback","handleMouseLeave","useEnhancedEffect","document","blur","handleHiddenInputChange","marksValues","marksIndex","indexOf","target","valueAsNumber","markValues","currentMarkIndex","Infinity","previousValue","previousIndex","axis","getFingerNewValue","finger","move","values2","getBoundingClientRect","percentToValue","handleTouchMove","buttons","handleTouchEnd","stopListening","handleTouchStart","preventDefault","addEventListener","removeEventListener","slider","passive","handleMouseDown","button","trackOffset","trackLeap","trackStyle","rootProps","railProps","trackProps","thumbProps","valueLabelProps","markProps","markLabelProps","Input","inputProps","input","slots","composeClasses","useUtilityClasses","as","style","ValueLabelComponent","onMouseOver","onMouseLeave"],"mappings":"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","file":"static/js/0.33df5028.chunk.js","sourcesContent":["const visuallyHidden = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: -1,\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1px'\n};\nexport default visuallyHidden;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSliderUtilityClass(slot) {\n  return generateUtilityClass('MuiSlider', slot);\n}\nconst sliderUnstyledClasses = generateUtilityClasses('MuiSlider', ['root', 'active', 'focusVisible', 'disabled', 'dragging', 'marked', 'vertical', 'trackInverted', 'trackFalse', 'rail', 'track', 'mark', 'markActive', 'markLabel', 'markLabelActive', 'thumb', 'valueLabel', 'valueLabelOpen', 'valueLabelCircle', 'valueLabelLabel']);\nexport default sliderUnstyledClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useValueLabelClasses = props => {\n  const {\n    open\n  } = props;\n  const utilityClasses = {\n    offset: clsx(open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction SliderValueLabelUnstyled(props) {\n  const {\n    children,\n    className,\n    value,\n    theme\n  } = props;\n  const classes = useValueLabelClasses(props);\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [children.props.children, /*#__PURE__*/_jsx(\"span\", {\n      className: clsx(classes.offset, className),\n      theme: theme,\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: classes.circle,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          className: classes.label,\n          children: value\n        })\n      })\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;\nexport default SliderValueLabelUnstyled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"components\", \"componentsProps\", \"color\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { generateUtilityClasses, isHostComponent } from '@mui/base';\nimport SliderUnstyled, { SliderValueLabelUnstyled, sliderUnstyledClasses, getSliderUtilityClass } from '@mui/base/SliderUnstyled';\nimport { alpha, lighten, darken } from '@mui/system';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const sliderClasses = _extends({}, sliderUnstyledClasses, generateUtilityClasses('MuiSlider', ['colorPrimary', 'colorSecondary', 'thumbColorPrimary', 'thumbColorSecondary', 'sizeSmall', 'thumbSizeSmall']));\nexport const SliderRoot = styled('span', {\n  name: 'MuiSlider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const marks = ownerState.marksProp === true && ownerState.step !== null ? [...Array(Math.floor((ownerState.max - ownerState.min) / ownerState.step) + 1)].map((_, index) => ({\n      value: ownerState.min + ownerState.step * index\n    })) : ownerState.marksProp || [];\n    const marked = marks.length > 0 && marks.some(mark => mark.label);\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], marked && styles.marked, ownerState.orientation === 'vertical' && styles.vertical, ownerState.track === 'inverted' && styles.trackInverted, ownerState.track === false && styles.trackFalse];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  borderRadius: 12,\n  boxSizing: 'content-box',\n  display: 'inline-block',\n  position: 'relative',\n  cursor: 'pointer',\n  touchAction: 'none',\n  color: theme.palette[ownerState.color].main,\n  WebkitTapHighlightColor: 'transparent'\n}, ownerState.orientation === 'horizontal' && _extends({\n  height: 4,\n  width: '100%',\n  padding: '13px 0',\n  // The primary input mechanism of the device includes a pointing device of limited accuracy.\n  '@media (pointer: coarse)': {\n    // Reach 42px touch target, about ~8mm on screen.\n    padding: '20px 0'\n  }\n}, ownerState.size === 'small' && {\n  height: 2\n}, ownerState.marked && {\n  marginBottom: 20\n}), ownerState.orientation === 'vertical' && _extends({\n  height: '100%',\n  width: 4,\n  padding: '0 13px',\n  // The primary input mechanism of the device includes a pointing device of limited accuracy.\n  '@media (pointer: coarse)': {\n    // Reach 42px touch target, about ~8mm on screen.\n    padding: '0 20px'\n  }\n}, ownerState.size === 'small' && {\n  width: 2\n}, ownerState.marked && {\n  marginRight: 44\n}), {\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  [`&.${sliderClasses.disabled}`]: {\n    pointerEvents: 'none',\n    cursor: 'default',\n    color: theme.palette.grey[400]\n  },\n  [`&.${sliderClasses.dragging}`]: {\n    [`& .${sliderClasses.thumb}, & .${sliderClasses.track}`]: {\n      transition: 'none'\n    }\n  }\n}));\nexport const SliderRail = styled('span', {\n  name: 'MuiSlider',\n  slot: 'Rail',\n  overridesResolver: (props, styles) => styles.rail\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  position: 'absolute',\n  borderRadius: 'inherit',\n  backgroundColor: 'currentColor',\n  opacity: 0.38\n}, ownerState.orientation === 'horizontal' && {\n  width: '100%',\n  height: 'inherit',\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  width: 'inherit',\n  left: '50%',\n  transform: 'translateX(-50%)'\n}, ownerState.track === 'inverted' && {\n  opacity: 1\n}));\nexport const SliderTrack = styled('span', {\n  name: 'MuiSlider',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = // Same logic as the LinearProgress track color\n  theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.5);\n  return _extends({\n    display: 'block',\n    position: 'absolute',\n    borderRadius: 'inherit',\n    border: '1px solid currentColor',\n    backgroundColor: 'currentColor',\n    transition: theme.transitions.create(['left', 'width', 'bottom', 'height'], {\n      duration: theme.transitions.duration.shortest\n    })\n  }, ownerState.size === 'small' && {\n    border: 'none'\n  }, ownerState.orientation === 'horizontal' && {\n    height: 'inherit',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }, ownerState.orientation === 'vertical' && {\n    width: 'inherit',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }, ownerState.track === false && {\n    display: 'none'\n  }, ownerState.track === 'inverted' && {\n    backgroundColor: color,\n    borderColor: color\n  });\n});\nexport const SliderThumb = styled('span', {\n  name: 'MuiSlider',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.thumb, styles[`thumbColor${capitalize(ownerState.color)}`], ownerState.size !== 'medium' && styles[`thumbSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  width: 20,\n  height: 20,\n  boxSizing: 'border-box',\n  borderRadius: '50%',\n  outline: 0,\n  backgroundColor: 'currentColor',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: theme.transitions.create(['box-shadow', 'left', 'bottom'], {\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.size === 'small' && {\n  width: 12,\n  height: 12\n}, ownerState.orientation === 'horizontal' && {\n  top: '50%',\n  transform: 'translate(-50%, -50%)'\n}, ownerState.orientation === 'vertical' && {\n  left: '50%',\n  transform: 'translate(-50%, 50%)'\n}, {\n  '&:before': _extends({\n    position: 'absolute',\n    content: '\"\"',\n    borderRadius: 'inherit',\n    width: '100%',\n    height: '100%',\n    boxShadow: theme.shadows[2]\n  }, ownerState.size === 'small' && {\n    boxShadow: 'none'\n  }),\n  '&::after': {\n    position: 'absolute',\n    content: '\"\"',\n    borderRadius: '50%',\n    // 42px is the hit target\n    width: 42,\n    height: 42,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  [`&:hover, &.${sliderClasses.focusVisible}`]: {\n    boxShadow: `0px 0px 0px 8px ${alpha(theme.palette[ownerState.color].main, 0.16)}`,\n    '@media (hover: none)': {\n      boxShadow: 'none'\n    }\n  },\n  [`&.${sliderClasses.active}`]: {\n    boxShadow: `0px 0px 0px 14px ${alpha(theme.palette[ownerState.color].main, 0.16)}`\n  },\n  [`&.${sliderClasses.disabled}`]: {\n    '&:hover': {\n      boxShadow: 'none'\n    }\n  }\n}));\nexport const SliderValueLabel = styled(SliderValueLabelUnstyled, {\n  name: 'MuiSlider',\n  slot: 'ValueLabel',\n  overridesResolver: (props, styles) => styles.valueLabel\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  [`&.${sliderClasses.valueLabelOpen}`]: {\n    transform: 'translateY(-100%) scale(1)'\n  },\n  zIndex: 1,\n  whiteSpace: 'nowrap'\n}, theme.typography.body2, {\n  fontWeight: 500,\n  transition: theme.transitions.create(['transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  top: -10,\n  transformOrigin: 'bottom center',\n  transform: 'translateY(-100%) scale(0)',\n  position: 'absolute',\n  backgroundColor: theme.palette.grey[600],\n  borderRadius: 2,\n  color: theme.palette.common.white,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: '0.25rem 0.75rem'\n}, ownerState.size === 'small' && {\n  fontSize: theme.typography.pxToRem(12),\n  padding: '0.25rem 0.5rem'\n}, {\n  '&:before': {\n    position: 'absolute',\n    content: '\"\"',\n    width: 8,\n    height: 8,\n    bottom: 0,\n    left: '50%',\n    transform: 'translate(-50%, 50%) rotate(45deg)',\n    backgroundColor: 'inherit'\n  }\n}));\nexport const SliderMark = styled('span', {\n  name: 'MuiSlider',\n  slot: 'Mark',\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'markActive',\n  overridesResolver: (props, styles) => styles.mark\n})(({\n  theme,\n  ownerState,\n  markActive\n}) => _extends({\n  position: 'absolute',\n  width: 2,\n  height: 2,\n  borderRadius: 1,\n  backgroundColor: 'currentColor'\n}, ownerState.orientation === 'horizontal' && {\n  top: '50%',\n  transform: 'translate(-1px, -50%)'\n}, ownerState.orientation === 'vertical' && {\n  left: '50%',\n  transform: 'translate(-50%, 1px)'\n}, markActive && {\n  backgroundColor: theme.palette.background.paper,\n  opacity: 0.8\n}));\nexport const SliderMarkLabel = styled('span', {\n  name: 'MuiSlider',\n  slot: 'MarkLabel',\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'markLabelActive',\n  overridesResolver: (props, styles) => styles.markLabel\n})(({\n  theme,\n  ownerState,\n  markLabelActive\n}) => _extends({}, theme.typography.body2, {\n  color: theme.palette.text.secondary,\n  position: 'absolute',\n  whiteSpace: 'nowrap'\n}, ownerState.orientation === 'horizontal' && {\n  top: 30,\n  transform: 'translateX(-50%)',\n  '@media (pointer: coarse)': {\n    top: 40\n  }\n}, ownerState.orientation === 'vertical' && {\n  left: 36,\n  transform: 'translateY(50%)',\n  '@media (pointer: coarse)': {\n    left: 44\n  }\n}, markLabelActive && {\n  color: theme.palette.text.primary\n}));\nSliderRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  ownerState: PropTypes.shape({\n    'aria-label': PropTypes.string,\n    'aria-labelledby': PropTypes.string,\n    'aria-valuetext': PropTypes.string,\n    classes: PropTypes.object,\n    color: PropTypes.oneOf(['primary', 'secondary']),\n    defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n    disabled: PropTypes.bool,\n    getAriaLabel: PropTypes.func,\n    getAriaValueText: PropTypes.func,\n    isRtl: PropTypes.bool,\n    marks: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n      label: PropTypes.node,\n      value: PropTypes.number.isRequired\n    })), PropTypes.bool]),\n    max: PropTypes.number,\n    min: PropTypes.number,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onChangeCommitted: PropTypes.func,\n    orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n    scale: PropTypes.func,\n    step: PropTypes.number,\n    track: PropTypes.oneOf(['inverted', 'normal', false]),\n    value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n    valueLabelDisplay: PropTypes.oneOf(['auto', 'off', 'on']),\n    valueLabelFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n};\n\nconst extendUtilityClasses = ownerState => {\n  const {\n    color,\n    size,\n    classes = {}\n  } = ownerState;\n  return _extends({}, classes, {\n    root: clsx(classes.root, getSliderUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`], size && [getSliderUtilityClass(`size${capitalize(size)}`), classes[`size${capitalize(size)}`]]),\n    thumb: clsx(classes.thumb, getSliderUtilityClass(`thumbColor${capitalize(color)}`), classes[`thumbColor${capitalize(color)}`], size && [getSliderUtilityClass(`thumbSize${capitalize(size)}`), classes[`thumbSize${capitalize(size)}`]])\n  });\n};\n\nconst shouldSpreadOwnerState = Component => {\n  return !Component || !isHostComponent(Component);\n};\n\nconst Slider = /*#__PURE__*/React.forwardRef(function Slider(sliderProps, ref) {\n  var _componentsProps$root, _componentsProps$thum, _componentsProps$trac, _componentsProps$valu;\n\n  const props = useThemeProps({\n    props: sliderProps,\n    name: 'MuiSlider'\n  });\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const {\n    components = {},\n    componentsProps = {},\n    color = 'primary',\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n\n  const classes = extendUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SliderUnstyled, _extends({}, other, {\n    isRtl: isRtl,\n    components: _extends({\n      Root: SliderRoot,\n      Rail: SliderRail,\n      Track: SliderTrack,\n      Thumb: SliderThumb,\n      ValueLabel: SliderValueLabel,\n      Mark: SliderMark,\n      MarkLabel: SliderMarkLabel\n    }, components),\n    componentsProps: _extends({}, componentsProps, {\n      root: _extends({}, componentsProps.root, shouldSpreadOwnerState(components.Root) && {\n        ownerState: _extends({}, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState, {\n          color,\n          size\n        })\n      }),\n      thumb: _extends({}, componentsProps.thumb, shouldSpreadOwnerState(components.Thumb) && {\n        ownerState: _extends({}, (_componentsProps$thum = componentsProps.thumb) == null ? void 0 : _componentsProps$thum.ownerState, {\n          color,\n          size\n        })\n      }),\n      track: _extends({}, componentsProps.track, shouldSpreadOwnerState(components.Track) && {\n        ownerState: _extends({}, (_componentsProps$trac = componentsProps.track) == null ? void 0 : _componentsProps$trac.ownerState, {\n          color,\n          size\n        })\n      }),\n      valueLabel: _extends({}, componentsProps.valueLabel, shouldSpreadOwnerState(components.ValueLabel) && {\n        ownerState: _extends({}, (_componentsProps$valu = componentsProps.valueLabel) == null ? void 0 : _componentsProps$valu.ownerState, {\n          color,\n          size\n        })\n      })\n    }),\n    classes: classes,\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Slider.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the slider.\n   */\n  'aria-label': chainPropTypes(PropTypes.string, props => {\n    const range = Array.isArray(props.value || props.defaultValue);\n\n    if (range && props['aria-label'] != null) {\n      return new Error('MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The id of the element containing a label for the slider.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A string value that provides a user-friendly name for the current value of the slider.\n   */\n  'aria-valuetext': chainPropTypes(PropTypes.string, props => {\n    const range = Array.isArray(props.value || props.defaultValue);\n\n    if (range && props['aria-valuetext'] != null) {\n      return new Error('MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The components used for each slot inside the Slider.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Input: PropTypes.elementType,\n    Mark: PropTypes.elementType,\n    MarkLabel: PropTypes.elementType,\n    Rail: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Thumb: PropTypes.elementType,\n    Track: PropTypes.elementType,\n    ValueLabel: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Slider.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    input: PropTypes.object,\n    mark: PropTypes.object,\n    markLabel: PropTypes.object,\n    rail: PropTypes.object,\n    root: PropTypes.object,\n    thumb: PropTypes.object,\n    track: PropTypes.object,\n    valueLabel: PropTypes.shape({\n      className: PropTypes.string,\n      components: PropTypes.shape({\n        Root: PropTypes.elementType\n      }),\n      style: PropTypes.object,\n      value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n      valueLabelDisplay: PropTypes.oneOf(['auto', 'off', 'on'])\n    })\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.\n   * @default false\n   */\n  disableSwap: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.\n   * This is important for screen reader users.\n   * @param {number} index The thumb label's index to format.\n   * @returns {string}\n   */\n  getAriaLabel: PropTypes.func,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.\n   * This is important for screen reader users.\n   * @param {number} value The thumb label's value to format.\n   * @param {number} index The thumb label's index to format.\n   * @returns {string}\n   */\n  getAriaValueText: PropTypes.func,\n\n  /**\n   * Indicates whether the theme context has rtl direction. It is set automatically.\n   * @default false\n   */\n  isRtl: PropTypes.bool,\n\n  /**\n   * Marks indicate predetermined values to which the user can move the slider.\n   * If `true` the marks are spaced according the value of the `step` prop.\n   * If an array, it should contain objects with `value` and an optional `label` keys.\n   * @default false\n   */\n  marks: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    value: PropTypes.number.isRequired\n  })), PropTypes.bool]),\n\n  /**\n   * The maximum allowed value of the slider.\n   * Should not be equal to min.\n   * @default 100\n   */\n  max: PropTypes.number,\n\n  /**\n   * The minimum allowed value of the slider.\n   * Should not be equal to max.\n   * @default 0\n   */\n  min: PropTypes.number,\n\n  /**\n   * Name attribute of the hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback function that is fired when the slider's value changed.\n   *\n   * @param {Event} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * **Warning**: This is a generic event not a change event.\n   * @param {number | number[]} value The new value.\n   * @param {number} activeThumb Index of the currently moved thumb.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the `mouseup` is triggered.\n   *\n   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {number | number[]} value The new value.\n   */\n  onChangeCommitted: PropTypes.func,\n\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * A transformation function, to change the scale of the slider.\n   * @default (x) => x\n   */\n  scale: PropTypes.func,\n\n  /**\n   * The size of the slider.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The granularity with which the slider can step through values. (A \"discrete\" slider.)\n   * The `min` prop serves as the origin for the valid values.\n   * We recommend (max - min) to be evenly divisible by the step.\n   *\n   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.\n   * @default 1\n   */\n  step: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Tab index attribute of the hidden `input` element.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The track presentation:\n   *\n   * - `normal` the track will render a bar representing the slider value.\n   * - `inverted` the track will render a bar representing the remaining slider value.\n   * - `false` the track will render without a bar.\n   * @default 'normal'\n   */\n  track: PropTypes.oneOf(['inverted', 'normal', false]),\n\n  /**\n   * The value of the slider.\n   * For ranged sliders, provide an array with two values.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n\n  /**\n   * Controls when the value label is displayed:\n   *\n   * - `auto` the value label will display when the thumb is hovered or focused.\n   * - `on` will display persistently.\n   * - `off` will never display.\n   * @default 'off'\n   */\n  valueLabelDisplay: PropTypes.oneOf(['auto', 'off', 'on']),\n\n  /**\n   * The format function the value label's value.\n   *\n   * When a function is provided, it should have the following signature:\n   *\n   * - {number} value The value label's value to format\n   * - {number} index The value label's index to format\n   * @default (x) => x\n   */\n  valueLabelFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n} : void 0;\nexport default Slider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"aria-label\", \"aria-labelledby\", \"aria-valuetext\", \"className\", \"component\", \"classes\", \"defaultValue\", \"disableSwap\", \"disabled\", \"getAriaLabel\", \"getAriaValueText\", \"marks\", \"max\", \"min\", \"name\", \"onChange\", \"onChangeCommitted\", \"onMouseDown\", \"orientation\", \"scale\", \"step\", \"tabIndex\", \"track\", \"value\", \"valueLabelDisplay\", \"valueLabelFormat\", \"isRtl\", \"components\", \"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, unstable_useIsFocusVisible as useIsFocusVisible, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useControlled as useControlled, visuallyHidden } from '@mui/utils';\nimport isHostComponent from '../utils/isHostComponent';\nimport composeClasses from '../composeClasses';\nimport { getSliderUtilityClass } from './sliderUnstyledClasses';\nimport SliderValueLabelUnstyled from './SliderValueLabelUnstyled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\n\nfunction asc(a, b) {\n  return a - b;\n}\n\nfunction clamp(value, min, max) {\n  if (value == null) {\n    return min;\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n\nfunction findClosest(values, currentValue) {\n  const {\n    index: closestIndex\n  } = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n\n    return acc;\n  }, null);\n  return closestIndex;\n}\n\nfunction trackFinger(event, touchId) {\n  if (touchId.current !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction setValueIndex({\n  values,\n  newValue,\n  index\n}) {\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\n\nfunction focusThumb({\n  sliderRef,\n  activeIndex,\n  setActive\n}) {\n  const doc = ownerDocument(sliderRef.current);\n\n  if (!sliderRef.current.contains(doc.activeElement) || Number(doc.activeElement.getAttribute('data-index')) !== activeIndex) {\n    sliderRef.current.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\n\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\n\nconst Identity = x => x; // TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\n\n\nlet cachedSupportsTouchActionNone;\n\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n\n  return cachedSupportsTouchActionNone;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dragging,\n    marked,\n    orientation,\n    track,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', dragging && 'dragging', marked && 'marked', orientation === 'vertical' && 'vertical', track === 'inverted' && 'trackInverted', track === false && 'trackFalse'],\n    rail: ['rail'],\n    track: ['track'],\n    mark: ['mark'],\n    markActive: ['markActive'],\n    markLabel: ['markLabel'],\n    markLabelActive: ['markLabelActive'],\n    valueLabel: ['valueLabel'],\n    thumb: ['thumb', disabled && 'disabled'],\n    active: ['active'],\n    disabled: ['disabled'],\n    focusVisible: ['focusVisible']\n  };\n  return composeClasses(slots, getSliderUtilityClass, classes);\n};\n\nconst Forward = ({\n  children\n}) => children;\n\nconst SliderUnstyled = /*#__PURE__*/React.forwardRef(function SliderUnstyled(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-valuetext': ariaValuetext,\n    className,\n    component = 'span',\n    classes: classesProp,\n    defaultValue,\n    disableSwap = false,\n    disabled = false,\n    getAriaLabel,\n    getAriaValueText,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    onMouseDown,\n    orientation = 'horizontal',\n    scale = Identity,\n    step = 1,\n    tabIndex,\n    track = 'normal',\n    value: valueProp,\n    valueLabelDisplay = 'off',\n    valueLabelFormat = Identity,\n    isRtl = false,\n    components = {},\n    componentsProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const touchId = React.useRef(); // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue != null ? defaultValue : min,\n    name: 'Slider'\n  });\n\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event;\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(-1);\n  const sliderRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\n  const handleRef = useForkRef(ref, handleFocusRef);\n\n  const handleFocus = event => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(index);\n    }\n\n    setOpen(index);\n  };\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(-1);\n    }\n\n    setOpen(-1);\n  };\n\n  const handleMouseOver = useEventCallback(event => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  });\n  const handleMouseLeave = useEventCallback(() => {\n    setOpen(-1);\n  });\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js\n      document.activeElement.blur();\n    }\n  }, [disabled]);\n\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n\n  if (disabled && focusVisible !== -1) {\n    setFocusVisible(-1);\n  }\n\n  const handleHiddenInputChange = event => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksValues = marks.map(mark => mark.value);\n    const marksIndex = marksValues.indexOf(value);\n    let newValue = event.target.valueAsNumber;\n\n    if (marks && step == null) {\n      newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n    }\n\n    newValue = clamp(newValue, min, max);\n\n    if (marks && step == null) {\n      const markValues = marks.map(mark => mark.value);\n      const currentMarkIndex = markValues.indexOf(values[index]);\n      newValue = newValue < values[index] ? markValues[currentMarkIndex - 1] : markValues[currentMarkIndex + 1];\n    }\n\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index; // Potentially swap the index if needed.\n\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n\n    setValueState(newValue);\n    setFocusVisible(index);\n\n    if (handleChange) {\n      handleChange(event, newValue, index);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n\n  const previousIndex = React.useRef();\n  let axis = orientation;\n\n  if (isRtl && orientation !== \"vertical\") {\n    axis += '-reverse';\n  }\n\n  const getFingerNewValue = ({\n    finger,\n    move = false,\n    values: values2\n  }) => {\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n\n    if (axis.indexOf('vertical') === 0) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n\n    if (axis.indexOf('-reverse') !== -1) {\n      percent = 1 - percent;\n    }\n\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const marksValues = marks.map(mark => mark.value);\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values2, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      } // Bound the new value to the thumb's neighbours.\n\n\n      if (disableSwap) {\n        newValue = clamp(newValue, values2[activeIndex - 1] || -Infinity, values2[activeIndex + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values: values2,\n        newValue,\n        index: activeIndex\n      }); // Potentially swap the index if needed.\n\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (!finger) {\n      return;\n    }\n\n    moveCount.current += 1; // Cancel move in case some other element consumed a mouseup event and it was not fired.\n\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true,\n      values\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n\n    if (handleChange) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n\n    if (!finger) {\n      return;\n    }\n\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      values\n    });\n    setActive(-1);\n\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n\n    touchId.current = undefined; // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n\n    const touch = nativeEvent.changedTouches[0];\n\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n\n    const finger = trackFinger(nativeEvent, touchId);\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      values\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n\n    if (handleChange) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      slider.removeEventListener('touchstart', handleTouchStart, {\n        passive: doesSupportTouchActionNone()\n      });\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n  const handleMouseDown = useEventCallback(event => {\n    if (onMouseDown) {\n      onMouseDown(event);\n    } // Only handle left clicks\n\n\n    if (event.button !== 0) {\n      return;\n    } // Avoid text selection\n\n\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      values\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n\n    if (handleChange) {\n      handleChange(event, newValue, activeIndex);\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove);\n    doc.addEventListener('mouseup', handleTouchEnd);\n  });\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n\n  const trackStyle = _extends({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap));\n\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  const Rail = components.Rail || 'span';\n  const railProps = componentsProps.rail || {};\n  const Track = components.Track || 'span';\n  const trackProps = componentsProps.track || {};\n  const Thumb = components.Thumb || 'span';\n  const thumbProps = componentsProps.thumb || {};\n  const ValueLabel = components.ValueLabel || SliderValueLabelUnstyled;\n  const valueLabelProps = componentsProps.valueLabel || {};\n  const Mark = components.Mark || 'span';\n  const markProps = componentsProps.mark || {};\n  const MarkLabel = components.MarkLabel || 'span';\n  const markLabelProps = componentsProps.markLabel || {};\n  const Input = components.Input || 'input';\n  const inputProps = componentsProps.input || {}; // all props with defaults\n  // consider extracting to hook an reusing the lint rule for the varints\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    disabled,\n    dragging,\n    isRtl,\n    marked: marks.length > 0 && marks.some(mark => mark.label),\n    max,\n    min,\n    orientation,\n    scale,\n    step,\n    track,\n    valueLabelDisplay,\n    valueLabelFormat\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({\n    ref: handleRef,\n    onMouseDown: handleMouseDown\n  }, rootProps, !isHostComponent(Root) && {\n    as: component,\n    ownerState: _extends({}, ownerState, rootProps.ownerState)\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [/*#__PURE__*/_jsx(Rail, _extends({}, railProps, !isHostComponent(Rail) && {\n      ownerState: _extends({}, ownerState, railProps.ownerState)\n    }, {\n      className: clsx(classes.rail, railProps.className)\n    })), /*#__PURE__*/_jsx(Track, _extends({}, trackProps, !isHostComponent(Track) && {\n      ownerState: _extends({}, ownerState, trackProps.ownerState)\n    }, {\n      className: clsx(classes.track, trackProps.className),\n      style: _extends({}, trackStyle, trackProps.style)\n    })), marks.map((mark, index) => {\n      const percent = valueToPercent(mark.value, min, max);\n      const style = axisProps[axis].offset(percent);\n      let markActive;\n\n      if (track === false) {\n        markActive = values.indexOf(mark.value) !== -1;\n      } else {\n        markActive = track === 'normal' && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === 'inverted' && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);\n      }\n\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(Mark, _extends({\n          \"data-index\": index\n        }, markProps, !isHostComponent(Mark) && {\n          ownerState: _extends({}, ownerState, markProps.ownerState),\n          markActive\n        }, {\n          style: _extends({}, style, markProps.style),\n          className: clsx(classes.mark, markProps.className, markActive && classes.markActive)\n        })), mark.label != null ? /*#__PURE__*/_jsx(MarkLabel, _extends({\n          \"aria-hidden\": true,\n          \"data-index\": index\n        }, markLabelProps, !isHostComponent(MarkLabel) && {\n          ownerState: _extends({}, ownerState, markLabelProps.ownerState)\n        }, {\n          markLabelActive: markActive,\n          style: _extends({}, style, markLabelProps.style),\n          className: clsx(classes.markLabel, markLabelProps.className, markActive && classes.markLabelActive),\n          children: mark.label\n        })) : null]\n      }, mark.value);\n    }), values.map((value, index) => {\n      const percent = valueToPercent(value, min, max);\n      const style = axisProps[axis].offset(percent);\n      const ValueLabelComponent = valueLabelDisplay === 'off' ? Forward : ValueLabel;\n      return /*#__PURE__*/_jsx(React.Fragment, {\n        children: /*#__PURE__*/_jsx(ValueLabelComponent, _extends({\n          valueLabelFormat: valueLabelFormat,\n          valueLabelDisplay: valueLabelDisplay,\n          value: typeof valueLabelFormat === 'function' ? valueLabelFormat(scale(value), index) : valueLabelFormat,\n          index: index,\n          open: open === index || active === index || valueLabelDisplay === 'on',\n          disabled: disabled\n        }, valueLabelProps, {\n          className: clsx(classes.valueLabel, valueLabelProps.className)\n        }, !isHostComponent(ValueLabel) && {\n          ownerState: _extends({}, ownerState, valueLabelProps.ownerState)\n        }, {\n          children: /*#__PURE__*/_jsx(Thumb, _extends({\n            \"data-index\": index,\n            onMouseOver: handleMouseOver,\n            onMouseLeave: handleMouseLeave\n          }, thumbProps, {\n            className: clsx(classes.thumb, thumbProps.className, active === index && classes.active, focusVisible === index && classes.focusVisible)\n          }, !isHostComponent(Thumb) && {\n            ownerState: _extends({}, ownerState, thumbProps.ownerState)\n          }, {\n            style: _extends({}, style, {\n              pointerEvents: disableSwap && active !== index ? 'none' : undefined\n            }, thumbProps.style),\n            children: /*#__PURE__*/_jsx(Input, _extends({\n              tabIndex: tabIndex,\n              \"data-index\": index,\n              \"aria-label\": getAriaLabel ? getAriaLabel(index) : ariaLabel,\n              \"aria-labelledby\": ariaLabelledby,\n              \"aria-orientation\": orientation,\n              \"aria-valuemax\": scale(max),\n              \"aria-valuemin\": scale(min),\n              \"aria-valuenow\": scale(value),\n              \"aria-valuetext\": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,\n              onFocus: handleFocus,\n              onBlur: handleBlur,\n              name: name,\n              type: \"range\",\n              min: props.min,\n              max: props.max,\n              step: props.step,\n              disabled: disabled,\n              value: values[index],\n              onChange: handleHiddenInputChange,\n              style: _extends({}, visuallyHidden, {\n                direction: isRtl ? 'rtl' : 'ltr',\n                // So that VoiceOver's focus indicator matches the thumb's dimensions\n                width: '100%',\n                height: '100%'\n              }, inputProps.style)\n            }, !isHostComponent(Input) && {\n              ownerState: _extends({}, ownerState, inputProps.ownerState)\n            }, inputProps))\n          }))\n        }))\n      }, index);\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SliderUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the slider.\n   */\n  'aria-label': chainPropTypes(PropTypes.string, props => {\n    const range = Array.isArray(props.value || props.defaultValue);\n\n    if (range && props['aria-label'] != null) {\n      return new Error('MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The id of the element containing a label for the slider.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A string value that provides a user-friendly name for the current value of the slider.\n   */\n  'aria-valuetext': chainPropTypes(PropTypes.string, props => {\n    const range = Array.isArray(props.value || props.defaultValue);\n\n    if (range && props['aria-valuetext'] != null) {\n      return new Error('MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Slider.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Input: PropTypes.elementType,\n    Mark: PropTypes.elementType,\n    MarkLabel: PropTypes.elementType,\n    Rail: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Thumb: PropTypes.elementType,\n    Track: PropTypes.elementType,\n    ValueLabel: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Slider.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    input: PropTypes.object,\n    mark: PropTypes.object,\n    markLabel: PropTypes.object,\n    rail: PropTypes.object,\n    root: PropTypes.object,\n    thumb: PropTypes.object,\n    track: PropTypes.object,\n    valueLabel: PropTypes.shape({\n      className: PropTypes.string,\n      components: PropTypes.shape({\n        Root: PropTypes.elementType\n      }),\n      style: PropTypes.object,\n      value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n      valueLabelDisplay: PropTypes.oneOf(['auto', 'off', 'on'])\n    })\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.\n   * @default false\n   */\n  disableSwap: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.\n   * This is important for screen reader users.\n   * @param {number} index The thumb label's index to format.\n   * @returns {string}\n   */\n  getAriaLabel: PropTypes.func,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.\n   * This is important for screen reader users.\n   * @param {number} value The thumb label's value to format.\n   * @param {number} index The thumb label's index to format.\n   * @returns {string}\n   */\n  getAriaValueText: PropTypes.func,\n\n  /**\n   * Indicates whether the theme context has rtl direction. It is set automatically.\n   * @default false\n   */\n  isRtl: PropTypes.bool,\n\n  /**\n   * Marks indicate predetermined values to which the user can move the slider.\n   * If `true` the marks are spaced according the value of the `step` prop.\n   * If an array, it should contain objects with `value` and an optional `label` keys.\n   * @default false\n   */\n  marks: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    value: PropTypes.number.isRequired\n  })), PropTypes.bool]),\n\n  /**\n   * The maximum allowed value of the slider.\n   * Should not be equal to min.\n   * @default 100\n   */\n  max: PropTypes.number,\n\n  /**\n   * The minimum allowed value of the slider.\n   * Should not be equal to max.\n   * @default 0\n   */\n  min: PropTypes.number,\n\n  /**\n   * Name attribute of the hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback function that is fired when the slider's value changed.\n   *\n   * @param {Event} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * **Warning**: This is a generic event not a change event.\n   * @param {number | number[]} value The new value.\n   * @param {number} activeThumb Index of the currently moved thumb.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the `mouseup` is triggered.\n   *\n   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {number | number[]} value The new value.\n   */\n  onChangeCommitted: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * A transformation function, to change the scale of the slider.\n   * @default (x) => x\n   */\n  scale: PropTypes.func,\n\n  /**\n   * The granularity with which the slider can step through values. (A \"discrete\" slider.)\n   * The `min` prop serves as the origin for the valid values.\n   * We recommend (max - min) to be evenly divisible by the step.\n   *\n   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.\n   * @default 1\n   */\n  step: PropTypes.number,\n\n  /**\n   * Tab index attribute of the hidden `input` element.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The track presentation:\n   *\n   * - `normal` the track will render a bar representing the slider value.\n   * - `inverted` the track will render a bar representing the remaining slider value.\n   * - `false` the track will render without a bar.\n   * @default 'normal'\n   */\n  track: PropTypes.oneOf(['inverted', 'normal', false]),\n\n  /**\n   * The value of the slider.\n   * For ranged sliders, provide an array with two values.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n\n  /**\n   * Controls when the value label is displayed:\n   *\n   * - `auto` the value label will display when the thumb is hovered or focused.\n   * - `on` will display persistently.\n   * - `off` will never display.\n   * @default 'off'\n   */\n  valueLabelDisplay: PropTypes.oneOf(['auto', 'off', 'on']),\n\n  /**\n   * The format function the value label's value.\n   *\n   * When a function is provided, it should have the following signature:\n   *\n   * - {number} value The value label's value to format\n   * - {number} index The value label's index to format\n   * @default (x) => x\n   */\n  valueLabelFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n} : void 0;\nexport default SliderUnstyled;"],"sourceRoot":""}