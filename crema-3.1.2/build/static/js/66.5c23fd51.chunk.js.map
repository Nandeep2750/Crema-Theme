{"version":3,"sources":["../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/icons-material/ArrowUpward.js","pages/dashboards/HealthCare/DrCard/index.js","pages/dashboards/HealthCare/HealthStatics/StaticsGraph.js","pages/dashboards/HealthCare/HealthStatics/index.js","pages/dashboards/HealthCare/NewPatients/PatientGraph.js","pages/dashboards/HealthCare/NewPatients/index.js","pages/dashboards/HealthCare/CancelVisits/VisitsGraph.js","pages/dashboards/HealthCare/CancelVisits/index.js","pages/dashboards/HealthCare/TopDoctors/DoctorCell.js","pages/dashboards/HealthCare/TopDoctors/index.js","pages/dashboards/HealthCare/UpcomingAppointments/AppointmentCell.js","pages/dashboards/HealthCare/UpcomingAppointments/index.js","pages/dashboards/HealthCare/Notifications/NotificationCell.js","pages/dashboards/HealthCare/Notifications/index.js","pages/dashboards/HealthCare/HospitalStatics/index.js","pages/dashboards/HealthCare/RecentPatients/PatientsTable/TableHeading.js","pages/dashboards/HealthCare/RecentPatients/PatientsTable/TableItem.js","pages/dashboards/HealthCare/RecentPatients/PatientsTable/index.js","pages/dashboards/HealthCare/RecentPatients/index.js","pages/dashboards/HealthCare/InfoWidget/index.js","pages/dashboards/HealthCare/HospitalActivity/StatGraphs.js","pages/dashboards/HealthCare/HospitalActivity/index.js","pages/dashboards/HealthCare/ProfileCard/index.js","pages/dashboards/HealthCare/AppointmentCard/Graph.js","pages/dashboards/HealthCare/AppointmentCard/index.js","pages/dashboards/HealthCare/HeartRate/ViewGraph.js","pages/dashboards/HealthCare/HeartRate/index.js","pages/dashboards/HealthCare/YourActivity/ActivityGraph.js","pages/dashboards/HealthCare/YourActivity/index.js","pages/dashboards/HealthCare/index.js"],"names":["getTableRowUtilityClass","slot","generateUtilityClass","tableRowClasses","generateUtilityClasses","_excluded","TableRowRoot","styled","name","overridesResolver","props","styles","ownerState","root","head","footer","theme","color","display","verticalAlign","outline","hover","backgroundColor","palette","action","selected","alpha","primary","main","selectedOpacity","hoverOpacity","TableRow","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","tablelvl2","Tablelvl2Context","_extends","variant","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","role","getTableUtilityClass","TableRoot","stickyHeader","width","borderCollapse","borderSpacing","typography","body2","padding","spacing","text","secondary","textAlign","captionSide","defaultComponent","Table","size","table","TableContext","Provider","value","children","getTableHeadUtilityClass","TableHeadRoot","TableHead","getTableBodyUtilityClass","TableBodyRoot","TableBody","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","DrCard","data","bgColor","icon","time","category","AppCard","sxStyle","height","Box","sx","mr","alignSelf","src","alt","alignItems","flex","overflow","Typography","fontWeight","Fonts","BOLD","textOverflow","whiteSpace","pt","ml","borderRadius","justifyContent","background","paper","StaticsGraph","useThemeContext","ResponsiveContainer","AreaChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","tickLine","axisLine","Tooltip","labelStyle","CartesianGrid","strokeDasharray","horizontal","vertical","Area","type","strokeWidth","fillOpacity","fill","HealthStatics","useState","dataOne","graphData","setGraphData","messages","useIntl","title","AppSelect","menus","defaultValue","onChange","dataTwo","dataThree","PatientGraph","NewPatients","AppMenu","mb","fontSize","mx","VisitsGraph","stroke","CancelVisits","DoctorCell","doctor","Avatar","profile_pic","MEDIUM","speciality","scheduled","Button","TopDoctors","contentStyle","px","AppScrollbar","maxHeight","AppList","renderRow","AppointmentCell","appointment","flexDirection","my","appointmentTime","appointmentDate","UpcomingAppointments","NotificationCell","notification","minWidth","mt","Notifications","HospitalStatics","TableHeading","pl","pr","TableCell","TableItem","scope","align","gender","weight","assignedDr","date","status","PatientsTable","recentPatients","AppTableContainer","map","defaultProps","RecentPatients","console","log","InfoWidget","style","measurement","StatGraphs","LineChart","Line","dot","activeDot","r","HospitalActivity","ProfileCard","p","py","borderRight","grey","borderTop","Graph","BarChart","barSize","Bar","AppointmentCard","marginRight","chartValue","chartTime","chartData","ViewGraph","HeartRate","xs","xl","common","black","unit","ActivityGraph","YourActivity","HealthCare","dispatch","useDispatch","useEffect","onGetHCData","healthCare","useSelector","dashboard","AppAnimate","animation","delay","AppGridContainer","salesState","index","Grid","item","sm","lg","md","hospitalActivity","appointmentCards","heartCard","yourActivity","temperatureCard","doses","topDoctors","upcomingAppointment","notifications","heathStatics","newPatients","cancelVisits","hospitalStatics","bloodCard","AppInfoView"],"mappings":"gNACO,SAASA,EAAwBC,GACtC,OAAOC,YAAqB,cAAeD,GAE7C,IACeE,EADSC,YAAuB,cAAe,CAAC,OAAQ,WAAY,QAAS,OAAQ,W,OCF9FC,EAAY,CAAC,YAAa,YAAa,QAAS,YA0BhDC,EAAeC,YAAO,KAAM,CAChCC,KAAM,cACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAWE,MAAQH,EAAOG,KAAMF,EAAWG,QAAUJ,EAAOI,UAPhER,EASlB,kBACDS,EADC,EACDA,MADC,UAGDC,MAAO,UACPC,QAAS,YACTC,cAAe,SAEfC,QAAS,GAPR,0BAQKjB,EAAgBkB,MARrB,UAQqC,CACpCC,gBAAiBN,EAAMO,QAAQC,OAAOH,QATvC,0BAWKlB,EAAgBsB,UAAa,CACjCH,gBAAiBI,YAAMV,EAAMO,QAAQI,QAAQC,KAAMZ,EAAMO,QAAQC,OAAOK,iBACxE,UAAW,CACTP,gBAAiBI,YAAMV,EAAMO,QAAQI,QAAQC,KAAMZ,EAAMO,QAAQC,OAAOK,gBAAkBb,EAAMO,QAAQC,OAAOM,iBAdlH,KAwBGC,EAAwBC,cAAiB,SAAkBC,EAASC,GACxE,IAAMxB,EAAQyB,YAAc,CAC1BzB,MAAOuB,EACPzB,KAAM,gBAIN4B,EAIE1B,EAJF0B,UADF,EAKI1B,EAHF2B,iBAFF,MAZuB,KAYvB,IAKI3B,EAFFW,aAHF,WAKIX,EADFe,gBAJF,SAMMa,EAAQC,YAA8B7B,EAAOL,GAE7CmC,EAAYR,aAAiBS,KAE7B7B,EAAa8B,YAAS,GAAIhC,EAAO,CACrC2B,YACAhB,QACAI,WACAX,KAAM0B,GAAmC,SAAtBA,EAAUG,QAC7B5B,OAAQyB,GAAmC,WAAtBA,EAAUG,UAG3BC,EAvEkB,SAAAhC,GACxB,IACEgC,EAKEhC,EALFgC,QAMIC,EAAQ,CACZhC,KAAM,CAAC,OAFLD,EAJFa,UAM2B,WAFzBb,EAHFS,OAKgD,QAF9CT,EAFFE,MAIiE,OAF/DF,EADFG,QAGmF,WAErF,OAAO+B,YAAeD,EAAO7C,EAAyB4C,GA4DtCG,CAAkBnC,GAClC,OAAoBoC,cAAK1C,EAAcoC,YAAS,CAC9CO,GAAIZ,EACJH,IAAKA,EACLE,UAAWc,kBAAKN,EAAQ/B,KAAMuB,GAC9Be,KAnCqB,OAmCfd,EAAiC,KAAO,MAC9CzB,WAAYA,GACX0B,OAgDUP,O,8HC3IR,SAASqB,EAAqBnD,GACnC,OAAOC,YAAqB,WAAYD,GAErBG,YAAuB,WAAY,CAAC,OAAQ,iBAAjE,I,OCFMC,EAAY,CAAC,YAAa,YAAa,UAAW,OAAQ,gBAsB1DgD,EAAY9C,YAAO,QAAS,CAChCC,KAAM,WACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAW0C,cAAgB3C,EAAO2C,gBAPzC/C,EASf,gBACDS,EADC,EACDA,MACAJ,EAFC,EAEDA,WAFC,OAGG8B,YAAS,CACbxB,QAAS,QACTqC,MAAO,OACPC,eAAgB,WAChBC,cAAe,EACf,YAAaf,YAAS,GAAI1B,EAAM0C,WAAWC,MAAO,CAChDC,QAAS5C,EAAM6C,QAAQ,GACvB5C,MAAOD,EAAMO,QAAQuC,KAAKC,UAC1BC,UAAW,OACXC,YAAa,YAEdrD,EAAW0C,cAAgB,CAC5BE,eAAgB,gBAEZU,EAAmB,QACnBC,EAAqBnC,cAAiB,SAAeC,EAASC,GAClE,IAAMxB,EAAQyB,YAAc,CAC1BzB,MAAOuB,EACPzB,KAAM,aAIN4B,EAKE1B,EALF0B,UADF,EAMI1B,EAJF2B,iBAFF,MAEc6B,EAFd,IAMIxD,EAHFkD,eAHF,MAGY,SAHZ,IAMIlD,EAFF0D,YAJF,MAIS,SAJT,IAMI1D,EADF4C,oBALF,SAOMhB,EAAQC,YAA8B7B,EAAOL,GAE7CO,EAAa8B,YAAS,GAAIhC,EAAO,CACrC2B,YACAuB,UACAQ,OACAd,iBAGIV,EA5DkB,SAAAhC,GACxB,IACEgC,EAEEhC,EAFFgC,QAGIC,EAAQ,CACZhC,KAAM,CAAC,OAFLD,EADF0C,cAG+B,iBAEjC,OAAOR,YAAeD,EAAOO,EAAsBR,GAoDnCG,CAAkBnC,GAC5ByD,EAAQrC,WAAc,iBAAO,CACjC4B,UACAQ,OACAd,kBACE,CAACM,EAASQ,EAAMd,IACpB,OAAoBN,cAAKsB,IAAaC,SAAU,CAC9CC,MAAOH,EACPI,SAAuBzB,cAAKK,EAAWX,YAAS,CAC9CO,GAAIZ,EACJc,KAAMd,IAAc6B,EAAmB,KAAO,QAC9ChC,IAAKA,EACLE,UAAWc,kBAAKN,EAAQ/B,KAAMuB,GAC9BxB,WAAYA,GACX0B,SA2DQ6B,O,8HCjJR,SAASO,EAAyBzE,GACvC,OAAOC,YAAqB,eAAgBD,GAErBG,YAAuB,eAAgB,CAAC,SAAjE,I,OCFMC,EAAY,CAAC,YAAa,aAqB1BsE,EAAgBpE,YAAO,QAAS,CACpCC,KAAM,eACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOE,OAHzBN,CAInB,CACDW,QAAS,uBAELsB,EAAY,CAChBG,QAAS,QAELuB,EAAmB,QACnBU,EAAyB5C,cAAiB,SAAmBC,EAASC,GAC1E,IAAMxB,EAAQyB,YAAc,CAC1BzB,MAAOuB,EACPzB,KAAM,iBAIN4B,EAEE1B,EAFF0B,UADF,EAGI1B,EADF2B,iBAFF,MAEc6B,EAFd,EAIM5B,EAAQC,YAA8B7B,EAAOL,GAE7CO,EAAa8B,YAAS,GAAIhC,EAAO,CACrC2B,cAGIO,EArCkB,SAAAhC,GACxB,IACEgC,EACEhC,EADFgC,QAKF,OAAOE,YAHO,CACZjC,KAAM,CAAC,SAEoB6D,EAA0B9B,GA8BvCG,CAAkBnC,GAClC,OAAoBoC,cAAKP,IAAiB8B,SAAU,CAClDC,MAAOhC,EACPiC,SAAuBzB,cAAK2B,EAAejC,YAAS,CAClDO,GAAIZ,EACJD,UAAWc,kBAAKN,EAAQ/B,KAAMuB,GAC9BF,IAAKA,EACLiB,KAAMd,IAAc6B,EAAmB,KAAO,WAC9CtD,WAAYA,GACX0B,SAqCQsC,O,8HC/FR,SAASC,EAAyB5E,GACvC,OAAOC,YAAqB,eAAgBD,GAErBG,YAAuB,eAAgB,CAAC,SAAjE,I,OCFMC,EAAY,CAAC,YAAa,aAqB1ByE,EAAgBvE,YAAO,QAAS,CACpCC,KAAM,eACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOE,OAHzBN,CAInB,CACDW,QAAS,oBAELsB,EAAY,CAChBG,QAAS,QAELuB,EAAmB,QACnBa,EAAyB/C,cAAiB,SAAmBC,EAASC,GAC1E,IAAMxB,EAAQyB,YAAc,CAC1BzB,MAAOuB,EACPzB,KAAM,iBAIN4B,EAEE1B,EAFF0B,UADF,EAGI1B,EADF2B,iBAFF,MAEc6B,EAFd,EAIM5B,EAAQC,YAA8B7B,EAAOL,GAE7CO,EAAa8B,YAAS,GAAIhC,EAAO,CACrC2B,cAGIO,EArCkB,SAAAhC,GACxB,IACEgC,EACEhC,EADFgC,QAKF,OAAOE,YAHO,CACZjC,KAAM,CAAC,SAEoBgE,EAA0BjC,GA8BvCG,CAAkBnC,GAClC,OAAoBoC,cAAKP,IAAiB8B,SAAU,CAClDC,MAAOhC,EACPiC,SAAuBzB,cAAK8B,EAAepC,YAAS,CAClDN,UAAWc,kBAAKN,EAAQ/B,KAAMuB,GAC9Ba,GAAIZ,EACJH,IAAKA,EACLiB,KAAMd,IAAc6B,EAAmB,KAAO,WAC9CtD,WAAYA,GACX0B,SAqCQyC,O,kCC9Ff,IAAIC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CZ,OAAO,IAETY,EAAQC,aAAU,EAElB,IAAIC,EAAiBN,EAAuBC,EAAQ,KAEhDM,EAAcN,EAAQ,GAEtBO,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,gEACD,eAEJN,EAAQC,QAAUG,G,yIC+EHG,EA1FA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACRC,EAAuCD,EAAvCC,QAASC,EAA8BF,EAA9BE,KAAMC,EAAwBH,EAAxBG,KAAMC,EAAkBJ,EAAlBI,SAAUxF,EAAQoF,EAARpF,KACtC,OACE,cAACyF,EAAA,EAAD,CACEC,QAAS,CACP5E,gBAAiBuE,EACjBM,OAAQ,GAEV/D,UAAU,aALZ,SAOE,eAACgE,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,QAFb,UAKE,cAACkF,EAAA,EAAD,CACEC,GAAI,CACFC,GAAI,EACJC,UAAW,UAHf,SAME,qBAAKC,IAAKV,EAAMW,IAAI,WAEtB,eAACL,EAAA,EAAD,CACEC,GAAI,CACF9C,MAAO,oBACPrC,QAAS,OACTwF,WAAY,UAJhB,UAOE,eAACN,EAAA,EAAD,CACEC,GAAI,CACFM,KAAM,EACN1F,MAAO,QACP2F,SAAU,SACVN,GAAI,GALR,UAQE,cAACO,EAAA,EAAD,CACER,GAAI,CACFS,WAAYC,IAAMC,KAClBJ,SAAU,SACVK,aAAc,WACdC,WAAY,SACZ3D,MAAO,QAETlB,UAAU,KACVM,QAAQ,UACR1B,MAAM,UAVR,SAYG+E,IAEH,cAACI,EAAA,EAAD,CACE/D,UAAU,IACVgE,GAAI,CACFc,GAAI,IACJP,SAAU,SACVK,aAAc,WACdC,WAAY,SACZ3D,MAAO,QAPX,SAUG/C,OAGL,cAAC4F,EAAA,EAAD,CACEC,GAAI,CACFF,OAAQ,GACR5C,MAAO,GACP6D,GAAI,OACJlG,QAAS,OACTwF,WAAY,SACZW,aAAc,MACdC,eAAgB,SAChBR,WAAYC,IAAMC,KAClB/F,MAAO,SAACD,GAAD,OAAWA,EAAMO,QAAQuC,KAAKC,WACrCzC,gBAAiB,SAACN,GAAD,OAAWA,EAAMO,QAAQgG,WAAWC,OACrD,gEAAiE,CAC/DtG,QAAS,SAbf,SAiBG6E,a,oGCjCE0B,EA3CM,SAAC,GAAY,IAAX7B,EAAU,EAAVA,KACd5E,EAAS0G,cAAT1G,MACP,OACE,cAAC2G,EAAA,EAAD,CAAqBpE,MAAM,OAAO4C,OAAQ,IAA1C,SACE,eAACyB,EAAA,EAAD,CAAWhC,KAAMA,EAAMiC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GAApE,UACE,+BACE,iCAAgBC,GAAG,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACE,sBACEC,OAAO,KACPC,UAAWxH,EAAMO,QAAQI,QAAQC,KACjC6G,YAAa,KAEf,sBACEF,OAAO,MACPC,UAAWxH,EAAMO,QAAQI,QAAQC,KACjC6G,YAAa,SAInB,cAACC,EAAA,EAAD,CACEC,QAAQ,QACRC,UAAU,EACVC,UAAU,EACVjF,QAAS,CAACoE,KAAM,GAAID,MAAO,MAE7B,cAACe,EAAA,EAAD,CAASC,WAAY,CAAC9H,MAAO,WAC7B,cAAC+H,EAAA,EAAD,CACEC,gBAAgB,OAChBC,YAAY,EACZC,UAAU,IAEZ,cAACC,EAAA,EAAD,CACEC,KAAK,WACLV,QAAQ,SACRW,YAAa,EACbC,YAAa,EACbC,KAAK,wBC4BAC,EApEO,SAAC,GAAY,IAAX7D,EAAU,EAAVA,KACtB,EAAkC8D,mBAAS9D,EAAK+D,SAAhD,mBAAOC,EAAP,KAAkBC,EAAlB,KAiCOC,EAAYC,cAAZD,SACP,OACE,cAAC7D,EAAA,EAAD,CACE+D,MAAOF,EAAS,gCAChBtI,OACE,eAAC4E,EAAA,EAAD,CACEC,GAAI,CACFe,GAAI,OACJlG,QAAS,OACTwF,WAAY,UAJhB,UAOE,cAACuD,EAAA,EAAD,CACEC,MAAO,CAAC,KAAM,KAAM,MACpBC,aAAc,KACdC,SA/Ce,SAAC5F,GACxB,OAAQA,GACN,KAAK,KACHqF,EAAajE,EAAKyE,SAClB,MACF,KAAK,KACHR,EAAajE,EAAK0E,WAClB,MAIF,QACET,EAAajE,EAAK+D,aAqChB,cAACM,EAAA,EAAD,CACEC,MAAO,CACLJ,EAAS,eACTA,EAAS,eACTA,EAAS,kBAEXK,aAAcL,EAAS,eACvBM,SAxCgB,SAAC5F,GACzB,OAAQA,GACN,IAAK,OACHqF,EAAajE,EAAKyE,SAClB,MACF,IAAK,OAML,QACER,EAAajE,EAAK0E,iBAJpB,IAAK,SACHT,EAAajE,EAAK+D,gBAStB,SA2BE,cAAC,EAAD,CAAc/D,KAAMgE,OCvBXW,EArCM,SAAC,GAAY,IAAX3E,EAAU,EAAVA,KACd5E,EAAS0G,cAAT1G,MACP,OACE,cAAC2G,EAAA,EAAD,CAAqBpE,MAAM,OAAO4C,OAAQ,IAA1C,SACE,eAACyB,EAAA,EAAD,CAAWhC,KAAMA,EAAMiC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GAApE,UACE,+BACE,iCAAgBC,GAAG,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACE,sBACEC,OAAO,KACPC,UAAWxH,EAAMO,QAAQI,QAAQC,KACjC6G,YAAa,KAEf,sBACEF,OAAO,MACPC,UAAWxH,EAAMO,QAAQI,QAAQC,KACjC6G,YAAa,SAInB,cAACK,EAAA,EAAD,CAASC,WAAY,CAAC9H,MAAO,WAC7B,cAAC+H,EAAA,EAAD,CACEC,gBAAgB,OAChBC,YAAY,EACZC,UAAU,IAEZ,cAACC,EAAA,EAAD,CACEC,KAAK,WACLV,QAAQ,SACRW,YAAa,EACbC,YAAa,EACbC,KAAK,wB,SCiBAgB,EAjDK,SAAC,GAAY,IAAX5E,EAAU,EAAVA,KACbkE,EAAYC,cAAZD,SAEP,OACE,cAAC7D,EAAA,EAAD,CAAS+D,MAAOF,EAAS,yBAA0BtI,OAAQ,cAACiJ,EAAA,EAAD,IAA3D,SACE,eAACrE,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,CACEC,GAAI,CACFqE,GAAI,EACJxJ,QAAS,OACTwF,WAAY,UAJhB,UAOE,cAACN,EAAA,EAAD,CACE/D,UAAU,OACVgE,GAAI,CACFC,GAAI,EACJqE,SAAU,GACV7D,WAAYC,IAAMC,MALtB,iBAUA,cAACZ,EAAA,EAAD,CACEC,GAAI,CACF,QAAS,CACPF,OAAQ,KAHd,SAOE,qBACEK,IAAK,mDACLC,IAAI,cAIV,cAACL,EAAA,EAAD,CACEC,GAAI,CACFuE,IAAK,EACLF,IAAK,GAHT,SAME,cAAC,EAAD,CAAc9E,KAAMA,YCFfiF,EAtCK,SAAC,GAAY,IAAXjF,EAAU,EAAVA,KACb5E,EAAS0G,cAAT1G,MACP,OACE,cAAC2G,EAAA,EAAD,CAAqBpE,MAAM,OAAO4C,OAAQ,IAA1C,SACE,eAACyB,EAAA,EAAD,CAAWhC,KAAMA,EAAMiC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GAApE,UACE,+BACE,iCAAgBC,GAAG,aAAaC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAxD,UACE,sBACEC,OAAO,KACPC,UAAWxH,EAAMO,QAAQwC,UAAUnC,KACnC6G,YAAa,KAEf,sBACEF,OAAO,MACPC,UAAWxH,EAAMO,QAAQwC,UAAUnC,KACnC6G,YAAa,SAInB,cAACK,EAAA,EAAD,CAASC,WAAY,CAAC9H,MAAO,WAC7B,cAAC+H,EAAA,EAAD,CACEC,gBAAgB,OAChBC,YAAY,EACZC,UAAU,IAEZ,cAACC,EAAA,EAAD,CACEC,KAAK,WACLV,QAAQ,SACRmC,OAAQ9J,EAAMO,QAAQwC,UAAUnC,KAChC0H,YAAa,EACbC,YAAa,EACbC,KAAK,2BCgBAuB,EAjDM,SAAC,GAAY,IAAXnF,EAAU,EAAVA,KACdkE,EAAYC,cAAZD,SAEP,OACE,cAAC7D,EAAA,EAAD,CACE+D,MAAOF,EAAS,8BAChBtI,OAAQ,cAACiJ,EAAA,EAAD,IAFV,SAIE,eAACrE,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,CACEC,GAAI,CACFqE,GAAI,EACJxJ,QAAS,OACTwF,WAAY,UAJhB,UAOE,cAACN,EAAA,EAAD,CACE/D,UAAU,OACVgE,GAAI,CACFC,GAAI,EACJqE,SAAU,GACV7D,WAAYC,IAAMC,MALtB,gBAUA,cAACZ,EAAA,EAAD,CACEC,GAAI,CACF,QAAS,CACPF,OAAQ,KAHd,SAOE,qBAAKK,IAAK,4CAA6CC,IAAI,cAG/D,cAACL,EAAA,EAAD,CACEC,GAAI,CACFuE,IAAK,EACLF,IAAK,GAHT,SAME,cAAC,EAAD,CAAa9E,KAAMA,Y,2BCkBdoF,EA9DI,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB,OACE,eAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,SACZ9C,QAAS,YAEXxB,UAAU,aANZ,UAQE,cAAC8I,EAAA,EAAD,CACE7E,GAAI,CACFC,GAAI,EACJ/C,MAAO,GACP4C,OAAQ,IAEVK,IAAKyE,EAAOE,cAEd,eAAC/E,EAAA,EAAD,CACEC,GAAI,CACFsE,SAAU,IAFd,UAKE,cAACvE,EAAA,EAAD,CACE/D,UAAU,KACVgE,GAAI,CACFS,WAAYC,IAAMqE,OAClBV,GAAI,IAJR,SAOGO,EAAOzK,OAEV,cAAC4F,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO,kBAEToB,UAAU,IAJZ,SAMG4I,EAAOI,gBAGZ,cAACjF,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,SACZU,GAAI,QAJR,SAOG6D,EAAOK,UACN,cAACC,EAAA,EAAD,CAAQtK,MAAM,YAAY0B,QAAQ,WAAlC,oBAIA,cAAC4I,EAAA,EAAD,CAAQtK,MAAM,UAAU0B,QAAQ,WAAhC,4B,QCjCK6I,EAlBI,SAAC,GAAY,IAAX5F,EAAU,EAAVA,KACZkE,EAAYC,cAAZD,SACP,OACE,cAAC7D,EAAA,EAAD,CACE+D,MAAOF,EAAS,yBAChB2B,aAAc,CAACC,GAAI,GACnBlK,OAAQ,cAACiJ,EAAA,EAAD,IAHV,SAKE,cAACkB,EAAA,EAAD,CAActF,GAAI,CAACuF,UAAW,KAA9B,SACE,cAACC,EAAA,EAAD,CACEjG,KAAMA,EACNkG,UAAW,SAACb,GAAD,OAAY,cAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAO/C,YCoD1C6D,EAlES,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACxB,OACE,eAAC5F,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,SACZ9C,QAAS,YAEXxB,UAAU,aANZ,UAQE,cAAC8I,EAAA,EAAD,CACE7E,GAAI,CACFC,GAAI,EACJ/C,MAAO,GACP4C,OAAQ,IAEVK,IAAKwF,EAAYb,cAEnB,eAAC/E,EAAA,EAAD,CACEC,GAAI,CACFsE,SAAU,IAFd,UAKE,cAACvE,EAAA,EAAD,CACE/D,UAAU,KACVgE,GAAI,CACFS,WAAYC,IAAMqE,OAClBV,GAAI,IAJR,SAOGsB,EAAYxL,OAEf,cAAC4F,EAAA,EAAD,CACE/D,UAAU,IACVgE,GAAI,CACFpF,MAAO,gBAHX,SAMG+K,EAAYX,gBAGjB,eAACjF,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACT+K,cAAe,SACfvF,WAAY,SACZU,GAAI,QALR,UAQE,cAAChB,EAAA,EAAD,CACE/D,UAAU,IACVgE,GAAI,CACFpF,MAAO,eACPiL,GAAI,EACJvB,SAAU,GACV7D,WAAYC,IAAMC,MANtB,SASGgF,EAAYG,kBAEf,cAAC/F,EAAA,EAAD,CAAK/D,UAAU,IAAf,SAAoB2J,EAAYI,yBCrCzBC,EApBc,SAAC,GAAY,IAAXzG,EAAU,EAAVA,KACtBkE,EAAYC,cAAZD,SACP,OACE,cAAC7D,EAAA,EAAD,CACEwF,aAAc,CAACC,GAAI,GACnB1B,MAAOF,EAAS,mCAChBtI,OAAQ,cAACiJ,EAAA,EAAD,IAHV,SAKE,cAACkB,EAAA,EAAD,CAActF,GAAI,CAACuF,UAAW,KAA9B,SACE,cAACC,EAAA,EAAD,CACEjG,KAAMA,EACNkG,UAAW,SAACE,GAAD,OACT,cAAC,EAAD,CAAsCA,YAAaA,GAA7BA,EAAY9D,YC+B/BoE,EA/CU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACzB,OACE,eAACnG,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,aACZ9C,QAAS,aAEXxB,UAAU,aANZ,UAQE,cAACgE,EAAA,EAAD,CACEC,GAAI,CACFF,OAAQ,GACRqG,SAAU,GACVnF,aAAc,MACd/F,gBAAiBiL,EAAatL,MAC9BqF,GAAI,EACJmG,GAAI,OAGR,eAACrG,EAAA,EAAD,CACEC,GAAI,CACFsE,SAAU,IAFd,UAKE,cAACvE,EAAA,EAAD,CACE/D,UAAU,KACVgE,GAAI,CACFS,WAAYC,IAAMqE,OAClBV,GAAI,IAJR,SAOG6B,EAAavC,QAEhB,cAAC5D,EAAA,EAAD,CACE/D,UAAU,OACVgE,GAAI,CACFpF,MAAO,kBAHX,SAMGsL,EAAaxG,cCbT2G,EAvBO,SAAC,GAAY,IAAX9G,EAAU,EAAVA,KACfkE,EAAYC,cAAZD,SACP,OACE,cAAC7D,EAAA,EAAD,CACEwF,aAAc,CAACC,GAAI,GACnB1B,MAAOF,EAAS,2BAChBtI,OAAQ,cAACiJ,EAAA,EAAD,IAHV,SAKE,cAACkB,EAAA,EAAD,CAActF,GAAI,CAACuF,UAAW,KAA9B,SACE,cAACC,EAAA,EAAD,CACEjG,KAAMA,EACNkG,UAAW,SAACS,GAAD,OACT,cAAC,EAAD,CAEEA,aAAcA,GADTA,EAAarE,YC6CjByE,EA9DS,SAAC,GAAY,IAAX/G,EAAU,EAAVA,KACjBC,EAA8BD,EAA9BC,QAASC,EAAqBF,EAArBE,KAAMtB,EAAeoB,EAAfpB,MAAOhE,EAAQoF,EAARpF,KAC7B,OACE,cAACyF,EAAA,EAAD,CACEC,QAAS,CACPC,OAAQ,EACR7E,gBAAiBuE,GAEnBzD,UAAU,aALZ,SAOE,eAACgE,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,UAHhB,UAME,cAACN,EAAA,EAAD,CACEC,GAAI,CACFC,GAAI,EACJC,UAAW,cAHf,SAME,qBAAKC,IAAKV,EAAMW,IAAI,WAEtB,eAACL,EAAA,EAAD,CACEC,GAAI,CACF9C,MAAO,qBAFX,UAKE,cAACsD,EAAA,EAAD,CACExE,UAAU,KACVM,QAAQ,UACR1B,MAAM,UACNoF,GAAI,CACFsE,SAAU,GACV/D,SAAU,SACVK,aAAc,WACdC,WAAY,SACZ3D,MAAO,QATX,SAYGiB,IAEH,cAAC4B,EAAA,EAAD,CACE/D,UAAU,IACVgE,GAAI,CACFc,GAAI,GACJlG,MAAO,iBACP2F,SAAU,SACVK,aAAc,WACdC,WAAY,SACZ3D,MAAO,QARX,SAWG/C,a,kDC1BEoM,EA5BM,WACnB,OACE,eAAC7K,EAAA,EAAD,CACEsE,GAAI,CACF,OAAQ,CACNsE,SAAU,GACV/G,QAAS,EACTkD,WAAYC,IAAMC,KAClB,kBAAmB,CACjB6F,GAAI,GAEN,iBAAkB,CAChBC,GAAI,KAVZ,UAeE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,0BACA,cAACA,EAAA,EAAD,yBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,0BCqDSC,EAxEG,SAAC,GAAY,IAAXpH,EAAU,EAAVA,KAClB,OACE,eAAC7D,EAAA,EAAD,CAEEsE,GAAI,CACF,eAAgB,CACdsE,SAAU,GACV/G,QAAS,EACTsD,WAAY,SACZ,kBAAmB,CACjB2F,GAAI,GAEN,iBAAkB,CAChBC,GAAI,KAIV1K,UAAU,aAfZ,UAiBE,cAAC2K,EAAA,EAAD,CAAW1K,UAAU,KAAK4K,MAAM,MAAM7K,UAAU,YAAhD,SACE,eAACgE,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,UAHhB,UAME,cAACwE,EAAA,EAAD,CACE7E,GAAI,CACFC,GAAI,KAENE,IAAKZ,EAAKuF,cAEZ,cAAC/E,EAAA,EAAD,CACEC,GAAI,CACFS,WAAYC,IAAMqE,QAFtB,SAKGxF,EAAKpF,YAIZ,cAACuM,EAAA,EAAD,CAAWG,MAAM,OAAO9K,UAAU,YAAlC,SACGwD,EAAKuH,SAER,cAACJ,EAAA,EAAD,CAAWG,MAAM,OAAO9K,UAAU,YAAlC,SACGwD,EAAKwH,SAER,cAACL,EAAA,EAAD,CAAWG,MAAM,OAAO9K,UAAU,YAAlC,SACGwD,EAAKyH,aAER,cAACN,EAAA,EAAD,CAAWG,MAAM,OAAjB,SAAyBtH,EAAK0H,OAC9B,cAACP,EAAA,EAAD,CAAWG,MAAM,OAAjB,SACE,cAAC9G,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO2E,EAAK3E,MACZK,gBAAiBsE,EAAK3E,MAAQ,KAC9B2C,QAAS,WACTyD,aAAc,EACdnG,QAAS,eACTyJ,SAAU,IAPd,SAUG/E,EAAK2H,WAGV,cAACR,EAAA,EAAD,CAAWG,MAAM,QAAjB,SACE,cAACzC,EAAA,EAAD,QA/DG7E,EAAKpF,O,SCHVgN,EAAgB,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACtB,OACE,cAACC,EAAA,EAAD,UACE,eAACvJ,EAAA,EAAD,CAAO/B,UAAU,QAAjB,UACE,cAACwC,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,cAACG,EAAA,EAAD,UACG0I,EAAeE,KAAI,SAAC/H,GAAD,OAClB,cAAC,EAAD,CAAWA,KAAMA,GAAWA,EAAKsC,eAQ9BsF,IAEfA,EAAcI,aAAe,CAC3BH,eAAgB,ICtBlB,IA0BeI,GA1BQ,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,eAChB3D,EAAYC,cAAZD,SAIP,OACE,cAAC7D,EAAA,EAAD,CACEwF,aAAc,CAACC,GAAI,GACnB1B,MAAOF,EAAS,4BAChBtI,OACE,cAACyI,EAAA,EAAD,CACEC,MAAO,CACLJ,EAAS,sBACTA,EAAS,uBACTA,EAAS,wBAEXK,aAAcL,EAAS,sBACvBM,SAfoB,SAACxE,GAC3BkI,QAAQC,IAAI,SAAUnI,MAGtB,SAeE,cAAC,EAAD,CAAe6H,eAAgBA,OC+BtBO,GArDI,SAAC,GAAY,IAAXpI,EAAU,EAAVA,KACnB,OACE,cAACK,EAAA,EAAD,CACEC,QAAS,CAACC,OAAQ,GAClB/D,UAAU,aACVqJ,aAAc,CAACC,GAAI,GAHrB,SAKE,eAACtF,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACT+K,cAAe,SACftF,KAAM,EACND,WAAY,SACZY,eAAgB,UANpB,UASE,cAAClB,EAAA,EAAD,CACEC,GAAI,CACFoG,GAAI,EACJ/B,GAAI,GAHR,SAME,qBAAKlE,IAAKZ,EAAKE,KAAMW,IAAI,OAAOwH,MAAO,CAAC9H,OAAQ,GAAI5C,MAAO,QAE7D,eAAC6C,EAAA,EAAD,CACEC,GAAI,CACFrC,UAAW,UAFf,UAKE,cAACoC,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO,iBACPyJ,GAAI,GAHR,SAMG9E,EAAKpF,OAER,cAAC4F,EAAA,EAAD,CACE/D,UAAU,IACVgE,GAAI,CACFpF,MAAO2E,EAAK3E,MACZ0J,SAAU,GACV7D,WAAYC,IAAMC,MALtB,SAQGpB,EAAKsI,uB,qBCxCZC,GAAa,SAAC,GAAY,IAAXvI,EAAU,EAAVA,KACnB,OACE,cAAC+B,EAAA,EAAD,CAAqBpE,MAAM,OAAO4C,OAAQ,IAA1C,SACE,eAACiI,GAAA,EAAD,CAAWxI,KAAMA,EAAMiC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,GAAtE,UACE,cAACS,EAAA,EAAD,CACEC,QAAQ,OACRC,UAAU,EACVC,UAAU,EACVjF,QAAS,CAACoE,KAAM,GAAID,MAAO,MAE7B,cAACe,EAAA,EAAD,CAASC,WAAY,CAAC9H,MAAO,WAC7B,cAAC+H,EAAA,EAAD,CAAe8B,OAAO,OAAO5B,YAAY,EAAMC,UAAU,IACzD,cAACkF,GAAA,EAAD,CACEhF,KAAK,WACLV,QAAQ,gBACRmC,OAAO,UACPwD,KAAK,EACLhF,YAAa,EACbiF,UAAW,CAACC,EAAG,KAEjB,cAACH,GAAA,EAAD,CACEhF,KAAK,WACLiF,KAAK,EACLhF,YAAa,EACbX,QAAQ,WACRmC,OAAO,kBAOFqD,MAEfA,GAAWP,aAAe,CACxBhI,KAAM,ICvCR,IAAM6I,GAAmB,SAAC,GAAY,IAAX7I,EAAU,EAAVA,KAIlBkE,EAAYC,cAAZD,SACP,OACE,cAAC7D,EAAA,EAAD,CACEC,QAAS,CAACC,OAAQ,GAClB6D,MAAOF,EAAS,+BAChBtI,OACE,cAACyI,EAAA,EAAD,CACEC,MAAO,CACLJ,EAAS,sBACTA,EAAS,uBACTA,EAAS,wBAEXK,aAAcL,EAAS,sBACvBM,SAhBoB,SAACxE,GAC3BkI,QAAQC,IAAI,SAAUnI,MAItB,SAeE,cAAC,GAAD,CAAYA,KAAMA,OAIT6I,MAEfA,GAAiBb,aAAe,CAC9BhI,KAAM,IC9BR,IA0He8I,GA1HK,WAClB,OACE,cAACzI,EAAA,EAAD,UACE,eAACG,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACT+K,cAAe,SACfvF,WAAY,SACZY,eAAgB,UALpB,UAQE,cAAC4D,EAAA,EAAD,CACE7E,GAAI,CAACF,OAAQ,GAAI5C,MAAO,IACxBiD,IAAK,kCAEP,cAACJ,EAAA,EAAD,CACEC,GAAI,CACFsI,EAAG,EACHjE,GAAI,EACJ+B,GAAI,GAENpK,UAAU,KANZ,yBAWA,eAAC+D,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACT+K,cAAe,SACf1I,MAAO,GAJX,UAOE,eAAC6C,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,SACZ1C,UAAW,UAJf,UAOE,eAACoC,EAAA,EAAD,CACEC,GAAI,CACFuI,GAAI,EACJlD,GAAI,EACJnI,MAAO,GACPsL,YAAa,SAAC7N,GAAD,0BAAwBA,EAAMO,QAAQuN,KAAK,QAL5D,UAQE,cAAC1I,EAAA,EAAD,CAAK/D,UAAU,KAAf,gBACA,cAAC+D,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO,kBAFX,sBAQF,eAACmF,EAAA,EAAD,CACEC,GAAI,CACFuI,GAAI,EACJlD,GAAI,EACJnI,MAAO,IAJX,UAOE,cAAC6C,EAAA,EAAD,CAAK/D,UAAU,KAAf,gBACA,cAAC+D,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO,kBAFX,yBASJ,eAACmF,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,SACZ1C,UAAW,SACX+K,UAAW,SAAC/N,GAAD,0BAAwBA,EAAMO,QAAQuN,KAAK,QAL1D,UAQE,eAAC1I,EAAA,EAAD,CACEC,GAAI,CACFuI,GAAI,EACJlD,GAAI,EACJnI,MAAO,GACPsL,YAAa,SAAC7N,GAAD,0BAAwBA,EAAMO,QAAQuN,KAAK,QAL5D,UAQE,cAAC1I,EAAA,EAAD,CAAK/D,UAAU,KAAf,oBACA,cAAC+D,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO,kBAFX,uBAQF,eAACmF,EAAA,EAAD,CACEC,GAAI,CACFuI,GAAI,EACJlD,GAAI,EACJnI,MAAO,IAJX,UAOE,cAAC6C,EAAA,EAAD,CAAK/D,UAAU,KAAf,mBACA,cAAC+D,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO,kBAFX,mC,qBC5GR+N,GAAQ,SAAC,GAAY,IAAXpJ,EAAU,EAAVA,KACd,OACE,cAAC+B,EAAA,EAAD,CAAqBpE,MAAM,OAAO4C,OAAQ,GAA1C,SACE,cAAC8I,GAAA,EAAD,CAAUC,QAAS,EAAGtJ,KAAMA,EAA5B,SACE,cAACuJ,GAAA,EAAD,CAAKxG,QAAQ,QAAQa,KAAK,iBAMnBwF,MAEfA,GAAMpB,aAAe,CACnBhI,KAAM,I,0BC0EOwJ,GAnFS,SAAC,GAAY,IAAXxJ,EAAU,EAAVA,KACxB,OACE,cAACK,EAAA,EAAD,CAASC,QAAS,CAAC5E,gBAAiBsE,EAAK3E,OAAQmB,UAAU,aAA3D,SACE,eAACgE,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACT+K,cAAe,MACfhL,MAAO,SAJX,UAOE,eAACmF,EAAA,EAAD,CACEC,GAAI,CACF9C,MAAO,GACPrC,QAAS,OACT+K,cAAe,UAJnB,UAOE,cAAC7F,EAAA,EAAD,UACE,qBAAKI,IAAKZ,EAAKE,KAAMW,IAAKb,EAAKpF,SAEjC,cAAC4F,EAAA,EAAD,CACEC,GAAI,CACFuI,GAAI,EACJhI,SAAU,SACVK,aAAc,WACdC,WAAY,SACZ3D,MAAO,QANX,SASGqC,EAAKpF,OAER,cAAC4F,EAAA,EAAD,CACEC,GAAI,CACFsE,SAAU,GACV7D,WAAYC,IAAMC,MAHtB,SAMGpB,EAAKpB,WAGV,eAAC4B,EAAA,EAAD,CACEC,GAAI,CACF9C,MAAO,GACPrC,QAAS,OACT+K,cAAe,SACfvF,WAAY,YALhB,UAQE,eAACN,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACTwF,WAAY,UAHhB,UAME,cAAC,KAAD,CACEL,GAAI,CACFsE,SAAU,GACV0E,YAAa,KAGjB,cAACjJ,EAAA,EAAD,UAAMR,EAAK0J,gBAEb,cAAClJ,EAAA,EAAD,CACEC,GAAI,CACFsE,SAAU,GACVD,GAAI,EACJ5D,WAAYC,IAAMC,KAClBhD,UAAW,QACX4C,SAAU,SACVK,aAAc,WACdC,WAAY,SACZ3D,MAAO,QATX,SAYGqC,EAAK2J,YAER,cAAC,GAAD,CAAO3J,KAAMA,EAAK4J,qB,UC/DbC,GAjBG,SAAC,GAAY,IAAX7J,EAAU,EAAVA,KAClB,OACE,cAAC+B,EAAA,EAAD,CAAqBpE,MAAM,OAAO4C,OAAQ,IAA1C,SACE,cAACiI,GAAA,EAAD,CAAWxI,KAAMA,EAAMiC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,IAApE,SACE,cAACoG,GAAA,EAAD,CACEhF,KAAK,WACLV,QAAQ,OACRmC,OAAO,UACPwD,KAAK,EACLhF,YAAa,EACbiF,UAAW,CAACC,EAAG,UCqDVkB,GA5DG,SAAC,GAAY,IAAX9J,EAAU,EAAVA,KAClB,OACE,cAACK,EAAA,EAAD,CAASC,QAAS,CAAC5E,gBAAiBsE,EAAK3E,OAAzC,SACE,eAACmF,EAAA,EAAD,CACEC,GAAI,CACFpF,MAAO,QACPC,QAAS,OACT+K,cAAe,SACf3E,eAAgB,iBALpB,UAQE,cAAClB,EAAA,EAAD,CACEC,GAAI,CACFsE,SAAU,GACV7D,WAAYC,IAAMC,MAHtB,SAMGpB,EAAKoE,QAER,cAAC5D,EAAA,EAAD,CACEC,GAAI,CACFnF,QAAS,OACToG,eAAgB,WAChB/D,MAAO,EACPmH,IAAK,IALT,SAQE,cAACtE,EAAA,EAAD,CACEC,GAAI,CACF9C,MAAO,CAACoM,GAAI,EAAI,EAAGC,GAAI,KAF3B,SAKE,cAAC,GAAD,CAAWhK,KAAMA,EAAKgE,gBAG1B,eAACxD,EAAA,EAAD,CACEC,GAAI,CACF/E,gBAAiB,SAACN,GAAD,OAAWU,aAAMV,EAAMO,QAAQsO,OAAOC,MAAO,MAC9DjI,OAAQ,gBACRjE,QAAS,CAAC+L,GAAI,YAAaC,GAAI,YAC/BjF,SAAU,CAACgF,GAAI,GAAIC,GAAI,IACvB9I,WAAYC,IAAMC,MANtB,UASGpB,EAAKsI,YACN,cAAC9H,EAAA,EAAD,CACEC,GAAI,CACFsE,SAAU,GACVvD,GAAI,GAEN/E,UAAU,OALZ,SAOGuD,EAAKmK,gBCnCHC,GApBO,SAAC,GAAY,IAAXpK,EAAU,EAAVA,KACtB,OACE,cAAC+B,EAAA,EAAD,CAAqBpE,MAAM,OAAO4C,OAAQ,IAA1C,SACE,eAAC8I,GAAA,EAAD,CACErJ,KAAMA,EACNiC,OAAQ,CACNC,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAEViH,QAAS,EARX,UAUE,cAACpG,EAAA,EAAD,CAASC,WAAY,CAAC9H,MAAO,WAC7B,cAACkO,GAAA,EAAD,CAAKxG,QAAQ,SAASa,KAAK,oBCUpByG,GArBM,SAAC,GAAY,IAAXrK,EAAU,EAAVA,KAIdkE,EAAYC,cAAZD,SACP,OACE,cAAC7D,EAAA,EAAD,CACE+D,MAAOF,EAAS,2BAChBtI,OACE,cAACyI,EAAA,EAAD,CACEC,MAAO,CAAC,YAAa,YAAa,cAClCC,aAAa,YACbC,SAXa,SAAC5F,GACpBsJ,QAAQC,IAAI,QAASvJ,MAIrB,SAUE,cAAC,GAAD,CAAeoB,KAAMA,OCiGZsK,UAjGI,WACjB,IAAMC,EAAWC,wBAEjBC,qBAAU,WACRF,EAASG,iBACR,CAACH,IAEJ,IAAOI,EAAcC,uBAAY,qBAAEC,aAA5BF,WAEP,OACE,qCACGA,EACC,cAACG,EAAA,EAAD,CAAYC,UAAU,uBAAuBC,MAAO,IAApD,SACE,eAACC,EAAA,EAAD,WACGN,EAAWO,WAAWnD,KAAI,SAAC/H,EAAMmL,GAAP,OACzB,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,EAAD,CAAQvL,KAAMA,KADsBmL,MAKxC,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,GAAIE,GAAI,EAA/B,SACE,cAAC,GAAD,CAAkBxL,KAAM2K,EAAWc,qBAErC,cAACL,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAAC,GAAD,MAEF,cAACJ,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAACP,EAAA,EAAD,UACGN,EAAWe,iBAAiB3D,KAAI,SAAC/H,EAAMmL,GAAP,OAC/B,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAf,SACE,cAAC,GAAD,CAAiB/J,KAAMA,KADDmL,UAM9B,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAAC,GAAD,CAAWxL,KAAM2K,EAAWgB,cAE9B,cAACP,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAAC,GAAD,CAAcxL,KAAM2K,EAAWiB,iBAEjC,cAACR,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAAC,GAAD,CAAWxL,KAAM2K,EAAWkB,oBAE9B,cAACT,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAACP,EAAA,EAAD,UACGN,EAAWmB,MAAM/D,KAAI,SAAC/H,EAAMmL,GAAP,OACpB,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAf,SACE,cAAC,EAAD,CAAiB/J,KAAMA,KADDmL,UAM9B,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,GAAIC,GAAI,EAA/B,SACE,cAAC,EAAD,CAAYvL,KAAM2K,EAAWoB,eAE/B,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,EAAD,CAAsBvL,KAAM2K,EAAWqB,wBAEzC,cAACZ,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,EAAD,CAAevL,KAAM2K,EAAWsB,kBAElC,cAACb,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIyB,GAAI,EAAvB,SACE,cAAC,EAAD,CAAexL,KAAM2K,EAAWuB,iBAElC,cAACd,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAAC,EAAD,CAAaxL,KAAM2K,EAAWwB,gBAEhC,cAACf,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAAC,EAAD,CAAcxL,KAAM2K,EAAWyB,iBAGhCzB,EAAW0B,gBAAgBtE,KAAI,SAAC/H,EAAMmL,GAAP,OAC9B,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAGE,GAAI,EAA9B,SACE,cAAC,EAAD,CAAiBxL,KAAMA,KADamL,MAIxC,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,GAAIE,GAAI,EAA/B,SACE,cAAC,GAAD,CAAgB3D,eAAgB8C,EAAW9C,mBAE7C,cAACuD,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,GAAIE,GAAI,EAA/B,SACE,cAACP,EAAA,EAAD,UACGN,EAAW2B,UAAUvE,KAAI,SAAC/H,EAAMmL,GAAP,OACxB,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACtB,GAAI,GAAIuB,GAAI,EAAvB,SACE,cAAC,GAAD,CAAYtL,KAAMA,KADW,QAAUmL,eAQjD,KACJ,cAACoB,EAAA,EAAD","file":"static/js/66.5c23fd51.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box, Typography} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DrCard = ({data}) => {\r\n  const {bgColor, icon, time, category, name} = data;\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        backgroundColor: bgColor,\r\n        height: 1,\r\n      }}\r\n      className='card-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mr: 3,\r\n            alignSelf: 'center',\r\n          }}\r\n        >\r\n          <img src={icon} alt='icon' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: 'calc(100% - 50px)',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              flex: 1,\r\n              color: 'white',\r\n              overflow: 'hidden',\r\n              mr: 2,\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                width: '100%',\r\n              }}\r\n              component='h5'\r\n              variant='inherit'\r\n              color='inherit'\r\n            >\r\n              {category}\r\n            </Typography>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                pt: 1.5,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              {name}\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              height: 50,\r\n              width: 50,\r\n              ml: 'auto',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              borderRadius: '50%',\r\n              justifyContent: 'center',\r\n              fontWeight: Fonts.BOLD,\r\n              color: (theme) => theme.palette.text.secondary,\r\n              backgroundColor: (theme) => theme.palette.background.paper,\r\n              '@media screen and (max-width: 1600px) and (min-width: 1200px)': {\r\n                display: 'none',\r\n              },\r\n            }}\r\n          >\r\n            {time}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default DrCard;\r\n\r\nDrCard.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport {useThemeContext} from '@crema/utility/AppContextProvider/ThemeContextProvider';\r\n\r\nconst StaticsGraph = ({data}) => {\r\n  const {theme} = useThemeContext();\r\n  return (\r\n    <ResponsiveContainer width='100%' height={258}>\r\n      <AreaChart data={data} margin={{top: 25, right: 0, left: 0, bottom: 0}}>\r\n        <defs>\r\n          <linearGradient id='colorPv' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop\r\n              offset='5%'\r\n              stopColor={theme.palette.primary.main}\r\n              stopOpacity={0.1}\r\n            />\r\n            <stop\r\n              offset='95%'\r\n              stopColor={theme.palette.primary.main}\r\n              stopOpacity={0}\r\n            />\r\n          </linearGradient>\r\n        </defs>\r\n        <XAxis\r\n          dataKey='month'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          padding={{left: 20, right: 20}}\r\n        />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <CartesianGrid\r\n          strokeDasharray='2 10'\r\n          horizontal={false}\r\n          vertical={false}\r\n        />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='number'\r\n          strokeWidth={3}\r\n          fillOpacity={1}\r\n          fill='url(#colorPv)'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StaticsGraph;\r\n\r\nStaticsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport StaticsGraph from './StaticsGraph';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HealthStatics = ({data}) => {\r\n  const [graphData, setGraphData] = useState(data.dataOne);\r\n  const handleYearChange = (value) => {\r\n    switch (value) {\r\n      case 2017:\r\n        setGraphData(data.dataTwo);\r\n        break;\r\n      case 2018:\r\n        setGraphData(data.dataThree);\r\n        break;\r\n      case 2019:\r\n        setGraphData(data.dataOne);\r\n        break;\r\n      default:\r\n        setGraphData(data.dataOne);\r\n    }\r\n  };\r\n\r\n  const handleMonthChange = (value) => {\r\n    switch (value) {\r\n      case 'June':\r\n        setGraphData(data.dataTwo);\r\n        break;\r\n      case 'July':\r\n        setGraphData(data.dataThree);\r\n        break;\r\n      case 'August':\r\n        setGraphData(data.dataOne);\r\n        break;\r\n      default:\r\n        setGraphData(data.dataThree);\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['healthCare.staticsHealthCare']}\r\n      action={\r\n        <Box\r\n          sx={{\r\n            ml: 'auto',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <AppSelect\r\n            menus={[2019, 2018, 2017]}\r\n            defaultValue={2019}\r\n            onChange={handleYearChange}\r\n          />\r\n          <AppSelect\r\n            menus={[\r\n              messages['common.june'],\r\n              messages['common.july'],\r\n              messages['common.august'],\r\n            ]}\r\n            defaultValue={messages['common.june']}\r\n            onChange={handleMonthChange}\r\n          />\r\n        </Box>\r\n      }\r\n    >\r\n      <StaticsGraph data={graphData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default HealthStatics;\r\n\r\nHealthStatics.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport {useThemeContext} from '@crema/utility/AppContextProvider/ThemeContextProvider';\r\n\r\nconst PatientGraph = ({data}) => {\r\n  const {theme} = useThemeContext();\r\n  return (\r\n    <ResponsiveContainer width='100%' height={230}>\r\n      <AreaChart data={data} margin={{top: 50, right: 0, left: 0, bottom: 0}}>\r\n        <defs>\r\n          <linearGradient id='colorPv' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop\r\n              offset='5%'\r\n              stopColor={theme.palette.primary.main}\r\n              stopOpacity={0.1}\r\n            />\r\n            <stop\r\n              offset='95%'\r\n              stopColor={theme.palette.primary.main}\r\n              stopOpacity={0}\r\n            />\r\n          </linearGradient>\r\n        </defs>\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <CartesianGrid\r\n          strokeDasharray='2 10'\r\n          horizontal={false}\r\n          vertical={false}\r\n        />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='number'\r\n          strokeWidth={3}\r\n          fillOpacity={1}\r\n          fill='url(#colorPv)'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default PatientGraph;\r\n\r\nPatientGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport PatientGraph from './PatientGraph';\r\nimport {Box} from '@mui/material';\r\nimport AppMenu from '@crema/core/AppMenu';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewPatients = ({data}) => {\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard title={messages['healthCare.newPatient']} action={<AppMenu />}>\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            mb: 6,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mr: 2,\r\n              fontSize: 20,\r\n              fontWeight: Fonts.BOLD,\r\n            }}\r\n          >\r\n            214\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              '& img': {\r\n                height: 12,\r\n              },\r\n            }}\r\n          >\r\n            <img\r\n              src={'/assets/images/dashboard/metrics_icon_active.png'}\r\n              alt='down'\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mx: -6,\r\n            mb: -6,\r\n          }}\r\n        >\r\n          <PatientGraph data={data} />\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default NewPatients;\r\n\r\nNewPatients.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport {useThemeContext} from '@crema/utility/AppContextProvider/ThemeContextProvider';\r\n\r\nconst VisitsGraph = ({data}) => {\r\n  const {theme} = useThemeContext();\r\n  return (\r\n    <ResponsiveContainer width='100%' height={230}>\r\n      <AreaChart data={data} margin={{top: 50, right: 0, left: 0, bottom: 0}}>\r\n        <defs>\r\n          <linearGradient id='colorVisit' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop\r\n              offset='5%'\r\n              stopColor={theme.palette.secondary.main}\r\n              stopOpacity={0.1}\r\n            />\r\n            <stop\r\n              offset='95%'\r\n              stopColor={theme.palette.secondary.main}\r\n              stopOpacity={0}\r\n            />\r\n          </linearGradient>\r\n        </defs>\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <CartesianGrid\r\n          strokeDasharray='2 10'\r\n          horizontal={false}\r\n          vertical={false}\r\n        />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='number'\r\n          stroke={theme.palette.secondary.main}\r\n          strokeWidth={3}\r\n          fillOpacity={1}\r\n          fill='url(#colorVisit)'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default VisitsGraph;\r\n\r\nVisitsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box} from '@mui/material';\r\nimport VisitsGraph from './VisitsGraph';\r\nimport AppMenu from '@crema/core/AppMenu';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CancelVisits = ({data}) => {\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      title={messages['healthCare.cancelledVisits']}\r\n      action={<AppMenu />}\r\n    >\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            mb: 6,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mr: 2,\r\n              fontSize: 20,\r\n              fontWeight: Fonts.BOLD,\r\n            }}\r\n          >\r\n            32\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              '& img': {\r\n                height: 12,\r\n              },\r\n            }}\r\n          >\r\n            <img src={'/assets/images/dashboard/decries_icon.png'} alt='down' />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mx: -6,\r\n            mb: -6,\r\n          }}\r\n        >\r\n          <VisitsGraph data={data} />\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CancelVisits;\r\n\r\nCancelVisits.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst DoctorCell = ({doctor}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '8px 20px',\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <Avatar\r\n        sx={{\r\n          mr: 4,\r\n          width: 48,\r\n          height: 48,\r\n        }}\r\n        src={doctor.profile_pic}\r\n      />\r\n      <Box\r\n        sx={{\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        <Box\r\n          component='h5'\r\n          sx={{\r\n            fontWeight: Fonts.MEDIUM,\r\n            mb: 0.5,\r\n          }}\r\n        >\r\n          {doctor.name}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            color: 'text.secondary',\r\n          }}\r\n          component='p'\r\n        >\r\n          {doctor.speciality}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          ml: 'auto',\r\n        }}\r\n      >\r\n        {doctor.scheduled ? (\r\n          <Button color='secondary' variant='outlined'>\r\n            Remove\r\n          </Button>\r\n        ) : (\r\n          <Button color='primary' variant='outlined'>\r\n            Schedule\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DoctorCell;\r\n\r\nDoctorCell.propTypes = {\r\n  doctor: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppMenu from '@crema/core/AppMenu';\r\nimport AppList from '@crema/core/AppList';\r\nimport DoctorCell from './DoctorCell';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TopDoctors = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['healthCare.topDoctors']}\r\n      contentStyle={{px: 0}}\r\n      action={<AppMenu />}\r\n    >\r\n      <AppScrollbar sx={{maxHeight: 280}}>\r\n        <AppList\r\n          data={data}\r\n          renderRow={(doctor) => <DoctorCell key={doctor.id} doctor={doctor} />}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TopDoctors;\r\n\r\nTopDoctors.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst AppointmentCell = ({appointment}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '8px 20px',\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <Avatar\r\n        sx={{\r\n          mr: 4,\r\n          width: 48,\r\n          height: 48,\r\n        }}\r\n        src={appointment.profile_pic}\r\n      />\r\n      <Box\r\n        sx={{\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        <Box\r\n          component='h5'\r\n          sx={{\r\n            fontWeight: Fonts.MEDIUM,\r\n            mb: 0.5,\r\n          }}\r\n        >\r\n          {appointment.name}\r\n        </Box>\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            color: 'primary.main',\r\n          }}\r\n        >\r\n          {appointment.speciality}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          ml: 'auto',\r\n        }}\r\n      >\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            color: 'primary.main',\r\n            my: 1,\r\n            fontSize: 13,\r\n            fontWeight: Fonts.BOLD,\r\n          }}\r\n        >\r\n          {appointment.appointmentTime}\r\n        </Box>\r\n        <Box component='p'>{appointment.appointmentDate}</Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppointmentCell;\r\n\r\nAppointmentCell.propTypes = {\r\n  appointment: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppMenu from '@crema/core/AppMenu';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppointmentCell from './AppointmentCell';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UpcomingAppointments = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      title={messages['healthCare.upcomingAppointments']}\r\n      action={<AppMenu />}\r\n    >\r\n      <AppScrollbar sx={{maxHeight: 280}}>\r\n        <AppList\r\n          data={data}\r\n          renderRow={(appointment) => (\r\n            <AppointmentCell key={appointment.id} appointment={appointment} />\r\n          )}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default UpcomingAppointments;\r\n\r\nUpcomingAppointments.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst NotificationCell = ({notification}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        padding: '12px 20px',\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          height: 10,\r\n          minWidth: 10,\r\n          borderRadius: '50%',\r\n          backgroundColor: notification.color,\r\n          mr: 4,\r\n          mt: 1.5,\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        <Box\r\n          component='h5'\r\n          sx={{\r\n            fontWeight: Fonts.MEDIUM,\r\n            mb: 0.5,\r\n          }}\r\n        >\r\n          {notification.title}\r\n        </Box>\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            color: 'text.secondary',\r\n          }}\r\n        >\r\n          {notification.time}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotificationCell;\r\n\r\nNotificationCell.propTypes = {\r\n  notification: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppMenu from '@crema/core/AppMenu';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport AppList from '@crema/core/AppList';\r\nimport NotificationCell from './NotificationCell';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notifications = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      title={messages['healthCare.notification']}\r\n      action={<AppMenu />}\r\n    >\r\n      <AppScrollbar sx={{maxHeight: 280}}>\r\n        <AppList\r\n          data={data}\r\n          renderRow={(notification) => (\r\n            <NotificationCell\r\n              key={notification.id}\r\n              notification={notification}\r\n            />\r\n          )}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n\r\nNotifications.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box, Typography} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HospitalStatics = ({data}) => {\r\n  const {bgColor, icon, value, name} = data;\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        backgroundColor: bgColor,\r\n      }}\r\n      className='card-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mr: 4,\r\n            alignSelf: 'flex-start',\r\n          }}\r\n        >\r\n          <img src={icon} alt='icon' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: 'calc(100% - 70px)',\r\n          }}\r\n        >\r\n          <Typography\r\n            component='h5'\r\n            variant='inherit'\r\n            color='inherit'\r\n            sx={{\r\n              fontSize: 16,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {value}\r\n          </Typography>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              pt: 0.5,\r\n              color: 'text.secondary',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {name}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default HospitalStatics;\r\n\r\nHospitalStatics.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        '& th': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell>Name</TableCell>\r\n      <TableCell>Gender</TableCell>\r\n      <TableCell>Weight</TableCell>\r\n      <TableCell>Assigned Dr</TableCell>\r\n      <TableCell>Admit Date</TableCell>\r\n      <TableCell>Status</TableCell>\r\n      <TableCell>Actions</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport AppMenu from '@crema/core/AppMenu';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableItem = ({data}) => {\r\n  return (\r\n    <TableRow\r\n      key={data.name}\r\n      sx={{\r\n        '& .tableCell': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          whiteSpace: 'nowrap',\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <TableCell component='th' scope='row' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar\r\n            sx={{\r\n              mr: 3.5,\r\n            }}\r\n            src={data.profile_pic}\r\n          />\r\n          <Box\r\n            sx={{\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {data.name}\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.gender}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.weight}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.assignedDr}\r\n      </TableCell>\r\n      <TableCell align='left'>{data.date}</TableCell>\r\n      <TableCell align='left'>\r\n        <Box\r\n          sx={{\r\n            color: data.color,\r\n            backgroundColor: data.color + '44',\r\n            padding: '3px 10px',\r\n            borderRadius: 1,\r\n            display: 'inline-block',\r\n            fontSize: 13,\r\n          }}\r\n        >\r\n          {data.status}\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='right'>\r\n        <AppMenu />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport AppTableContainer from '@crema/core/AppTableContainer';\r\n\r\nconst PatientsTable = ({recentPatients}) => {\r\n  return (\r\n    <AppTableContainer>\r\n      <Table className='table'>\r\n        <TableHead>\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody>\r\n          {recentPatients.map((data) => (\r\n            <TableItem data={data} key={data.id} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </AppTableContainer>\r\n  );\r\n};\r\n\r\nexport default PatientsTable;\r\n\r\nPatientsTable.defaultProps = {\r\n  recentPatients: [],\r\n};\r\n\r\nPatientsTable.propTypes = {\r\n  recentPatients: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport PatientsTable from './PatientsTable';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RecentPatients = ({recentPatients}) => {\r\n  const {messages} = useIntl();\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      title={messages['healthCare.recentPatient']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <PatientsTable recentPatients={recentPatients} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default RecentPatients;\r\nRecentPatients.propTypes = {\r\n  recentPatients: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InfoWidget = ({data}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      className='card-hover'\r\n      contentStyle={{px: 2}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 1,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mt: 1,\r\n            mb: 3,\r\n          }}\r\n        >\r\n          <img src={data.icon} alt='icon' style={{height: 60, width: 60}} />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              color: 'text.secondary',\r\n              mb: 3,\r\n            }}\r\n          >\r\n            {data.name}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: data.color,\r\n              fontSize: 14,\r\n              fontWeight: Fonts.BOLD,\r\n            }}\r\n          >\r\n            {data.measurement}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default InfoWidget;\r\n\r\nInfoWidget.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatGraphs = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={250}>\r\n      <LineChart data={data} margin={{top: 50, right: 0, left: -25, bottom: 0}}>\r\n        <XAxis\r\n          dataKey='name'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          padding={{left: 20, right: 20}}\r\n        />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <CartesianGrid stroke='#eee' horizontal={true} vertical={false} />\r\n        <Line\r\n          type='monotone'\r\n          dataKey='Consultations'\r\n          stroke='#0698ec'\r\n          dot={false}\r\n          strokeWidth={2}\r\n          activeDot={{r: 4}}\r\n        />\r\n        <Line\r\n          type='monotone'\r\n          dot={false}\r\n          strokeWidth={2}\r\n          dataKey='Patients'\r\n          stroke='#f44d50'\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatGraphs;\r\n\r\nStatGraphs.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nStatGraphs.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatGraphs from './StatGraphs';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst HospitalActivity = ({data}) => {\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['healthCare.hospitalActivity']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <StatGraphs data={data} />\r\n    </AppCard>\r\n  );\r\n};\r\nexport default HospitalActivity;\r\n\r\nHospitalActivity.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nHospitalActivity.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {Box} from '@mui/material';\r\n\r\nconst ProfileCard = () => {\r\n  return (\r\n    <AppCard>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Avatar\r\n          sx={{height: 80, width: 80}}\r\n          src={'/assets/images/avatar/A10.jpg'}\r\n        />\r\n        <Box\r\n          sx={{\r\n            p: 3,\r\n            mb: 4,\r\n            mt: 2,\r\n          }}\r\n          component='h5'\r\n        >\r\n          Talan Phips\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: 1,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                py: 5,\r\n                px: 2,\r\n                width: 1 / 2,\r\n                borderRight: (theme) => `solid 1px ${theme.palette.grey[200]}`,\r\n              }}\r\n            >\r\n              <Box component='h5'>24</Box>\r\n              <Box\r\n                sx={{\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                Years\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                py: 5,\r\n                px: 2,\r\n                width: 1 / 2,\r\n              }}\r\n            >\r\n              <Box component='h5'>A+</Box>\r\n              <Box\r\n                sx={{\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                Blood\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              textAlign: 'center',\r\n              borderTop: (theme) => `solid 1px ${theme.palette.grey[200]}`,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                py: 5,\r\n                px: 2,\r\n                width: 1 / 2,\r\n                borderRight: (theme) => `solid 1px ${theme.palette.grey[200]}`,\r\n              }}\r\n            >\r\n              <Box component='h5'>185 cm</Box>\r\n              <Box\r\n                sx={{\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                Height\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                py: 5,\r\n                px: 2,\r\n                width: 1 / 2,\r\n              }}\r\n            >\r\n              <Box component='h5'>84 kg</Box>\r\n              <Box\r\n                sx={{\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                Weight\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Graph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={70}>\r\n      <BarChart barSize={4} data={data}>\r\n        <Bar dataKey='users' fill='#E2E8F0' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n\r\nGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box} from '@mui/material';\r\nimport Graph from './Graph';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppointmentCard = ({data}) => {\r\n  return (\r\n    <AppCard sxStyle={{backgroundColor: data.color}} className='card-hover'>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          color: 'white',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: 1 / 2,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          <Box>\r\n            <img src={data.icon} alt={data.name} />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              py: 2,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {data.name}\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              fontSize: 20,\r\n              fontWeight: Fonts.BOLD,\r\n            }}\r\n          >\r\n            {data.value}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: 1 / 2,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <ArrowUpwardIcon\r\n              sx={{\r\n                fontSize: 18,\r\n                marginRight: 2,\r\n              }}\r\n            />\r\n            <Box>{data.chartValue}</Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              fontSize: 12,\r\n              mb: 3,\r\n              fontWeight: Fonts.BOLD,\r\n              textAlign: 'right',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {data.chartTime}\r\n          </Box>\r\n          <Graph data={data.chartData} />\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n\r\nAppointmentCard.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {Line, LineChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={178}>\r\n      <LineChart data={data} margin={{top: 30, right: 0, left: 0, bottom: 20}}>\r\n        <Line\r\n          type='monotone'\r\n          dataKey='rate'\r\n          stroke='#ffffff'\r\n          dot={false}\r\n          strokeWidth={2}\r\n          activeDot={{r: 4}}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ViewGraph;\r\n\r\nViewGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {alpha, Box} from '@mui/material';\r\nimport ViewGraph from './ViewGraph';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HeartRate = ({data}) => {\r\n  return (\r\n    <AppCard sxStyle={{backgroundColor: data.color}}>\r\n      <Box\r\n        sx={{\r\n          color: 'white',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            fontSize: 16,\r\n            fontWeight: Fonts.BOLD,\r\n          }}\r\n        >\r\n          {data.title}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            width: 1,\r\n            mb: -10,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: {xs: 3 / 4, xl: 1 / 2},\r\n            }}\r\n          >\r\n            <ViewGraph data={data.graphData} />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            backgroundColor: (theme) => alpha(theme.palette.common.black, 0.04),\r\n            margin: '0 -24px -20px',\r\n            padding: {xs: '12px 24px', xl: '8px 24px'},\r\n            fontSize: {xs: 20, xl: 24},\r\n            fontWeight: Fonts.BOLD,\r\n          }}\r\n        >\r\n          {data.measurement}\r\n          <Box\r\n            sx={{\r\n              fontSize: 16,\r\n              ml: 2,\r\n            }}\r\n            component='span'\r\n          >\r\n            {data.unit}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n\r\nHeartRate.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ActivityGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={143}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n        barSize={8}\r\n      >\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <Bar dataKey='visits' fill='#0A8FDC33' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ActivityGraph;\r\n\r\nActivityGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport ActivityGraph from './ActivityGraph';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst YourActivity = ({data}) => {\r\n  const handleChange = (value) => {\r\n    console.log('value', value);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['healthCare.yourActivity']}\r\n      action={\r\n        <AppSelect\r\n          menus={['This Week', 'Last Week', 'This Month']}\r\n          defaultValue='This Week'\r\n          onChange={handleChange}\r\n        />\r\n      }\r\n    >\r\n      <ActivityGraph data={data} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default YourActivity;\r\n\r\nYourActivity.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetHCData} from '../../../redux/actions';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport {Grid} from '@mui/material';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport DrCard from './DrCard';\r\nimport AppAnimate from '@crema/core/AppAnimate';\r\nimport HealthStatics from './HealthStatics';\r\nimport NewPatients from './NewPatients';\r\nimport CancelVisits from './CancelVisits';\r\nimport TopDoctors from './TopDoctors';\r\nimport UpcomingAppointments from './UpcomingAppointments';\r\nimport Notifications from './Notifications';\r\nimport HospitalStatics from './HospitalStatics';\r\nimport RecentPatients from './RecentPatients';\r\nimport InfoWidget from './InfoWidget';\r\nimport HospitalActivity from './HospitalActivity';\r\nimport ProfileCard from './ProfileCard';\r\nimport AppointmentCard from './AppointmentCard';\r\nimport HeartRate from './HeartRate';\r\nimport YourActivity from './YourActivity';\r\n\r\nconst HealthCare = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetHCData());\r\n  }, [dispatch]);\r\n\r\n  const {healthCare} = useSelector(({dashboard}) => dashboard);\r\n\r\n  return (\r\n    <>\r\n      {healthCare ? (\r\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n          <AppGridContainer>\r\n            {healthCare.salesState.map((data, index) => (\r\n              <Grid item xs={12} sm={6} lg={3} key={index}>\r\n                <DrCard data={data} />\r\n              </Grid>\r\n            ))}\r\n\r\n            <Grid item xs={12} sm={12} md={6}>\r\n              <HospitalActivity data={healthCare.hospitalActivity} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <ProfileCard />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <AppGridContainer>\r\n                {healthCare.appointmentCards.map((data, index) => (\r\n                  <Grid item xs={12} key={index}>\r\n                    <AppointmentCard data={data} />\r\n                  </Grid>\r\n                ))}\r\n              </AppGridContainer>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <HeartRate data={healthCare.heartCard} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <YourActivity data={healthCare.yourActivity} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <HeartRate data={healthCare.temperatureCard} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <AppGridContainer>\r\n                {healthCare.doses.map((data, index) => (\r\n                  <Grid item xs={12} key={index}>\r\n                    <HospitalStatics data={data} />\r\n                  </Grid>\r\n                ))}\r\n              </AppGridContainer>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} lg={4}>\r\n              <TopDoctors data={healthCare.topDoctors} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n              <UpcomingAppointments data={healthCare.upcomingAppointment} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n              <Notifications data={healthCare.notifications} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <HealthStatics data={healthCare.heathStatics} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <NewPatients data={healthCare.newPatients} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <CancelVisits data={healthCare.cancelVisits} />\r\n            </Grid>\r\n\r\n            {healthCare.hospitalStatics.map((data, index) => (\r\n              <Grid item xs={12} sm={6} md={3} key={index}>\r\n                <HospitalStatics data={data} />\r\n              </Grid>\r\n            ))}\r\n            <Grid item xs={12} sm={12} md={8}>\r\n              <RecentPatients recentPatients={healthCare.recentPatients} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={4}>\r\n              <AppGridContainer>\r\n                {healthCare.bloodCard.map((data, index) => (\r\n                  <Grid item xs={12} sm={6} key={'grid-' + index}>\r\n                    <InfoWidget data={data} />\r\n                  </Grid>\r\n                ))}\r\n              </AppGridContainer>\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </AppAnimate>\r\n      ) : null}\r\n      <AppInfoView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HealthCare;\r\n"],"sourceRoot":""}