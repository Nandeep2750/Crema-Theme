{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","pages/userPages/UserPages/Signup.js"],"names":["createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","color","capitalize","theme","_extends","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","validationSchema","yup","required","id","email","password","confirmPassword","Signup","animation","delay","sx","pb","py","xl","display","flex","flexDirection","alignItems","justifyContent","maxWidth","width","textAlign","padding","xs","lg","overflow","boxShadow","mb","mr","height","className","src","alt","title","fontWeight","Fonts","BOLD","validateOnChange","initialValues","onSubmit","data","setErrors","resetForm","isSubmitting","noValidate","autoComplete","label","variant","flexWrap","ml","component","cursor","mt","grey","MEDIUM"],"mappings":"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","file":"static/js/122.3d619275.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Button from '@mui/material/Button';\r\nimport {Checkbox} from '@mui/material';\r\nimport {Form, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {grey} from '@mui/material/colors/index';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\nimport AppTextField from '../../../@crema/core/AppFormComponents/AppTextField';\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.reTypePassword' />),\r\n});\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <Box\r\n        sx={{\r\n          pb: 6,\r\n          py: {xl: 8},\r\n          display: 'flex',\r\n          flex: 1,\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Card\r\n          sx={{\r\n            maxWidth: 576,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            padding: {xs: 8, lg: 12, xl: '48px 64px'},\r\n            overflow: 'hidden',\r\n            boxShadow:\r\n              '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mb: {xs: 3, xl: 4},\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mr: 2,\r\n                '.logo': {\r\n                  height: 24,\r\n                },\r\n              }}\r\n            >\r\n              <img\r\n                className='logo'\r\n                src={'/assets/images/logo-icon-large.png'}\r\n                alt='crema'\r\n                title='crema'\r\n              />\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                mb: 1.5,\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 20,\r\n              }}\r\n            >\r\n              <IntlMessages id='common.signup' />\r\n            </Box>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              name: '',\r\n              email: '',\r\n              password: '',\r\n              confirmPassword: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setErrors, resetForm}) => {\r\n              if (data.password !== data.confirmPassword) {\r\n                setErrors({\r\n                  confirmPassword: (\r\n                    <IntlMessages id='validation.passwordMisMatch' />\r\n                  ),\r\n                });\r\n              } else {\r\n                resetForm();\r\n              }\r\n            }}\r\n          >\r\n            {({isSubmitting}) => (\r\n              <Form\r\n                sx={{\r\n                  textAlign: 'left',\r\n                }}\r\n                noValidate\r\n                autoComplete='off'\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mb: {xs: 3, xl: 4},\r\n                  }}\r\n                >\r\n                  <AppTextField\r\n                    label={<IntlMessages id='common.name' />}\r\n                    name='name'\r\n                    variant='outlined'\r\n                    sx={{\r\n                      width: '100%',\r\n                    }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box\r\n                  sx={{\r\n                    mb: {xs: 3, xl: 4},\r\n                  }}\r\n                >\r\n                  <AppTextField\r\n                    label={<IntlMessages id='common.email' />}\r\n                    name='email'\r\n                    variant='outlined'\r\n                    sx={{\r\n                      width: '100%',\r\n                    }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box\r\n                  sx={{\r\n                    mb: {xs: 3, xl: 4},\r\n                  }}\r\n                >\r\n                  <AppTextField\r\n                    label={<IntlMessages id='common.password' />}\r\n                    name='password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    sx={{\r\n                      width: '100%',\r\n                    }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box\r\n                  sx={{\r\n                    mb: {xs: 3, xl: 4},\r\n                  }}\r\n                >\r\n                  <AppTextField\r\n                    label={<IntlMessages id='common.retypePassword' />}\r\n                    name='confirmPassword'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    sx={{\r\n                      width: '100%',\r\n                    }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box\r\n                  sx={{\r\n                    mb: {xs: 5, xl: 6},\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      ml: -3,\r\n                    }}\r\n                  >\r\n                    <Checkbox />\r\n                  </Box>\r\n                  <Box\r\n                    component='span'\r\n                    sx={{\r\n                      mr: 2,\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    <IntlMessages id='common.iAgreeTo' />\r\n                  </Box>\r\n                  <Box\r\n                    component='span'\r\n                    sx={{\r\n                      color: 'primary.main',\r\n                      fontWeight: Fonts.BOLD,\r\n                      fontSize: 14,\r\n                      cursor: 'pointer',\r\n                    }}\r\n                  >\r\n                    <IntlMessages id='common.termConditions' />\r\n                  </Box>\r\n                </Box>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  disabled={isSubmitting}\r\n                  sx={{\r\n                    width: '100%',\r\n                    height: 44,\r\n                  }}\r\n                  type='submit'\r\n                >\r\n                  <IntlMessages id='common.signup' />\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <Box\r\n            sx={{\r\n              mt: {xs: 3, xl: 4},\r\n              textAlign: 'center',\r\n              color: grey[700],\r\n              fontSize: 14,\r\n              fontWeight: Fonts.BOLD,\r\n            }}\r\n          >\r\n            <Box component='span' sx={{mr: 1}}>\r\n              <IntlMessages id='common.alreadyHaveAccount' />\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                color: 'primary.main',\r\n                fontWeight: Fonts.MEDIUM,\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              <IntlMessages id='common.signInHere' />\r\n            </Box>\r\n          </Box>\r\n        </Card>\r\n      </Box>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"sourceRoot":""}