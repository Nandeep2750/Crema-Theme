{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","pages/muiComponents/inputs/Selects/BasicSelect.js","pages/muiComponents/inputs/Selects/SelectVariants.js","webpack:///./src/pages/muiComponents/inputs/Selects/SelectVariants.js?9966","pages/muiComponents/inputs/Selects/LabelsHelperText.js","pages/muiComponents/inputs/Selects/AutoWidth.js","pages/muiComponents/inputs/Selects/SelectOtherProps.js","webpack:///./src/pages/muiComponents/inputs/Selects/SelectOtherProps.js?4d31","../node_modules/@mui/material/NativeSelect/NativeSelect.js","pages/muiComponents/inputs/Selects/NativeSelect.js","webpack:///./src/pages/muiComponents/inputs/Selects/NativeSelect.js?4fcf","pages/muiComponents/inputs/Selects/Customization.js","webpack:///./src/pages/muiComponents/inputs/Selects/Customization.js?1921","pages/muiComponents/inputs/Selects/MultipleSelect.js","webpack:///./src/pages/muiComponents/inputs/Selects/MultipleSelect.js?911a","pages/muiComponents/inputs/Selects/MultipleSelectCheckmarks.js","webpack:///./src/pages/muiComponents/inputs/Selects/MultipleSelectCheckmarks.js?dceb","pages/muiComponents/inputs/Selects/MultipleSelectChip.js","webpack:///./src/pages/muiComponents/inputs/Selects/MultipleSelectChip.js?e62b","pages/muiComponents/inputs/Selects/MultipleSelectPlaceholder.js","webpack:///./src/pages/muiComponents/inputs/Selects/MultipleSelectPlaceholder.js?ded0","pages/muiComponents/inputs/Selects/MultipleSelectNative.js","webpack:///./src/pages/muiComponents/inputs/Selects/MultipleSelectNative.js?57ef","pages/muiComponents/inputs/Selects/ControlledOpenSelect.js","webpack:///./src/pages/muiComponents/inputs/Selects/ControlledOpenSelect.js?359c","pages/muiComponents/inputs/Selects/DialogSelect.js","webpack:///./src/pages/muiComponents/inputs/Selects/DialogSelect.js?fedf","pages/muiComponents/inputs/Selects/GroupedSelect.js","pages/muiComponents/inputs/Selects/index.js","webpack:///./src/pages/muiComponents/inputs/Selects/BasicSelect.js?647b","webpack:///./src/pages/muiComponents/inputs/Selects/LabelsHelperText.js?07f2","webpack:///./src/pages/muiComponents/inputs/Selects/AutoWidth.js?060a","webpack:///./src/pages/muiComponents/inputs/Selects/GroupedSelect.js?2d94"],"names":["createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","color","capitalize","theme","_extends","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","BasicSelect","age","setAge","Box","sx","minWidth","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","event","target","MenuItem","SelectVariants","handleChange","variant","m","SelectLabels","FormHelperText","displayEmpty","SelectAutoWidth","autoWidth","SelectOtherProps","error","renderValue","readOnly","required","_excluded2","defaultInput","Input","NativeSelect","className","children","classesProp","IconComponent","ArrowDropDownIcon","input","muiFormControl","useFormControl","fcs","formControlState","states","getNativeSelectUtilityClasses","otherClasses","inputComponent","NativeSelectInput","undefined","clsx","muiName","NativeSelectDemo","htmlFor","defaultValue","BootstrapInput","InputBase","marginTop","spacing","borderRadius","position","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","CustomizedSelects","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","names","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","useTheme","setPersonName","multiple","split","OutlinedInput","map","MultipleSelectCheckmarks","selected","ListItemText","primary","MultipleSelectChip","display","flexWrap","gap","Chip","MultipleSelectPlaceholder","mt","length","MultipleSelectNative","maxWidth","shrink","native","options","i","l","push","ControlledOpenSelect","open","setOpen","handleOpen","Button","onClick","onClose","onOpen","DialogSelect","Number","handleClose","reason","Dialog","disableEscapeKeyDown","DialogTitle","DialogContent","component","DialogActions","GroupedSelect","ListSubheader","Selects","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","source","noScrollbar"],"mappings":"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","file":"static/js/113.1f77f272.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function BasicSelect() {\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{minWidth: 120}}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id='demo-simple-select-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-label'\r\n          id='demo-simple-select'\r\n          value={age}\r\n          label='Age'\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function SelectVariants() {\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant='standard' sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel id='demo-simple-select-standard-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-standard-label'\r\n          id='demo-simple-select-standard'\r\n          value={age}\r\n          onChange={handleChange}\r\n          label='Age'\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant='filled' sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel id='demo-simple-select-filled-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-filled-label'\r\n          id='demo-simple-select-filled'\r\n          value={age}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nexport default function SelectVariants() {\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl variant='standard' sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel id='demo-simple-select-standard-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-standard-label'\\r\\n          id='demo-simple-select-standard'\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          label='Age'\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl variant='filled' sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel id='demo-simple-select-filled-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-filled-label'\\r\\n          id='demo-simple-select-filled'\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function SelectLabels() {\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel id='demo-simple-select-helper-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-helper-label'\r\n          id='demo-simple-select-helper'\r\n          value={age}\r\n          label='Age'\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>With label + helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl sx={{m: 1, minWidth: 120}}>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          inputProps={{'aria-label': 'Without label'}}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Without label</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function SelectAutoWidth() {\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, minWidth: 80}}>\r\n        <InputLabel id='demo-simple-select-autowidth-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-autowidth-label'\r\n          id='demo-simple-select-autowidth'\r\n          value={age}\r\n          onChange={handleChange}\r\n          autoWidth\r\n          label='Age'\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Twenty</MenuItem>\r\n          <MenuItem value={21}>Twenty one</MenuItem>\r\n          <MenuItem value={22}>Twenty one and a half</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function SelectOtherProps() {\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, minWidth: 120}} disabled>\r\n        <InputLabel id='demo-simple-select-disabled-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-disabled-label'\r\n          id='demo-simple-select-disabled'\r\n          value={age}\r\n          label='Age'\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl sx={{m: 1, minWidth: 120}} error>\r\n        <InputLabel id='demo-simple-select-error-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-error-label'\r\n          id='demo-simple-select-error'\r\n          value={age}\r\n          label='Age'\r\n          onChange={handleChange}\r\n          renderValue={(value) => `⚠️  - ${value}`}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel id='demo-simple-select-readonly-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-readonly-label'\r\n          id='demo-simple-select-readonly'\r\n          value={age}\r\n          label='Age'\r\n          onChange={handleChange}\r\n          inputProps={{readOnly: true}}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Read only</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel id='demo-simple-select-required-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-required-label'\r\n          id='demo-simple-select-required'\r\n          value={age}\r\n          label='Age *'\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormHelperText from '@mui/material/FormHelperText';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nexport default function SelectOtherProps() {\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}} disabled>\\r\\n        <InputLabel id='demo-simple-select-disabled-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-disabled-label'\\r\\n          id='demo-simple-select-disabled'\\r\\n          value={age}\\r\\n          label='Age'\\r\\n          onChange={handleChange}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Disabled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}} error>\\r\\n        <InputLabel id='demo-simple-select-error-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-error-label'\\r\\n          id='demo-simple-select-error'\\r\\n          value={age}\\r\\n          label='Age'\\r\\n          onChange={handleChange}\\r\\n          renderValue={(value) => `⚠️  - ${value}`}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Error</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel id='demo-simple-select-readonly-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-readonly-label'\\r\\n          id='demo-simple-select-readonly'\\r\\n          value={age}\\r\\n          label='Age'\\r\\n          onChange={handleChange}\\r\\n          inputProps={{readOnly: true}}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Read only</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl required sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel id='demo-simple-select-required-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-required-label'\\r\\n          id='demo-simple-select-required'\\r\\n          value={age}\\r\\n          label='Age *'\\r\\n          onChange={handleChange}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Required</FormHelperText>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"],\n      _excluded2 = [\"root\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport NativeSelectInput from './NativeSelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getNativeSelectUtilityClasses } from './nativeSelectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\n\nconst defaultInput = /*#__PURE__*/_jsx(Input, {});\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\n\n\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiNativeSelect',\n    props: inProps\n  });\n\n  const {\n    className,\n    children,\n    classes: classesProp = {},\n    IconComponent = ArrowDropDownIcon,\n    input = defaultInput,\n    inputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded2);\n\n  return /*#__PURE__*/React.cloneElement(input, _extends({\n    // Most of the logic is implemented in `NativeSelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: NativeSelectInput,\n    inputProps: _extends({\n      children,\n      classes: otherClasses,\n      IconComponent,\n      variant: fcs.variant,\n      type: undefined\n    }, inputProps, input ? input.props.inputProps : {}),\n    ref\n  }, other, {\n    className: clsx(classes.root, input.props.className, className)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * @default {}\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `input` value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default NativeSelect;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\n\r\nexport default function NativeSelectDemo() {\r\n  return (\r\n    <Box sx={{minWidth: 120}}>\r\n      <FormControl fullWidth>\r\n        <InputLabel variant='standard' htmlFor='uncontrolled-native'>\r\n          Age\r\n        </InputLabel>\r\n        <NativeSelect\r\n          defaultValue={30}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'uncontrolled-native',\r\n          }}\r\n        >\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport NativeSelect from '@mui/material/NativeSelect';\\r\\n\\r\\nexport default function NativeSelectDemo() {\\r\\n  return (\\r\\n    <Box sx={{minWidth: 120}}>\\r\\n      <FormControl fullWidth>\\r\\n        <InputLabel variant='standard' htmlFor='uncontrolled-native'>\\r\\n          Age\\r\\n        </InputLabel>\\r\\n        <NativeSelect\\r\\n          defaultValue={30}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'uncontrolled-native',\\r\\n          }}\\r\\n        >\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nconst BootstrapInput = styled(InputBase)(({theme}) => ({\r\n  'label + &': {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  '& .MuiInputBase-input': {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1}} variant='standard'>\r\n        <InputLabel htmlFor='demo-customized-textbox'>Age</InputLabel>\r\n        <BootstrapInput id='demo-customized-textbox' />\r\n      </FormControl>\r\n      <FormControl sx={{m: 1}} variant='standard'>\r\n        <InputLabel id='demo-customized-select-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-customized-select-label'\r\n          id='demo-customized-select'\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput />}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl sx={{m: 1}} variant='standard'>\r\n        <InputLabel htmlFor='demo-customized-select-native'>Age</InputLabel>\r\n        <NativeSelect\r\n          id='demo-customized-select-native'\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput />}\r\n        >\r\n          <option aria-label='None' value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\nimport NativeSelect from '@mui/material/NativeSelect';\\r\\nimport InputBase from '@mui/material/InputBase';\\r\\n\\r\\nconst BootstrapInput = styled(InputBase)(({theme}) => ({\\r\\n  'label + &': {\\r\\n    marginTop: theme.spacing(3),\\r\\n  },\\r\\n  '& .MuiInputBase-input': {\\r\\n    borderRadius: 4,\\r\\n    position: 'relative',\\r\\n    backgroundColor: theme.palette.background.paper,\\r\\n    border: '1px solid #ced4da',\\r\\n    fontSize: 16,\\r\\n    padding: '10px 26px 10px 12px',\\r\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\r\\n    // Use the system font instead of the default Roboto font.\\r\\n    fontFamily: [\\r\\n      '-apple-system',\\r\\n      'BlinkMacSystemFont',\\r\\n      '\\\"Segoe UI\\\"',\\r\\n      'Roboto',\\r\\n      '\\\"Helvetica Neue\\\"',\\r\\n      'Arial',\\r\\n      'sans-serif',\\r\\n      '\\\"Apple Color Emoji\\\"',\\r\\n      '\\\"Segoe UI Emoji\\\"',\\r\\n      '\\\"Segoe UI Symbol\\\"',\\r\\n    ].join(','),\\r\\n    '&:focus': {\\r\\n      borderRadius: 4,\\r\\n      borderColor: '#80bdff',\\r\\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomizedSelects() {\\r\\n  const [age, setAge] = React.useState('');\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1}} variant='standard'>\\r\\n        <InputLabel htmlFor='demo-customized-textbox'>Age</InputLabel>\\r\\n        <BootstrapInput id='demo-customized-textbox' />\\r\\n      </FormControl>\\r\\n      <FormControl sx={{m: 1}} variant='standard'>\\r\\n        <InputLabel id='demo-customized-select-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-customized-select-label'\\r\\n          id='demo-customized-select'\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          input={<BootstrapInput />}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl sx={{m: 1}} variant='standard'>\\r\\n        <InputLabel htmlFor='demo-customized-select-native'>Age</InputLabel>\\r\\n        <NativeSelect\\r\\n          id='demo-customized-select-native'\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          input={<BootstrapInput />}\\r\\n        >\\r\\n          <option aria-label='None' value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, width: 300}}>\r\n        <InputLabel id='demo-multiple-name-label'>Name</InputLabel>\r\n        <Select\r\n          labelId='demo-multiple-name-label'\r\n          id='demo-multiple-name'\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput label='Name' />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}\r\n            >\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport {useTheme} from '@mui/material/styles';\\r\\nimport OutlinedInput from '@mui/material/OutlinedInput';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nconst ITEM_HEIGHT = 48;\\r\\nconst ITEM_PADDING_TOP = 8;\\r\\nconst MenuProps = {\\r\\n  PaperProps: {\\r\\n    style: {\\r\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\r\\n      width: 250,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst names = [\\r\\n  'Oliver Hansen',\\r\\n  'Van Henry',\\r\\n  'April Tucker',\\r\\n  'Ralph Hubbard',\\r\\n  'Omar Alexander',\\r\\n  'Carlos Abbott',\\r\\n  'Miriam Wagner',\\r\\n  'Bradley Wilkerson',\\r\\n  'Virginia Andrews',\\r\\n  'Kelly Snyder',\\r\\n];\\r\\n\\r\\nfunction getStyles(name, personName, theme) {\\r\\n  return {\\r\\n    fontWeight:\\r\\n      personName.indexOf(name) === -1\\r\\n        ? theme.typography.fontWeightRegular\\r\\n        : theme.typography.fontWeightMedium,\\r\\n  };\\r\\n}\\r\\n\\r\\nexport default function MultipleSelect() {\\r\\n  const theme = useTheme();\\r\\n  const [personName, setPersonName] = React.useState([]);\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    const {\\r\\n      target: {value},\\r\\n    } = event;\\r\\n    setPersonName(\\r\\n      // On autofill we get a the stringified value.\\r\\n      typeof value === 'string' ? value.split(',') : value,\\r\\n    );\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, width: 300}}>\\r\\n        <InputLabel id='demo-multiple-name-label'>Name</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-multiple-name-label'\\r\\n          id='demo-multiple-name'\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<OutlinedInput label='Name' />}\\r\\n          MenuProps={MenuProps}\\r\\n        >\\r\\n          {names.map((name) => (\\r\\n            <MenuItem\\r\\n              key={name}\\r\\n              value={name}\\r\\n              style={getStyles(name, personName, theme)}\\r\\n            >\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Select from '@mui/material/Select';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nexport default function MultipleSelectCheckmarks() {\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, width: 300}}>\r\n        <InputLabel id='demo-multiple-checkbox-label'>Tag</InputLabel>\r\n        <Select\r\n          labelId='demo-multiple-checkbox-label'\r\n          id='demo-multiple-checkbox'\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput label='Tag' />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport OutlinedInput from '@mui/material/OutlinedInput';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport ListItemText from '@mui/material/ListItemText';\\r\\nimport Select from '@mui/material/Select';\\r\\nimport Checkbox from '@mui/material/Checkbox';\\r\\n\\r\\nconst ITEM_HEIGHT = 48;\\r\\nconst ITEM_PADDING_TOP = 8;\\r\\nconst MenuProps = {\\r\\n  PaperProps: {\\r\\n    style: {\\r\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\r\\n      width: 250,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst names = [\\r\\n  'Oliver Hansen',\\r\\n  'Van Henry',\\r\\n  'April Tucker',\\r\\n  'Ralph Hubbard',\\r\\n  'Omar Alexander',\\r\\n  'Carlos Abbott',\\r\\n  'Miriam Wagner',\\r\\n  'Bradley Wilkerson',\\r\\n  'Virginia Andrews',\\r\\n  'Kelly Snyder',\\r\\n];\\r\\n\\r\\nexport default function MultipleSelectCheckmarks() {\\r\\n  const [personName, setPersonName] = React.useState([]);\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    const {\\r\\n      target: {value},\\r\\n    } = event;\\r\\n    setPersonName(\\r\\n      // On autofill we get a the stringified value.\\r\\n      typeof value === 'string' ? value.split(',') : value,\\r\\n    );\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, width: 300}}>\\r\\n        <InputLabel id='demo-multiple-checkbox-label'>Tag</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-multiple-checkbox-label'\\r\\n          id='demo-multiple-checkbox'\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<OutlinedInput label='Tag' />}\\r\\n          renderValue={(selected) => selected.join(', ')}\\r\\n          MenuProps={MenuProps}\\r\\n        >\\r\\n          {names.map((name) => (\\r\\n            <MenuItem key={name} value={name}>\\r\\n              <Checkbox checked={personName.indexOf(name) > -1} />\\r\\n              <ListItemText primary={name} />\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelectChip() {\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, width: 300}}>\r\n        <InputLabel id='demo-multiple-chip-label'>Chip</InputLabel>\r\n        <Select\r\n          labelId='demo-multiple-chip-label'\r\n          id='demo-multiple-chip'\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id='select-multiple-chip' label='Chip' />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}\r\n            >\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport {useTheme} from '@mui/material/styles';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport OutlinedInput from '@mui/material/OutlinedInput';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\nimport Chip from '@mui/material/Chip';\\r\\n\\r\\nconst ITEM_HEIGHT = 48;\\r\\nconst ITEM_PADDING_TOP = 8;\\r\\nconst MenuProps = {\\r\\n  PaperProps: {\\r\\n    style: {\\r\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\r\\n      width: 250,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst names = [\\r\\n  'Oliver Hansen',\\r\\n  'Van Henry',\\r\\n  'April Tucker',\\r\\n  'Ralph Hubbard',\\r\\n  'Omar Alexander',\\r\\n  'Carlos Abbott',\\r\\n  'Miriam Wagner',\\r\\n  'Bradley Wilkerson',\\r\\n  'Virginia Andrews',\\r\\n  'Kelly Snyder',\\r\\n];\\r\\n\\r\\nfunction getStyles(name, personName, theme) {\\r\\n  return {\\r\\n    fontWeight:\\r\\n      personName.indexOf(name) === -1\\r\\n        ? theme.typography.fontWeightRegular\\r\\n        : theme.typography.fontWeightMedium,\\r\\n  };\\r\\n}\\r\\n\\r\\nexport default function MultipleSelectChip() {\\r\\n  const theme = useTheme();\\r\\n  const [personName, setPersonName] = React.useState([]);\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    const {\\r\\n      target: {value},\\r\\n    } = event;\\r\\n    setPersonName(\\r\\n      // On autofill we get a the stringified value.\\r\\n      typeof value === 'string' ? value.split(',') : value,\\r\\n    );\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, width: 300}}>\\r\\n        <InputLabel id='demo-multiple-chip-label'>Chip</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-multiple-chip-label'\\r\\n          id='demo-multiple-chip'\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<OutlinedInput id='select-multiple-chip' label='Chip' />}\\r\\n          renderValue={(selected) => (\\r\\n            <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\\r\\n              {selected.map((value) => (\\r\\n                <Chip key={value} label={value} />\\r\\n              ))}\\r\\n            </Box>\\r\\n          )}\\r\\n          MenuProps={MenuProps}\\r\\n        >\\r\\n          {names.map((name) => (\\r\\n            <MenuItem\\r\\n              key={name}\\r\\n              value={name}\\r\\n              style={getStyles(name, personName, theme)}\\r\\n            >\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelectPlaceholder() {\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, width: 300, mt: 3}}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{'aria-label': 'Without label'}}\r\n        >\r\n          <MenuItem disabled value=''>\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}\r\n            >\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport {useTheme} from '@mui/material/styles';\\r\\nimport OutlinedInput from '@mui/material/OutlinedInput';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nconst ITEM_HEIGHT = 48;\\r\\nconst ITEM_PADDING_TOP = 8;\\r\\nconst MenuProps = {\\r\\n  PaperProps: {\\r\\n    style: {\\r\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\r\\n      width: 250,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst names = [\\r\\n  'Oliver Hansen',\\r\\n  'Van Henry',\\r\\n  'April Tucker',\\r\\n  'Ralph Hubbard',\\r\\n  'Omar Alexander',\\r\\n  'Carlos Abbott',\\r\\n  'Miriam Wagner',\\r\\n  'Bradley Wilkerson',\\r\\n  'Virginia Andrews',\\r\\n  'Kelly Snyder',\\r\\n];\\r\\n\\r\\nfunction getStyles(name, personName, theme) {\\r\\n  return {\\r\\n    fontWeight:\\r\\n      personName.indexOf(name) === -1\\r\\n        ? theme.typography.fontWeightRegular\\r\\n        : theme.typography.fontWeightMedium,\\r\\n  };\\r\\n}\\r\\n\\r\\nexport default function MultipleSelectPlaceholder() {\\r\\n  const theme = useTheme();\\r\\n  const [personName, setPersonName] = React.useState([]);\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    const {\\r\\n      target: {value},\\r\\n    } = event;\\r\\n    setPersonName(\\r\\n      // On autofill we get a the stringified value.\\r\\n      typeof value === 'string' ? value.split(',') : value,\\r\\n    );\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, width: 300, mt: 3}}>\\r\\n        <Select\\r\\n          multiple\\r\\n          displayEmpty\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<OutlinedInput />}\\r\\n          renderValue={(selected) => {\\r\\n            if (selected.length === 0) {\\r\\n              return <em>Placeholder</em>;\\r\\n            }\\r\\n\\r\\n            return selected.join(', ');\\r\\n          }}\\r\\n          MenuProps={MenuProps}\\r\\n          inputProps={{'aria-label': 'Without label'}}\\r\\n        >\\r\\n          <MenuItem disabled value=''>\\r\\n            <em>Placeholder</em>\\r\\n          </MenuItem>\\r\\n          {names.map((name) => (\\r\\n            <MenuItem\\r\\n              key={name}\\r\\n              value={name}\\r\\n              style={getStyles(name, personName, theme)}\\r\\n            >\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nexport default function MultipleSelectNative() {\r\n  const [personName, setPersonName] = React.useState([]);\r\n  const handleChangeMultiple = (event) => {\r\n    const {options} = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, minWidth: 120, maxWidth: 300}}>\r\n        <InputLabel shrink htmlFor='select-multiple-native'>\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          // @ts-ignore Typings are not considering `native`\r\n          onChange={handleChangeMultiple}\r\n          label='Native'\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}\r\n        >\r\n          {names.map((name) => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nconst names = [\\r\\n  'Oliver Hansen',\\r\\n  'Van Henry',\\r\\n  'April Tucker',\\r\\n  'Ralph Hubbard',\\r\\n  'Omar Alexander',\\r\\n  'Carlos Abbott',\\r\\n  'Miriam Wagner',\\r\\n  'Bradley Wilkerson',\\r\\n  'Virginia Andrews',\\r\\n  'Kelly Snyder',\\r\\n];\\r\\n\\r\\nexport default function MultipleSelectNative() {\\r\\n  const [personName, setPersonName] = React.useState([]);\\r\\n  const handleChangeMultiple = (event) => {\\r\\n    const {options} = event.target;\\r\\n    const value = [];\\r\\n    for (let i = 0, l = options.length; i < l; i += 1) {\\r\\n      if (options[i].selected) {\\r\\n        value.push(options[i].value);\\r\\n      }\\r\\n    }\\r\\n    setPersonName(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, minWidth: 120, maxWidth: 300}}>\\r\\n        <InputLabel shrink htmlFor='select-multiple-native'>\\r\\n          Native\\r\\n        </InputLabel>\\r\\n        <Select\\r\\n          multiple\\r\\n          native\\r\\n          value={personName}\\r\\n          // @ts-ignore Typings are not considering `native`\\r\\n          onChange={handleChangeMultiple}\\r\\n          label='Native'\\r\\n          inputProps={{\\r\\n            id: 'select-multiple-native',\\r\\n          }}\\r\\n        >\\r\\n          {names.map((name) => (\\r\\n            <option key={name} value={name}>\\r\\n              {name}\\r\\n            </option>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const [age, setAge] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button sx={{display: 'block', mt: 2}} onClick={handleOpen}>\r\n        Open the select\r\n      </Button>\r\n      <FormControl sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel id='demo-controlled-open-select-label'>Age</InputLabel>\r\n        <Select\r\n          labelId='demo-controlled-open-select-label'\r\n          id='demo-controlled-open-select'\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={age}\r\n          label='Age'\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\nimport Button from '@mui/material/Button';\\r\\n\\r\\nexport default function ControlledOpenSelect() {\\r\\n  const [age, setAge] = React.useState('');\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const handleOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button sx={{display: 'block', mt: 2}} onClick={handleOpen}>\\r\\n        Open the select\\r\\n      </Button>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel id='demo-controlled-open-select-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-controlled-open-select-label'\\r\\n          id='demo-controlled-open-select'\\r\\n          open={open}\\r\\n          onClose={handleClose}\\r\\n          onOpen={handleOpen}\\r\\n          value={age}\\r\\n          label='Age'\\r\\n          onChange={handleChange}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function DialogSelect() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(Number(event.target.value) || '');\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== 'backdropClick') {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Fill the form</DialogTitle>\r\n        <DialogContent>\r\n          <Box component='form' sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n            <FormControl sx={{m: 1, minWidth: 120}}>\r\n              <InputLabel htmlFor='demo-dialog-native'>Age</InputLabel>\r\n              <Select\r\n                native\r\n                value={age}\r\n                onChange={handleChange}\r\n                input={<OutlinedInput label='Age' id='demo-dialog-native' />}\r\n              >\r\n                <option aria-label='None' value='' />\r\n                <option value={10}>Ten</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl sx={{m: 1, minWidth: 120}}>\r\n              <InputLabel id='demo-dialog-select-label'>Age</InputLabel>\r\n              <Select\r\n                labelId='demo-dialog-select-label'\r\n                id='demo-dialog-select'\r\n                value={age}\r\n                onChange={handleChange}\r\n                input={<OutlinedInput label='Age' />}\r\n              >\r\n                <MenuItem value=''>\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleClose}>Ok</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Button from '@mui/material/Button';\\r\\nimport Dialog from '@mui/material/Dialog';\\r\\nimport DialogActions from '@mui/material/DialogActions';\\r\\nimport DialogContent from '@mui/material/DialogContent';\\r\\nimport DialogTitle from '@mui/material/DialogTitle';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport OutlinedInput from '@mui/material/OutlinedInput';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nexport default function DialogSelect() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setAge(Number(event.target.value) || '');\\r\\n  };\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = (event, reason) => {\\r\\n    if (reason !== 'backdropClick') {\\r\\n      setOpen(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\\r\\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\\r\\n        <DialogTitle>Fill the form</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <Box component='form' sx={{display: 'flex', flexWrap: 'wrap'}}>\\r\\n            <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n              <InputLabel htmlFor='demo-dialog-native'>Age</InputLabel>\\r\\n              <Select\\r\\n                native\\r\\n                value={age}\\r\\n                onChange={handleChange}\\r\\n                input={<OutlinedInput label='Age' id='demo-dialog-native' />}\\r\\n              >\\r\\n                <option aria-label='None' value='' />\\r\\n                <option value={10}>Ten</option>\\r\\n                <option value={20}>Twenty</option>\\r\\n                <option value={30}>Thirty</option>\\r\\n              </Select>\\r\\n            </FormControl>\\r\\n            <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n              <InputLabel id='demo-dialog-select-label'>Age</InputLabel>\\r\\n              <Select\\r\\n                labelId='demo-dialog-select-label'\\r\\n                id='demo-dialog-select'\\r\\n                value={age}\\r\\n                onChange={handleChange}\\r\\n                input={<OutlinedInput label='Age' />}\\r\\n              >\\r\\n                <MenuItem value=''>\\r\\n                  <em>None</em>\\r\\n                </MenuItem>\\r\\n                <MenuItem value={10}>Ten</MenuItem>\\r\\n                <MenuItem value={20}>Twenty</MenuItem>\\r\\n                <MenuItem value={30}>Thirty</MenuItem>\\r\\n              </Select>\\r\\n            </FormControl>\\r\\n          </Box>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose}>Cancel</Button>\\r\\n          <Button onClick={handleClose}>Ok</Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function GroupedSelect() {\r\n  return (\r\n    <div>\r\n      <FormControl sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel htmlFor='grouped-native-select'>Grouping</InputLabel>\r\n        <Select\r\n          native\r\n          defaultValue=''\r\n          id='grouped-native-select'\r\n          label='Grouping'\r\n        >\r\n          <option aria-label='None' value='' />\r\n          <optgroup label='Category 1'>\r\n            <option value={1}>Option 1</option>\r\n            <option value={2}>Option 2</option>\r\n          </optgroup>\r\n          <optgroup label='Category 2'>\r\n            <option value={3}>Option 3</option>\r\n            <option value={4}>Option 4</option>\r\n          </optgroup>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel htmlFor='grouped-select'>Grouping</InputLabel>\r\n        <Select defaultValue='' id='grouped-select' label='Grouping'>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <ListSubheader>Category 1</ListSubheader>\r\n          <MenuItem value={1}>Option 1</MenuItem>\r\n          <MenuItem value={2}>Option 2</MenuItem>\r\n          <ListSubheader>Category 2</ListSubheader>\r\n          <MenuItem value={3}>Option 3</MenuItem>\r\n          <MenuItem value={4}>Option 4</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport BasicSelect from './BasicSelect';\r\nimport BasicSelectSource from '!raw-loader!./BasicSelect';\r\nimport SelectVariants from './SelectVariants';\r\nimport SelectVariantsSource from '!raw-loader!./SelectVariants';\r\nimport SelectLabels from './LabelsHelperText';\r\nimport SelectLabelsSource from '!raw-loader!./LabelsHelperText';\r\nimport SelectAutoWidth from './AutoWidth';\r\nimport SelectAutoWidthSource from '!raw-loader!./AutoWidth';\r\nimport SelectOtherProps from './SelectOtherProps';\r\nimport SelectOtherPropsSource from '!raw-loader!./SelectOtherProps';\r\nimport NativeSelectDemo from './NativeSelect';\r\nimport NativeSelectDemoSource from '!raw-loader!./NativeSelect';\r\nimport CustomizedSelects from './Customization';\r\nimport CustomizedSelectsSource from '!raw-loader!./Customization';\r\nimport MultipleSelect from './MultipleSelect';\r\nimport MultipleSelectSource from '!raw-loader!./MultipleSelect';\r\nimport MultipleSelectCheckmarks from './MultipleSelectCheckmarks';\r\nimport MultipleSelectCheckmarksSource from '!raw-loader!./MultipleSelectCheckmarks';\r\nimport MultipleSelectChip from './MultipleSelectChip';\r\nimport MultipleSelectChipSource from '!raw-loader!./MultipleSelectChip';\r\nimport MultipleSelectPlaceholder from './MultipleSelectPlaceholder';\r\nimport MultipleSelectPlaceholderSource from '!raw-loader!./MultipleSelectPlaceholder';\r\nimport MultipleSelectNative from './MultipleSelectNative';\r\nimport MultipleSelectNativeSource from '!raw-loader!./MultipleSelectNative';\r\nimport ControlledOpenSelect from './ControlledOpenSelect';\r\nimport ControlledOpenSelectSource from '!raw-loader!./ControlledOpenSelect';\r\nimport DialogSelect from './DialogSelect';\r\nimport DialogSelectSource from '!raw-loader!./DialogSelect';\r\nimport GroupedSelect from './GroupedSelect';\r\nimport GroupedSelectSource from '!raw-loader!./GroupedSelect';\r\n\r\nconst Selects = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Select'\r\n        description='Select components are used for collecting user provided information from a list of options.'\r\n        refUrl='https://mui.com/components/selects/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Basic select'\r\n            component={BasicSelect}\r\n            source={BasicSelectSource}\r\n            noScrollbar\r\n            description='Menus are positioned under their emitting elements, unless they are close to the bottom of the viewport.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Labels and helper text'\r\n            component={SelectLabels}\r\n            source={SelectLabelsSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Filled and standard variants'\r\n            component={SelectVariants}\r\n            source={SelectVariantsSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Auto width'\r\n            component={SelectAutoWidth}\r\n            source={SelectAutoWidthSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Other props'\r\n            component={SelectOtherProps}\r\n            source={SelectOtherPropsSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Customization'\r\n            component={CustomizedSelects}\r\n            source={CustomizedSelectsSource}\r\n            noScrollbar\r\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Native select'\r\n            component={NativeSelectDemo}\r\n            source={NativeSelectDemoSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Multiple Select'\r\n            component={MultipleSelect}\r\n            source={MultipleSelectSource}\r\n            noScrollbar\r\n            description='The Select component can handle multiple selections. It enabled with the multiple prop.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Dialog Select'\r\n            component={DialogSelect}\r\n            source={DialogSelectSource}\r\n            noScrollbar\r\n            description='While it discouraged by the Material Design guidelines, you can use a select inside a dialog.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Multiple Select Checkmarks'\r\n            component={MultipleSelectCheckmarks}\r\n            source={MultipleSelectCheckmarksSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Multiple Select Chip'\r\n            component={MultipleSelectChip}\r\n            source={MultipleSelectChipSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Multiple Select Placeholder'\r\n            component={MultipleSelectPlaceholder}\r\n            source={MultipleSelectPlaceholderSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Multiple Select Native'\r\n            component={MultipleSelectNative}\r\n            source={MultipleSelectNativeSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Controlled Open Select'\r\n            component={ControlledOpenSelect}\r\n            source={ControlledOpenSelectSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Grouped Select'\r\n            component={GroupedSelect}\r\n            source={GroupedSelectSource}\r\n            noScrollbar\r\n            description='Display categories with the ListSubheader component or the native <optgroup> element.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Selects;\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nexport default function BasicSelect() {\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{minWidth: 120}}>\\r\\n      <FormControl fullWidth>\\r\\n        <InputLabel id='demo-simple-select-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-label'\\r\\n          id='demo-simple-select'\\r\\n          value={age}\\r\\n          label='Age'\\r\\n          onChange={handleChange}\\r\\n        >\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormHelperText from '@mui/material/FormHelperText';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nexport default function SelectLabels() {\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel id='demo-simple-select-helper-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-helper-label'\\r\\n          id='demo-simple-select-helper'\\r\\n          value={age}\\r\\n          label='Age'\\r\\n          onChange={handleChange}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>With label + helper text</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n        <Select\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          displayEmpty\\r\\n          inputProps={{'aria-label': 'Without label'}}\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Without label</FormHelperText>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nexport default function SelectAutoWidth() {\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, minWidth: 80}}>\\r\\n        <InputLabel id='demo-simple-select-autowidth-label'>Age</InputLabel>\\r\\n        <Select\\r\\n          labelId='demo-simple-select-autowidth-label'\\r\\n          id='demo-simple-select-autowidth'\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          autoWidth\\r\\n          label='Age'\\r\\n        >\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Twenty</MenuItem>\\r\\n          <MenuItem value={21}>Twenty one</MenuItem>\\r\\n          <MenuItem value={22}>Twenty one and a half</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\nimport ListSubheader from '@mui/material/ListSubheader';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport Select from '@mui/material/Select';\\r\\n\\r\\nexport default function GroupedSelect() {\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel htmlFor='grouped-native-select'>Grouping</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          defaultValue=''\\r\\n          id='grouped-native-select'\\r\\n          label='Grouping'\\r\\n        >\\r\\n          <option aria-label='None' value='' />\\r\\n          <optgroup label='Category 1'>\\r\\n            <option value={1}>Option 1</option>\\r\\n            <option value={2}>Option 2</option>\\r\\n          </optgroup>\\r\\n          <optgroup label='Category 2'>\\r\\n            <option value={3}>Option 3</option>\\r\\n            <option value={4}>Option 4</option>\\r\\n          </optgroup>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl sx={{m: 1, minWidth: 120}}>\\r\\n        <InputLabel htmlFor='grouped-select'>Grouping</InputLabel>\\r\\n        <Select defaultValue='' id='grouped-select' label='Grouping'>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <ListSubheader>Category 1</ListSubheader>\\r\\n          <MenuItem value={1}>Option 1</MenuItem>\\r\\n          <MenuItem value={2}>Option 2</MenuItem>\\r\\n          <ListSubheader>Category 2</ListSubheader>\\r\\n          <MenuItem value={3}>Option 3</MenuItem>\\r\\n          <MenuItem value={4}>Option 4</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}