(this.webpackJsonphister=this.webpackJsonphister||[]).push([[55],{1618:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z"}),"Mail");n.default=a},1625:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}),"Delete");n.default=a},1674:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"m7 10 5 5 5-5z"}),"ArrowDropDown");n.default=a},1816:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"m10 17 5-5-5-5v10z"}),"ArrowRight");n.default=a},2092:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z"}),"Label");n.default=a},2093:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z"}),"SupervisorAccount");n.default=a},2094:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z"}),"Forum");n.default=a},2095:function(e,n,r){"use strict";var t=r(66);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(r(94)),l=r(1),a=(0,o.default)((0,l.jsx)("path",{d:"m21.41 11.58-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z"}),"LocalOffer");n.default=a},2314:function(e,n,r){"use strict";r.r(n);var t=r(2),o=r(72),l=r(60),a=r(1458),i=r(38),d=r(2413),c=r(730),s=r.n(c),m=r(1634),p=r.n(m),b=r(2414),u=r(1);function h(){return Object(u.jsxs)(d.a,{"aria-label":"file system navigator",defaultCollapseIcon:Object(u.jsx)(s.a,{}),defaultExpandIcon:Object(u.jsx)(p.a,{}),sx:{height:240,flexGrow:1,maxWidth:400,overflowY:"auto"},children:[Object(u.jsx)(b.a,{nodeId:"1",label:"Applications",children:Object(u.jsx)(b.a,{nodeId:"2",label:"Calendar"})}),Object(u.jsxs)(b.a,{nodeId:"5",label:"Documents",children:[Object(u.jsx)(b.a,{nodeId:"10",label:"OSS"}),Object(u.jsx)(b.a,{nodeId:"6",label:"MUI",children:Object(u.jsx)(b.a,{nodeId:"8",label:"index.js"})})]})]})}function I(){return Object(u.jsxs)(d.a,{"aria-label":"multi-select",defaultCollapseIcon:Object(u.jsx)(s.a,{}),defaultExpandIcon:Object(u.jsx)(p.a,{}),multiSelect:!0,sx:{height:216,flexGrow:1,maxWidth:400,overflowY:"auto"},children:[Object(u.jsxs)(b.a,{nodeId:"1",label:"Applications",children:[Object(u.jsx)(b.a,{nodeId:"2",label:"Calendar"}),Object(u.jsx)(b.a,{nodeId:"3",label:"Chrome"}),Object(u.jsx)(b.a,{nodeId:"4",label:"Webstorm"})]}),Object(u.jsx)(b.a,{nodeId:"5",label:"Documents",children:Object(u.jsx)(b.a,{nodeId:"6",label:"MUI",children:Object(u.jsxs)(b.a,{nodeId:"7",label:"src",children:[Object(u.jsx)(b.a,{nodeId:"8",label:"index.js"}),Object(u.jsx)(b.a,{nodeId:"9",label:"tree-view.js"})]})})})]})}var x=r(14),f=r(206),j=r(719);function T(){var e=t.useState([]),n=Object(x.a)(e,2),r=n[0],o=n[1],l=t.useState([]),a=Object(x.a)(l,2),i=a[0],c=a[1];return Object(u.jsxs)(f.a,{sx:{height:270,flexGrow:1,maxWidth:400,overflowY:"auto"},children:[Object(u.jsxs)(f.a,{sx:{mb:1},children:[Object(u.jsx)(j.a,{onClick:function(){o((function(e){return 0===e.length?["1","5","6","7"]:[]}))},children:0===r.length?"Expand all":"Collapse all"}),Object(u.jsx)(j.a,{onClick:function(){c((function(e){return 0===e.length?["1","2","3","4","5","6","7","8","9"]:[]}))},children:0===i.length?"Select all":"Unselect all"})]}),Object(u.jsxs)(d.a,{"aria-label":"controlled",defaultCollapseIcon:Object(u.jsx)(s.a,{}),defaultExpandIcon:Object(u.jsx)(p.a,{}),expanded:r,selected:i,onNodeToggle:function(e,n){o(n)},onNodeSelect:function(e,n){c(n)},multiSelect:!0,children:[Object(u.jsxs)(b.a,{nodeId:"1",label:"Applications",children:[Object(u.jsx)(b.a,{nodeId:"2",label:"Calendar"}),Object(u.jsx)(b.a,{nodeId:"3",label:"Chrome"}),Object(u.jsx)(b.a,{nodeId:"4",label:"Webstorm"})]}),Object(u.jsx)(b.a,{nodeId:"5",label:"Documents",children:Object(u.jsx)(b.a,{nodeId:"6",label:"MUI",children:Object(u.jsxs)(b.a,{nodeId:"7",label:"src",children:[Object(u.jsx)(b.a,{nodeId:"8",label:"index.js"}),Object(u.jsx)(b.a,{nodeId:"9",label:"tree-view.js"})]})})})]})]})}var v={id:"root",name:"Parent",children:[{id:"1",name:"Child - 1"},{id:"3",name:"Child - 3",children:[{id:"4",name:"Child - 4"}]}]};function C(){return Object(u.jsx)(d.a,{"aria-label":"rich object",defaultCollapseIcon:Object(u.jsx)(s.a,{}),defaultExpanded:["root"],defaultExpandIcon:Object(u.jsx)(p.a,{}),sx:{height:110,flexGrow:1,maxWidth:400,overflowY:"auto"},children:function e(n){return Object(u.jsx)(b.a,{nodeId:n.id,label:n.name,children:Array.isArray(n.children)?n.children.map((function(n){return e(n)})):null},n.id)}(v)})}var g=r(5),O=r(6),y=r(1969),w=r(12),S=r(223),M=t.forwardRef((function(e,n){var r,t=e.classes,o=e.className,l=e.label,a=e.nodeId,i=e.icon,d=e.expansionIcon,c=e.displayIcon,s=Object(y.a)(a),m=s.disabled,p=s.expanded,b=s.selected,h=s.focused,I=s.handleExpansion,x=s.handleSelection,f=s.preventSelection,j=i||d||c;return Object(u.jsxs)("div",{className:Object(w.default)(o,t.root,(r={},Object(O.a)(r,t.expanded,p),Object(O.a)(r,t.selected,b),Object(O.a)(r,t.focused,h),Object(O.a)(r,t.disabled,m),r)),onMouseDown:function(e){f(e)},ref:n,children:[Object(u.jsx)("div",{onClick:function(e){I(e)},className:t.iconContainer,children:j}),Object(u.jsx)(S.a,{onClick:function(e){x(e)},component:"div",className:t.label,children:l})]})})),E=function(e){return Object(u.jsx)(b.a,Object(g.a)({ContentComponent:M},e))};function R(){return Object(u.jsxs)(d.a,{"aria-label":"icon expansion",defaultCollapseIcon:Object(u.jsx)(s.a,{}),defaultExpandIcon:Object(u.jsx)(p.a,{}),sx:{height:240,flexGrow:1,maxWidth:400,overflowY:"auto"},children:[Object(u.jsxs)(E,{nodeId:"1",label:"Applications",children:[Object(u.jsx)(E,{nodeId:"2",label:"Calendar"}),Object(u.jsx)(E,{nodeId:"3",label:"Chrome"}),Object(u.jsx)(E,{nodeId:"4",label:"Webstorm"})]}),Object(u.jsxs)(E,{nodeId:"5",label:"Documents",children:[Object(u.jsx)(E,{nodeId:"10",label:"OSS"}),Object(u.jsx)(E,{nodeId:"6",label:"MUI",children:Object(u.jsxs)(E,{nodeId:"7",label:"src",children:[Object(u.jsx)(E,{nodeId:"8",label:"index.js"}),Object(u.jsx)(E,{nodeId:"9",label:"tree-view.js"})]})})]})]})}var V=r(17),k=r(145),P=Object(V.a)("div")((function(e){var n=e.theme;return Object(O.a)({WebkitTapHighlightColor:"transparent","&:hover, &.Mui-disabled, &.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused, &.Mui-selected:hover":{backgroundColor:"transparent"}},"& .MuiTreeItem-contentBar",{position:"absolute",width:"100%",height:24,left:0,"&:hover &":{backgroundColor:n.palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},"&.Mui-disabled &":{opacity:n.palette.action.disabledOpacity,backgroundColor:"transparent"},"&.Mui-focused &":{backgroundColor:n.palette.action.focus},"&.Mui-selected &":{backgroundColor:Object(k.a)(n.palette.primary.main,n.palette.action.selectedOpacity)},"&.Mui-selected:hover &":{backgroundColor:Object(k.a)(n.palette.primary.main,n.palette.action.selectedOpacity+n.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:Object(k.a)(n.palette.primary.main,n.palette.action.selectedOpacity)}},"&.Mui-selected.Mui-focused &":{backgroundColor:Object(k.a)(n.palette.primary.main,n.palette.action.selectedOpacity+n.palette.action.focusOpacity)}})})),q=t.forwardRef((function(e,n){var r=e.className,t=e.classes,o=e.label,l=e.nodeId,a=e.icon,i=e.expansionIcon,d=e.displayIcon,c=Object(y.a)(l),s=c.disabled,m=c.expanded,p=c.selected,b=c.focused,h=c.handleExpansion,I=c.handleSelection,x=c.preventSelection,f=a||i||d;return Object(u.jsxs)(P,{className:Object(w.default)(r,t.root,{"Mui-expanded":m,"Mui-selected":p,"Mui-focused":b,"Mui-disabled":s}),onClick:function(e){h(e),I(e)},onMouseDown:function(e){x(e)},ref:n,children:[Object(u.jsx)("div",{className:"MuiTreeItem-contentBar"}),Object(u.jsx)("div",{className:t.iconContainer,children:f}),Object(u.jsx)(S.a,{component:"div",className:t.label,children:o})]})})),W=function(e){return Object(u.jsx)(b.a,Object(g.a)({ContentComponent:q},e))};function D(){return Object(u.jsxs)(d.a,{"aria-label":"icon expansion",defaultCollapseIcon:Object(u.jsx)(s.a,{}),defaultExpandIcon:Object(u.jsx)(p.a,{}),sx:{height:240,flexGrow:1,maxWidth:400,position:"relative"},children:[Object(u.jsxs)(W,{nodeId:"1",label:"Applications",children:[Object(u.jsx)(W,{nodeId:"2",label:"Calendar"}),Object(u.jsx)(W,{nodeId:"3",label:"Chrome"}),Object(u.jsx)(W,{nodeId:"4",label:"Webstorm"})]}),Object(u.jsxs)(W,{nodeId:"5",label:"Documents",children:[Object(u.jsx)(W,{nodeId:"10",label:"OSS"}),Object(u.jsx)(W,{nodeId:"6",label:"MUI",children:Object(u.jsxs)(W,{nodeId:"7",label:"src",children:[Object(u.jsx)(W,{nodeId:"8",label:"index.js"}),Object(u.jsx)(W,{nodeId:"9",label:"tree-view.js"})]})})]})]})}var z=function(){return Object(u.jsx)("div",{children:"CustomizedTreeView"})},N=r(23),B=r(1968),A=r(1618),L=r.n(A),F=r(1625),G=r.n(F),Y=r(2092),_=r.n(Y),U=r(2093),H=r.n(U),$=r(728),J=r.n($),K=r(2094),Q=r.n(K),X=r(2095),Z=r.n(X),ee=r(1674),ne=r.n(ee),re=r(1816),te=r.n(re),oe=["bgColor","color","labelIcon","labelInfo","labelText"],le=Object(V.a)(b.a)((function(e){var n,r=e.theme;return n={color:r.palette.text.secondary},Object(O.a)(n,"& .".concat(B.a.content),Object(O.a)({color:r.palette.text.secondary,borderTopRightRadius:r.spacing(2),borderBottomRightRadius:r.spacing(2),paddingRight:r.spacing(1),fontWeight:r.typography.fontWeightMedium,"&.Mui-expanded":{fontWeight:r.typography.fontWeightRegular},"&:hover":{backgroundColor:r.palette.action.hover},"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused":{backgroundColor:"var(--tree-view-bg-color, ".concat(r.palette.action.selected,")"),color:"var(--tree-view-color)"}},"& .".concat(B.a.label),{fontWeight:"inherit",color:"inherit"})),Object(O.a)(n,"& .".concat(B.a.group),Object(O.a)({marginLeft:0},"& .".concat(B.a.content),{paddingLeft:r.spacing(2)})),n}));function ae(e){var n=e.bgColor,r=e.color,t=e.labelIcon,o=e.labelInfo,l=e.labelText,a=Object(N.a)(e,oe);return Object(u.jsx)(le,Object(g.a)({label:Object(u.jsxs)(f.a,{sx:{display:"flex",alignItems:"center",p:.5,pr:0},children:[Object(u.jsx)(f.a,{component:t,color:"inherit",sx:{mr:1}}),Object(u.jsx)(S.a,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1},children:l}),Object(u.jsx)(S.a,{variant:"caption",color:"inherit",children:o})]}),style:{"--tree-view-color":r,"--tree-view-bg-color":n}},a))}function ie(){return Object(u.jsxs)(d.a,{"aria-label":"gmail",defaultExpanded:["3"],defaultCollapseIcon:Object(u.jsx)(ne.a,{}),defaultExpandIcon:Object(u.jsx)(te.a,{}),defaultEndIcon:Object(u.jsx)("div",{style:{width:24}}),sx:{height:264,flexGrow:1,maxWidth:400,overflowY:"auto"},children:[Object(u.jsx)(ae,{nodeId:"1",labelText:"All Mail",labelIcon:L.a}),Object(u.jsx)(ae,{nodeId:"2",labelText:"Trash",labelIcon:G.a}),Object(u.jsxs)(ae,{nodeId:"3",labelText:"Categories",labelIcon:_.a,children:[Object(u.jsx)(ae,{nodeId:"5",labelText:"Social",labelIcon:H.a,labelInfo:"90",color:"#1a73e8",bgColor:"#e8f0fe"}),Object(u.jsx)(ae,{nodeId:"6",labelText:"Updates",labelIcon:J.a,labelInfo:"2,294",color:"#e3742f",bgColor:"#fcefe3"}),Object(u.jsx)(ae,{nodeId:"7",labelText:"Forums",labelIcon:Q.a,labelInfo:"3,566",color:"#a250f5",bgColor:"#f3e8fd"}),Object(u.jsx)(ae,{nodeId:"8",labelText:"Promotions",labelIcon:Z.a,labelInfo:"733",color:"#3c8039",bgColor:"#e6f4ea"})]}),Object(u.jsx)(ae,{nodeId:"4",labelText:"History",labelIcon:_.a})]})}var de=r(1585),ce=r(1559);function se(){var e=t.useState(!1),n=Object(x.a)(e,2),r=n[0],o=n[1];return Object(u.jsxs)(f.a,{sx:{height:270,flexGrow:1,maxWidth:400,overflowY:"auto"},children:[Object(u.jsx)(f.a,{sx:{mb:1},children:Object(u.jsx)(de.a,{control:Object(u.jsx)(ce.a,{checked:r,onChange:function(e){o(e.target.checked)},name:"focusDisabledItems"}),label:"Focus disabled items"})}),Object(u.jsxs)(d.a,{"aria-label":"disabled items",defaultCollapseIcon:Object(u.jsx)(s.a,{}),defaultExpandIcon:Object(u.jsx)(p.a,{}),disabledItemsFocusable:r,multiSelect:!0,children:[Object(u.jsxs)(b.a,{nodeId:"1",label:"One",children:[Object(u.jsx)(b.a,{nodeId:"2",label:"Two"}),Object(u.jsx)(b.a,{nodeId:"3",label:"Three"}),Object(u.jsx)(b.a,{nodeId:"4",label:"Four"})]}),Object(u.jsx)(b.a,{nodeId:"5",label:"Five",disabled:!0,children:Object(u.jsx)(b.a,{nodeId:"6",label:"Six"})}),Object(u.jsxs)(b.a,{nodeId:"7",label:"Seven",children:[Object(u.jsx)(b.a,{nodeId:"8",label:"Eight"}),Object(u.jsx)(b.a,{nodeId:"9",label:"Nine",children:Object(u.jsxs)(b.a,{nodeId:"10",label:"Ten",children:[Object(u.jsx)(b.a,{nodeId:"11",label:"Eleven"}),Object(u.jsx)(b.a,{nodeId:"12",label:"Twelve"})]})})]})]})]})}n.default=function(){return Object(u.jsxs)(u.Fragment,{children:[Object(u.jsx)(o.a,{title:"TreeView",description:"A tree view widget presents a hierarchical list.",refUrl:"https://mui.com/components/tree-view/"}),Object(u.jsxs)(l.a,{children:[Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"File System Navigator",component:h,source:"import * as React from 'react';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\n\r\nexport default function FileSystemNavigator() {\r\n  return (\r\n    <TreeView\r\n      aria-label='file system navigator'\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n      sx={{height: 240, flexGrow: 1, maxWidth: 400, overflowY: 'auto'}}\r\n    >\r\n      <TreeItem nodeId='1' label='Applications'>\r\n        <TreeItem nodeId='2' label='Calendar' />\r\n      </TreeItem>\r\n      <TreeItem nodeId='5' label='Documents'>\r\n        <TreeItem nodeId='10' label='OSS' />\r\n        <TreeItem nodeId='6' label='MUI'>\r\n          <TreeItem nodeId='8' label='index.js' />\r\n        </TreeItem>\r\n      </TreeItem>\r\n    </TreeView>\r\n  );\r\n}\r\n",noScrollbar:!0})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"Icon Expansion Tree View",component:R,source:"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem, {useTreeItem} from '@mui/lab/TreeItem';\r\nimport clsx from 'clsx';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst CustomContent = React.forwardRef(function CustomContent(props, ref) {\r\n  const {\r\n    classes,\r\n    className,\r\n    label,\r\n    nodeId,\r\n    icon: iconProp,\r\n    expansionIcon,\r\n    displayIcon,\r\n  } = props;\r\n\r\n  const {\r\n    disabled,\r\n    expanded,\r\n    selected,\r\n    focused,\r\n    handleExpansion,\r\n    handleSelection,\r\n    preventSelection,\r\n  } = useTreeItem(nodeId);\r\n\r\n  const icon = iconProp || expansionIcon || displayIcon;\r\n\r\n  const handleMouseDown = (event) => {\r\n    preventSelection(event);\r\n  };\r\n\r\n  const handleExpansionClick = (event) => {\r\n    handleExpansion(event);\r\n  };\r\n\r\n  const handleSelectionClick = (event) => {\r\n    handleSelection(event);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(className, classes.root, {\r\n        [classes.expanded]: expanded,\r\n        [classes.selected]: selected,\r\n        [classes.focused]: focused,\r\n        [classes.disabled]: disabled,\r\n      })}\r\n      onMouseDown={handleMouseDown}\r\n      ref={ref}\r\n    >\r\n      <div onClick={handleExpansionClick} className={classes.iconContainer}>\r\n        {icon}\r\n      </div>\r\n      <Typography\r\n        onClick={handleSelectionClick}\r\n        component='div'\r\n        className={classes.label}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    </div>\r\n  );\r\n});\r\n\r\nCustomContent.propTypes = {\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * className applied to the root element.\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The icon to display next to the tree node's label. Either a parent or end icon.\r\n   */\r\n  displayIcon: PropTypes.node,\r\n  /**\r\n   * The icon to display next to the tree node's label. Either an expansion or collapse icon.\r\n   */\r\n  expansionIcon: PropTypes.node,\r\n  /**\r\n   * The icon to display next to the tree node's label.\r\n   */\r\n  icon: PropTypes.node,\r\n  /**\r\n   * The tree node label.\r\n   */\r\n  label: PropTypes.node,\r\n  /**\r\n   * The id of the node.\r\n   */\r\n  nodeId: PropTypes.string.isRequired,\r\n};\r\n\r\nconst CustomTreeItem = (props) => (\r\n  <TreeItem ContentComponent={CustomContent} {...props} />\r\n);\r\n\r\nexport default function IconExpansionTreeView() {\r\n  return (\r\n    <TreeView\r\n      aria-label='icon expansion'\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n      sx={{height: 240, flexGrow: 1, maxWidth: 400, overflowY: 'auto'}}\r\n    >\r\n      <CustomTreeItem nodeId='1' label='Applications'>\r\n        <CustomTreeItem nodeId='2' label='Calendar' />\r\n        <CustomTreeItem nodeId='3' label='Chrome' />\r\n        <CustomTreeItem nodeId='4' label='Webstorm' />\r\n      </CustomTreeItem>\r\n      <CustomTreeItem nodeId='5' label='Documents'>\r\n        <CustomTreeItem nodeId='10' label='OSS' />\r\n        <CustomTreeItem nodeId='6' label='MUI'>\r\n          <CustomTreeItem nodeId='7' label='src'>\r\n            <CustomTreeItem nodeId='8' label='index.js' />\r\n            <CustomTreeItem nodeId='9' label='tree-view.js' />\r\n          </CustomTreeItem>\r\n        </CustomTreeItem>\r\n      </CustomTreeItem>\r\n    </TreeView>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"You can use the ContentComponent prop and the useTreeItem hook to further customize the behavior of the TreeItem."})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"Multi Select Tree View",component:I,source:"import * as React from 'react';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\n\r\nexport default function MultiSelectTreeView() {\r\n  return (\r\n    <TreeView\r\n      aria-label='multi-select'\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n      multiSelect\r\n      sx={{height: 216, flexGrow: 1, maxWidth: 400, overflowY: 'auto'}}\r\n    >\r\n      <TreeItem nodeId='1' label='Applications'>\r\n        <TreeItem nodeId='2' label='Calendar' />\r\n        <TreeItem nodeId='3' label='Chrome' />\r\n        <TreeItem nodeId='4' label='Webstorm' />\r\n      </TreeItem>\r\n      <TreeItem nodeId='5' label='Documents'>\r\n        <TreeItem nodeId='6' label='MUI'>\r\n          <TreeItem nodeId='7' label='src'>\r\n            <TreeItem nodeId='8' label='index.js' />\r\n            <TreeItem nodeId='9' label='tree-view.js' />\r\n          </TreeItem>\r\n        </TreeItem>\r\n      </TreeItem>\r\n    </TreeView>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"Tree views also support multi-selection."})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"Bar Tree View",component:D,source:"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {styled, alpha} from '@mui/material/styles';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem, {useTreeItem} from '@mui/lab/TreeItem';\r\nimport clsx from 'clsx';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst CustomContentRoot = styled('div')(({theme}) => ({\r\n  WebkitTapHighlightColor: 'transparent',\r\n  '&:hover, &.Mui-disabled, &.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused, &.Mui-selected:hover':\r\n    {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  [`& .MuiTreeItem-contentBar`]: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 24,\r\n    left: 0,\r\n    '&:hover &': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      // Reset on touch devices, it doesn't add specificity\r\n      '@media (hover: none)': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    '&.Mui-disabled &': {\r\n      opacity: theme.palette.action.disabledOpacity,\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '&.Mui-focused &': {\r\n      backgroundColor: theme.palette.action.focus,\r\n    },\r\n    '&.Mui-selected &': {\r\n      backgroundColor: alpha(\r\n        theme.palette.primary.main,\r\n        theme.palette.action.selectedOpacity,\r\n      ),\r\n    },\r\n    '&.Mui-selected:hover &': {\r\n      backgroundColor: alpha(\r\n        theme.palette.primary.main,\r\n        theme.palette.action.selectedOpacity +\r\n          theme.palette.action.hoverOpacity,\r\n      ),\r\n      // Reset on touch devices, it doesn't add specificity\r\n      '@media (hover: none)': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n    '&.Mui-selected.Mui-focused &': {\r\n      backgroundColor: alpha(\r\n        theme.palette.primary.main,\r\n        theme.palette.action.selectedOpacity +\r\n          theme.palette.action.focusOpacity,\r\n      ),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomContent = React.forwardRef(function CustomContent(props, ref) {\r\n  const {\r\n    className,\r\n    classes,\r\n    label,\r\n    nodeId,\r\n    icon: iconProp,\r\n    expansionIcon,\r\n    displayIcon,\r\n  } = props;\r\n\r\n  const {\r\n    disabled,\r\n    expanded,\r\n    selected,\r\n    focused,\r\n    handleExpansion,\r\n    handleSelection,\r\n    preventSelection,\r\n  } = useTreeItem(nodeId);\r\n\r\n  const icon = iconProp || expansionIcon || displayIcon;\r\n\r\n  const handleMouseDown = (event) => {\r\n    preventSelection(event);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    handleExpansion(event);\r\n    handleSelection(event);\r\n  };\r\n\r\n  return (\r\n    <CustomContentRoot\r\n      className={clsx(className, classes.root, {\r\n        'Mui-expanded': expanded,\r\n        'Mui-selected': selected,\r\n        'Mui-focused': focused,\r\n        'Mui-disabled': disabled,\r\n      })}\r\n      onClick={handleClick}\r\n      onMouseDown={handleMouseDown}\r\n      ref={ref}\r\n    >\r\n      <div className='MuiTreeItem-contentBar' />\r\n      <div className={classes.iconContainer}>{icon}</div>\r\n      <Typography component='div' className={classes.label}>\r\n        {label}\r\n      </Typography>\r\n    </CustomContentRoot>\r\n  );\r\n});\r\n\r\nCustomContent.propTypes = {\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  /**\r\n   * className applied to the root element.\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The icon to display next to the tree node's label. Either a parent or end icon.\r\n   */\r\n  displayIcon: PropTypes.node,\r\n  /**\r\n   * The icon to display next to the tree node's label. Either an expansion or collapse icon.\r\n   */\r\n  expansionIcon: PropTypes.node,\r\n  /**\r\n   * The icon to display next to the tree node's label.\r\n   */\r\n  icon: PropTypes.node,\r\n  /**\r\n   * The tree node label.\r\n   */\r\n  label: PropTypes.node,\r\n  /**\r\n   * The id of the node.\r\n   */\r\n  nodeId: PropTypes.string.isRequired,\r\n};\r\n\r\nconst CustomTreeItem = (props) => (\r\n  <TreeItem ContentComponent={CustomContent} {...props} />\r\n);\r\n\r\nexport default function BarTreeView() {\r\n  return (\r\n    <TreeView\r\n      aria-label='icon expansion'\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n      sx={{height: 240, flexGrow: 1, maxWidth: 400, position: 'relative'}}\r\n    >\r\n      <CustomTreeItem nodeId='1' label='Applications'>\r\n        <CustomTreeItem nodeId='2' label='Calendar' />\r\n        <CustomTreeItem nodeId='3' label='Chrome' />\r\n        <CustomTreeItem nodeId='4' label='Webstorm' />\r\n      </CustomTreeItem>\r\n      <CustomTreeItem nodeId='5' label='Documents'>\r\n        <CustomTreeItem nodeId='10' label='OSS' />\r\n        <CustomTreeItem nodeId='6' label='MUI'>\r\n          <CustomTreeItem nodeId='7' label='src'>\r\n            <CustomTreeItem nodeId='8' label='index.js' />\r\n            <CustomTreeItem nodeId='9' label='tree-view.js' />\r\n          </CustomTreeItem>\r\n        </CustomTreeItem>\r\n      </CustomTreeItem>\r\n    </TreeView>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"Or increasing the width of the state indicator:"})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"Customized Tree View",component:z,source:'import React from \'react\';\r\n\r\nconst CustomizedTreeView = () => {\r\n  return <div>CustomizedTreeView</div>;\r\n};\r\n\r\nexport default CustomizedTreeView;\r\n// import * as React from \'react\';\r\n// import PropTypes from \'prop-types\';\r\n// import SvgIcon from \'@mui/material/SvgIcon\';\r\n// import { alpha, styled } from \'@mui/material/styles\';\r\n// import TreeView from \'@mui/lab/TreeView\';\r\n// import TreeItem, { treeItemClasses } from \'@mui/lab/TreeItem\';\r\n// import Collapse from \'@mui/material/Collapse\';\r\n// // web.cjs is required for IE11 support\r\n// import { useSpring, animated } from \'react-spring/web.cjs\';\r\n//\r\n// function MinusSquare(props) {\r\n//   return (\r\n//     <SvgIcon fontSize="inherit" style={{ width: 14, height: 14 }} {...props}>\r\n//       {/* tslint:disable-next-line: max-line-length */}\r\n//       <path d="M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z" />\r\n//     </SvgIcon>\r\n//   );\r\n// }\r\n//\r\n// function PlusSquare(props) {\r\n//   return (\r\n//     <SvgIcon fontSize="inherit" style={{ width: 14, height: 14 }} {...props}>\r\n//       {/* tslint:disable-next-line: max-line-length */}\r\n//       <path d="M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z" />\r\n//     </SvgIcon>\r\n//   );\r\n// }\r\n//\r\n// function CloseSquare(props) {\r\n//   return (\r\n//     <SvgIcon\r\n//       className="close"\r\n//       fontSize="inherit"\r\n//       style={{ width: 14, height: 14 }}\r\n//       {...props}\r\n//     >\r\n//       {/* tslint:disable-next-line: max-line-length */}\r\n//       <path d="M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z" />\r\n//     </SvgIcon>\r\n//   );\r\n// }\r\n//\r\n// function TransitionComponent(props) {\r\n//   const style = useSpring({\r\n//     from: {\r\n//       opacity: 0,\r\n//       transform: \'translate3d(20px,0,0)\',\r\n//     },\r\n//     to: {\r\n//       opacity: props.in ? 1 : 0,\r\n//       transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\r\n//     },\r\n//   });\r\n//\r\n//   return (\r\n//     <animated.div style={style}>\r\n//       <Collapse {...props} />\r\n//     </animated.div>\r\n//   );\r\n// }\r\n//\r\n// TransitionComponent.propTypes = {\r\n//   /**\r\n//    * Show the component; triggers the enter or exit states\r\n//    */\r\n//   in: PropTypes.bool,\r\n// };\r\n//\r\n// const StyledTreeItem = styled((props) => (\r\n//   <TreeItem {...props} TransitionComponent={TransitionComponent} />\r\n// ))(({ theme }) => ({\r\n//   [`& .${treeItemClasses.iconContainer}`]: {\r\n//     \'& .close\': {\r\n//       opacity: 0.3,\r\n//     },\r\n//   },\r\n//   [`& .${treeItemClasses.group}`]: {\r\n//     marginLeft: 15,\r\n//     paddingLeft: 18,\r\n//     borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\r\n//   },\r\n// }));\r\n//\r\n// export default function CustomizedTreeView() {\r\n//   return (\r\n//     <TreeView\r\n//       aria-label="customized"\r\n//       defaultExpanded={[\'1\']}\r\n//       defaultCollapseIcon={<MinusSquare />}\r\n//       defaultExpandIcon={<PlusSquare />}\r\n//       defaultEndIcon={<CloseSquare />}\r\n//       sx={{ height: 264, flexGrow: 1, maxWidth: 400, overflowY: \'auto\' }}\r\n//     >\r\n//       <StyledTreeItem nodeId="1" label="Main">\r\n//         <StyledTreeItem nodeId="2" label="Hello" />\r\n//         <StyledTreeItem nodeId="3" label="Subtree with children">\r\n//           <StyledTreeItem nodeId="6" label="Hello" />\r\n//           <StyledTreeItem nodeId="7" label="Sub-subtree with children">\r\n//             <StyledTreeItem nodeId="9" label="Child 1" />\r\n//             <StyledTreeItem nodeId="10" label="Child 2" />\r\n//             <StyledTreeItem nodeId="11" label="Child 3" />\r\n//           </StyledTreeItem>\r\n//           <StyledTreeItem nodeId="8" label="Hello" />\r\n//         </StyledTreeItem>\r\n//         <StyledTreeItem nodeId="4" label="World" />\r\n//         <StyledTreeItem nodeId="5" label="Something something" />\r\n//       </StyledTreeItem>\r\n//     </TreeView>\r\n//   );\r\n// }\r\n',noScrollbar:!0,description:"Custom icons, border and animation"})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"Rich Object Tree View",component:C,source:"import * as React from 'react';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\n\r\nconst data = {\r\n  id: 'root',\r\n  name: 'Parent',\r\n  children: [\r\n    {\r\n      id: '1',\r\n      name: 'Child - 1',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Child - 3',\r\n      children: [\r\n        {\r\n          id: '4',\r\n          name: 'Child - 4',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function RichObjectTreeView() {\r\n  const renderTree = (nodes) => (\r\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map((node) => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  );\r\n\r\n  return (\r\n    <TreeView\r\n      aria-label='rich object'\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpanded={['root']}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n      sx={{height: 110, flexGrow: 1, maxWidth: 400, overflowY: 'auto'}}\r\n    >\r\n      {renderTree(data)}\r\n    </TreeView>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"Lets consider a data variable with the following shape, recursion can be used to handle it. "})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"Controlled Tree View",component:T,source:"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\n\r\nexport default function ControlledTreeView() {\r\n  const [expanded, setExpanded] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const handleToggle = (event, nodeIds) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const handleSelect = (event, nodeIds) => {\r\n    setSelected(nodeIds);\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((oldExpanded) =>\r\n      oldExpanded.length === 0 ? ['1', '5', '6', '7'] : [],\r\n    );\r\n  };\r\n\r\n  const handleSelectClick = () => {\r\n    setSelected((oldSelected) =>\r\n      oldSelected.length === 0\r\n        ? ['1', '2', '3', '4', '5', '6', '7', '8', '9']\r\n        : [],\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={{height: 270, flexGrow: 1, maxWidth: 400, overflowY: 'auto'}}>\r\n      <Box sx={{mb: 1}}>\r\n        <Button onClick={handleExpandClick}>\r\n          {expanded.length === 0 ? 'Expand all' : 'Collapse all'}\r\n        </Button>\r\n        <Button onClick={handleSelectClick}>\r\n          {selected.length === 0 ? 'Select all' : 'Unselect all'}\r\n        </Button>\r\n      </Box>\r\n      <TreeView\r\n        aria-label='controlled'\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        expanded={expanded}\r\n        selected={selected}\r\n        onNodeToggle={handleToggle}\r\n        onNodeSelect={handleSelect}\r\n        multiSelect\r\n      >\r\n        <TreeItem nodeId='1' label='Applications'>\r\n          <TreeItem nodeId='2' label='Calendar' />\r\n          <TreeItem nodeId='3' label='Chrome' />\r\n          <TreeItem nodeId='4' label='Webstorm' />\r\n        </TreeItem>\r\n        <TreeItem nodeId='5' label='Documents'>\r\n          <TreeItem nodeId='6' label='MUI'>\r\n            <TreeItem nodeId='7' label='src'>\r\n              <TreeItem nodeId='8' label='index.js' />\r\n              <TreeItem nodeId='9' label='tree-view.js' />\r\n            </TreeItem>\r\n          </TreeItem>\r\n        </TreeItem>\r\n      </TreeView>\r\n    </Box>\r\n  );\r\n}\r\n",noScrollbar:!0,description:"The tree view also offers a controlled API."})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"GmailTreeView",component:ie,source:"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {styled} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem, {treeItemClasses} from '@mui/lab/TreeItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Label from '@mui/icons-material/Label';\r\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\n\r\nconst StyledTreeItemRoot = styled(TreeItem)(({theme}) => ({\r\n  color: theme.palette.text.secondary,\r\n  [`& .${treeItemClasses.content}`]: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '&.Mui-expanded': {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    '&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused': {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\r\n      color: 'var(--tree-view-color)',\r\n    },\r\n    [`& .${treeItemClasses.label}`]: {\r\n      fontWeight: 'inherit',\r\n      color: 'inherit',\r\n    },\r\n  },\r\n  [`& .${treeItemClasses.group}`]: {\r\n    marginLeft: 0,\r\n    [`& .${treeItemClasses.content}`]: {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction StyledTreeItem(props) {\r\n  const {\r\n    bgColor,\r\n    color,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    labelText,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <StyledTreeItemRoot\r\n      label={\r\n        <Box sx={{display: 'flex', alignItems: 'center', p: 0.5, pr: 0}}>\r\n          <Box component={LabelIcon} color='inherit' sx={{mr: 1}} />\r\n          <Typography variant='body2' sx={{fontWeight: 'inherit', flexGrow: 1}}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant='caption' color='inherit'>\r\n            {labelInfo}\r\n          </Typography>\r\n        </Box>\r\n      }\r\n      style={{\r\n        '--tree-view-color': color,\r\n        '--tree-view-bg-color': bgColor,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nStyledTreeItem.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  color: PropTypes.string,\r\n  labelIcon: PropTypes.elementType.isRequired,\r\n  labelInfo: PropTypes.string,\r\n  labelText: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function GmailTreeView() {\r\n  return (\r\n    <TreeView\r\n      aria-label='gmail'\r\n      defaultExpanded={['3']}\r\n      defaultCollapseIcon={<ArrowDropDownIcon />}\r\n      defaultExpandIcon={<ArrowRightIcon />}\r\n      defaultEndIcon={<div style={{width: 24}} />}\r\n      sx={{height: 264, flexGrow: 1, maxWidth: 400, overflowY: 'auto'}}\r\n    >\r\n      <StyledTreeItem nodeId='1' labelText='All Mail' labelIcon={MailIcon} />\r\n      <StyledTreeItem nodeId='2' labelText='Trash' labelIcon={DeleteIcon} />\r\n      <StyledTreeItem nodeId='3' labelText='Categories' labelIcon={Label}>\r\n        <StyledTreeItem\r\n          nodeId='5'\r\n          labelText='Social'\r\n          labelIcon={SupervisorAccountIcon}\r\n          labelInfo='90'\r\n          color='#1a73e8'\r\n          bgColor='#e8f0fe'\r\n        />\r\n        <StyledTreeItem\r\n          nodeId='6'\r\n          labelText='Updates'\r\n          labelIcon={InfoIcon}\r\n          labelInfo='2,294'\r\n          color='#e3742f'\r\n          bgColor='#fcefe3'\r\n        />\r\n        <StyledTreeItem\r\n          nodeId='7'\r\n          labelText='Forums'\r\n          labelIcon={ForumIcon}\r\n          labelInfo='3,566'\r\n          color='#a250f5'\r\n          bgColor='#f3e8fd'\r\n        />\r\n        <StyledTreeItem\r\n          nodeId='8'\r\n          labelText='Promotions'\r\n          labelIcon={LocalOfferIcon}\r\n          labelInfo='733'\r\n          color='#3c8039'\r\n          bgColor='#e6f4ea'\r\n        />\r\n      </StyledTreeItem>\r\n      <StyledTreeItem nodeId='4' labelText='History' labelIcon={Label} />\r\n    </TreeView>\r\n  );\r\n}\r\n",noScrollbar:!0})}),Object(u.jsx)(a.a,{item:!0,xs:12,md:6,children:Object(u.jsx)(i.a,{title:"DisabledTreeItems",component:se,source:"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nexport default function DisabledTreeItems() {\r\n  const [focusDisabledItems, setFocusDisabledItems] = React.useState(false);\r\n  const handleToggle = (event) => {\r\n    setFocusDisabledItems(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{height: 270, flexGrow: 1, maxWidth: 400, overflowY: 'auto'}}>\r\n      <Box sx={{mb: 1}}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={focusDisabledItems}\r\n              onChange={handleToggle}\r\n              name='focusDisabledItems'\r\n            />\r\n          }\r\n          label='Focus disabled items'\r\n        />\r\n      </Box>\r\n      <TreeView\r\n        aria-label='disabled items'\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        disabledItemsFocusable={focusDisabledItems}\r\n        multiSelect\r\n      >\r\n        <TreeItem nodeId='1' label='One'>\r\n          <TreeItem nodeId='2' label='Two' />\r\n          <TreeItem nodeId='3' label='Three' />\r\n          <TreeItem nodeId='4' label='Four' />\r\n        </TreeItem>\r\n        <TreeItem nodeId='5' label='Five' disabled>\r\n          <TreeItem nodeId='6' label='Six' />\r\n        </TreeItem>\r\n        <TreeItem nodeId='7' label='Seven'>\r\n          <TreeItem nodeId='8' label='Eight' />\r\n          <TreeItem nodeId='9' label='Nine'>\r\n            <TreeItem nodeId='10' label='Ten'>\r\n              <TreeItem nodeId='11' label='Eleven' />\r\n              <TreeItem nodeId='12' label='Twelve' />\r\n            </TreeItem>\r\n          </TreeItem>\r\n        </TreeItem>\r\n      </TreeView>\r\n    </Box>\r\n  );\r\n}\r\n",noScrollbar:!0})})]})]})}}}]);
//# sourceMappingURL=55.fac5e947.chunk.js.map