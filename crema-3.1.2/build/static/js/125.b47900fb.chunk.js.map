{"version":3,"sources":["pages/dashboards/ECommerce/SalesState/index.js","pages/dashboards/ECommerce/SaleStatics/SaleStaticChart.js","pages/dashboards/ECommerce/SaleStatics/index.js","pages/dashboards/ECommerce/Application/index.js","pages/dashboards/ECommerce/ReportCard/StaticsGraph.js","pages/dashboards/ECommerce/ReportCard/index.js","pages/dashboards/ECommerce/RecentOrders/OrderTable/TableHeading.js","pages/dashboards/ECommerce/RecentOrders/OrderTable/TableItem.js","pages/dashboards/ECommerce/RecentOrders/OrderTable/index.js","pages/dashboards/ECommerce/RecentOrders/index.js","pages/dashboards/ECommerce/Revenue/index.js","pages/dashboards/ECommerce/MarketingCampaign/MarketingTable/TableHeading.js","pages/dashboards/ECommerce/MarketingCampaign/MarketingTable/TableItem.js","pages/dashboards/ECommerce/MarketingCampaign/MarketingTable/index.js","pages/dashboards/ECommerce/MarketingCampaign/index.js","pages/dashboards/ECommerce/Notifications/NotificationCell.js","pages/dashboards/ECommerce/Notifications/index.js","pages/dashboards/ECommerce/NewCustomers/CustomerItem.js","pages/dashboards/ECommerce/NewCustomers/index.js","pages/dashboards/ECommerce/PopularProducts/ProductCell.js","pages/dashboards/ECommerce/PopularProducts/index.js","pages/dashboards/ECommerce/Browser/index.js","pages/dashboards/ECommerce/SiteVisitors/MapView/MapChart/index.js","pages/dashboards/ECommerce/SiteVisitors/MapView/index.js","pages/dashboards/ECommerce/SiteVisitors/index.js","pages/dashboards/ECommerce/index.js"],"names":["SalesState","props","state","bgColor","icon","type","value","AppCard","sxStyle","backgroundColor","height","className","Box","sx","display","alignItems","mr","alignSelf","width","xs","lg","xl","src","alt","flex","color","Typography","component","variant","mt","data","month","order","return","SaleStaticChart","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","horizontal","vertical","XAxis","dataKey","Tooltip","labelStyle","Bar","fill","barSize","SaleStatics","messages","useIntl","title","action","AppSelect","menus","defaultValue","onChange","console","log","Grid","item","md","flexDirection","justifyContent","mb","pl","AppCircularProgress","activeColor","pathColor","hidePercentage","centerNode","thickness","borderRadius","fontSize","Application","StaticsGraph","id","graphData","strokeColor","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","stroke","strokeWidth","fillOpacity","defaultProps","ReportCard","pr","minWidth","growth","fontWeight","Fonts","BOLD","style","TableHeading","TableRow","padding","TableCell","TableItem","getPaymentStatusColor","status","scope","theme","palette","primary","main","borderBottom","align","product","customer","date","price","IconButton","onClick","name","OrderTable","orderData","TableContainer","Table","TableHead","TableBody","map","RecentOrders","recentOrders","contentStyle","px","Revenue","py","MEDIUM","ml","borderBottomColor","Avatar","description","spent","mx","graph","marketingCampaign","maxHeight","MarketingCampaign","MarketingTable","NotificationCell","ListItem","disableGutters","paddingLeft","paddingRight","ListItemAvatar","image","ListItemText","secondary","flexWrap","message","Notifications","AppScrollbar","AppList","notifications","renderRow","CustomerItem","getStatusColor","orders","sm","whiteSpace","NewCustomers","newCustomers","listStyle","ProductCell","textDecoration","mrp","PopularProducts","popularProducts","AppGrid","responsive","itemPadding","index","BrowserCell","maxWidth","Browser","browserData","MapChart","setTooltipContent","projectionConfig","scale","geography","geographies","geo","onMouseEnter","num","properties","NAME","POP_EST","Math","round","onMouseLeave","default","outline","hover","pressed","rsmKey","memo","MapView","useState","content","setContent","position","CountryCell","overflow","textOverflow","country","SiteVisitors","siteVisitorsData","ECommerce","dispatch","useDispatch","useEffect","onGetECommerceData","ecommerceData","useSelector","dashboard","AppAnimate","animation","delay","AppGridContainer","salesState","reportCards","report","siteVisitors","browser","AppInfoView"],"mappings":"oMA+DeA,EA1DI,SAACC,GAClB,MAAqCA,EAAMC,MAApCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,MAE5B,OACE,cAACC,EAAA,EAAD,CACEC,QAAS,CACPC,gBAAiBN,EACjBO,OAAQ,GAEVC,UAAU,aALZ,SAOE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,UAHhB,UAME,cAACH,EAAA,EAAD,CACEC,GAAI,CACFG,GAAI,EACJC,UAAW,aACX,QAAS,CACPH,QAAS,QACTI,MAAO,CAACC,GAAI,OAAQC,GAAI,GAAIC,GAAI,UANtC,SAUE,qBAAKC,IAAKlB,EAAMmB,IAAI,WAEtB,eAACX,EAAA,EAAD,CACEC,GAAI,CACFW,KAAM,EACNC,MAAO,SAHX,UAME,cAACC,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,UACRf,GAAI,CACFY,MAAO,WAJX,SAOGnB,IAEH,cAACM,EAAA,EAAD,CACEC,GAAI,CACFgB,GAAI,IAENF,UAAU,IAJZ,SAMGtB,a,4FC7CPyB,EAAO,CACX,CACEC,MAAO,MACPC,MAAO,KACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,KACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,KACPC,OAAQ,KAEV,CACEF,MAAO,MACPC,MAAO,KACPC,OAAQ,KAEV,CACEF,MAAO,MACPC,MAAO,IACPC,OAAQ,KAEV,CACEF,MAAO,MACPC,MAAO,MACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,IACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,KACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,KACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,KACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,MACPC,OAAQ,MAEV,CACEF,MAAO,MACPC,MAAO,MACPC,OAAQ,OA8BGC,EA1BS,WACtB,OACE,cAACC,EAAA,EAAD,CAAqBjB,MAAM,OAAOR,OAAQ,IAA1C,SACE,eAAC0B,EAAA,EAAD,CACEN,KAAMA,EACNO,OAAQ,CACNC,IAAK,GACLC,MAAO,EACPC,KAAM,EACNC,OAAQ,GANZ,UASE,cAACC,EAAA,EAAD,CACEC,gBAAgB,MAChBC,YAAY,EACZC,UAAU,IAEZ,cAACC,EAAA,EAAD,CAAOC,QAAQ,UACf,cAACC,EAAA,EAAD,CAASC,WAAY,CAACxB,MAAO,WAC7B,cAACyB,EAAA,EAAD,CAAKH,QAAQ,SAASI,KAAK,UAAUC,QAAS,IAC9C,cAACF,EAAA,EAAD,CAAKH,QAAQ,QAAQI,KAAK,UAAUC,QAAS,UCgCtCC,EAnHK,WAClB,IAAOC,EAAYC,cAAZD,SAKP,OACE,cAAC/C,EAAA,EAAD,CACEiD,MAAOF,EAAS,yBAChBG,OACE,cAACC,EAAA,EAAD,CACEC,MAAO,CACLL,EAAS,sBACTA,EAAS,uBACTA,EAAS,wBAEXM,aAAcN,EAAS,sBACvBO,SAfoB,SAAC/B,GAC3BgC,QAAQC,IAAI,SAAUjC,MAItB,SAcE,eAAC,IAAD,WACE,cAACkC,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,EAAD,MAEF,cAACF,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,eAACtD,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTqD,cAAe,SACfC,eAAgB,SAChB1D,OAAQ,GALZ,UAQE,cAACE,EAAA,EAAD,CACEC,GAAI,CACFwD,GAAI,EACJC,GAAI,CAACjD,GAAI,IAHb,SAME,cAACkD,EAAA,EAAD,CACEC,YAAY,UACZC,UAAU,UACVC,gBAAc,EACdpE,MAAO,GACPqE,WACE,qBACEpD,IAAI,OACJD,IAAK,kDAGTsD,UAAW,MAGf,eAAChE,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTsD,eAAgB,UAHpB,UAME,eAACxD,EAAA,EAAD,CACEC,GAAI,CACFG,GAAI,EACJF,QAAS,OACTC,WAAY,UAJhB,UAOE,cAACH,EAAA,EAAD,CACEC,GAAI,CACFJ,gBAAiB,UACjBC,OAAQ,GACRQ,MAAO,GACPF,GAAI,EACJ6D,aAAc,SAGlB,cAACnD,EAAA,EAAD,CACEb,GAAI,CACFiE,SAAU,IAFd,wBAQF,eAAClE,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,UAHhB,UAME,cAACH,EAAA,EAAD,CACEC,GAAI,CACFJ,gBAAiB,UACjBC,OAAQ,GACRQ,MAAO,GACPF,GAAI,EACJ6D,aAAc,SAGlB,cAACnD,EAAA,EAAD,CACEb,GAAI,CACFiE,SAAU,IAFd,kCC1BDC,EA5EK,WAClB,IAAOzB,EAAYC,cAAZD,SACP,OACE,cAAC/C,EAAA,EAAD,CAASiD,MAAOF,EAAS,yBAA0B9C,QAAS,CAACE,OAAQ,GAArE,SACE,eAACE,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTqD,cAAe,SACfC,eAAgB,UAJpB,UAOE,cAACxD,EAAA,EAAD,CACEC,GAAI,CACFwD,GAAI,GAFR,SAKE,cAACE,EAAA,EAAD,CACEC,YAAY,UACZE,gBAAc,EACdpE,MAAO,GACPqE,WACE,qBACEpD,IAAI,OACJD,IAAK,kDAGTsD,UAAW,MAGf,eAAChE,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTsD,eAAgB,UAHpB,UAME,eAACxD,EAAA,EAAD,CACEC,GAAI,CACFG,GAAI,EACJF,QAAS,OACTC,WAAY,UAJhB,UAOE,cAACH,EAAA,EAAD,CACEC,GAAI,CACFJ,gBAAiB,UACjBC,OAAQ,GACRQ,MAAO,GACPF,GAAI,EACJ6D,aAAc,SAGlB,cAACnD,EAAA,EAAD,yBAEF,eAACd,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,UAHhB,UAME,cAACH,EAAA,EAAD,CACEC,GAAI,CACFJ,gBAAiB,UACjBC,OAAQ,GACRQ,MAAO,GACPF,GAAI,EACJ6D,aAAc,SAGlB,cAACnD,EAAA,EAAD,8B,mBCvENsD,EAAe,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YACpC,OACE,cAAChD,EAAA,EAAD,CAAqBjB,MAAM,OAAOR,OAAQ,GAA1C,SACE,eAAC0E,EAAA,EAAD,CACEtD,KAAMoD,EACN7C,OAAQ,CAACC,IAAK,EAAGC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GAF9C,UAIE,+BACE,iCAAgBwC,GAAI,UAAYA,EAAII,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAA5D,UACE,sBAAMC,OAAO,KAAKC,UAAWP,EAAaQ,YAAa,MACvD,sBAAMF,OAAO,MAAMC,UAAWP,EAAaQ,YAAa,WAG5D,cAACC,EAAA,EAAD,CACEvF,KAAK,WACL0C,QAAQ,SACR8C,OAAQV,EACRW,YAAa,EACbC,YAAa,EACb5C,KAAI,eAAU,UAAY8B,EAAtB,aAOCD,IAEfA,EAAagB,aAAe,CAC1Bd,UAAW,I,kDCuCEe,EA/DI,SAAC,GAAY,IAAXnE,EAAU,EAAVA,KACnB,OACE,cAACvB,EAAA,EAAD,CAASI,UAAU,aAAnB,SACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,QAFb,UAKE,eAACF,EAAA,EAAD,CACEC,GAAI,CACFW,KAAM,EACN0E,GAAI,GAHR,UAME,cAACtF,EAAA,EAAD,CACEe,UAAU,KACVd,GAAI,CACFwD,GAAI,GACJS,SAAU,IAJd,SAOGhD,EAAKxB,QAER,cAACM,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACFY,MAAO,WAHX,SAMGK,EAAKzB,UAGV,eAACO,EAAA,EAAD,CACEC,GAAI,CACFsF,SAAU,KAFd,UAKE,cAAC,EAAD,CACElB,GAAInD,EAAKmD,GACTC,UAAWpD,EAAKoD,UAChBkB,OAAQtE,EAAKsE,OACbjB,YAAarD,EAAKqD,cAEpB,eAACvE,EAAA,EAAD,CACEE,QAAQ,OACRC,WAAW,SACXqD,eAAe,SACfiC,WAAYC,IAAMC,KAClB9E,MAAOK,EAAKqD,YALd,UAOGrD,EAAKsE,OAAS,EACb,cAAC,IAAD,CAAiBI,MAAO,CAAC/E,MAAOK,EAAKqD,eAErC,cAAC,IAAD,CAAmBqB,MAAO,CAAC/E,MAAOK,EAAKqD,eAExCrD,EAAKsE,mB,kDC/BHK,EA5BM,WACnB,OACE,eAACC,EAAA,EAAD,CACE7F,GAAI,CACF,OAAQ,CACNiE,SAAU,GACV6B,QAAS,EACTN,WAAYC,IAAMC,KAClB,kBAAmB,CACjBjC,GAAI,GAEN,iBAAkB,CAChB4B,GAAI,KAVZ,UAeE,cAACU,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,4BACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,0B,2BC8DSC,EAlFG,SAAC,GAAY,IAAX/E,EAAU,EAAVA,KACZgF,EAAwB,WAC5B,OAAQhF,EAAKiF,QACX,IAAK,UACH,MAAO,UAET,IAAK,YACH,MAAO,UAET,QACE,MAAO,YAKb,OACE,eAACL,EAAA,EAAD,CACE7F,GAAI,CACF,eAAgB,CACdiE,SAAU,GACV6B,QAAS,EACT,kBAAmB,CACjBrC,GAAI,GAEN,iBAAkB,CAChB4B,GAAI,KAKVvF,UAAU,aAdZ,UAgBE,cAACiG,EAAA,EAAD,CAAWjF,UAAU,KAAKqF,MAAM,MAAMrG,UAAU,YAAhD,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFY,MAAO,SAACwF,GAAD,OAAWA,EAAMC,QAAQC,QAAQC,MACxCC,aAAc,SAACJ,GAAD,0BAAwBA,EAAMC,QAAQC,QAAQC,OAC5DtG,QAAS,gBAJb,SAOGgB,EAAKmD,OAGV,cAAC2B,EAAA,EAAD,CAAWU,MAAM,OAAO3G,UAAU,YAAlC,SACGmB,EAAKyF,UAER,cAACX,EAAA,EAAD,CAAWU,MAAM,OAAO3G,UAAU,YAAlC,SACGmB,EAAK0F,WAER,cAACZ,EAAA,EAAD,CAAWU,MAAM,OAAO3G,UAAU,YAAlC,SACGmB,EAAK2F,OAER,cAACb,EAAA,EAAD,CAAWU,MAAM,OAAO3G,UAAU,YAAlC,SACGmB,EAAK4F,QAER,cAACd,EAAA,EAAD,CAAWU,MAAM,OAAO3G,UAAU,YAAlC,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFY,MAAOqF,IACPrG,gBAAiBqG,IAA0B,KAC3CH,QAAS,WACT9B,aAAc,EACd/D,QAAS,gBANb,SASGgB,EAAKiF,WAGV,cAACH,EAAA,EAAD,CAAWU,MAAM,QAAQ3G,UAAU,YAAnC,SACE,cAACgH,EAAA,EAAD,CACE,aAAW,OACX,gBAAc,YACd,gBAAc,OACdC,QAAS,KAJX,SAME,cAAC,IAAD,UA9CC9F,EAAK+F,O,UC5BVC,EAAa,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACnB,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,cAACC,EAAA,EAAD,UACGJ,EAAUK,KAAI,SAACtG,GAAD,OACb,cAAC,EAAD,CAAWA,KAAMA,GAAWA,EAAKmD,eAQ9B6C,IAEfA,EAAW9B,aAAe,CACxB+B,UAAW,ICtBb,IA0BeM,EA1BM,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACdhF,EAAYC,cAAZD,SAIP,OACE,cAAC/C,EAAA,EAAD,CACEgI,aAAc,CAACC,GAAI,GACnBhF,MAAOF,EAAS,0BAChBG,OACE,cAACC,EAAA,EAAD,CACEC,MAAO,CACLL,EAAS,sBACTA,EAAS,uBACTA,EAAS,wBAEXM,aAAcN,EAAS,sBACvBO,SAfoB,SAAC/B,GAC3BgC,QAAQC,IAAI,SAAUjC,MAGtB,SAeE,cAAC,EAAD,CAAYiG,UAAWO,OCoFdG,EAzGC,WACd,IAAOnF,EAAYC,cAAZD,SAEP,OACE,eAAC/C,EAAA,EAAD,CAASiD,MAAOF,EAAS,qBAAzB,UACE,cAAC1C,EAAA,EAAD,CACEC,GAAI,CACFwD,GAAI,EACJqE,GAAI,GAHR,SAME,cAACnE,EAAA,EAAD,CACEC,YAAY,UACZlE,MAAO,GACPoE,gBAAc,EACdC,WACE,eAAC/D,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTqD,cAAe,OAHnB,UAME,cAACvD,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFiE,SAAU,GACVuB,WAAYC,IAAMqC,QAJtB,eASA,cAAC/H,EAAA,EAAD,CACEe,UAAU,KACVd,GAAI,CACFY,MAAO,eACPqD,SAAU,GACVuB,WAAYC,IAAMqC,QALtB,oBAWF,cAAC/H,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACF+H,GAAI,EACJ9D,SAAU,GACVrD,MAAO,kBALX,sBAYJmD,UAAW,MAGf,eAAChE,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTsD,eAAgB,gBAHpB,UAME,eAACxD,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEC,GAAI,CACFiE,SAAU,GACVT,GAAI,GACJgC,WAAYC,IAAMC,MAJtB,qBASA,cAAC3F,EAAA,EAAD,CACEC,GAAI,CACFY,MAAO,kBAFX,uBAQF,eAACb,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEC,GAAI,CACFiE,SAAU,GACVT,GAAI,GACJgC,WAAYC,IAAMC,MAJtB,qBASA,cAAC3F,EAAA,EAAD,CACEC,GAAI,CACFY,MAAO,kBAFX,+BCtEKgF,EAxBM,WACnB,OACE,eAACC,EAAA,EAAD,CACE7F,GAAI,CACF,OAAQ,CACNiE,SAAU,GACV6B,QAAS,EACTN,WAAYC,IAAMC,KAClB,kBAAmB,CACjBjC,GAAI,GAEN,iBAAkB,CAChB4B,GAAI,KAVZ,UAeE,cAACU,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,wB,UC4ESC,GA5FG,SAAC5G,GACjB,OACE,eAACyG,EAAA,EAAD,CAEE7F,GAAI,CACF,OAAQ,CACNgI,kBAAmB,UACnB/D,SAAU,GACV6B,QAAS,EACT,kBAAmB,CACjBrC,GAAI,GAEN,iBAAkB,CAChB4B,GAAI,KAIVvF,UAAU,aAfZ,UAiBE,cAACiG,EAAA,EAAD,UACE,eAAChG,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,UAHhB,UAME,cAAC+H,GAAA,EAAD,CACEjI,GAAI,CACFG,GAAI,KAENM,IAAKrB,EAAM6B,KAAK1B,OAElB,eAACQ,EAAA,EAAD,CACEC,GAAI,CACFiE,SAAU,GACVtD,KAAM,GAHV,UAME,cAACZ,EAAA,EAAD,CACEC,GAAI,CACFwD,GAAI,GACJgC,WAAYC,IAAMqC,QAHtB,SAMG1I,EAAM6B,KAAK+F,OAEd,cAACjH,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACFY,MAAO,kBAHX,SAMGxB,EAAM6B,KAAKiH,sBAKpB,cAACnC,EAAA,EAAD,UAAY3G,EAAM6B,KAAKkH,QACvB,eAACpC,EAAA,EAAD,WACG3G,EAAM6B,KAAKsE,OACV,qBACE9E,IAAK,2CACLC,IAAI,gBAGN,qBACED,IAAK,4CACLC,IAAI,iBAGR,cAACX,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFoI,GAAI,EACJxH,MAAOxB,EAAM6B,KAAKsE,OAAS,UAAY,WAJ3C,SAOGnG,EAAM6B,KAAKoH,QAEd,cAACtI,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFY,MAAO,kBAHX,SAMGxB,EAAM6B,KAAKsE,OAAS,KAAO,cAlF3BnG,EAAM6B,KAAK+F,OCFhBC,GAAa,SAAC,GAAyB,IAAxBqB,EAAuB,EAAvBA,kBACnB,OACE,cAACnB,EAAA,EAAD,CACEnH,GAAI,CACFuI,UAAW,KAFf,SAKE,eAACnB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,cAACC,EAAA,EAAD,UACGgB,EAAkBf,KAAI,SAACtG,GAAD,OACrB,cAAC,GAAD,CAAWA,KAAMA,GAAWA,EAAKmD,eAQ9B6C,MAEfA,GAAW9B,aAAe,CACxBmD,kBAAmB,IC3BrB,IAaeE,GAbW,SAAC,GAAyB,IAAxBF,EAAuB,EAAvBA,kBACnB7F,EAAYC,cAAZD,SAEP,OACE,cAAC/C,EAAA,EAAD,CACEiD,MAAOF,EAAS,+BAChBiF,aAAc,CAACC,GAAI,GAFrB,SAIE,cAACc,GAAD,CAAgBH,kBAAmBA,O,wCCkE1BI,GAvEU,SAAC,GAAY,IAAXtF,EAAU,EAAVA,KACzB,OACE,eAACuF,GAAA,EAAD,CACEC,gBAAc,EACd9I,UAAU,aACVE,GAAI,CAAC6I,YAAa,EAAGC,aAAc,GAHrC,UAKE,cAACC,GAAA,EAAD,CACE/I,GAAI,CACFsF,SAAU,OACVnF,GAAI,GAHR,SAME,cAAC8H,GAAA,EAAD,CACEjI,GAAI,CACFK,MAAO,GACPR,OAAQ,IAEVY,IAAK2C,EAAK4F,UAGd,cAACC,GAAA,EAAD,CACE3C,QACE,cAACvG,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFY,MAAO,eACP4C,GAAI,GACJgC,WAAYC,IAAMqC,OAClB7D,SAAU,IANd,SASGb,EAAK5D,OAGV0J,UACE,eAACnJ,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFC,QAAS,OACTC,WAAY,SACZiJ,SAAU,OACVlF,SAAU,GACVrD,MAAO,gBAPX,UAUE,cAACb,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFC,QAAS,QACTE,GAAI,GAJR,SAOGiD,EAAK4D,OAER,cAACjH,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFC,QAAS,QACTW,MAAO,kBAJX,SAOGwC,EAAKgG,mB,UCzBLC,GApCO,SAACjK,GACrB,IAAOqD,EAAYC,cAAZD,SAEP,OACE,cAAC/C,EAAA,EAAD,CACEgI,aAAc,CAACC,GAAI,GACnBhF,MAAOF,EAAS,2BAChBG,OACE,cAACkE,EAAA,EAAD,CACE9G,GAAI,CACFH,OAAQ,GACRQ,MAAO,IAET,aAAW,OACX,gBAAc,YACd,gBAAc,OACd0G,QAAS,KARX,SAUE,cAAC,IAAD,MAdN,SAkBE,cAACuC,GAAA,EAAD,CACEtJ,GAAI,CACFuI,UAAW,KAFf,SAKE,cAACgB,GAAA,EAAD,CACEtI,KAAM7B,EAAMoK,cACZC,UAAW,SAACrG,GAAD,OAAU,cAAC,GAAD,CAAgCA,KAAMA,GAAfA,EAAKgB,YC8D5CsF,GA7FM,SAAC,GAAY,IAAXtG,EAAU,EAAVA,KACfuG,EAAiB,WACrB,OAAoB,IAAhBvG,EAAKwG,OACA,UACExG,EAAKwG,OAAS,EAChB,eADF,GAKT,OACE,eAAC7J,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,CAACI,GAAI,aAAcuJ,GAAI,UACnC/D,QAAS,WACT,uBAAwB,CACtBU,aAAc,sBAGlB1G,UAAU,aATZ,UAWE,cAACmI,GAAA,EAAD,CACEjI,GAAI,CACFG,GAAI,EACJE,MAAO,GACPR,OAAQ,IAEVY,IAAK2C,EAAK4F,QAEZ,eAACjJ,EAAA,EAAD,CACEC,GAAI,CACFW,KAAM,EACNV,QAAS,OACTC,WAAY,CAAC2J,GAAI,UACjBvG,cAAe,CAAChD,GAAI,SAAUuJ,GAAI,QALtC,UAQE,eAAC9J,EAAA,EAAD,CACEC,GAAI,CACFiE,SAAU,GACVtD,KAAM,EACNR,GAAI,GAJR,UAOE,cAACJ,EAAA,EAAD,CACEC,GAAI,CACFwD,GAAI,GACJgC,WAAYC,IAAMqC,QAHtB,SAMG1E,EAAK4D,OAER,cAACjH,EAAA,EAAD,CACEC,GAAI,CACFiE,SAAU,GACVrD,MAAO,kBAHX,SAMGwC,EAAKgG,aAGV,eAACrJ,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,UAHhB,UAME,eAACH,EAAA,EAAD,CACEC,GAAI,CACFY,MAAO+I,IACP/J,gBAAiB+J,IAAmB,KACpC7D,QAAS,WACT9B,aAAc,OACd/D,QAAS,eACT6J,WAAY,UAPhB,UAUG1G,EAAKwG,OAVR,aAYA,cAAC9C,EAAA,EAAD,CACE,aAAW,OACX,gBAAc,YACd,gBAAc,OACdC,QAAS,KAJX,SAME,cAAC,IAAD,gBCrEGgD,GAhBM,SAAC3K,GACpB,IAAOqD,EAAYC,cAAZD,SACP,OACE,cAAC/C,EAAA,EAAD,CAASiD,MAAOF,EAAS,0BAA2BiF,aAAc,CAACC,GAAI,GAAvE,SACE,cAAC2B,GAAA,EAAD,CAActJ,GAAI,CAACuI,UAAW,KAA9B,SACE,cAACgB,GAAA,EAAD,CACEtI,KAAM7B,EAAM4K,aACZP,UAAW,SAACrG,GAAD,OACT,cAAC,GAAD,CAAc6G,UAAU,WAAyB7G,KAAMA,GAAfA,EAAKgB,YCiE1C8F,GA3EK,SAAC,GAAY,IAAXjJ,EAAU,EAAVA,KACpB,OACE,eAAClB,EAAA,EAAD,CAEEC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZ2H,GAAI,EACJF,GAAI,GAEN7H,UAAU,aARZ,UAUE,cAACmI,GAAA,EAAD,CACEjI,GAAI,CACFG,GAAI,EACJN,OAAQ,GACRQ,MAAO,IAETU,QAAQ,UACRL,IAAI,GACJD,IAAKQ,EAAK1B,OAGZ,eAACQ,EAAA,EAAD,CACEC,GAAI,CACFW,KAAM,GAFV,UAKE,cAACZ,EAAA,EAAD,CACEe,UAAU,KACVd,GAAI,CACFY,MAAO,eACP4E,WAAYC,IAAMqC,OAClBtE,GAAI,GACJS,SAAU,IANd,SASGhD,EAAK+F,OAER,cAACjH,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACFiE,SAAU,GACVrD,MAAO,iBACP4C,GAAI,GALR,SAQGvC,EAAKiH,cAER,eAACnI,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACFiE,SAAU,GACVuB,WAAYC,IAAMqC,QAJtB,cAOI7G,EAAK4F,MACP,eAAC9G,EAAA,EAAD,CACEe,UAAU,OACVd,GAAI,CACFmK,eAAgB,eAChB3G,GAAI,EACJS,SAAU,GACV8D,GAAI,EACJnH,MAAO,kBAPX,cAUIK,EAAKmJ,eAhERnJ,EAAKmD,K,UC0BDiG,GA3BS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBACjB7H,EAAYC,cAAZD,SACP,OACE,cAAC/C,EAAA,EAAD,CACEiD,MAAOF,EAAS,6BAChBiF,aAAc,CAACC,GAAI,GAFrB,SAIE,cAAC2B,GAAA,EAAD,CAActJ,GAAI,CAACuI,UAAW,KAA9B,SACE,cAACgC,GAAA,EAAD,CACEtJ,KAAMqJ,EACNE,WAAY,CACVlK,GAAI,EACJuJ,GAAI,EACJxG,GAAI,EACJ9C,GAAI,EACJC,GAAI,GAENiK,YAAa,EACbhB,UAAW,SAACxI,EAAMyJ,GAAP,OACT,cAAC,GAAD,CAAsCzJ,KAAMA,GAA1B,WAAayJ,WCnBrCC,GAAc,SAAC,GAAY,IAAXvH,EAAU,EAAVA,KACpB,OACE,eAACrD,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZ2H,GAAI,EACJF,GAAI,GAEN7H,UAAU,aAPZ,UASE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFG,GAAI,KAFR,SAKE,qBAAKO,IAAI,GAAGiF,MAAO,CAACiF,SAAU,GAAI3K,QAAS,SAAUQ,IAAK2C,EAAK7D,SAGjE,eAACQ,EAAA,EAAD,CACEC,GAAI,CACFW,KAAM,GAFV,UAKE,cAACZ,EAAA,EAAD,CACEe,UAAU,KACVd,GAAI,CACFwF,WAAYC,IAAMqC,OAClBtE,GAAI,GACJS,SAAU,IALd,SAQGb,EAAK4D,OAER,cAACjH,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACFY,MAAO,iBACPqD,SAAU,IAJd,SAOGb,EAAK3D,eAuBDoL,GAZC,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACTrI,EAAYC,cAAZD,SACP,OACE,cAAC/C,EAAA,EAAD,CAASiD,MAAOF,EAAS,qBAAsBiF,aAAc,CAACC,GAAI,GAAlE,SACE,cAAC4B,GAAA,EAAD,CACEtI,KAAM6J,EACNrB,UAAW,SAACrG,EAAMsH,GAAP,OAAiB,cAAC,GAAD,CAAatH,KAAMA,GAAWsH,S,oBC5C5DK,GAAW,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBACjB,OACE,mCACE,cAAC,iBAAD,CAAe,WAAS,GAAGC,iBAAkB,CAACC,MAAO,KAArD,SACE,cAAC,iBAAD,UACE,cAAC,eAAD,CAAaC,UAjBrB,yGAiBQ,SACG,qBAAEC,YACW7D,KAAI,SAAC8D,GAAD,OACd,cAAC,aAAD,CAEEF,UAAWE,EACXC,aAAc,WACZ,IAtBHC,EAsBG,EAAwBF,EAAIG,WAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACbV,EAAkB,GAAD,OAAIS,EAAJ,oBAvBpBF,EAuB0CG,GAtB/C,IACDC,KAAKC,MAAML,EAAM,KAAa,GAAK,KACjCA,EAAM,IACRI,KAAKC,MAAML,EAAM,KAAU,GAAK,IAEhCI,KAAKC,MAAML,EAAM,KAAO,GAAK,OAmBtBM,aAAc,WACZb,EAAkB,KAEpBrF,MAAO,CACLmG,QAAS,CACPxJ,KAAM,UACNyJ,QAAS,QAEXC,MAAO,CACL1J,KAAM,UACNyJ,QAAS,QAEXE,QAAS,CACP3J,KAAM,UACNyJ,QAAS,UApBRV,EAAIa,qBAiCZC,kBAAKpB,I,WC5CLqB,GAfC,WACd,MAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,eAACxM,EAAA,EAAD,CACEC,GAAI,CACFwM,SAAU,WACV3M,OAAQ,KAHZ,UAME,cAAC,GAAD,CAAUmL,kBAAmBuB,IAC7B,cAAC,KAAD,UAAeD,QCLfG,GAAc,SAAC,GAAD,IAAExL,EAAF,EAAEA,KAAF,OAClB,eAAClB,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZ2H,GAAI,EACJF,GAAI,GAEN7H,UAAU,aAPZ,UASE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFG,GAAI,EACJ,SAAU,CACRN,OAAQ,GACRQ,MAAO,GACP2D,aAAc,MACdpE,gBAAiB,OACjBK,QAAS,UARf,SAYE,qBAAKQ,IAAKQ,EAAK1B,KAAMmB,IAAI,WAE3B,cAACX,EAAA,EAAD,CACEe,UAAU,KACVd,GAAI,CACFW,KAAM,EACN+L,SAAU,SACVC,aAAc,WACd7C,WAAY,UANhB,SASG7I,EAAK2L,UAER,cAAC7M,EAAA,EAAD,CACEC,GAAI,CACFJ,gBAAiB,SAACwG,GAAD,OAAWA,EAAMC,QAAQC,QAAQC,MAClDvC,aAAc,OACdpD,MAAO,OACPkF,QAAS,YALb,SAQG7E,EAAKxB,YA8DGoN,GArDM,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBACdrK,EAAYC,cAAZD,SACP,OACE,cAAC/C,EAAA,EAAD,CACEC,QAAS,CAACE,OAAQ,GAClB8C,MAAOF,EAAS,oCAChBiF,aAAc,CAACC,GAAI,GAHrB,SAKE,eAAC,IAAD,WACE,eAACxE,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,UACE,cAACtD,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACFY,MAAO,iBACP6C,GAAI,EACJQ,SAAU,GACVuB,WAAYC,IAAMqC,QANtB,SASGrF,EAAS,yBAEZ,cAAC8G,GAAA,EAAD,CACEtI,KAAM6L,EACNrD,UAAW,SAACxI,GAAD,OAAU,cAAC,GAAD,CAA2BA,KAAMA,GAAfA,EAAKmD,UAGhD,cAACjB,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,GAAD,MAEF,eAACF,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,UACE,cAACtD,EAAA,EAAD,CACEe,UAAU,IACVd,GAAI,CACFY,MAAO,iBACP6C,GAAI,EACJQ,SAAU,GACVuB,WAAYC,IAAMqC,QANtB,SASGrF,EAAS,yBAEZ,cAAC8G,GAAA,EAAD,CACEtI,KAAM6L,EACNrD,UAAW,SAACxI,GAAD,OACT,cAAC,GAAD,CAAsCA,KAAMA,GAA1B,SAAWA,EAAKmD,gB,UCjBjC2I,UArEG,WAChB,IAAMC,EAAWC,wBAEjBC,qBAAU,WACRF,EAASG,iBACR,CAACH,IAEJ,IAAMI,EAAgBC,uBAAY,qBAAEC,UAAyBF,iBAE7D,OACE,qCACGA,EACC,cAACG,GAAA,EAAD,CAAYC,UAAU,uBAAuBC,MAAO,IAApD,SACE,eAACC,EAAA,EAAD,WACGN,EAAcO,WAAWpG,KAAI,SAAClI,EAAOqL,GAAR,OAC5B,cAACvH,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAIuJ,GAAI,EAAGxG,GAAI,EAA9B,SACE,cAAC,EAAD,CAAYhE,MAAOA,KADiBqL,MAIxC,cAACvH,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,EAAD,MAEF,cAACF,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,EAAD,MAED+J,EAAcQ,YAAYrG,KAAI,SAACsG,EAAQnD,GAAT,OAC7B,cAACvH,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,EAAD,CAAYpC,KAAM4M,KADWnD,MAIjC,cAACvH,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,EAAD,CAAcoE,aAAc2F,EAAc3F,iBAE5C,cAACtE,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,EAAD,MAGF,cAACF,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,GAAD,CACEiF,kBAAmB8E,EAAc9E,sBAGrC,cAACnF,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,GAAD,CAAemG,cAAe4D,EAAc5D,kBAG9C,cAACrG,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,GAAD,CAAc2G,aAAcoD,EAAcpD,iBAE5C,cAAC7G,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,GAAD,CACEiH,gBAAiB8C,EAAc9C,oBAInC,cAACnH,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,GAAD,CAAcyJ,iBAAkBM,EAAcU,iBAEhD,cAAC3K,EAAA,EAAD,CAAMC,MAAI,EAAC9C,GAAI,GAAI+C,GAAI,EAAvB,SACE,cAAC,GAAD,CAASyH,YAAasC,EAAcW,iBAIxC,KACJ,cAACC,EAAA,EAAD","file":"static/js/125.b47900fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Box, Typography} from '@mui/material';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SalesState = (props) => {\r\n  const {bgColor, icon, type, value} = props.state;\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        backgroundColor: bgColor,\r\n        height: 1,\r\n      }}\r\n      className='card-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mr: 4,\r\n            alignSelf: 'flex-start',\r\n            '& img': {\r\n              display: 'block',\r\n              width: {xs: 'auto', lg: 50, xl: 'auto'},\r\n            },\r\n          }}\r\n        >\r\n          <img src={icon} alt='icon' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            color: 'white',\r\n          }}\r\n        >\r\n          <Typography\r\n            component='h3'\r\n            variant='inherit'\r\n            sx={{\r\n              color: 'inherit',\r\n            }}\r\n          >\r\n            {value}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              mt: 0.5,\r\n            }}\r\n            component='p'\r\n          >\r\n            {type}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default SalesState;\r\n\r\nSalesState.propTypes = {\r\n  state: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    month: 'Jan',\r\n    order: 14000,\r\n    return: 2400,\r\n  },\r\n  {\r\n    month: 'Feb',\r\n    order: 28000,\r\n    return: 4398,\r\n  },\r\n  {\r\n    month: 'Mar',\r\n    order: 9800,\r\n    return: 2000,\r\n  },\r\n  {\r\n    month: 'Apr',\r\n    order: 11000,\r\n    return: 10000,\r\n  },\r\n  {\r\n    month: 'May',\r\n    order: 7000,\r\n    return: 4000,\r\n  },\r\n  {\r\n    month: 'Jun',\r\n    order: 12780,\r\n    return: 2300,\r\n  },\r\n  {\r\n    month: 'Jul',\r\n    order: 8000,\r\n    return: 4300,\r\n  },\r\n  {\r\n    month: 'Aug',\r\n    order: 14000,\r\n    return: 2400,\r\n  },\r\n  {\r\n    month: 'Sep',\r\n    order: 13000,\r\n    return: 1398,\r\n  },\r\n  {\r\n    month: 'Oct',\r\n    order: 17000,\r\n    return: 9800,\r\n  },\r\n  {\r\n    month: 'Nov',\r\n    order: 12780,\r\n    return: 3908,\r\n  },\r\n  {\r\n    month: 'Dec',\r\n    order: 18900,\r\n    return: 4800,\r\n  },\r\n];\r\n\r\nconst SaleStaticChart = () => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={280}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 15,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid\r\n          strokeDasharray='3 1'\r\n          horizontal={true}\r\n          vertical={false}\r\n        />\r\n        <XAxis dataKey='month' />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <Bar dataKey='return' fill='#F44D50' barSize={8} />\r\n        <Bar dataKey='order' fill='#0A8FDC' barSize={8} />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SaleStaticChart;\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {AppGridContainer} from '@crema';\r\nimport {Box, Grid} from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport AppCircularProgress from '@crema/core/AppCircularProgress';\r\nimport SaleStaticChart from './SaleStaticChart';\r\n\r\nconst SaleStatics = () => {\r\n  const {messages} = useIntl();\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n\r\n  return (\r\n    <AppCard\r\n      title={messages['eCommerce.saleStatics']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={9}>\r\n          <SaleStaticChart />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              height: 1,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 9,\r\n                pl: {xl: 8},\r\n              }}\r\n            >\r\n              <AppCircularProgress\r\n                activeColor='#0A8FDC'\r\n                pathColor='#F44D50'\r\n                hidePercentage\r\n                value={70}\r\n                centerNode={\r\n                  <img\r\n                    alt='icon'\r\n                    src={'/assets/images/dashboard/application_icon.svg'}\r\n                  />\r\n                }\r\n                thickness={2}\r\n              />\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  mr: 6,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    backgroundColor: '#0A8FDC',\r\n                    height: 10,\r\n                    width: 10,\r\n                    mr: 2,\r\n                    borderRadius: '50%',\r\n                  }}\r\n                />\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: 14,\r\n                  }}\r\n                >\r\n                  Android\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    backgroundColor: '#F44D50',\r\n                    height: 10,\r\n                    width: 10,\r\n                    mr: 2,\r\n                    borderRadius: '50%',\r\n                  }}\r\n                />\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: 14,\r\n                  }}\r\n                >\r\n                  IOS\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default SaleStatics;\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport {Box} from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport AppCircularProgress from '@crema/core/AppCircularProgress';\r\n\r\nconst Application = () => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard title={messages['eCommerce.application']} sxStyle={{height: 1}}>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mb: 9,\r\n          }}\r\n        >\r\n          <AppCircularProgress\r\n            activeColor='#49BD65'\r\n            hidePercentage\r\n            value={70}\r\n            centerNode={\r\n              <img\r\n                alt='icon'\r\n                src={'/assets/images/dashboard/application_icon.svg'}\r\n              />\r\n            }\r\n            thickness={2}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mr: 6,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                backgroundColor: '#49BD65',\r\n                height: 10,\r\n                width: 10,\r\n                mr: 2,\r\n                borderRadius: '50%',\r\n              }}\r\n            />\r\n            <Typography>Android</Typography>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                backgroundColor: '#d6d6d6',\r\n                height: 10,\r\n                width: 10,\r\n                mr: 2,\r\n                borderRadius: '50%',\r\n              }}\r\n            />\r\n            <Typography>IOS</Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Application;\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StaticsGraph = ({id, graphData, strokeColor}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={50}>\r\n      <AreaChart\r\n        data={graphData}\r\n        margin={{top: 5, right: 0, left: 0, bottom: 0}}\r\n      >\r\n        <defs>\r\n          <linearGradient id={'colorPv' + id} x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor={strokeColor} stopOpacity={0.15} />\r\n            <stop offset='95%' stopColor={strokeColor} stopOpacity={0.01} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          type='monotone'\r\n          dataKey='number'\r\n          stroke={strokeColor}\r\n          strokeWidth={3}\r\n          fillOpacity={1}\r\n          fill={`url(#${`colorPv` + id})`}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StaticsGraph;\r\n\r\nStaticsGraph.defaultProps = {\r\n  graphData: [],\r\n};\r\nStaticsGraph.propTypes = {\r\n  id: PropTypes.any,\r\n  graphData: PropTypes.array,\r\n  strokeColor: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport StaticsGraph from './StaticsGraph';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ReportCard = ({data}) => {\r\n  return (\r\n    <AppCard className='card-hover'>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            pr: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              mb: 0.5,\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            {data.value}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: '#737989',\r\n            }}\r\n          >\r\n            {data.type}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            minWidth: 160,\r\n          }}\r\n        >\r\n          <StaticsGraph\r\n            id={data.id}\r\n            graphData={data.graphData}\r\n            growth={data.growth}\r\n            strokeColor={data.strokeColor}\r\n          />\r\n          <Box\r\n            display='flex'\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            fontWeight={Fonts.BOLD}\r\n            color={data.strokeColor}\r\n          >\r\n            {data.growth > 0 ? (\r\n              <ArrowUpwardIcon style={{color: data.strokeColor}} />\r\n            ) : (\r\n              <ArrowDownwardIcon style={{color: data.strokeColor}} />\r\n            )}\r\n            {data.growth}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ReportCard;\r\n\r\nReportCard.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        '& th': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell>Order ID</TableCell>\r\n      <TableCell>Product</TableCell>\r\n      <TableCell>Customer</TableCell>\r\n      <TableCell>Delivery Date</TableCell>\r\n      <TableCell>Price</TableCell>\r\n      <TableCell>Status</TableCell>\r\n      <TableCell>Actions</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\n\r\nconst TableItem = ({data}) => {\r\n  const getPaymentStatusColor = () => {\r\n    switch (data.status) {\r\n      case 'Pending': {\r\n        return '#F84E4E';\r\n      }\r\n      case 'Delivered': {\r\n        return '#43C888';\r\n      }\r\n      default: {\r\n        return '#E2A72E';\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        '& .tableCell': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      key={data.name}\r\n      className='item-hover'\r\n    >\r\n      <TableCell component='th' scope='row' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            color: (theme) => theme.palette.primary.main,\r\n            borderBottom: (theme) => `1px solid ${theme.palette.primary.main}`,\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          {data.id}\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.product}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.customer}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.date}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        {data.price}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            color: getPaymentStatusColor(),\r\n            backgroundColor: getPaymentStatusColor() + '44',\r\n            padding: '3px 10px',\r\n            borderRadius: 1,\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          {data.status}\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='right' className='tableCell'>\r\n        <IconButton\r\n          aria-label='more'\r\n          aria-controls='long-menu'\r\n          aria-haspopup='true'\r\n          onClick={null}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n\r\nconst OrderTable = ({orderData}) => {\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody>\r\n          {orderData.map((data) => (\r\n            <TableItem data={data} key={data.id} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default OrderTable;\r\n\r\nOrderTable.defaultProps = {\r\n  orderData: [],\r\n};\r\n\r\nOrderTable.propTypes = {\r\n  orderData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport OrderTable from './OrderTable';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RecentOrders = ({recentOrders}) => {\r\n  const {messages} = useIntl();\r\n  const handleSelectionType = (data) => {\r\n    console.log('data: ', data);\r\n  };\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      title={messages['eCommerce.recentOrders']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleSelectionType}\r\n        />\r\n      }\r\n    >\r\n      <OrderTable orderData={recentOrders} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default RecentOrders;\r\n\r\nRecentOrders.propTypes = {\r\n  recentOrders: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport {Box} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCircularProgress from '@crema/core/AppCircularProgress';\r\n\r\nconst Revenue = () => {\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard title={messages['eCommerce.revenue']}>\r\n      <Box\r\n        sx={{\r\n          mb: 6,\r\n          py: 3,\r\n        }}\r\n      >\r\n        <AppCircularProgress\r\n          activeColor='#0A8FDC'\r\n          value={70}\r\n          hidePercentage\r\n          centerNode={\r\n            <Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                }}\r\n              >\r\n                <Box\r\n                  component='span'\r\n                  sx={{\r\n                    fontSize: 14,\r\n                    fontWeight: Fonts.MEDIUM,\r\n                  }}\r\n                >\r\n                  $\r\n                </Box>\r\n                <Box\r\n                  component='h3'\r\n                  sx={{\r\n                    color: 'text.primary',\r\n                    fontSize: 18,\r\n                    fontWeight: Fonts.MEDIUM,\r\n                  }}\r\n                >\r\n                  600\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                component='p'\r\n                sx={{\r\n                  ml: 2,\r\n                  fontSize: 14,\r\n                  color: 'text.secondary',\r\n                }}\r\n              >\r\n                Sales\r\n              </Box>\r\n            </Box>\r\n          }\r\n          thickness={2}\r\n        />\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-around',\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box\r\n            sx={{\r\n              fontSize: 18,\r\n              mb: 0.5,\r\n              fontWeight: Fonts.BOLD,\r\n            }}\r\n          >\r\n            $ 2,000\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            Target\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Box\r\n            sx={{\r\n              fontSize: 18,\r\n              mb: 0.5,\r\n              fontWeight: Fonts.BOLD,\r\n            }}\r\n          >\r\n            $ 1,500\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            Current\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Revenue;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        '& th': {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell>Name</TableCell>\r\n      <TableCell>Spend</TableCell>\r\n      <TableCell>Graph</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableItem = (props) => {\r\n  return (\r\n    <TableRow\r\n      key={props.data.name}\r\n      sx={{\r\n        '& td': {\r\n          borderBottomColor: '#E5E4EA',\r\n          fontSize: 13,\r\n          padding: 2,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <TableCell>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar\r\n            sx={{\r\n              mr: 3.5,\r\n            }}\r\n            src={props.data.icon}\r\n          />\r\n          <Box\r\n            sx={{\r\n              fontSize: 14,\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 0.5,\r\n                fontWeight: Fonts.MEDIUM,\r\n              }}\r\n            >\r\n              {props.data.name}\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                color: 'text.secondary',\r\n              }}\r\n            >\r\n              {props.data.description}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell>{props.data.spent}</TableCell>\r\n      <TableCell>\r\n        {props.data.growth ? (\r\n          <img\r\n            src={'/assets/images/dashboard/growth_icon.svg'}\r\n            alt='growth_icon'\r\n          />\r\n        ) : (\r\n          <img\r\n            src={'/assets/images/dashboard/decries_icon.svg'}\r\n            alt='decries_icon'\r\n          />\r\n        )}\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            mx: 2,\r\n            color: props.data.growth ? '#0A8FDC' : '#F44D50',\r\n          }}\r\n        >\r\n          {props.data.graph}\r\n        </Box>\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            color: 'text.secondary',\r\n          }}\r\n        >\r\n          {props.data.growth ? 'Up' : 'Down'}\r\n        </Box>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n\r\nconst OrderTable = ({marketingCampaign}) => {\r\n  return (\r\n    <TableContainer\r\n      sx={{\r\n        maxHeight: 500,\r\n      }}\r\n    >\r\n      <Table>\r\n        <TableHead>\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody>\r\n          {marketingCampaign.map((data) => (\r\n            <TableItem data={data} key={data.id} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default OrderTable;\r\n\r\nOrderTable.defaultProps = {\r\n  marketingCampaign: [],\r\n};\r\n\r\nOrderTable.propTypes = {\r\n  marketingCampaign: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport MarketingTable from './MarketingTable';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MarketingCampaign = ({marketingCampaign}) => {\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      title={messages['eCommerce.marketingCampaign']}\r\n      contentStyle={{px: 0}}\r\n    >\r\n      <MarketingTable marketingCampaign={marketingCampaign} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default MarketingCampaign;\r\n\r\nMarketingCampaign.propTypes = {\r\n  marketingCampaign: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst NotificationCell = ({item}) => {\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      className='item-hover'\r\n      sx={{paddingLeft: 5, paddingRight: 5}}\r\n    >\r\n      <ListItemAvatar\r\n        sx={{\r\n          minWidth: 'auto',\r\n          mr: 4,\r\n        }}\r\n      >\r\n        <Avatar\r\n          sx={{\r\n            width: 48,\r\n            height: 48,\r\n          }}\r\n          src={item.image}\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              color: 'text.primary',\r\n              mb: 0.5,\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {item.type}\r\n          </Box>\r\n        }\r\n        secondary={\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              flexWrap: 'wrap',\r\n              fontSize: 14,\r\n              color: 'primary.main',\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                display: 'block',\r\n                mr: 2,\r\n              }}\r\n            >\r\n              {item.name}\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                display: 'block',\r\n                color: 'text.secondary',\r\n              }}\r\n            >\r\n              {item.message}\r\n            </Box>\r\n          </Box>\r\n        }\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default NotificationCell;\r\n\r\nNotificationCell.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport NotificationCell from './NotificationCell';\r\nimport AppList from '@crema/core/AppList';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notifications = (props) => {\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      contentStyle={{px: 0}}\r\n      title={messages['eCommerce.notifications']}\r\n      action={\r\n        <IconButton\r\n          sx={{\r\n            height: 30,\r\n            width: 30,\r\n          }}\r\n          aria-label='more'\r\n          aria-controls='long-menu'\r\n          aria-haspopup='true'\r\n          onClick={null}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <AppScrollbar\r\n        sx={{\r\n          maxHeight: 386,\r\n        }}\r\n      >\r\n        <AppList\r\n          data={props.notifications}\r\n          renderRow={(item) => <NotificationCell key={item.id} item={item} />}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n\r\nNotifications.propTypes = {\r\n  notifications: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst CustomerItem = ({item}) => {\r\n  const getStatusColor = () => {\r\n    if (item.orders === 0) {\r\n      return '#F84E4E';\r\n    } else if (item.orders > 0) {\r\n      return '#43C888';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: {xs: 'flex-start', sm: 'center'},\r\n        padding: '8px 20px',\r\n        '&:not(:last-of-type)': {\r\n          borderBottom: '1px solid #ECEDF1',\r\n        },\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <Avatar\r\n        sx={{\r\n          mr: 4,\r\n          width: 48,\r\n          height: 48,\r\n        }}\r\n        src={item.image}\r\n      />\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: 'flex',\r\n          alignItems: {sm: 'center'},\r\n          flexDirection: {xs: 'column', sm: 'row'},\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            fontSize: 14,\r\n            flex: 1,\r\n            mr: 2,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mb: 0.5,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {item.name}\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              fontSize: 14,\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            {item.message}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              color: getStatusColor(),\r\n              backgroundColor: getStatusColor() + '44',\r\n              padding: '3px 10px',\r\n              borderRadius: '15px',\r\n              display: 'inline-block',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {item.orders} orders\r\n          </Box>\r\n          <IconButton\r\n            aria-label='more'\r\n            aria-controls='long-menu'\r\n            aria-haspopup='true'\r\n            onClick={null}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomerItem;\r\n\r\nCustomerItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport CustomerItem from './CustomerItem';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewCustomers = (props) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard title={messages['eCommerce.newCustomers']} contentStyle={{px: 0}}>\r\n      <AppScrollbar sx={{maxHeight: 280}}>\r\n        <AppList\r\n          data={props.newCustomers}\r\n          renderRow={(item) => (\r\n            <CustomerItem listStyle='paddingX' key={item.id} item={item} />\r\n          )}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default NewCustomers;\r\n\r\nNewCustomers.propTypes = {\r\n  newCustomers: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProductCell = ({data}) => {\r\n  return (\r\n    <Box\r\n      key={data.id}\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: 2,\r\n        px: 5,\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <Avatar\r\n        sx={{\r\n          mr: 4,\r\n          height: 70,\r\n          width: 70,\r\n        }}\r\n        variant='rounded'\r\n        alt=''\r\n        src={data.icon}\r\n      />\r\n\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          component='h3'\r\n          sx={{\r\n            color: 'primary.main',\r\n            fontWeight: Fonts.MEDIUM,\r\n            mb: 0.5,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {data.name}\r\n        </Box>\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            fontSize: 14,\r\n            color: 'text.secondary',\r\n            mb: 1,\r\n          }}\r\n        >\r\n          {data.description}\r\n        </Box>\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            fontSize: 14,\r\n            fontWeight: Fonts.MEDIUM,\r\n          }}\r\n        >\r\n          ${data.price}\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              textDecoration: 'line-through',\r\n              mb: 1,\r\n              fontSize: 14,\r\n              ml: 3,\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            ${data.mrp}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductCell;\r\n\r\nProductCell.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport ProductCell from './ProductCell';\r\nimport AppGrid from '@crema/core/AppGrid';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PopularProducts = ({popularProducts}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['eCommerce.popularProducts']}\r\n      contentStyle={{px: 0}}\r\n    >\r\n      <AppScrollbar sx={{maxHeight: 280}}>\r\n        <AppGrid\r\n          data={popularProducts}\r\n          responsive={{\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 2,\r\n            lg: 2,\r\n            xl: 2,\r\n          }}\r\n          itemPadding={8}\r\n          renderRow={(data, index) => (\r\n            <ProductCell key={'product-' + index} data={data} />\r\n          )}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default PopularProducts;\r\n\r\nPopularProducts.propTypes = {\r\n  popularProducts: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppList from '@crema/core/AppList';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BrowserCell = ({item}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: 2,\r\n        px: 5,\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          mr: 3.5,\r\n        }}\r\n      >\r\n        <img alt='' style={{maxWidth: 40, display: 'block'}} src={item.icon} />\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          component='h3'\r\n          sx={{\r\n            fontWeight: Fonts.MEDIUM,\r\n            mb: 0.5,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {item.name}\r\n        </Box>\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            color: 'text.secondary',\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {item.value}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nBrowserCell.propTypes = {\r\n  item: PropTypes.object,\r\n};\r\n\r\nconst Browser = ({browserData}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard title={messages['eCommerce.browser']} contentStyle={{px: 0}}>\r\n      <AppList\r\n        data={browserData}\r\n        renderRow={(item, index) => <BrowserCell item={item} key={index} />}\r\n      />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Browser;\r\n\r\nBrowser.propTypes = {\r\n  browserData: PropTypes.array,\r\n};\r\n","import React, {memo} from 'react';\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n} from 'react-simple-maps';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst geoUrl =\r\n  'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\r\n\r\nconst rounded = (num) => {\r\n  if (num > 1000000000) {\r\n    return Math.round(num / 100000000) / 10 + 'Bn';\r\n  } else if (num > 1000000) {\r\n    return Math.round(num / 100000) / 10 + 'M';\r\n  } else {\r\n    return Math.round(num / 100) / 10 + 'K';\r\n  }\r\n};\r\n\r\nconst MapChart = ({setTooltipContent}) => {\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip='' projectionConfig={{scale: 200}}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({geographies}) =>\r\n              geographies.map((geo) => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const {NAME, POP_EST} = geo.properties;\r\n                    setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent('');\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: '#D6D6DA',\r\n                      outline: 'none',\r\n                    },\r\n                    hover: {\r\n                      fill: '#0A8FDC',\r\n                      outline: 'none',\r\n                    },\r\n                    pressed: {\r\n                      fill: '#0A8FDC',\r\n                      outline: 'none',\r\n                    },\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n\r\nMapChart.propTypes = {\r\n  setTooltipContent: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport MapChart from './MapChart';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {Box} from '@mui/material';\r\n\r\nconst MapView = () => {\r\n  const [content, setContent] = useState('');\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        height: 200,\r\n      }}\r\n    >\r\n      <MapChart setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n","import React from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box, Grid} from '@mui/material';\r\nimport {useIntl} from 'react-intl';\r\nimport {AppGridContainer} from '@crema';\r\nimport MapView from './MapView';\r\nimport AppList from '@crema/core/AppList';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CountryCell = ({data}) => (\r\n  <Box\r\n    sx={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      py: 2,\r\n      px: 5,\r\n    }}\r\n    className='item-hover'\r\n  >\r\n    <Box\r\n      sx={{\r\n        mr: 3,\r\n        '& .img': {\r\n          height: 30,\r\n          width: 30,\r\n          borderRadius: '50%',\r\n          backgroundColor: '#fff',\r\n          display: 'block',\r\n        },\r\n      }}\r\n    >\r\n      <img src={data.icon} alt='icon' />\r\n    </Box>\r\n    <Box\r\n      component='h6'\r\n      sx={{\r\n        flex: 1,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n      }}\r\n    >\r\n      {data.country}\r\n    </Box>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: (theme) => theme.palette.primary.main,\r\n        borderRadius: '15px',\r\n        color: '#fff',\r\n        padding: '4px 12px',\r\n      }}\r\n    >\r\n      {data.value}\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCountryCell.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n\r\nconst SiteVisitors = ({siteVisitorsData}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['eCommerce.siteVisitorsStatistics']}\r\n      contentStyle={{px: 0}}\r\n    >\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={3}>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              pl: 4,\r\n              fontSize: 14,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {messages['eCommerce.countries']}\r\n          </Box>\r\n          <AppList\r\n            data={siteVisitorsData}\r\n            renderRow={(data) => <CountryCell key={data.id} data={data} />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <MapView />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              pl: 4,\r\n              fontSize: 14,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {messages['eCommerce.countries']}\r\n          </Box>\r\n          <AppList\r\n            data={siteVisitorsData}\r\n            renderRow={(data) => (\r\n              <CountryCell key={'sec-c-' + data.id} data={data} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default SiteVisitors;\r\n\r\nSiteVisitors.propTypes = {\r\n  siteVisitorsData: PropTypes.array,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetECommerceData} from '../../../redux/actions';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport {Grid} from '@mui/material';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport SalesState from './SalesState';\r\nimport SaleStatics from './SaleStatics';\r\nimport Application from './Application';\r\nimport ReportCard from './ReportCard';\r\nimport RecentOrders from './RecentOrders';\r\nimport Revenue from './Revenue';\r\nimport MarketingCampaign from './MarketingCampaign';\r\nimport Notifications from './Notifications';\r\nimport NewCustomers from './NewCustomers';\r\nimport PopularProducts from './PopularProducts';\r\nimport Browser from './Browser';\r\nimport SiteVisitors from './SiteVisitors';\r\nimport AppAnimate from '@crema/core/AppAnimate';\r\n\r\nconst ECommerce = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetECommerceData());\r\n  }, [dispatch]);\r\n\r\n  const ecommerceData = useSelector(({dashboard}) => dashboard.ecommerceData);\r\n\r\n  return (\r\n    <>\r\n      {ecommerceData ? (\r\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n          <AppGridContainer>\r\n            {ecommerceData.salesState.map((state, index) => (\r\n              <Grid item xs={12} sm={6} md={3} key={index}>\r\n                <SalesState state={state} />\r\n              </Grid>\r\n            ))}\r\n            <Grid item xs={12} md={9}>\r\n              <SaleStatics />\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Application />\r\n            </Grid>\r\n            {ecommerceData.reportCards.map((report, index) => (\r\n              <Grid item xs={12} md={4} key={index}>\r\n                <ReportCard data={report} />\r\n              </Grid>\r\n            ))}\r\n            <Grid item xs={12} md={9}>\r\n              <RecentOrders recentOrders={ecommerceData.recentOrders} />\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Revenue />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <MarketingCampaign\r\n                marketingCampaign={ecommerceData.marketingCampaign}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Notifications notifications={ecommerceData.notifications} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <NewCustomers newCustomers={ecommerceData.newCustomers} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <PopularProducts\r\n                popularProducts={ecommerceData.popularProducts}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={9}>\r\n              <SiteVisitors siteVisitorsData={ecommerceData.siteVisitors} />\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Browser browserData={ecommerceData.browser} />\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </AppAnimate>\r\n      ) : null}\r\n      <AppInfoView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ECommerce;\r\n"],"sourceRoot":""}