{"version":3,"sources":["../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/icons-material/Done.js","@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/AppContainerWrapper.js","@crema/core/AppsContainer/index.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppsContainer/AppsContent/index.js","@crema/core/AppList/ListEmptyResult.js","../node_modules/@mui/icons-material/EditOutlined.js","@crema/core/AppsStarredIcon/index.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppDialog/index.js","../node_modules/@mui/icons-material/List.js","@crema/core/AppsSideBarFolderItem/index.js","@crema/core/AppSkeleton/SidebarListSkeleton.js","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/icons-material/CheckCircleOutline.js","@crema/core/AppSkeleton/MailDetailSkeleton.js","../node_modules/@mui/icons-material/DateRangeOutlined.js","../node_modules/@mui/icons-material/CalendarViewMonthOutlined.js","../node_modules/@mui/icons-material/ViewAgendaOutlined.js","../node_modules/@mui/icons-material/ArrowBackIosNew.js","../node_modules/@mui/icons-material/ArrowForwardIos.js","pages/apps/ToDo/AddNewTask/AddTaskForm.js","pages/apps/ToDo/AddNewTask/index.js","pages/apps/ToDo/TaskSideBar/LabelItem.js","pages/apps/ToDo/TaskSideBar/index.js","pages/apps/ToDo/TasksList/TaskContentHeader/index.style.js","pages/apps/ToDo/TasksList/TaskContentHeader/SelectTasksDropdown.js","pages/apps/ToDo/TasksList/TaskContentHeader/CheckedTasksActions.js","pages/apps/ToDo/TasksList/TaskContentHeader/ViewSelectButtons.js","pages/apps/ToDo/TasksList/TaskContentHeader/index.js","pages/apps/ToDo/TasksList/TaskListItem/Labels.js","pages/apps/ToDo/TasksList/TaskListItem/Priority.js","pages/apps/ToDo/TasksList/TaskListItem/index.style.js","pages/apps/ToDo/TasksList/TaskListItem/index.js","@crema/core/AppSkeleton/TodoListSkeleton.js","pages/apps/ToDo/TasksList/TaskListItemMobile/Priority.js","pages/apps/ToDo/TasksList/TaskListItemMobile/index.js","pages/apps/ToDo/TasksList/TaskCalendar/Calendar.style.js","pages/apps/ToDo/TasksList/TaskCalendar/CustomToolbar.js","pages/apps/ToDo/TasksList/TaskCalendar/index.js","pages/apps/ToDo/TasksList/index.js","pages/apps/ToDo/TaskDetail/TaskDetailHeader/StatusToggleButton.js","pages/apps/ToDo/TaskDetail/TaskDetailHeader/index.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/ChangeStaff.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/AssignedStaff.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/DatePicker.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/EditButton.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/TaskStatus.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/TaskPriority.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/TaskCreatedByInfo.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/CommentsList/CommentsListItem.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/CommentsList/index.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/index.js","pages/apps/ToDo/TaskDetail/index.js","pages/apps/ToDo/index.js"],"names":["_excluded","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","styled","name","slot","overridesResolver","props","styles","root","ownerState","theme","_extends","display","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","flexDirection","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","deepmerge","margin","row","column","getValue","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as","_interopRequireDefault","require","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AppSidebar","isAppDrawerOpen","sidebarContent","dispatch","useDispatch","Slide","in","mountOnEnter","unmountOnExit","Box","sx","height","width","lg","Hidden","lgUp","Drawer","open","onClose","onToggleAppDrawer","position","drawerClasses","paper","zIndex","lgDown","Card","style","getMainHeaderHeight","navStyle","screenSize","NavStyle","BIT_BUCKET","AppContainerWrapper","footer","rest","xs","sm","md","xl","AppsContainer","useSelector","common","useLayoutContext","title","fullView","flex","overflow","padding","sxStyle","marginTop","alignItems","mb","mt","IconButton","edge","marginRight","color","onClick","size","Zoom","transitionDelay","variant","fontSize","fontWeight","Fonts","SEMI_BOLD","pl","cardStyle","AppInfoView","defaultProps","AppsHeader","borderBottom","palette","className","AppsContentContainer","SimpleBarReact","paddingTop","paddingBottom","AppsContent","isDetailView","ListEmptyResult","loader","placeholder","loading","actionTitle","content","Fragment","minHeight","p","justifyContent","borderColor","borderRadius","textAlign","ml","border","text","secondary","MEDIUM","minWidth","id","AppsStarredIcon","item","onChange","warning","main","icon","checkedIcon","checked","isStarred","event","target","AppsFooter","px","py","borderTop","Transition","forwardRef","AppDialog","maxWidth","hideClose","dividers","fullHeight","overflowY","paddingLeft","paddingRight","TransitionComponent","right","top","maxHeight","type","AppsSideBarFolderList","ListItem","marginBottom","up","backgroundColor","alpha","primary","getIconByName","AppsSideBarFolderItem","path","button","to","AppNavLink","activeClassName","mr","alias","my","SidebarItem","viewBox","x","y","rx","ry","SidebarListSkeleton","MailDetailSkeleton","speed","foregroundColor","cx","cy","r","StyledDivider","Divider","AddTaskForm","setFieldValue","isSubmitting","setTaskLabels","taskLabels","labelList","todoApp","priorityList","staffList","inputLabel","useRef","messages","useIntl","noValidate","autoComplete","AppTextField","LIGHT","label","IntlMessages","AppGridContainer","Grid","FormControl","InputLabel","Select","labelId","map","staff","MenuItem","cursor","inputVariant","image","Avatar","src","toUpperCase","DatePicker","autoOk","format","date","renderInput","params","TextField","priority","Autocomplete","multiple","options","getOptionLabel","option","filterSelectedOptions","fullWidth","multiline","rows","Button","disabled","validationSchema","yup","required","AddNewTask","isAddTaskOpen","onCloseAddTask","selectedDate","console","log","user","useAuthUser","useState","validateOnChange","initialValues","assignedTo","moment","onSubmit","data","setSubmitting","resetForm","newTask","Math","floor","random","isAttachment","isRead","folderValue","createdBy","displayName","photoURL","startDate","createdOn","status","comments","onCreateTask","StyledListItem","LabelItem","ListItemText","ListWrapper","List","TaskSideBar","folderList","setAddTaskOpen","pt","pb","startIcon","AppScrollbar","pr","AppList","ListEmptyComponent","renderRow","StyledSelect","black","StyledBox","SelectTasksDropdown","checkedTasks","onSelectTasks","selectedItems","setSelectedItems","useEffect","CheckedTasksActions","setCheckedTasks","page","useParams","folder","isLabelOpen","onOpenLabel","onLabelClose","onSelectLabel","labelType","onUpdateTaskLabels","AppsDeleteIcon","deleteAction","onDeleteSelectedTasks","deleteTitle","AppTooltip","currentTarget","Menu","anchorEl","IconBtn","ViewSelectButtons","viewMode","onViewModeSelect","clsx","active","ViewMode","Calendar","TaskContentHeader","filterText","onSetFilterText","onPageChange","taskList","totalTasks","Checkbox","indeterminate","taskIds","task","AppSearchBar","iconPosition","overlap","smDown","AppsPagination","marginLeft","count","Labels","labels","placement","Priority","bgcolor","boxShadow","transform","transition","opacity","visibility","TaskInfoWrapper","ActionWrapper","cardRadius","TaskListItem","onChangeCheckedTasks","onChangeStarred","onDeleteTask","navigate","useNavigate","dense","includes","onViewTaskDetail","stopPropagation","alt","textOverflow","whiteSpace","mdDown","e","TodoItem","TodoListSkeleton","UserInfoWrapper","TaskActionView","TaskListItemMobile","Typography","StyledCalendar","contrastText","background","CustomToolbar","viewState","setViewState","addMonths","months","getDate","setMonth","getMonth","setDate","addWeeks","weeks","addDays","days","onView","onNavigate","now","Date","setYear","getFullYear","localizer","momentLocalizer","TaskCalender","setSelectedDate","events","start","end","allDay","views","tooltipAccessor","showMultiDayTimes","selectable","onSelectEvent","components","toolbar","popup","onSelectSlot","defaultView","onOpenAddTask","TasksList","setViewMode","setPage","onGetTaskList","concat","taskId","onUpdateTaskStarredStatus","onUpdateSelectedTask","list","onAction","smUp","StatusButton","StyledDoneIcon","DoneIcon","verticalAlign","StatusToggleButton","selectedTask","onChangeTaskStatus","TaskDetailHeader","ChangeStaff","selectedStaff","handleStaffChange","AssignedStaff","assignedStaff","AppDatePicker","EditButton","action","TaskStatus","statusList","onChangeStatus","TaskPriority","setPriority","find","toString","onChangePriority","TaskCreatedByInfo","CommentWrapper","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","CommentsListItem","isPreviousSender","isLast","time","comment","StyledSimpleBarReact","CommentsList","_scrollBarRef","current","scrollEl","getScrollElement","scrollTop","scrollHeight","sender","TaskDetailBody","isEdit","setEdit","setContent","setComment","scheduleDate","setScheduleDate","setStaff","TaskDetail","onGetSelectedTask","ToDo","onGetToDoLabelList","onGetToDoFolderList","onGetToDoPriorityList","onGetToDoStaffList","onGetToDoStatusList","left","show"],"mappings":"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","file":"static/js/18.2c82f8c4.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","import React from 'react';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Card from '@mui/material/Card';\r\nimport {Box, drawerClasses, Slide} from '@mui/material';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {onToggleAppDrawer} from '../../../redux/actions';\r\n\r\nconst AppSidebar = (props) => {\r\n  const {isAppDrawerOpen, sidebarContent} = props;\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Slide direction='right' in mountOnEnter unmountOnExit>\r\n      <Box\r\n        sx={{\r\n          height: '100%',\r\n          width: {\r\n            lg: 280,\r\n          },\r\n        }}\r\n      >\r\n        <Hidden lgUp>\r\n          <Drawer\r\n            open={isAppDrawerOpen}\r\n            onClose={() => dispatch(onToggleAppDrawer())}\r\n            sx={{\r\n              position: 'absolute',\r\n              [`& .${drawerClasses.paper}`]: {\r\n                width: 280,\r\n                '& .listItem': {\r\n                  zIndex: 1305,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {sidebarContent}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden lgDown>\r\n          <Card style={{height: '100%'}}>{sidebarContent}</Card>\r\n        </Hidden>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\n\r\nAppSidebar.propTypes = {\r\n  isAppDrawerOpen: PropTypes.bool,\r\n  footer: PropTypes.bool,\r\n  navStyle: PropTypes.string,\r\n  fullView: PropTypes.bool,\r\n  sidebarContent: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport {NavStyle} from '../../../shared/constants/AppEnums';\r\n\r\nconst getMainHeaderHeight = (navStyle, screenSize) => {\r\n  if (navStyle === NavStyle.BIT_BUCKET) return screenSize >= 1200 ? 0 : 70; // Header Height\r\n  return screenSize >= 600 ? 70 : 56;\r\n};\r\n\r\nconst AppContainerWrapper = ({children, navStyle, footer, ...rest}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        height: {\r\n          xs: `calc(100vh - ${\r\n            47 + // AppsHeader Height // apps title block height\r\n            40 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 0) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          sm: `calc(100vh - ${\r\n            47 + // AppsHeader Height\r\n            40 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 600) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          md: `calc(100vh - ${\r\n            47 + // AppsHeader Height\r\n            60 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 900) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          lg: `calc(100vh - ${\r\n            40 + // AppsHeader Height\r\n            60 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 1200) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          xl: `calc(100vh - ${\r\n            40 + // AppsHeader Height\r\n            100 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 1536) +\r\n            (footer ? 57 : 0)\r\n          }px) !important`,\r\n        },\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppContainerWrapper;\r\n\r\nAppContainerWrapper.propTypes = {\r\n  children: PropsTypes.node,\r\n  navStyle: PropsTypes.string,\r\n  footer: PropsTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport {Box, Slide, Zoom} from '@mui/material';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@mui/material/Card';\r\n\r\nimport {onToggleAppDrawer} from '../../../redux/actions';\r\nimport AppSidebar from './AppSidebar';\r\nimport {useLayoutContext} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AppContainerWrapper from './AppContainerWrapper';\r\n\r\nconst AppsContainer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isAppDrawerOpen = useSelector(({common}) => common.isAppDrawerOpen);\r\n  const {footer} = useLayoutContext();\r\n  const {navStyle} = useLayoutContext();\r\n  const {title, sidebarContent, fullView, children} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n        margin: -4,\r\n        padding: 4,\r\n        ...props.sxStyle,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          marginTop: fullView ? 0 : -4,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          mb: {\r\n            xs: fullView ? 4 : 2,\r\n            lg: 4,\r\n          },\r\n          mt: {\r\n            xs: fullView ? 0 : -4,\r\n            lg: 0,\r\n          },\r\n        }}\r\n      >\r\n        {fullView ? null : (\r\n          <Hidden lgUp>\r\n            <IconButton\r\n              edge='start'\r\n              sx={{\r\n                marginRight: (theme) => theme.spacing(2),\r\n              }}\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={() => dispatch(onToggleAppDrawer())}\r\n              size='large'\r\n            >\r\n              <MenuIcon\r\n                sx={{\r\n                  width: 35,\r\n                  height: 35,\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Hidden>\r\n        )}\r\n        <Zoom in style={{transitionDelay: '300ms'}}>\r\n          <Box\r\n            component='h2'\r\n            variant='h2'\r\n            sx={{\r\n              fontSize: 16,\r\n              color: 'text.primary',\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            {title}\r\n          </Box>\r\n        </Zoom>\r\n      </Box>\r\n\r\n      <AppContainerWrapper navStyle={navStyle} footer={footer}>\r\n        {sidebarContent ? (\r\n          <AppSidebar\r\n            isAppDrawerOpen={isAppDrawerOpen}\r\n            footer={footer}\r\n            fullView={fullView}\r\n            navStyle={navStyle}\r\n            sidebarContent={sidebarContent}\r\n          />\r\n        ) : null}\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: {\r\n              xs: '100%',\r\n              lg: `calc(100% - ${fullView ? 0 : 280}px)`,\r\n            },\r\n            pl: {\r\n              lg: props.fullView ? 0 : 8,\r\n            },\r\n          }}\r\n        >\r\n          <Slide direction='left' in mountOnEnter unmountOnExit>\r\n            <Card\r\n              style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                position: 'relative',\r\n                ...props.cardStyle,\r\n              }}\r\n            >\r\n              {children}\r\n            </Card>\r\n          </Slide>\r\n          <AppInfoView />\r\n        </Box>\r\n      </AppContainerWrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsContainer;\r\n\r\nAppsContainer.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nAppsContainer.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  sidebarContent: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  sxStyle: PropTypes.object,\r\n  cardStyle: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Box} from '@mui/material';\r\nconst AppsHeader = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 60,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n        padding: {\r\n          xs: '4px 10px',\r\n          xl: '12px 10px',\r\n        },\r\n      }}\r\n      className='apps-header'\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsHeader;\r\n\r\nAppsHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nAppsHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {styled} from '@mui/material/styles';\r\nimport SimpleBarReact from 'simplebar-react';\r\n\r\nconst AppsContentContainer = styled(SimpleBarReact)(() => {\r\n  return {\r\n    width: '100%',\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& .simplebar-content': {\r\n      height: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nconst AppsContent = ({isDetailView, fullView, children, ...rest}) => {\r\n  return (\r\n    <AppsContentContainer\r\n      {...rest}\r\n      sx={{\r\n        height: {\r\n          xs: `calc(100% - ${isDetailView ? 60 : 129}px)`,\r\n          sm: `calc(100% - ${fullView ? 0 : 60}px)`,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </AppsContentContainer>\r\n  );\r\n};\r\n\r\nexport default AppsContent;\r\n\r\nAppsContent.propTypes = {\r\n  children: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  isDetailView: PropTypes.bool,\r\n};\r\n\r\nAppsContent.defaultProps = {isDetailView: false};\r\n","import React from 'react';\r\nimport {Box, Button, CircularProgress, Typography} from '@mui/material';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst ListEmptyResult = ({\r\n  loader,\r\n  placeholder,\r\n  loading,\r\n  title,\r\n  actionTitle,\r\n  content,\r\n  onClick,\r\n}) => {\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <Box\r\n            sx={{\r\n              flexDirection: 'row',\r\n              minHeight: '450px',\r\n              height: '100%',\r\n              flex: 1,\r\n              display: 'flex',\r\n              p: 5,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              borderColor: 'transparent',\r\n              borderRadius: '4px',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <CircularProgress size={16} />\r\n            <Box component='span' sx={{ml: 2}}>\r\n              Loading...\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          flexDirection: 'column',\r\n          minHeight: '450px',\r\n          height: '100%',\r\n          flex: 1,\r\n          display: 'flex',\r\n          p: 5,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          border: 1,\r\n          borderColor: 'transparent',\r\n          borderRadius: '4px',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        {title ? (\r\n          <Typography\r\n            sx={{\r\n              fontSize: 14,\r\n              color: (theme) => theme.palette.text.secondary,\r\n              fontWeight: Fonts.MEDIUM,\r\n              mb: 2,\r\n            }}\r\n            component='h4'\r\n            variant='h4'\r\n          >\r\n            {title}\r\n          </Typography>\r\n        ) : null}\r\n        <Typography\r\n          sx={{\r\n            fontSize: 14,\r\n            color: (theme) => theme.palette.text.secondary,\r\n          }}\r\n        >\r\n          {content}\r\n        </Typography>\r\n\r\n        {actionTitle ? (\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            style={{mt: 7.5, height: 45, minWidth: 150}}\r\n            onClick={onClick}\r\n          >\r\n            {actionTitle}\r\n          </Button>\r\n        ) : null}\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n\r\nListEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n};\r\n\r\nListEmptyResult.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  actionTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  onClick: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  loader: PropTypes.bool,\r\n  placeholder: PropTypes.node,\r\n  content: PropTypes.string,\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14.06 9.02.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n}), 'EditOutlined');\n\nexports.default = _default;","import React from 'react';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport {Checkbox} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppsStarredIcon = ({item, onChange}) => {\r\n  return (\r\n    <Checkbox\r\n      sx={{\r\n        color: (theme) => theme.palette.warning.main,\r\n        '&.Mui-checked': {\r\n          color: (theme) => theme.palette.warning.main,\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: 20,\r\n        },\r\n      }}\r\n      icon={<StarBorderIcon />}\r\n      checkedIcon={<StarIcon />}\r\n      checked={item.isStarred}\r\n      onChange={(event) => onChange(event.target.checked, item)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n\r\nAppsStarredIcon.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Box} from '@mui/material';\r\n\r\nconst AppsFooter = (props) => {\r\n  const {children} = props;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        px: 5,\r\n        py: 2,\r\n        borderTop: (theme) => `1px solid ${theme.palette.divider}`,\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsFooter;\r\n\r\nAppsFooter.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport {Dialog, DialogTitle, Slide} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nconst AppDialog = ({\r\n  sxStyle,\r\n  maxWidth,\r\n  hideClose,\r\n  open,\r\n  onClose,\r\n  children,\r\n  dividers,\r\n  title,\r\n  actionTitle,\r\n  fullHeight,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      sx={{\r\n        '& .MuiDialog-paper': {\r\n          width: '100%',\r\n        },\r\n        '& .MuiDialogContent-root': {\r\n          overflowY: 'hidden',\r\n          paddingLeft: 0,\r\n          paddingRight: 0,\r\n        },\r\n        ...sxStyle,\r\n      }}\r\n      maxWidth={maxWidth}\r\n      TransitionComponent={Transition}\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          fontSize: 14,\r\n          fontWeight: Fonts.MEDIUM,\r\n        }}\r\n        id='app-dialog-title'\r\n      >\r\n        {title}\r\n        {hideClose ? null : (\r\n          <IconButton\r\n            aria-label='close'\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 4,\r\n              top: 4,\r\n              color: 'grey.500',\r\n            }}\r\n            onClick={onClose}\r\n            size='large'\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent dividers={dividers}>\r\n        <AppScrollbar\r\n          sx={{\r\n            paddingTop: 1,\r\n            height: fullHeight ? '70vh' : '100%',\r\n            minHeight: '300px',\r\n            maxHeight: '400px',\r\n            paddingRight: 6,\r\n            paddingLeft: 6,\r\n          }}\r\n        >\r\n          {children}\r\n        </AppScrollbar>\r\n      </DialogContent>\r\n      {actionTitle ? (\r\n        <DialogActions>\r\n          <Button color='primary' variant='contained' type='submit'>\r\n            {actionTitle}\r\n          </Button>\r\n        </DialogActions>\r\n      ) : null}\r\n    </Dialog>\r\n  );\r\n};\r\nexport default AppDialog;\r\n\r\nAppDialog.propTypes = {\r\n  maxWidth: PropTypes.string,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.node,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  dividers: PropTypes.bool,\r\n  hideClose: PropTypes.bool,\r\n  fullHeight: PropTypes.bool,\r\n  actionTitle: PropTypes.string,\r\n  sxStyle: PropTypes.object,\r\n};\r\nAppDialog.defaultProps = {\r\n  dividers: false,\r\n  fullHeight: false,\r\n  maxWidth: 'sm',\r\n  hideClose: false,\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"\n}), 'List');\n\nexports.default = _default;","import React from 'react';\r\nimport {AppNavLink} from '../../index';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';\r\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\r\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport ArchiveOutlinedIcon from '@mui/icons-material/ArchiveOutlined';\r\nimport GroupOutlinedIcon from '@mui/icons-material/GroupOutlined';\r\nimport AutorenewOutlinedIcon from '@mui/icons-material/AutorenewOutlined';\r\nimport ScheduleOutlinedIcon from '@mui/icons-material/ScheduleOutlined';\r\nimport TodayOutlinedIcon from '@mui/icons-material/TodayOutlined';\r\nimport CheckCircleOutlinedIcon from '@mui/icons-material/CheckCircleOutlined';\r\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport LabelImportantIcon from '@mui/icons-material/LabelImportant';\r\nimport {alpha, styled} from '@mui/material/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst AppsSideBarFolderList = styled(ListItem)(({theme}) => {\r\n  return {\r\n    padding: '7px 16px',\r\n    borderRadius: '0 30px 30px 0',\r\n    marginBottom: 1,\r\n    marginTop: 1,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n\r\n    '& svg': {\r\n      fontSize: '18px',\r\n    },\r\n\r\n    '&:hover,&:focus,&.active': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      color: theme.palette.primary.main,\r\n\r\n      '& .material-icons, & svg, & .MuiTypography-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n\r\n      '& .material-icons, & .MuiTypography-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      '& .list-item-text': {\r\n        '& .MuiTypography-body1': {\r\n          fontWeight: Fonts.SEMI_BOLD,\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst getIconByName = (name) => {\r\n  switch (name) {\r\n    case 'inbox':\r\n      return <EmailOutlinedIcon />;\r\n    case 'sent':\r\n      return <SendOutlinedIcon />;\r\n    case 'draft':\r\n      return <DraftsOutlinedIcon />;\r\n    case 'starred':\r\n      return <StarBorderOutlinedIcon />;\r\n    case 'spam':\r\n      return <InfoOutlinedIcon />;\r\n    case 'trash':\r\n      return <DeleteOutlineIcon />;\r\n    case 'archive':\r\n      return <ArchiveOutlinedIcon />;\r\n    case 'all':\r\n      return <GroupOutlinedIcon />;\r\n    case 'frequent':\r\n      return <AutorenewOutlinedIcon />;\r\n    case 'priority':\r\n      return <LabelImportantIcon />;\r\n    case 'scheduled':\r\n      return <ScheduleOutlinedIcon />;\r\n    case 'today':\r\n      return <TodayOutlinedIcon />;\r\n    case 'completed':\r\n      return <CheckCircleOutlinedIcon />;\r\n    case 'deleted':\r\n      return <DeleteOutlineIcon />;\r\n    default:\r\n      return <PersonOutlinedIcon />;\r\n  }\r\n};\r\n\r\nconst AppsSideBarFolderItem = ({item, path}) => {\r\n  return (\r\n    <AppsSideBarFolderList\r\n      button\r\n      key={item.id}\r\n      to={path}\r\n      component={AppNavLink}\r\n      activeClassName='active'\r\n    >\r\n      <ListItemIcon\r\n        sx={{\r\n          minWidth: 10,\r\n          mr: 3.5,\r\n          '& .material-icons, & svg': {\r\n            fontSize: 22,\r\n            color: (theme) => theme.palette.text.secondary,\r\n          },\r\n        }}\r\n      >\r\n        {getIconByName(item.alias)}\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={item.name}\r\n        sx={{\r\n          my: 0,\r\n          '& .MuiTypography-body1': {\r\n            fontSize: 14,\r\n            mb: 0.5,\r\n          },\r\n        }}\r\n        className='list-item-text'\r\n      />\r\n    </AppsSideBarFolderList>\r\n  );\r\n};\r\n\r\nexport default AppsSideBarFolderItem;\r\nAppsSideBarFolderItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst SidebarItem = () => (\r\n  <ContentLoader viewBox='0 0 200 45'>\r\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\r\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\r\n  </ContentLoader>\r\n);\r\nconst SidebarListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SidebarListSkeleton;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\n\nexports.default = _default;","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const MailDetailSkeleton = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    backgroundColor='#f3f3f3'\r\n    height={600}\r\n    foregroundColor='#ecebeb'\r\n    {...props}\r\n  >\r\n    <rect x='100' y='35' rx='3' ry='3' width='188' height='12' />\r\n    <rect x='100' y='55' rx='3' ry='3' width='152' height='10' />\r\n    <rect x='105' y='106' rx='3' ry='3' width='510' height='8' />\r\n    <rect x='105' y='132' rx='3' ry='3' width='480' height='8' />\r\n    <rect x='105' y='158' rx='3' ry='3' width='510' height='8' />\r\n    <rect x='105' y='178' rx='3' ry='3' width='478' height='8' />\r\n    <rect x='105' y='198' rx='3' ry='3' width='510' height='8' />\r\n    <rect x='105' y='218' rx='3' ry='3' width='478' height='8' />\r\n    <circle cx='50' cy='50' r='25' />\r\n  </ContentLoader>\r\n);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\"\n}), 'DateRangeOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM8 11H4V6h4v5zm6 0h-4V6h4v5zm6 0h-4V6h4v5zM8 18H4v-5h4v5zm6 0h-4v-5h4v5zm6 0h-4v-5h4v5z\"\n}), 'CalendarViewMonthOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zm0 6H5v-4h14v4zm0-16H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 6H5V5h14v4z\"\n}), 'ViewAgendaOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNew');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport {Form} from 'formik';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Divider from '@mui/material/Divider';\r\nimport Button from '@mui/material/Button';\r\nimport {useSelector} from 'react-redux';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppTextField from '@crema/core/AppFormComponents/AppTextField';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst StyledDivider = styled(Divider)(({theme}) => ({\r\n  marginTop: 20,\r\n  marginBottom: 20,\r\n  [theme.breakpoints.up('xl')]: {\r\n    marginTop: 32,\r\n    marginBottom: 32,\r\n  },\r\n}));\r\nconst AddTaskForm = (props) => {\r\n  const {values, setFieldValue, isSubmitting, setTaskLabels, taskLabels} =\r\n    props;\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const priorityList = useSelector(({todoApp}) => todoApp.priorityList);\r\n\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  const inputLabel = React.useRef(null);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Form\r\n      style={{\r\n        width: '100%',\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <div>\r\n        <AppTextField\r\n          sx={{\r\n            width: '100%',\r\n            fontWeight: Fonts.LIGHT,\r\n            marginBottom: 5,\r\n          }}\r\n          variant='outlined'\r\n          label={<IntlMessages id='todo.taskTitle' />}\r\n          name='title'\r\n        />\r\n\r\n        <Box mb={5}>\r\n          <AppGridContainer spacing={5}>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <FormControl\r\n                sx={{\r\n                  width: '100%',\r\n\r\n                  '& .MuiOutlinedInput-input': {\r\n                    paddingTop: 2,\r\n                    paddingBottom: 1.5,\r\n                    minHeight: 42,\r\n                  },\r\n                }}\r\n                variant='outlined'\r\n              >\r\n                <InputLabel\r\n                  ref={inputLabel}\r\n                  id='assigned-to-select-outlined-label'\r\n                >\r\n                  <IntlMessages id='common.staff' />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId='assigned-to-select-outlined-label'\r\n                  name='assignedTo'\r\n                  label={<IntlMessages id='common.staff' />}\r\n                  onChange={(event) =>\r\n                    setFieldValue('assignedTo', event.target.value)\r\n                  }\r\n                  sx={{\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                  {staffList.map((staff) => {\r\n                    return (\r\n                      <MenuItem\r\n                        value={staff.id}\r\n                        key={staff.id}\r\n                        sx={{\r\n                          cursor: 'pointer',\r\n                          inputVariant: 'outlined',\r\n                        }}\r\n                      >\r\n                        <Box display='flex' alignItems='center'>\r\n                          {staff.image ? (\r\n                            <Avatar\r\n                              sx={{\r\n                                marginRight: 2,\r\n                              }}\r\n                              src={staff.image}\r\n                            />\r\n                          ) : (\r\n                            <Avatar\r\n                              sx={{\r\n                                marginRight: 2,\r\n                              }}\r\n                            >\r\n                              {staff.name.toUpperCase()}\r\n                            </Avatar>\r\n                          )}\r\n                          <span>{staff.name}</span>\r\n                        </Box>\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Box width={1}>\r\n                <DatePicker\r\n                  autoOk\r\n                  format='YYYY/MM/DD'\r\n                  variant='inline'\r\n                  inputVariant='outlined'\r\n                  label={<IntlMessages id='common.startDate' />}\r\n                  name='date'\r\n                  value={values.date}\r\n                  renderInput={(params) => <TextField {...params} />}\r\n                  onChange={(value) => setFieldValue('date', value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <FormControl\r\n                sx={{\r\n                  width: '100%',\r\n                }}\r\n                variant='outlined'\r\n              >\r\n                <InputLabel\r\n                  ref={inputLabel}\r\n                  id='demo-simple-select-outlined-label'\r\n                >\r\n                  <IntlMessages id='common.priority' />\r\n                </InputLabel>\r\n                <Select label='priority' name='priority'>\r\n                  {priorityList.map((priority) => {\r\n                    return (\r\n                      <MenuItem\r\n                        value={priority.type}\r\n                        key={priority.id}\r\n                        sx={{\r\n                          cursor: 'pointer',\r\n                          inputVariant: 'outlined',\r\n                        }}\r\n                      >\r\n                        {priority.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Autocomplete\r\n                multiple\r\n                id='tags-outlined'\r\n                options={labelList}\r\n                getOptionLabel={(option) => option.name}\r\n                value={taskLabels}\r\n                onChange={(event, value) => setTaskLabels(value)}\r\n                filterSelectedOptions\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant='outlined'\r\n                    label={<IntlMessages id='common.label' />}\r\n                    fullWidth\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </Box>\r\n\r\n        <Box mb={5}>\r\n          <AppTextField\r\n            name='content'\r\n            multiline\r\n            sx={{\r\n              width: '100%',\r\n              backgroundColor: 'background.paper',\r\n              color: 'text.primary',\r\n            }}\r\n            rows='6'\r\n            variant='outlined'\r\n            placeholder={messages['common.description']}\r\n          />\r\n        </Box>\r\n\r\n        <StyledDivider />\r\n      </div>\r\n      <div style={{textAlign: 'right'}}>\r\n        <Button\r\n          sx={{\r\n            position: 'relative',\r\n            minWidth: 100,\r\n          }}\r\n          color='primary'\r\n          variant='outlined'\r\n          disabled={isSubmitting}\r\n          type='submit'\r\n        >\r\n          <IntlMessages id='common.save' />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n\r\nAddTaskForm.defaultProps = {\r\n  isSubmitting: false,\r\n};\r\n\r\nAddTaskForm.propTypes = {\r\n  values: PropTypes.object.isRequired,\r\n  taskLabels: PropTypes.array.isRequired,\r\n  setTaskLabels: PropTypes.func,\r\n  setFieldValue: PropTypes.func,\r\n  isSubmitting: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {onCreateTask} from '../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport PropTypes from 'prop-types';\r\nimport AppDialog from '@crema/core/AppDialog';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string().required(<IntlMessages id='validation.titleRequired' />),\r\n});\r\n\r\nconst AddNewTask = ({isAddTaskOpen, onCloseAddTask, selectedDate}) => {\r\n  console.log('selectedDate: ', selectedDate);\r\n  const dispatch = useDispatch();\r\n\r\n  const {user} = useAuthUser();\r\n\r\n  const [taskLabels, setTaskLabels] = useState([]);\r\n\r\n  return (\r\n    <AppDialog\r\n      dividers\r\n      maxWidth='md'\r\n      open={isAddTaskOpen}\r\n      onClose={() => onCloseAddTask()}\r\n      title={<IntlMessages id='todo.addNewTask' />}\r\n    >\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          title: '',\r\n          assignedTo: '',\r\n          label: [],\r\n          priority: 3,\r\n          date: selectedDate\r\n            ? moment(selectedDate).format('MM/DD/YYYY')\r\n            : moment().format('MM/DD/YYYY'),\r\n          content: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n          setSubmitting(true);\r\n          const newTask = {\r\n            id: Math.floor(Math.random() * 1000000),\r\n            isStarred: false,\r\n            isAttachment: false,\r\n            isRead: true,\r\n            folderValue: 120,\r\n            createdBy: {\r\n              name: user.displayName ? user.displayName : 'User',\r\n              image: user.photoURL,\r\n            },\r\n            startDate: moment(data.date).format('lll'),\r\n            image: '/assets/images/dummy2.jpg',\r\n            createdOn: moment().format('ll'),\r\n            status: 1,\r\n            comments: [],\r\n            ...data,\r\n            label: taskLabels,\r\n          };\r\n          console.log('newTask:***********', newTask);\r\n          dispatch(onCreateTask(newTask));\r\n          onCloseAddTask();\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        {({isSubmitting, values, setFieldValue}) => (\r\n          <AddTaskForm\r\n            isSubmitting={isSubmitting}\r\n            values={values}\r\n            setFieldValue={setFieldValue}\r\n            setTaskLabels={setTaskLabels}\r\n            taskLabels={taskLabels}\r\n          />\r\n        )}\r\n      </Formik>\r\n    </AppDialog>\r\n  );\r\n};\r\n\r\nexport default AddNewTask;\r\n\r\nAddNewTask.propTypes = {\r\n  isAddTaskOpen: PropTypes.bool.isRequired,\r\n  onCloseAddTask: PropTypes.func.isRequired,\r\n  selectedDate: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {AppNavLink} from '@crema';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport {alpha, styled} from '@mui/material/styles';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst StyledListItem = styled(ListItem)(({theme}) => ({\r\n  paddingTop: 5,\r\n  paddingBottom: 5,\r\n  paddingLeft: 16,\r\n  paddingRight: 16,\r\n  borderRadius: '0 30px 30px 0',\r\n  marginBottom: 1,\r\n  marginTop: 1,\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n  },\r\n  [theme.breakpoints.up('lg')]: {\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n  },\r\n\r\n  '& .MuiSvgIcon-root': {\r\n    marginRight: 14,\r\n    fontSize: 20,\r\n  },\r\n\r\n  '&:hover,&:focus,&.active': {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  '&.active': {\r\n    color: theme.palette.primary.main,\r\n    '& $listItemText': {\r\n      '& .MuiTypography-body1': {\r\n        fontWeight: Fonts.SEMI_BOLD,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst LabelItem = ({label}) => {\r\n  return (\r\n    <StyledListItem\r\n      button\r\n      key={label.id}\r\n      to={`/apps/todo/label/${label.alias}`}\r\n      component={AppNavLink}\r\n      activeClassName='active'\r\n    >\r\n      <LabelOutlinedIcon style={{color: `${label.color}`}} />\r\n\r\n      <ListItemText\r\n        sx={{\r\n          '& .MuiTypography-body1': {\r\n            fontSize: 14,\r\n          },\r\n        }}\r\n        primary={label.name}\r\n      />\r\n    </StyledListItem>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.propTypes = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport {useSelector} from 'react-redux';\r\nimport AddNewTask from '../AddNewTask';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport AppsSideBarFolderItem from '@crema/core/AppsSideBarFolderItem';\r\nimport LabelItem from './LabelItem';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '@crema/core/AppSkeleton/SidebarListSkeleton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {Zoom} from '@mui/material';\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst ListWrapper = styled(List)(({theme}) => ({\r\n  marginBottom: 8,\r\n  [theme.breakpoints.up('xl')]: {\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nconst TaskSideBar = () => {\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const folderList = useSelector(({todoApp}) => todoApp.folderList);\r\n\r\n  const [isAddTaskOpen, setAddTaskOpen] = React.useState(false);\r\n\r\n  const onOpenAddTask = () => {\r\n    setAddTaskOpen(true);\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{px: {xs: 4, md: 5}, pt: {xs: 4, md: 5}, pb: 2.5}}>\r\n        <Zoom in style={{transitionDelay: '300ms'}}>\r\n          <Button\r\n            variant='outlined'\r\n            color='primary'\r\n            sx={{\r\n              padding: '8px 28px',\r\n              borderRadius: 30,\r\n              '& .MuiSvgIcon-root': {\r\n                fontSize: 26,\r\n              },\r\n            }}\r\n            startIcon={<AddIcon />}\r\n            onClick={onOpenAddTask}\r\n          >\r\n            <IntlMessages id='todo.addNewTask' />\r\n          </Button>\r\n        </Zoom>\r\n      </Box>\r\n      <AppScrollbar\r\n        sx={{\r\n          height: 'calc(100% - 76px)',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            pr: 4,\r\n            pb: {xs: 4, md: 5, lg: 6.2},\r\n          }}\r\n        >\r\n          <ListWrapper component='nav' aria-label='main task folders'>\r\n            <AppList\r\n              data={folderList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={\r\n                    <Box px={{xs: 4, md: 5, lg: 6.2}}>\r\n                      <SidebarPlaceholder />\r\n                    </Box>\r\n                  }\r\n                />\r\n              }\r\n              renderRow={(item) => (\r\n                <AppsSideBarFolderItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  path={`/apps/todo/${item.alias}`}\r\n                />\r\n              )}\r\n            />\r\n          </ListWrapper>\r\n\r\n          <Box\r\n            component='h4'\r\n            mt={{xs: 4, xl: 5}}\r\n            px={{xs: 4, md: 5, lg: 6.2}}\r\n            fontWeight={Fonts.SEMI_BOLD}\r\n          >\r\n            Labels\r\n          </Box>\r\n\r\n          <List component='nav' aria-label='main mailbox folders'>\r\n            <AppList\r\n              data={labelList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={\r\n                    <Box px={{xs: 4, md: 5, lg: 6.2}}>\r\n                      <SidebarPlaceholder />\r\n                    </Box>\r\n                  }\r\n                />\r\n              }\r\n              renderRow={(label) => <LabelItem key={label.id} label={label} />}\r\n            />\r\n          </List>\r\n        </Box>\r\n      </AppScrollbar>\r\n      <AddNewTask\r\n        isAddTaskOpen={isAddTaskOpen}\r\n        onCloseAddTask={onCloseAddTask}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskSideBar;\r\n","import {alpha, Box} from '@mui/material';\r\nimport {styled} from '@mui/material/styles';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport const StyledSelect = styled(Select)(({theme}) => ({\r\n  maxWidth: 100,\r\n  cursor: 'pointer',\r\n  width: 'auto',\r\n  '& .MuiOutlinedInput-input': {\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  },\r\n  '& .MuiSelect-select': {\r\n    paddingLeft: 10,\r\n    '&:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: 'transparent',\r\n  },\r\n  '&:hover': {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'transparent',\r\n    },\r\n  },\r\n  '&.Mui-focused': {\r\n    backgroundColor: alpha(theme.palette.common.black, 0.03),\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'transparent',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const StyledBox = styled(Box)(({theme}) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  [theme.breakpoints.up('sm')]: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n}));\r\n","import React, {useEffect, useState} from 'react';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Box from '@mui/material/Box';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {StyledSelect} from './index.style';\r\n\r\nconst SelectTasksDropdown = ({checkedTasks, onSelectTasks}) => {\r\n  const [selectedItems, setSelectedItems] = useState(1);\r\n  useEffect(() => {\r\n    if (checkedTasks.length === 0) setSelectedItems(1);\r\n  }, [checkedTasks]);\r\n  const onChangeSelectValue = (event) => {\r\n    setSelectedItems(event.target.value);\r\n    onSelectTasks(event.target.value);\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mr: {xs: 2, xl: 4},\r\n      }}\r\n      component='span'\r\n    >\r\n      <StyledSelect value={selectedItems} onChange={onChangeSelectValue}>\r\n        <MenuItem\r\n          value={1}\r\n          sx={{\r\n            padding: 2,\r\n            cursor: 'pointer',\r\n            minHeight: 'auto',\r\n          }}\r\n        >\r\n          {messages['common.none']}\r\n        </MenuItem>\r\n        <MenuItem\r\n          value={0}\r\n          sx={{\r\n            padding: 2,\r\n            cursor: 'pointer',\r\n            minHeight: 'auto',\r\n          }}\r\n        >\r\n          {messages['common.all']}\r\n        </MenuItem>\r\n        <MenuItem\r\n          value={2}\r\n          sx={{\r\n            padding: 2,\r\n            cursor: 'pointer',\r\n            minHeight: 'auto',\r\n          }}\r\n        >\r\n          {messages['common.starred']}\r\n        </MenuItem>\r\n        <MenuItem\r\n          value={3}\r\n          sx={{\r\n            padding: 2,\r\n            cursor: 'pointer',\r\n            minHeight: 'auto',\r\n          }}\r\n        >\r\n          {messages['common.attachments']}\r\n        </MenuItem>\r\n      </StyledSelect>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SelectTasksDropdown;\r\n\r\nSelectTasksDropdown.propTypes = {\r\n  onSelectTasks: PropTypes.func,\r\n  checkedTasks: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Box from '@mui/material/Box';\r\nimport {\r\n  onDeleteSelectedTasks,\r\n  onUpdateTaskLabels,\r\n} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AppsDeleteIcon from '@crema/core/AppsDeleteIcon';\r\nimport PropTypes from 'prop-types';\r\nimport {useParams} from 'react-router-dom';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\nimport {StyledBox} from './index.style';\r\n\r\nconst CheckedTasksActions = ({checkedTasks, setCheckedTasks, page}) => {\r\n  const {folder, label} = useParams();\r\n  const dispatch = useDispatch();\r\n  const [isLabelOpen, onOpenLabel] = React.useState(null);\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const onLabelOpen = (event) => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onDeleteTasks = () => {\r\n    if (folder)\r\n      dispatch(onDeleteSelectedTasks(checkedTasks, 'folder', folder, page));\r\n    if (label)\r\n      dispatch(onDeleteSelectedTasks(checkedTasks, 'label', label, page));\r\n\r\n    setCheckedTasks([]);\r\n  };\r\n\r\n  const onSelectLabel = (event) => {\r\n    const labelType = event.target.value;\r\n    dispatch(onUpdateTaskLabels(checkedTasks, labelType));\r\n    setCheckedTasks([]);\r\n    onLabelClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledBox component='span'>\r\n        <Box component='span'>\r\n          <AppsDeleteIcon\r\n            deleteAction={onDeleteTasks}\r\n            deleteTitle={<IntlMessages id='todo.deleteMessage' />}\r\n            sx={{\r\n              cursor: 'pointer',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </Box>\r\n\r\n        <Box component='span'>\r\n          <AppTooltip title={<IntlMessages id='common.label' />}>\r\n            <IconButton\r\n              sx={{\r\n                color: 'text.disabled',\r\n              }}\r\n              size='large'\r\n            >\r\n              <LabelOutlinedIcon\r\n                sx={{\r\n                  cursor: 'pointer',\r\n                  color: 'text.disabled',\r\n                  display: 'block',\r\n                }}\r\n                value={1}\r\n                onClick={onLabelOpen}\r\n              />\r\n            </IconButton>\r\n          </AppTooltip>\r\n        </Box>\r\n      </StyledBox>\r\n      <Menu\r\n        anchorEl={isLabelOpen}\r\n        open={Boolean(isLabelOpen)}\r\n        onClose={onLabelClose}\r\n      >\r\n        {labelList.map((label) => {\r\n          return (\r\n            <MenuItem\r\n              key={label.id}\r\n              sx={{p: '8px !important'}}\r\n              value={label.id}\r\n              onClick={onSelectLabel}\r\n            >\r\n              {label.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckedTasksActions;\r\n\r\nCheckedTasksActions.propTypes = {\r\n  checkedTasks: PropTypes.array.isRequired,\r\n  setCheckedTasks: PropTypes.func,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport clsx from 'clsx';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {styled} from '@mui/material/styles';\r\nimport {alpha} from '@mui/material';\r\nimport {ViewMode} from '../index';\r\n\r\nconst IconBtn = styled(IconButton)(({theme}) => {\r\n  return {\r\n    color: theme.palette.text.disabled,\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n    padding: 8,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nconst ViewSelectButtons = ({viewMode, onViewModeSelect}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        ml: 'auto',\r\n      }}\r\n    >\r\n      <Box>\r\n        <IconBtn\r\n          className={clsx({\r\n            active: viewMode === ViewMode.List,\r\n          })}\r\n          onClick={() => onViewModeSelect(ViewMode.List)}\r\n          size='large'\r\n        >\r\n          <ListIcon />\r\n        </IconBtn>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          ml: 3.5,\r\n        }}\r\n      >\r\n        <IconBtn\r\n          className={clsx({\r\n            active: viewMode === ViewMode.Calendar,\r\n          })}\r\n          onClick={() => onViewModeSelect(ViewMode.Calendar)}\r\n          size='large'\r\n        >\r\n          <DateRangeOutlinedIcon />\r\n        </IconBtn>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ViewSelectButtons;\r\n\r\nViewSelectButtons.propTypes = {\r\n  viewMode: PropTypes.string.isRequired,\r\n  onViewModeSelect: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox/index';\r\nimport {useSelector} from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport {useIntl} from 'react-intl';\r\nimport AppSearchBar from '@crema/core/AppSearchBar';\r\nimport PropTypes from 'prop-types';\r\nimport SelectTasksDropdown from './SelectTasksDropdown';\r\nimport CheckedTasksActions from './CheckedTasksActions';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport ViewSelectButtons from './ViewSelectButtons';\r\n\r\nconst TaskContentHeader = (props) => {\r\n  const {\r\n    checkedTasks,\r\n    setCheckedTasks,\r\n    onViewModeSelect,\r\n    filterText,\r\n    viewMode,\r\n    onSetFilterText,\r\n    onPageChange,\r\n    page,\r\n  } = props;\r\n\r\n  const taskList = useSelector(({todoApp}) => todoApp.taskList);\r\n\r\n  const totalTasks = useSelector(({todoApp}) => todoApp.totalTasks);\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const taskIds = taskList.map((task) => task.id);\r\n      setCheckedTasks(taskIds);\r\n    } else {\r\n      setCheckedTasks([]);\r\n    }\r\n  };\r\n\r\n  const onSelectTasks = (value) => {\r\n    switch (value) {\r\n      case 0:\r\n        setCheckedTasks(taskList.map((task) => task.id));\r\n        break;\r\n      case 1:\r\n        setCheckedTasks([]);\r\n        break;\r\n\r\n      case 2:\r\n        setCheckedTasks(\r\n          taskList.filter((task) => task.isStarred).map((task) => task.id),\r\n        );\r\n        break;\r\n\r\n      case 3:\r\n        setCheckedTasks(\r\n          taskList.filter((task) => task.isAttachment).map((task) => task.id),\r\n        );\r\n        break;\r\n\r\n      default:\r\n        setCheckedTasks([]);\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          flex: 1,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <span>\r\n          <Checkbox\r\n            sx={{\r\n              color: 'text.disabled',\r\n            }}\r\n            indeterminate={\r\n              checkedTasks.length > 0 && checkedTasks.length < taskList.length\r\n            }\r\n            checked={\r\n              taskList.length > 0 && checkedTasks.length === taskList.length\r\n            }\r\n            onChange={onHandleMasterCheckbox}\r\n          />\r\n        </span>\r\n        <Box sx={{mr: 3}}>\r\n          <AppSearchBar\r\n            iconPosition='right'\r\n            overlap={false}\r\n            value={filterText}\r\n            onChange={(event) => onSetFilterText(event.target.value)}\r\n            placeholder={messages['common.searchHere']}\r\n          />\r\n        </Box>\r\n        <SelectTasksDropdown\r\n          onSelectTasks={onSelectTasks}\r\n          checkedTasks={checkedTasks}\r\n        />\r\n        {checkedTasks.length > 0 ? (\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mr: {sm: 4},\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <CheckedTasksActions\r\n              checkedTasks={checkedTasks}\r\n              setCheckedTasks={setCheckedTasks}\r\n              page={page}\r\n            />\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          mr: {xs: 3, xl: 4},\r\n        }}\r\n      >\r\n        <ViewSelectButtons\r\n          viewMode={viewMode}\r\n          onViewModeSelect={onViewModeSelect}\r\n        />\r\n      </Box>\r\n\r\n      <Hidden smDown>\r\n        {taskList.length > 0 ? (\r\n          <AppsPagination\r\n            sx={{\r\n              paddingRight: 2,\r\n              paddingLeft: 2,\r\n              '& .MuiToolbar-root': {\r\n                paddingLeft: 0,\r\n              },\r\n              '& .MuiTablePagination-actions': {\r\n                marginLeft: 0,\r\n                '& .MuiButtonBase-root': {\r\n                  padding: 2,\r\n                },\r\n              },\r\n            }}\r\n            count={totalTasks}\r\n            page={page}\r\n            onPageChange={onPageChange}\r\n          />\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskContentHeader;\r\n\r\nTaskContentHeader.defaultProps = {\r\n  checkedTasks: [],\r\n  filterText: '',\r\n  page: 0,\r\n};\r\n\r\nTaskContentHeader.propTypes = {\r\n  checkedTasks: PropTypes.array,\r\n  setCheckedTasks: PropTypes.func,\r\n  viewMode: PropTypes.string,\r\n  onViewModeSelect: PropTypes.func,\r\n  filterText: PropTypes.string,\r\n  onSetFilterText: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport Box from '@mui/material/Box';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\n\r\nconst Labels = ({labels}) => {\r\n  return (\r\n    <Box\r\n      className='labelIcon'\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {labels.map((label) => {\r\n        return (\r\n          <AppTooltip title={label.name} placement='top' key={label.id}>\r\n            <LabelOutlinedIcon\r\n              sx={{\r\n                color: `${label.color}`,\r\n                marginRight: 2.5,\r\n                display: 'block',\r\n              }}\r\n            />\r\n          </AppTooltip>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Labels;\r\n\r\nLabels.propTypes = {\r\n  labels: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport {alpha} from '@mui/material';\r\n\r\nconst Priority = ({priority}) => {\r\n  return (\r\n    <Box\r\n      component='span'\r\n      sx={{\r\n        px: 3,\r\n        py: 1,\r\n        color: priority.color,\r\n        borderRadius: '30px',\r\n        fontSize: 12,\r\n        fontWeight: Fonts.SEMI_BOLD,\r\n        bgcolor: alpha(priority.color, 0.1),\r\n      }}\r\n    >\r\n      {priority.name}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Priority;\r\n\r\nPriority.propTypes = {\r\n  priority: PropTypes.object.isRequired,\r\n};\r\n","import {alpha, Box, ListItem} from '@mui/material';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nexport const StyledListItem = styled(ListItem)(({theme}) => ({\r\n  padding: '4px 20px 4px 10px',\r\n  overflow: 'hidden',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  flexDirection: 'row',\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n  [theme.breakpoints.up('sm')]: {\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  '&.checked': {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n    boxShadow: `0 3px 5px 0 ${alpha(theme.palette.common.black, 0.08)}`,\r\n  },\r\n  '& .labelIcon': {\r\n    transform: 'translateX(60px)',\r\n    transition: 'all 0.5s ease',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  '& .labelAction': {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.disabled,\r\n    transition: 'all 0.5s ease',\r\n    transform: 'translateX(80px)',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    '& .MuiSvgIcon-root': {\r\n      marginLeft: 10,\r\n    },\r\n  },\r\n  '&:hover': {\r\n    '& .labelIcon': {\r\n      transform: 'translateX(0px)',\r\n      opacity: 0,\r\n      visibility: 'hidden',\r\n    },\r\n    '& .labelAction': {\r\n      transform: 'translateX(0px)',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n    },\r\n    '& .task-list-schedule': {\r\n      transform: 'translateX(0px)',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const TaskInfoWrapper = styled(Box)(({theme}) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  width: '90%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: '50%',\r\n  },\r\n}));\r\n\r\nexport const ActionWrapper = styled(Box)(({theme}) => ({\r\n  display: 'flex',\r\n  borderRadius: theme.cardRadius,\r\n  width: '100%',\r\n  cursor: 'pointer',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  pl: {sm: 3},\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: '50%',\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport {Checkbox, Hidden} from '@mui/material';\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Labels from './Labels';\r\nimport Priority from './Priority';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport {ActionWrapper, StyledListItem, TaskInfoWrapper} from './index.style';\r\n\r\nconst TaskListItem = ({\r\n  task,\r\n  onChangeCheckedTasks,\r\n  checkedTasks,\r\n  onChangeStarred,\r\n  onDeleteTask,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const {folder, label} = useParams();\r\n\r\n  const onViewTaskDetail = (task) => {\r\n    if (folder) navigate(`/apps/todo/${folder}/${task.id}`);\r\n    if (label) navigate(`/apps/todo/label/${label}/${task.id}`);\r\n  };\r\n\r\n  return (\r\n    <StyledListItem\r\n      dense\r\n      button\r\n      key={task.id}\r\n      className={clsx('item-hover', {\r\n        checked: checkedTasks.includes(task.id),\r\n      })}\r\n      onClick={() => onViewTaskDetail(task)}\r\n    >\r\n      <TaskInfoWrapper>\r\n        <span onClick={(event) => event.stopPropagation()}>\r\n          <Checkbox\r\n            sx={{\r\n              color: 'text.disabled',\r\n            }}\r\n            checked={checkedTasks.includes(task.id)}\r\n            onChange={(event) => onChangeCheckedTasks(event, task.id)}\r\n            color='primary'\r\n          />\r\n        </span>\r\n\r\n        <Box\r\n          mr={2.5}\r\n          component='span'\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          <AppsStarredIcon item={task} onChange={onChangeStarred} />\r\n        </Box>\r\n        <Box mr={3.5}>\r\n          <Avatar\r\n            sx={{\r\n              width: 36,\r\n              height: 36,\r\n            }}\r\n            src={task.assignedTo.image}\r\n            alt={task.assignedTo.name}\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            mr: 3,\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n          }}\r\n        >\r\n          {task.title}\r\n        </Box>\r\n\r\n        <Hidden mdDown>\r\n          <Priority priority={task.priority} />\r\n        </Hidden>\r\n      </TaskInfoWrapper>\r\n\r\n      <ActionWrapper>\r\n        <Hidden mdDown>\r\n          <Labels labels={task.label} />\r\n        </Hidden>\r\n\r\n        <Box\r\n          className='task-list-schedule'\r\n          component='span'\r\n          sx={{\r\n            ml: 2,\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            transition: 'all 0.5s ease',\r\n            transform: 'translateX(60px)',\r\n          }}\r\n        >\r\n          <IntlMessages id='todo.scheduleFor' /> {task.startDate}\r\n        </Box>\r\n        <Box className='labelAction'>\r\n          <LabelOutlinedIcon onClick={(e) => e.stopPropagation()} />\r\n          <DeleteOutlinedIcon\r\n            onClick={(e) => {\r\n              onDeleteTask(task);\r\n              e.stopPropagation();\r\n            }}\r\n          />\r\n        </Box>\r\n      </ActionWrapper>\r\n    </StyledListItem>\r\n  );\r\n};\r\n\r\nexport default TaskListItem;\r\n\r\nTaskListItem.defaultProps = {\r\n  checkedTasks: [],\r\n};\r\n\r\nTaskListItem.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  onChangeCheckedTasks: PropTypes.func,\r\n  onDeleteTask: PropTypes.func,\r\n  checkedTasks: PropTypes.array,\r\n  match: PropTypes.object,\r\n  onChangeStarred: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const TodoItem = (props) => (\r\n  <ContentLoader viewBox='0 0 400 25' {...props}>\r\n    <rect height='10' rx='0' ry='0' width='10' x='10' y='10' />\r\n    <rect height='10' rx='1' ry='0' width='100' x='30' y='10' />\r\n    <rect height='10' rx='5' ry='5' width='30' x='145' y='10' />\r\n    <rect height='10' rx='1' ry='0' width='150' x='215' y='10' />\r\n    <rect height='10' rx='0' ry='0' width='10' x='370' y='10' />\r\n    <circle cx='390' cy='15' r='5' />\r\n  </ContentLoader>\r\n);\r\nconst TodoListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoListSkeleton;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {alpha} from '@mui/material';\r\n\r\nconst Priority = ({priority}) => {\r\n  return (\r\n    <Box\r\n      component='span'\r\n      px={3}\r\n      py={1}\r\n      color={priority.color}\r\n      borderRadius={'30px'}\r\n      fontSize={12}\r\n      display='inline-block'\r\n      bgcolor={alpha(priority.color, 0.1)}\r\n    >\r\n      {priority.name}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Priority;\r\n\r\nPriority.propTypes = {\r\n  priority: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Priority from './Priority';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport {alpha} from '@mui/material';\r\nimport {styled} from '@mui/material/styles';\r\nimport moment from 'moment';\r\n\r\nconst StyledListItem = styled(ListItem)(({theme}) => ({\r\n  padding: '8px 20px 4px 20px',\r\n  overflow: 'hidden',\r\n  display: 'flex',\r\n  alignItems: 'flex-start',\r\n  cursor: 'pointer',\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n  [theme.breakpoints.up('sm')]: {\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  '&.checked': {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n    boxShadow: `0 3px 5px 0 ${alpha(theme.palette.common.black, 0.08)}`,\r\n  },\r\n  '& .labelIcon': {\r\n    transform: 'translateX(60px)',\r\n    transition: 'all 0.5s ease',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst UserInfoWrapper = styled('div')(({theme}) => ({\r\n  display: 'flex',\r\n  alignItems: 'flex-start',\r\n  width: '80%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: '75%',\r\n  },\r\n}));\r\nconst TaskActionView = styled(Box)(({theme}) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  width: '20%',\r\n  paddingLeft: 12,\r\n\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: '25%',\r\n  },\r\n}));\r\n\r\nconst TaskListItemMobile = ({task, checkedTasks, onChangeStarred}) => {\r\n  const navigate = useNavigate();\r\n  const {folder, label} = useParams();\r\n\r\n  const onViewTaskDetail = (task) => {\r\n    if (folder) navigate(`/apps/todo/${folder}/${task.id}`);\r\n    if (label) navigate(`/apps/todo/label/${label}/${task.id}`);\r\n  };\r\n\r\n  return (\r\n    <StyledListItem\r\n      dense\r\n      button\r\n      key={task.id}\r\n      className={clsx('item-hover', {\r\n        checked: checkedTasks.includes(task.id),\r\n      })}\r\n      onClick={() => onViewTaskDetail(task)}\r\n    >\r\n      <UserInfoWrapper>\r\n        <Box mr={3.5} mt={1}>\r\n          <Avatar\r\n            sx={{\r\n              width: 36,\r\n              height: 36,\r\n            }}\r\n            src={task.assignedTo.image}\r\n            alt={task.assignedTo.name}\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            position: 'relative',\r\n            overflow: 'hidden',\r\n          }}\r\n        >\r\n          <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n            <Box\r\n              sx={{\r\n                mb: 1.5,\r\n                mr: 1.5,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n              component='p'\r\n            >\r\n              {task.title}\r\n            </Box>\r\n\r\n            <Priority priority={task.priority} />\r\n          </Box>\r\n\r\n          <Typography\r\n            sx={{\r\n              color: 'text.secondary',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {task.content}\r\n          </Typography>\r\n        </Box>\r\n      </UserInfoWrapper>\r\n\r\n      <TaskActionView>\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            color: 'text.secondary',\r\n            fontSize: 12,\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            transition: 'all 0.5s ease',\r\n          }}\r\n        >\r\n          {moment(task.startDate).format('HH:mm A')}\r\n        </Box>\r\n        <Box\r\n          mt='auto'\r\n          component='span'\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          <AppsStarredIcon item={task} onChange={onChangeStarred} />\r\n        </Box>\r\n      </TaskActionView>\r\n    </StyledListItem>\r\n  );\r\n};\r\n\r\nexport default TaskListItemMobile;\r\n\r\nTaskListItemMobile.defaultProps = {\r\n  checkedTasks: [],\r\n};\r\n\r\nTaskListItemMobile.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  checkedTasks: PropTypes.array,\r\n  match: PropTypes.object,\r\n  onChangeStarred: PropTypes.func,\r\n};\r\n","import {styled} from '@mui/material/styles';\r\nimport {Calendar} from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nexport const StyledCalendar = styled(Calendar)(({theme}) => ({\r\n  '& .rbc-event': {\r\n    minHeight: 30,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  '.rbc-overlay': {\r\n    backgroundColor: 'red',\r\n  },\r\n  '& .cr-calendar .react-daypicker-root .day.today, & .cr-calendar .react-daypicker-root .day.today:hover ':\r\n    {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  '& .rbc-event, & .rbc-event.rbc-selected': {\r\n    backgroundColor: 'transparent',\r\n  },\r\n  '& .rbc-slot-selection': {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  '& rbc-event, & .rbc-day-slot, & .rbc-background-event': {\r\n    backgroundColor: 'transparent',\r\n  },\r\n  '& .rbc-toolbar button': {\r\n    cursor: 'pointer',\r\n    color: theme.palette.text.secondary,\r\n    fontSize: '100%',\r\n    '&:hover, &:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    '&:active, &.rbc-active': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n      },\r\n    },\r\n  },\r\n  '& .cr-calendar-color .header': {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  '& .rbc-off-range-bg': {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  '& .rbc-row-segment a': {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  '& .cr-calendar table': {\r\n    color: '#a8aaad',\r\n    '& th': {\r\n      color: '#b1b5b8',\r\n    },\r\n  },\r\n  '& .cr-calendar .react-daypicker-root .day:hover:not(.empty), & .cr-calendar .react-daypicker-root .day.active':\r\n    {\r\n      backgroundColor: 'transparent',\r\n      color: '#888888',\r\n    },\r\n  '& .cr-calendar-color .react-daypicker-root .previous-month, & .cr-calendar-color .react-daypicker-root .next-month, & .cr-calendar-color .react-daypicker-root .previous-month:hover, & .cr-calendar-color .react-daypicker-root .next-month:hover':\r\n    {\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n  '& .cr-calendar-color .header .month-year': {\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  '& .cr-calendar-color table thead th': {\r\n    color: '#313541',\r\n  },\r\n  '& .rbc-today': {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  '& .rbc-show-more': {\r\n    backgroundColor: 'transparent',\r\n  },\r\n}));\r\n","import React, {useEffect, useState} from 'react';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport CalendarViewMonthOutlinedIcon from '@mui/icons-material/CalendarViewMonthOutlined';\r\nimport ViewAgendaOutlinedIcon from '@mui/icons-material/ViewAgendaOutlined';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport PropTypes from 'prop-types';\r\nimport {alpha, Box, Button, IconButton, Stack} from '@mui/material';\r\nimport AppTooltip from '../../../../../@crema/core/AppTooltip';\r\nimport {styled} from '@mui/material/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst IconBtn = styled(IconButton)(({theme}) => {\r\n  return {\r\n    color: theme.palette.text.disabled,\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n    padding: 8,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nconst CustomToolbar = (props) => {\r\n  const [viewState, setViewState] = useState('month');\r\n\r\n  function addMonths(date, months) {\r\n    const d = date.getDate();\r\n    date.setMonth(date.getMonth() + months);\r\n    if (date.getDate() !== d) {\r\n      date.setDate(0);\r\n    }\r\n    console.log(date);\r\n    return date;\r\n  }\r\n\r\n  function addWeeks(date, weeks) {\r\n    date.setDate(date.getDate() + 7 * weeks);\r\n    return date;\r\n  }\r\n\r\n  function addDays(date, days) {\r\n    date.setDate(date.getDate() + days);\r\n    console.log(date);\r\n    return date;\r\n  }\r\n  /*\r\n  const goToDayView = () => {\r\n    props.onView('day');\r\n    setViewState('day');\r\n  };*/\r\n\r\n  const goToAgenda = () => {\r\n    props.onView('agenda');\r\n    setViewState('agenda');\r\n  }; /*\r\n  const goToWeekView = () => {\r\n    props.onView('week');\r\n    setViewState('week');\r\n  };*/\r\n  const goToMonthView = () => {\r\n    props.onView('month');\r\n    setViewState('month');\r\n  };\r\n\r\n  const goToBack = () => {\r\n    if (viewState === 'month') {\r\n      props.onNavigate('prev', addMonths(props.date, -1));\r\n    } else if (viewState === 'week') {\r\n      props.onNavigate('prev', addWeeks(props.date, -1));\r\n    } else {\r\n      props.onNavigate('prev', addDays(props.date, -1));\r\n    }\r\n  };\r\n\r\n  const goToNext = () => {\r\n    if (viewState === 'month') {\r\n      props.onNavigate('next', addMonths(props.date, +1));\r\n    } else if (viewState === 'week') {\r\n      props.onNavigate('next', addWeeks(props.date, +1));\r\n    } else {\r\n      props.onNavigate('next', addDays(props.date, +1));\r\n    }\r\n  };\r\n\r\n  const goToToday = () => {\r\n    const now = new Date();\r\n    props.date.setMonth(now.getMonth());\r\n    props.date.setYear(now.getFullYear());\r\n    props.date.setDate(now.getDate());\r\n    props.onNavigate('current');\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props);\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          px: 3,\r\n          mb: 2,\r\n        }}\r\n      >\r\n        <Stack spacing={2} direction='row' sx={{alignItems: 'center'}}>\r\n          <IconBtn\r\n            className={clsx({\r\n              active: viewState === 'month',\r\n            })}\r\n          >\r\n            <AppTooltip title='Month'>\r\n              <CalendarViewMonthOutlinedIcon onClick={goToMonthView} />\r\n            </AppTooltip>\r\n          </IconBtn>\r\n          {/*<ViewWeekOutlinedIcon onClick={goToWeekView}>\r\n            week\r\n          </ViewWeekOutlinedIcon>\r\n          <CalendarViewDayOutlinedIcon onClick={goToDayView}>\r\n            day\r\n          </CalendarViewDayOutlinedIcon>*/}\r\n          <IconBtn\r\n            className={clsx({\r\n              active: viewState === 'agenda',\r\n            })}\r\n          >\r\n            <AppTooltip title='Agenda'>\r\n              <ViewAgendaOutlinedIcon onClick={goToAgenda} />\r\n            </AppTooltip>\r\n          </IconBtn>\r\n        </Stack>\r\n\r\n        <Box sx={{fontWeight: Fonts.SEMI_BOLD}}>\r\n          {moment(props.date).format('DD/MM/YYYY')}\r\n        </Box>\r\n\r\n        <Stack spacing={2} direction='row' sx={{alignItems: 'center'}}>\r\n          <IconButton>\r\n            <AppTooltip title='Next'>\r\n              <ArrowBackIosNewIcon onClick={goToBack} />\r\n            </AppTooltip>\r\n          </IconButton>\r\n          <Button\r\n            sx={{maxHeight: 36}}\r\n            size='small'\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={goToToday}\r\n          >\r\n            today\r\n          </Button>\r\n          <IconButton>\r\n            <AppTooltip title='Next'>\r\n              <ArrowForwardIosIcon onClick={goToNext} />\r\n            </AppTooltip>\r\n          </IconButton>\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomToolbar;\r\nCustomToolbar.propTypes = {\r\n  onView: PropTypes.func,\r\n  onNavigate: PropTypes.func,\r\n  date: PropTypes.string,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport AddNewTask from '../../AddNewTask';\r\nimport {StyledCalendar} from './Calendar.style';\r\nimport {Box} from '@mui/material';\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport './calendar.css';\r\nimport AppTooltip from '../../../../../@crema/core/AppTooltip';\r\nimport CustomToolbar from './CustomToolbar';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst TaskCalender = () => {\r\n  const [isAddTaskOpen, setAddTaskOpen] = useState(false);\r\n  const taskList = useSelector(({todoApp}) => todoApp.taskList);\r\n  const navigate = useNavigate();\r\n  const {folder, label} = useParams();\r\n  console.log('taskList:', taskList);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const onSelectDate = ({start}) => {\r\n    setSelectedDate(start);\r\n    setAddTaskOpen(true);\r\n  };\r\n\r\n  const onOpenAddTask = () => {\r\n    if (selectedDate) {\r\n      setAddTaskOpen(true);\r\n    } else {\r\n      setAddTaskOpen(false);\r\n    }\r\n  };\r\n\r\n  const onViewTaskDetail = (task) => {\r\n    if (folder) navigate(`/apps/todo/${folder}/${task.id}`);\r\n    if (label) navigate(`/apps/todo/label/${label}/${task.id}`);\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n  const getEvents = () => {\r\n    if (taskList?.length > 0)\r\n      return taskList.map((task) => {\r\n        return {\r\n          ...task,\r\n          title: task.title,\r\n          start: task.startDate,\r\n          end: task.startDate,\r\n          allDay: true,\r\n        };\r\n      });\r\n    return [];\r\n  };\r\n  return (\r\n    <>\r\n      <StyledCalendar\r\n        localizer={localizer}\r\n        events={getEvents()}\r\n        views={['month', 'agenda']}\r\n        tooltipAccessor={null}\r\n        showMultiDayTimes\r\n        selectable\r\n        onSelectEvent={onViewTaskDetail}\r\n        components={{\r\n          toolbar: CustomToolbar,\r\n          event: (item) => (\r\n            <AppTooltip title={item.title}>\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: item?.event?.priority?.color,\r\n                  borderRadius: 10,\r\n                  px: 2.5,\r\n                  py: 1,\r\n                  whiteSpace: 'nowrap',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                }}\r\n              >\r\n                {item.title}\r\n              </Box>\r\n            </AppTooltip>\r\n          ),\r\n        }}\r\n        popup\r\n        onSelectSlot={onSelectDate}\r\n        defaultView='month'\r\n      />\r\n\r\n      {isAddTaskOpen ? (\r\n        <AddNewTask\r\n          selectedDate={selectedDate}\r\n          onOpenAddTask={onOpenAddTask}\r\n          onCloseAddTask={onCloseAddTask}\r\n          isAddTaskOpen={isAddTaskOpen}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default TaskCalender;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onGetTaskList,\r\n  onUpdateSelectedTask,\r\n  onUpdateTaskStarredStatus,\r\n} from '../../../../redux/actions';\r\nimport TaskContentHeader from './TaskContentHeader';\r\nimport TaskListItem from './TaskListItem';\r\nimport {useParams} from 'react-router-dom';\r\nimport AddNewTask from '../AddNewTask';\r\nimport {Hidden} from '@mui/material';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsFooter from '@crema/core/AppsContainer/AppsFooter';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport TodoListSkeleton from '@crema/core/AppSkeleton/TodoListSkeleton';\r\nimport AppList from '@crema/core/AppList';\r\nimport TaskListItemMobile from './TaskListItemMobile';\r\nimport TaskCalender from './TaskCalendar';\r\n\r\nexport const ViewMode = {\r\n  List: 'list',\r\n  Calendar: 'calendar',\r\n};\r\nconst TasksList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {folder, label} = useParams();\r\n\r\n  const taskList = useSelector(({todoApp}) => todoApp.taskList);\r\n\r\n  const totalTasks = useSelector(({todoApp}) => todoApp.totalTasks);\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  const [filterText, onSetFilterText] = useState('');\r\n  const [viewMode, setViewMode] = useState(ViewMode.List);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [checkedTasks, setCheckedTasks] = useState([]);\r\n\r\n  const [isAddTaskOpen, setAddTaskOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n    if (folder) dispatch(onGetTaskList('folder', folder, page));\r\n    if (label) dispatch(onGetTaskList('label', label, page));\r\n  }, [dispatch, page, folder, label]);\r\n\r\n  const onOpenAddTask = () => {\r\n    setAddTaskOpen(true);\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n\r\n  const onPageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const onChangeCheckedTasks = (event, id) => {\r\n    if (event.target.checked) {\r\n      setCheckedTasks(checkedTasks.concat(id));\r\n    } else {\r\n      setCheckedTasks(checkedTasks.filter((taskId) => taskId !== id));\r\n    }\r\n  };\r\n\r\n  const onChangeStarred = (checked, task) => {\r\n    if (folder) dispatch(onUpdateTaskStarredStatus([task.id], checked, folder));\r\n    if (label) dispatch(onUpdateTaskStarredStatus([task.id], checked, label));\r\n  };\r\n\r\n  const onGetFilteredItems = () => {\r\n    if (filterText === '') {\r\n      return taskList;\r\n    } else {\r\n      return taskList.filter((task) =>\r\n        task.title.toUpperCase().includes(filterText.toUpperCase()),\r\n      );\r\n    }\r\n  };\r\n  const onDeleteTask = (task) => {\r\n    task.folderValue = 126;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  const list = onGetFilteredItems();\r\n\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <TaskContentHeader\r\n          checkedTasks={checkedTasks}\r\n          setCheckedTasks={setCheckedTasks}\r\n          filterText={filterText}\r\n          onSetFilterText={onSetFilterText}\r\n          viewMode={viewMode}\r\n          onViewModeSelect={setViewMode}\r\n          onPageChange={onPageChange}\r\n          page={page}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        {viewMode === ViewMode.Calendar ? (\r\n          <TaskCalender />\r\n        ) : (\r\n          <>\r\n            <Hidden smDown>\r\n              <AppList\r\n                data={list}\r\n                renderRow={(task) => (\r\n                  <TaskListItem\r\n                    key={task.id}\r\n                    task={task}\r\n                    labelList={labelList}\r\n                    onChangeCheckedTasks={onChangeCheckedTasks}\r\n                    checkedTasks={checkedTasks}\r\n                    onChangeStarred={onChangeStarred}\r\n                    onDeleteTask={onDeleteTask}\r\n                  />\r\n                )}\r\n                ListEmptyComponent={\r\n                  <ListEmptyResult\r\n                    loading={loading}\r\n                    actionTitle='Add Task'\r\n                    onAction={onOpenAddTask}\r\n                    placeholder={<TodoListSkeleton />}\r\n                  />\r\n                }\r\n              />\r\n            </Hidden>\r\n\r\n            <Hidden smUp>\r\n              <AppList\r\n                sx={{\r\n                  paddingTop: 0,\r\n                  paddingBottom: 0,\r\n                }}\r\n                data={list}\r\n                renderRow={(task) => (\r\n                  <TaskListItemMobile\r\n                    key={task.id}\r\n                    task={task}\r\n                    labelList={labelList}\r\n                    checkedTasks={checkedTasks}\r\n                    onChangeStarred={onChangeStarred}\r\n                  />\r\n                )}\r\n                ListEmptyComponent={\r\n                  <ListEmptyResult\r\n                    loading={loading}\r\n                    actionTitle='Add Task'\r\n                    onAction={onOpenAddTask}\r\n                    placeholder={<TodoListSkeleton />}\r\n                  />\r\n                }\r\n              />\r\n            </Hidden>\r\n          </>\r\n        )}\r\n      </AppsContent>\r\n\r\n      <Hidden smUp>\r\n        {taskList.length > 0 ? (\r\n          <AppsFooter>\r\n            <AppsPagination\r\n              count={totalTasks}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </AppsFooter>\r\n        ) : null}\r\n      </Hidden>\r\n\r\n      {isAddTaskOpen ? (\r\n        <AddNewTask\r\n          isAddTaskOpen={isAddTaskOpen}\r\n          onCloseAddTask={onCloseAddTask}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import React from 'react';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst StatusButton = styled(Button)(({theme}) => ({\r\n  fontSize: 12,\r\n  [theme.breakpoints.up('lg')]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledDoneIcon = styled(DoneIcon)(({theme}) => ({\r\n  marginRight: 4,\r\n  fontSize: 18,\r\n  verticalAlign: 'middle',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginRight: 8,\r\n  },\r\n}));\r\n\r\nconst StatusToggleButton = ({selectedTask}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeTaskStatus = (status) => {\r\n    const task = selectedTask;\r\n    task.status = status;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedTask.status === 3 ? (\r\n        <StatusButton\r\n          variant='contained'\r\n          color='primary'\r\n          startIcon={<StyledDoneIcon />}\r\n          onClick={() => onChangeTaskStatus(1)}\r\n        >\r\n          <IntlMessages id='todo.completed' />\r\n        </StatusButton>\r\n      ) : (\r\n        <StatusButton\r\n          variant='outlined'\r\n          color='primary'\r\n          startIcon={<StyledDoneIcon />}\r\n          onClick={() => onChangeTaskStatus(3)}\r\n        >\r\n          <IntlMessages id='todo.markAsCompleted' />\r\n        </StatusButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusToggleButton;\r\n\r\nStatusToggleButton.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport StatusToggleButton from './StatusToggleButton';\r\nimport AppsDeleteIcon from '@crema/core/AppsDeleteIcon';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\n\r\nconst TaskDetailHeader = (props) => {\r\n  const {selectedTask} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onClickBackButton = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const onChangeStarred = (checked) => {\r\n    const task = selectedTask;\r\n    task.isStarred = checked;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  const onDeleteTask = () => {\r\n    const task = selectedTask;\r\n    task.folderValue = 126;\r\n    dispatch(onUpdateSelectedTask(task));\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          cursor: 'pointer',\r\n        }}\r\n        component='span'\r\n        mr={{xs: 2, sm: 4}}\r\n        onClick={onClickBackButton}\r\n      >\r\n        <AppTooltip title={<IntlMessages id='common.back' />}>\r\n          <ArrowBackIcon\r\n            sx={{\r\n              color: 'text.secondary',\r\n            }}\r\n          />\r\n        </AppTooltip>\r\n      </Box>\r\n\r\n      <StatusToggleButton selectedTask={selectedTask} />\r\n\r\n      <Box\r\n        component='span'\r\n        sx={{\r\n          marginLeft: 'auto',\r\n          display: {xs: 'none', sm: 'block'},\r\n        }}\r\n        onChange={onChangeStarred}\r\n      >\r\n        <AppsStarredIcon item={selectedTask} />\r\n      </Box>\r\n\r\n      <AppsDeleteIcon\r\n        deleteAction={onDeleteTask}\r\n        deleteTitle={<IntlMessages id='todo.deleteMessage' />}\r\n        sx={{\r\n          color: 'text.disabled',\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDetailHeader;\r\n\r\nTaskDetailHeader.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChangeStaff = ({selectedStaff, handleStaffChange}) => {\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  return (\r\n    <FormControl\r\n      variant='outlined'\r\n      sx={{\r\n        minWidth: 100,\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <InputLabel id='selected-staff-select-outlined-label'>\r\n        <IntlMessages id='common.staff' />\r\n      </InputLabel>\r\n      <Select\r\n        labelId='selected-staff-select-outlined-label'\r\n        sx={{\r\n          cursor: 'pointer',\r\n          '& .MuiOutlinedInput-input': {\r\n            paddingBottom: 2.5,\r\n            paddingTop: 2.5,\r\n          },\r\n        }}\r\n        value={selectedStaff.id}\r\n        label={<IntlMessages id='common.staff' />}\r\n        onChange={handleStaffChange}\r\n      >\r\n        {staffList.map((staff) => {\r\n          return (\r\n            <MenuItem\r\n              value={staff.id}\r\n              key={staff.id}\r\n              sx={{\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              <Box display='flex' alignItems='center'>\r\n                {staff.image ? (\r\n                  <Avatar\r\n                    sx={{\r\n                      marginRight: 3,\r\n                      height: 36,\r\n                      width: 36,\r\n                    }}\r\n                    src={staff.image}\r\n                  />\r\n                ) : (\r\n                  <Avatar\r\n                    sx={{\r\n                      marginRight: 3,\r\n                      height: 36,\r\n                      width: 36,\r\n                    }}\r\n                  >\r\n                    {staff.name.toUpperCase()}\r\n                  </Avatar>\r\n                )}\r\n                <Box component='span'>{staff.name}</Box>\r\n              </Box>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ChangeStaff;\r\n\r\nChangeStaff.propTypes = {\r\n  selectedStaff: PropTypes.object.isRequired,\r\n  handleStaffChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\n\r\nconst AssignedStaff = ({assignedStaff}) => {\r\n  return (\r\n    <>\r\n      {assignedStaff ? (\r\n        <Box mr={4} display='flex' alignItems='center'>\r\n          {assignedStaff.image ? (\r\n            <Avatar\r\n              sx={{\r\n                height: 36,\r\n                width: 36,\r\n              }}\r\n              src={assignedStaff.image}\r\n            />\r\n          ) : (\r\n            <Avatar\r\n              sx={{\r\n                height: 36,\r\n                width: 36,\r\n              }}\r\n            >\r\n              {assignedStaff.name[0]}\r\n            </Avatar>\r\n          )}\r\n          <Box ml={3.5} fontSize={14}>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                mb: 0.5,\r\n                fontWeight: Fonts.MEDIUM,\r\n              }}\r\n            >\r\n              <IntlMessages id='todo.assignedTo' />\r\n            </Box>\r\n            <Box component='p' color='text.secondary'>\r\n              {assignedStaff.name}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box mr={4} display='flex' alignItems='center'>\r\n          <Avatar\r\n            sx={{\r\n              height: 36,\r\n              width: 36,\r\n            }}\r\n            src={'/assets/images/placeholder.jpg'}\r\n          />\r\n          <Box ml={4}>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                mb: 0,\r\n                fontWeight: Fonts.MEDIUM,\r\n                color: 'primary.main',\r\n              }}\r\n            >\r\n              <IntlMessages id='todo.currentlyUnassigned' />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignedStaff;\r\n\r\nAssignedStaff.defaultProps = {\r\n  assignedStaff: null,\r\n};\r\n\r\nAssignedStaff.propTypes = {\r\n  assignedStaff: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport moment from 'moment';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {TextField} from '@mui/material';\r\n\r\nconst AppDatePicker = ({date, setDate}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ml: {xs: 0, sm: 5},\r\n        mt: {xs: 2, sm: 0},\r\n      }}\r\n    >\r\n      <DatePicker\r\n        autoOk\r\n        format='YYYY/MM/DD'\r\n        variant='inline'\r\n        inputVariant='outlined'\r\n        label={<IntlMessages id='common.startDate' />}\r\n        name='date'\r\n        sx={{\r\n          marginTop: 0,\r\n        }}\r\n        value={date}\r\n        renderInput={(params) => <TextField {...params} />}\r\n        onChange={(value) => setDate(moment(value).format('lll'))}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppDatePicker;\r\n\r\nAppDatePicker.propTypes = {\r\n  date: PropTypes.object.isRequired,\r\n  setDate: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst EditButton = ({action, title}) => {\r\n  return (\r\n    <IconButton\r\n      variant='contained'\r\n      color='primary'\r\n      onClick={action}\r\n      size='large'\r\n    >\r\n      {title}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default EditButton;\r\n\r\nEditButton.propTypes = {\r\n  title: PropTypes.any.isRequired,\r\n  action: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport {MenuItem} from '@mui/material';\r\n\r\nconst TaskStatus = ({selectedTask}) => {\r\n  const statusList = useSelector(({todoApp}) => todoApp.statusList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeStatus = (event) => {\r\n    const task = selectedTask;\r\n    task.status = event.target.value;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <FormControl variant='outlined'>\r\n      <InputLabel id='status-select-outlined-label'>\r\n        <IntlMessages id='common.status' />\r\n      </InputLabel>\r\n      <Select\r\n        labelId='status-select-outlined-label'\r\n        label={<IntlMessages id='common.status' />}\r\n        value={selectedTask.status}\r\n        onChange={(event) => onChangeStatus(event)}\r\n        sx={{\r\n          cursor: 'pointer',\r\n          '& .MuiOutlinedInput-input': {\r\n            paddingBottom: 2.5,\r\n            paddingTop: 2.5,\r\n          },\r\n        }}\r\n      >\r\n        {statusList.map((status) => {\r\n          return (\r\n            <MenuItem\r\n              key={status.type}\r\n              value={status.type}\r\n              sx={{\r\n                padding: 2,\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              {status.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default TaskStatus;\r\n\r\nTaskStatus.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport {MenuItem} from '@mui/material';\r\n\r\nconst TaskPriority = ({selectedTask}) => {\r\n  const dispatch = useDispatch();\r\n  const priorityList = useSelector(({todoApp}) => todoApp.priorityList);\r\n\r\n  const [priority, setPriority] = useState(selectedTask.priority.type);\r\n\r\n  const onChangePriority = (event) => {\r\n    setPriority(event.target.value);\r\n    const priority = priorityList.find(\r\n      (data) => data.type.toString() === event.target.value.toString(),\r\n    );\r\n    console.log('priority: ', priority, event.target.value);\r\n    const task = selectedTask;\r\n    task.priority = priority;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <FormControl variant='outlined'>\r\n      <InputLabel id='priority-select-outlined-label'>\r\n        <IntlMessages id='common.priority' />\r\n      </InputLabel>\r\n      <Select\r\n        labelId='priority-select-outlined-label'\r\n        label={<IntlMessages id='common.priority' />}\r\n        name='priority'\r\n        value={priority}\r\n        onChange={(event) => onChangePriority(event)}\r\n        sx={{\r\n          cursor: 'pointer',\r\n          '& .MuiOutlinedInput-input': {\r\n            paddingBottom: 2.5,\r\n            paddingTop: 2.5,\r\n          },\r\n        }}\r\n      >\r\n        {priorityList.map((priority) => {\r\n          return (\r\n            <MenuItem\r\n              key={priority.id}\r\n              value={priority.type}\r\n              sx={{\r\n                padding: 2,\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              {priority.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default TaskPriority;\r\n\r\nTaskPriority.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\n\r\nconst TaskCreatedByInfo = ({createdBy, createdOn}) => {\r\n  return (\r\n    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n      {createdBy.image ? (\r\n        <Avatar\r\n          src={createdBy.image}\r\n          sx={{\r\n            height: 36,\r\n            width: 36,\r\n          }}\r\n        />\r\n      ) : (\r\n        <Avatar\r\n          sx={{\r\n            height: 36,\r\n            width: 36,\r\n          }}\r\n        >\r\n          {createdBy.name[0]}\r\n        </Avatar>\r\n      )}\r\n      <Box\r\n        sx={{\r\n          ml: 3.5,\r\n          fontSize: 14,\r\n          display: 'flex',\r\n          flexDirection: {xs: 'column', md: 'row'},\r\n          alignItems: {md: 'center'},\r\n        }}\r\n      >\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            mr: 1,\r\n            fontWeight: Fonts.MEDIUM,\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          {createdBy.name}\r\n        </Box>\r\n        <Box component='p' mb={0}>\r\n          <Box component='span'>\r\n            <IntlMessages id='todo.createdThisTask' />\r\n          </Box>\r\n          <Box component='span' color='text.secondary' ml={1}>\r\n            on {createdOn}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskCreatedByInfo;\r\n\r\nTaskCreatedByInfo.propTypes = {\r\n  createdBy: PropTypes.object.isRequired,\r\n  createdOn: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport {Box, Typography} from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst CommentWrapper = styled(Box)(({theme}) => ({\r\n  display: 'flex',\r\n  borderTopRightRadius: theme.cardRadius,\r\n  borderBottomRightRadius: theme.cardRadius,\r\n  padding: '8px 12px',\r\n  border: `solid 1px ${theme.palette.divider}`,\r\n  backgroundColor: theme.palette.background.paper,\r\n  '.last-chat-message &': {\r\n    borderBottomLeftRadius: theme.cardRadius,\r\n  },\r\n}));\r\n\r\nconst CommentsListItem = ({item, isPreviousSender = false, isLast}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: 1.5,\r\n        display: 'flex',\r\n        position: 'relative',\r\n\r\n        '&.hideUserInfo': {\r\n          position: 'relative',\r\n          marginTop: 1,\r\n          '& .todo-comment-time, & .todo-comment-user': {\r\n            display: 'none',\r\n          },\r\n          '& .todo-comment-info': {\r\n            marginLeft: 11.5,\r\n          },\r\n        },\r\n      }}\r\n      className={clsx(\r\n        isPreviousSender ? 'hideUserInfo' : 'first-chat-message',\r\n        isLast ? 'last-chat-message' : '',\r\n      )}\r\n    >\r\n      <Box\r\n        sx={{\r\n          marginRight: 2.5,\r\n          position: 'relative',\r\n        }}\r\n        className='todo-comment-user'\r\n      >\r\n        {item.image ? (\r\n          <Avatar\r\n            src={item.image}\r\n            sx={{\r\n              height: 36,\r\n              width: 36,\r\n            }}\r\n          />\r\n        ) : (\r\n          <Avatar\r\n            sx={{\r\n              height: 36,\r\n              width: 36,\r\n            }}\r\n          >\r\n            {item.name[0]}\r\n          </Avatar>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n        }}\r\n        className='todo-comment-info'\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'block',\r\n            marginBottom: 1.5,\r\n            color: 'text.secondary',\r\n            fontSize: 12,\r\n            '& > span': {\r\n              marginRight: 1,\r\n            },\r\n          }}\r\n          className='todo-comment-time'\r\n        >\r\n          <span>{item.name},</span>\r\n          <span>{item.time},</span>\r\n          <span>{item.date}</span>\r\n        </Box>\r\n        <CommentWrapper>\r\n          <Typography>{item.comment}</Typography>\r\n        </CommentWrapper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommentsListItem;\r\n\r\nCommentsListItem.propTypes = {\r\n  item: PropTypes.object,\r\n  isPreviousSender: PropTypes.bool,\r\n  isLast: PropTypes.bool,\r\n};\r\n","import React, {useEffect, useRef} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport SimpleBarReact from 'simplebar-react';\r\nimport {AppList} from '@crema';\r\nimport CommentsListItem from './CommentsListItem';\r\nimport {styled} from '@mui/material/styles';\r\n\r\nexport const StyledSimpleBarReact = styled(SimpleBarReact)(({theme}) => ({\r\n  maxHeight: 155,\r\n  [theme.breakpoints.up('xl')]: {\r\n    maxHeight: 190,\r\n  },\r\n  '@media (min-width: 1920px)': {\r\n    maxHeight: 210,\r\n  },\r\n  '@media (min-width: 2000px)': {\r\n    maxHeight: 250,\r\n  },\r\n  '@media (min-width: 2400px)': {\r\n    maxHeight: 360,\r\n  },\r\n}));\r\nconst CommentsList = ({comments}) => {\r\n  let _scrollBarRef = useRef();\r\n  useEffect(() => {\r\n    if (comments?.length > 0) {\r\n      if (_scrollBarRef?.current) {\r\n        const scrollEl = _scrollBarRef.current.getScrollElement();\r\n        scrollEl.scrollTop = scrollEl.scrollHeight;\r\n      }\r\n    }\r\n  }, [comments, _scrollBarRef]);\r\n  return (\r\n    <>\r\n      {comments.length > 0 ? (\r\n        <Box\r\n          sx={{\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          <Box sx={{mb: 4, fontWeight: Fonts.SEMI_BOLD}} component='h4'>\r\n            <IntlMessages id='common.comments' />\r\n          </Box>\r\n          <StyledSimpleBarReact ref={_scrollBarRef}>\r\n            <AppList\r\n              data={comments}\r\n              renderRow={(item, index) => (\r\n                <CommentsListItem\r\n                  item={item}\r\n                  key={index}\r\n                  isPreviousSender={\r\n                    index > 0 && comments.sender === comments[index - 1].sender\r\n                  }\r\n                  isLast={\r\n                    (index + 1 < comments.length &&\r\n                      comments.sender !== comments[index + 1].sender) ||\r\n                    index + 1 === comments.length\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n          </StyledSimpleBarReact>\r\n        </Box>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n\r\nCommentsList.defaultProps = {\r\n  comments: [],\r\n};\r\n\r\nCommentsList.propTypes = {\r\n  comments: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport Divider from '@mui/material/Divider';\r\nimport Button from '@mui/material/Button';\r\nimport moment from 'moment';\r\nimport {alpha} from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport Labels from '../../TasksList/TaskListItem/Labels';\r\nimport ChangeStaff from './ChangeStaff';\r\nimport AssignedStaff from './AssignedStaff';\r\nimport DatePicker from './DatePicker';\r\nimport EditButton from './EditButton';\r\nimport TaskStatus from './TaskStatus';\r\nimport TaskPriority from './TaskPriority';\r\nimport TaskCreatedByInfo from './TaskCreatedByInfo';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\r\nimport CommentsList from './CommentsList';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TaskDetailBody = (props) => {\r\n  const {selectedTask} = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {user} = useAuthUser();\r\n\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  const [isEdit, setEdit] = useState(false);\r\n\r\n  const [content, setContent] = useState(selectedTask.content);\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [scheduleDate, setScheduleDate] = useState(\r\n    moment(selectedTask.startDate).format('YYYY/MM/DD'),\r\n  );\r\n\r\n  const [selectedStaff, setStaff] = useState(selectedTask.assignedTo);\r\n\r\n  const onClickEditButton = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const onDoneEditing = () => {\r\n    const task = selectedTask;\r\n    task.content = content;\r\n    task.startDate = scheduleDate;\r\n    task.assignedTo = selectedStaff;\r\n    dispatch(onUpdateSelectedTask(task));\r\n    setEdit(!isEdit);\r\n  };\r\n\r\n  const onAddComments = () => {\r\n    let task = selectedTask;\r\n    task.comments = task.comments.concat({\r\n      comment: comment,\r\n      name: user.displayName ? user.displayName : 'User',\r\n      image: user.photoURL,\r\n      date: moment().format('ll'),\r\n    });\r\n    dispatch(onUpdateSelectedTask(task));\r\n    setComment('');\r\n  };\r\n\r\n  const handleStaffChange = (event) => {\r\n    const staff = staffList.find((staff) => staff.id === event.target.value);\r\n    setStaff(staff);\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: '12px 20px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mb: 5,\r\n          display: 'flex',\r\n          flexDirection: {xs: 'column', sm: 'row'},\r\n          alignItems: {sm: 'center'},\r\n        }}\r\n      >\r\n        <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n          <Typography\r\n            component='h2'\r\n            variant='h2'\r\n            sx={{\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              marginRight: 3.5,\r\n              fontSize: 16,\r\n              fontWeight: Fonts.MEDIUM,\r\n              mb: {xs: 3, sm: 0},\r\n            }}\r\n          >\r\n            {selectedTask.title}\r\n          </Typography>\r\n\r\n          <Box mr={1} mb={{xs: 3, sm: 0}}>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                px: 3,\r\n                py: 1,\r\n                color: selectedTask.priority.color,\r\n                bgcolor: alpha(selectedTask.priority.color, 0.1),\r\n                fontSize: 14,\r\n                borderRadius: 30,\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              {selectedTask.priority.name}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box display='flex' alignItems='center' ml={{sm: 'auto'}}>\r\n          <Labels labels={selectedTask.label} />\r\n          <Box component='span' color='text.secondary' fontSize={14} ml={2}>\r\n            Nov 21, 2020, 9:46 AM\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box mb={0.5} display='flex'>\r\n        <Box\r\n          display='flex'\r\n          flexDirection={{xs: 'column', sm: 'row'}}\r\n          mr={2}\r\n          alignItems={{sm: 'center'}}\r\n        >\r\n          {isEdit ? (\r\n            <>\r\n              <Box mb={{xs: 3, sm: 0}}>\r\n                <ChangeStaff\r\n                  selectedStaff={selectedStaff}\r\n                  handleStaffChange={handleStaffChange}\r\n                />\r\n              </Box>\r\n              <DatePicker\r\n                date={scheduleDate}\r\n                setDate={setScheduleDate}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </>\r\n          ) : (\r\n            <AssignedStaff assignedStaff={selectedTask.assignedTo} />\r\n          )}\r\n        </Box>\r\n\r\n        <Box ml='auto'>\r\n          {!isEdit ? (\r\n            <EditButton\r\n              action={onClickEditButton}\r\n              title={\r\n                <EditOutlinedIcon\r\n                  sx={{\r\n                    position: 'relative',\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          ) : (\r\n            <EditButton\r\n              action={onDoneEditing}\r\n              title={\r\n                <CheckCircleOutlineIcon\r\n                  sx={{\r\n                    position: 'relative',\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider\r\n        sx={{\r\n          marginTop: 4,\r\n          marginBottom: 5,\r\n        }}\r\n      />\r\n\r\n      {!isEdit ? (\r\n        <Typography sx={{color: 'text.secondary'}}>{content}</Typography>\r\n      ) : (\r\n        <TextField\r\n          multiline\r\n          sx={{\r\n            width: '100%',\r\n            '& .MuiOutlinedInput-root': {\r\n              padding: '10px 15px',\r\n            },\r\n          }}\r\n          rows='6'\r\n          variant='outlined'\r\n          placeholder={messages['common.description']}\r\n          name='content'\r\n          value={content}\r\n          onChange={(event) => setContent(event.target.value)}\r\n        />\r\n      )}\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: {xs: 'column', sm: 'row'},\r\n          alignItems: {sm: 'center'},\r\n          mb: 1,\r\n          pt: 5,\r\n        }}\r\n      >\r\n        <Box sx={{display: 'flex', alignItems: 'center', mb: {xs: 3, sm: 0}}}>\r\n          <Box mr={5}>\r\n            <TaskStatus selectedTask={selectedTask} />\r\n          </Box>\r\n\r\n          <Box mr={5}>\r\n            <TaskPriority selectedTask={selectedTask} />\r\n          </Box>\r\n        </Box>\r\n\r\n        <TaskCreatedByInfo\r\n          createdBy={selectedTask.createdBy}\r\n          createdOn={selectedTask.createdOn}\r\n        />\r\n      </Box>\r\n\r\n      <Divider\r\n        sx={{\r\n          marginTop: 4,\r\n          marginBottom: 5,\r\n        }}\r\n      />\r\n\r\n      <CommentsList comments={selectedTask.comments} />\r\n\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          marginTop: 'auto',\r\n        }}\r\n      >\r\n        <TextField\r\n          multiline\r\n          sx={{\r\n            width: '100%',\r\n            '& .MuiOutlinedInput-root': {\r\n              padding: '10px 15px',\r\n            },\r\n          }}\r\n          rows='1'\r\n          variant='outlined'\r\n          placeholder={messages['common.writeComment']}\r\n          value={comment}\r\n          onChange={(event) => setComment(event.target.value)}\r\n        />\r\n        <Button\r\n          sx={{\r\n            position: 'relative',\r\n            width: 41,\r\n            height: 41,\r\n            minWidth: 41,\r\n            padding: 2,\r\n            marginLeft: 3,\r\n            '& svg': {\r\n              marginLeft: 0.75,\r\n            },\r\n          }}\r\n          variant='contained'\r\n          color='primary'\r\n          disabled={!comment}\r\n          onClick={onAddComments}\r\n        >\r\n          <SendOutlinedIcon />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskDetailBody;\r\n\r\nTaskDetailBody.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport TaskDetailHeader from './TaskDetailHeader';\r\nimport TaskDetailBody from './TaskDetailBody';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetSelectedTask} from '../../../../redux/actions';\r\nimport {useParams} from 'react-router-dom';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport {MailDetailSkeleton} from '@crema/core/AppSkeleton/MailDetailSkeleton';\r\n\r\nconst TaskDetail = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {id} = useParams();\r\n  useEffect(() => {\r\n    dispatch(onGetSelectedTask(id));\r\n  }, [dispatch, id]);\r\n\r\n  const selectedTask = useSelector(({todoApp}) => todoApp.selectedTask);\r\n\r\n  if (!selectedTask) {\r\n    return <MailDetailSkeleton />;\r\n  }\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <TaskDetailHeader selectedTask={selectedTask} />\r\n      </AppsHeader>\r\n      <AppsContent isDetailView>\r\n        <TaskDetailBody selectedTask={selectedTask} />\r\n      </AppsContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React, {useEffect} from 'react';\r\nimport TaskSideBar from './TaskSideBar/index';\r\nimport TasksList from './TasksList';\r\nimport TaskDetail from './TaskDetail';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onGetToDoFolderList,\r\n  onGetToDoLabelList,\r\n  onGetToDoPriorityList,\r\n  onGetToDoStaffList,\r\n  onGetToDoStatusList,\r\n} from '../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '@crema/core/AppsContainer';\r\nimport clsx from 'clsx';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Box} from '@mui/material';\r\n\r\nconst ToDo = () => {\r\n  const dispatch = useDispatch();\r\n  const {id} = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoLabelList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoPriorityList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoStaffList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoStatusList());\r\n  }, [dispatch]);\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['todo.todoApp']}\r\n      sidebarContent={<TaskSideBar />}\r\n    >\r\n      <TasksList />\r\n      <Box\r\n        sx={{\r\n          transition: 'all 0.5s ease',\r\n          transform: 'translateX(100%)',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          zIndex: 1,\r\n          opacity: 0,\r\n          visibility: 'hidden',\r\n          backgroundColor: 'background.paper',\r\n          '&.show': {\r\n            transform: 'translateX(0)',\r\n            opacity: 1,\r\n            visibility: 'visible',\r\n          },\r\n        }}\r\n        className={clsx({\r\n          show: id,\r\n        })}\r\n      >\r\n        <TaskDetail />\r\n      </Box>\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n\r\nToDo.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\n"],"sourceRoot":""}