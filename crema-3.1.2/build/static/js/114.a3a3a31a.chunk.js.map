{"version":3,"sources":["../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js","pages/muiComponents/lab/Masonry/BasicMasonry.js","webpack:///./src/pages/muiComponents/lab/Masonry/BasicMasonry.js?d7dc","pages/muiComponents/lab/Masonry/ImageMasonry.js","pages/muiComponents/lab/Masonry/FixedColumns.js","webpack:///./src/pages/muiComponents/lab/Masonry/FixedColumns.js?ea89","pages/muiComponents/lab/Masonry/ResponsiveColumns.js","webpack:///./src/pages/muiComponents/lab/Masonry/ResponsiveColumns.js?8939","pages/muiComponents/lab/Masonry/FixedSpacing.js","webpack:///./src/pages/muiComponents/lab/Masonry/FixedSpacing.js?2fa0","pages/muiComponents/lab/Masonry/ResponsiveSpacing.js","webpack:///./src/pages/muiComponents/lab/Masonry/ResponsiveSpacing.js?fcca","pages/muiComponents/lab/Masonry/SSRMasonry.js","pages/muiComponents/lab/Masonry/index.js","webpack:///./src/pages/muiComponents/lab/Masonry/SSRMasonry.js?6b61","webpack:///./src/pages/muiComponents/lab/Masonry/ImageMasonry.js?b9f3"],"names":["_excluded","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","styled","name","slot","overridesResolver","props","styles","root","ownerState","theme","_extends","display","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","flexDirection","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","deepmerge","margin","row","column","getValue","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as","getMasonryUtilityClass","generateUtilityClass","generateUtilityClasses","parseToNumber","val","Number","replace","MasonryRoot","width","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","height","defaultHeight","toFixed","themeSpacingValue","maxColumnHeight","Math","ceil","columnValues","columns","columnValue","lastBreakpoint","pop","Masonry","className","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","elements","masonry","masonryFirstChild","parentWidth","childWidth","_elements$","_masonryFirstChild","_masonryFirstChild$co","_masonryFirstChild2","_elements$2","_masonry$contentRect","target","includes","contentRect","firstChild","clientWidth","parentElement","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","max","resizeObserver","current","container","observe","disconnect","handleRef","useForkRef","lineBreakStyle","flexBasis","padding","lineBreaks","map","_","_jsxs","clsx","heights","Item","Paper","typography","body2","color","palette","text","secondary","border","alignItems","justifyContent","BasicMasonry","Box","sx","minHeight","Label","borderBottomLeftRadius","borderBottomRightRadius","ImageMasonry","itemData","item","src","img","srcSet","alt","title","loading","FixedColumns","ResponsiveColumns","xs","sm","FixedSpacing","ResponsiveSpacing","md","SSRMasonry","AppComponentHeader","description","refUrl","AppGridContainer","Grid","AppComponentCard","source","noScrollbar"],"mappings":"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","file":"static/js/114.a3a3a31a.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\n\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'space-between',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = Number(theme.spacing(ownerState.defaultSpacing).replace('px', ''));\n\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n\n  const spacingStyleFromPropValue = propValue => {\n    const themeSpacingValue = Number(propValue);\n    const spacing = Number(getValue(transformer, themeSpacingValue).replace('px', ''));\n    return _extends({\n      margin: -(spacing / 2),\n      '& > *': {\n        margin: spacing / 2\n      }\n    }, ownerState.maxColumnHeight && {\n      height: Math.ceil(ownerState.maxColumnHeight + spacing)\n    });\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues !== 'object' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue)); // configure width for responsive spacing values\n\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n\n      return null;\n    }));\n  }\n\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    columns = 4,\n    spacing = 1,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleResize = elements => {\n    if (!elements) {\n      return;\n    }\n\n    let masonry;\n    let masonryFirstChild;\n    let parentWidth;\n    let childWidth;\n\n    if (elements[0].target.className.includes(classes.root)) {\n      var _elements$, _masonryFirstChild, _masonryFirstChild$co, _masonryFirstChild2;\n\n      masonry = elements[0].target;\n      parentWidth = elements[0].contentRect.width;\n      masonryFirstChild = ((_elements$ = elements[1]) == null ? void 0 : _elements$.target) || masonry.firstChild;\n      childWidth = ((_masonryFirstChild = masonryFirstChild) == null ? void 0 : (_masonryFirstChild$co = _masonryFirstChild.contentRect) == null ? void 0 : _masonryFirstChild$co.width) || ((_masonryFirstChild2 = masonryFirstChild) == null ? void 0 : _masonryFirstChild2.clientWidth) || 0;\n    } else {\n      var _elements$2, _masonry$contentRect;\n\n      masonryFirstChild = elements[0].target;\n      childWidth = elements[0].contentRect.width;\n      masonry = ((_elements$2 = elements[1]) == null ? void 0 : _elements$2.target) || masonryFirstChild.parentElement;\n      parentWidth = ((_masonry$contentRect = masonry.contentRect) == null ? void 0 : _masonry$contentRect.width) || masonry.clientWidth;\n    }\n\n    if (parentWidth === 0 || childWidth === 0 || !masonry || !masonryFirstChild) {\n      return;\n    }\n\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (childWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom); // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      } // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n\n\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n\n    if (!skip) {\n      setMaxColumnHeight(Math.max(...columnHeights));\n      const numOfLineBreaks = currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0;\n      setNumberOfLineBreaks(numOfLineBreaks);\n    }\n  };\n\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current; // IE and old browsers are not supported\n\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n\n    const container = masonryRef.current;\n\n    if (container && resizeObserver) {\n      // only the masonry container and its first child are observed for resizing;\n      // this might cause unforeseen problems in some use cases;\n      resizeObserver.observe(container);\n\n      if (container.firstChild) {\n        resizeObserver.observe(container.firstChild);\n      }\n    }\n\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n  const lineBreakStyle = {\n    flexBasis: '100%',\n    width: 0,\n    margin: 0,\n    padding: 0\n  }; //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {styled} from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Masonry from '@mui/lab/Masonry';\r\n\r\nconst heights = [\r\n  150, 30, 90, 70, 110, 150, 130, 80, 50, 90, 100, 150, 30, 50, 80,\r\n];\r\n\r\nconst Item = styled(Paper)(({theme}) => ({\r\n  ...theme.typography.body2,\r\n  color: theme.palette.text.secondary,\r\n  border: '1px solid black',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport default function BasicMasonry() {\r\n  return (\r\n    <Box sx={{width: 500, minHeight: 393}}>\r\n      <Masonry columns={4} spacing={1}>\r\n        {heights.map((height, index) => (\r\n          <Item key={index} sx={{height}}>\r\n            {index + 1}\r\n          </Item>\r\n        ))}\r\n      </Masonry>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Masonry from '@mui/lab/Masonry';\\r\\n\\r\\nconst heights = [\\r\\n  150, 30, 90, 70, 110, 150, 130, 80, 50, 90, 100, 150, 30, 50, 80,\\r\\n];\\r\\n\\r\\nconst Item = styled(Paper)(({theme}) => ({\\r\\n  ...theme.typography.body2,\\r\\n  color: theme.palette.text.secondary,\\r\\n  border: '1px solid black',\\r\\n  display: 'flex',\\r\\n  alignItems: 'center',\\r\\n  justifyContent: 'center',\\r\\n}));\\r\\n\\r\\nexport default function BasicMasonry() {\\r\\n  return (\\r\\n    <Box sx={{width: 500, minHeight: 393}}>\\r\\n      <Masonry columns={4} spacing={1}>\\r\\n        {heights.map((height, index) => (\\r\\n          <Item key={index} sx={{height}}>\\r\\n            {index + 1}\\r\\n          </Item>\\r\\n        ))}\\r\\n      </Masonry>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Paper from '@mui/material/Paper';\r\nimport Masonry from '@mui/lab/Masonry';\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst Label = styled(Paper)(({theme}) => ({\r\n  ...theme.typography.body2,\r\n  color: theme.palette.text.secondary,\r\n  border: '1px solid black',\r\n  borderBottomLeftRadius: 0,\r\n  borderBottomRightRadius: 0,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport default function ImageMasonry() {\r\n  return (\r\n    <Box sx={{width: 500, minHeight: 829}}>\r\n      <Masonry columns={3} spacing={1}>\r\n        {itemData.map((item, index) => (\r\n          <Stack key={index}>\r\n            <Label>{index + 1}</Label>\r\n            <img\r\n              src={`${item.img}?w=162&auto=format`}\r\n              srcSet={`${item.img}?w=162&auto=format&dpr=2 2x`}\r\n              alt={item.title}\r\n              loading='lazy'\r\n              style={{borderBottomLeftRadius: 4, borderBottomRightRadius: 4}}\r\n            />\r\n          </Stack>\r\n        ))}\r\n      </Masonry>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst itemData = [\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1518756131217-31eb79b20e8f',\r\n    title: 'Fern',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1627308595229-7830a5c91f9f',\r\n    title: 'Snacks',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1597645587822-e99fa5d45d25',\r\n    title: 'Mushrooms',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1529655683826-aba9b3e77383',\r\n    title: 'Tower',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1471357674240-e1a485acb3e1',\r\n    title: 'Sea star',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1558642452-9d2a7deb7f62',\r\n    title: 'Honey',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1516802273409-68526ee1bdd6',\r\n    title: 'Basketball',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e',\r\n    title: 'Breakfast',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1627328715728-7bcc1b5db87d',\r\n    title: 'Tree',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1551782450-a2132b4ba21d',\r\n    title: 'Burger',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1522770179533-24471fcdba45',\r\n    title: 'Camera',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c',\r\n    title: 'Coffee',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1627000086207-76eabf23aa2e',\r\n    title: 'Camping Car',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1533827432537-70133748f5c8',\r\n    title: 'Hats',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1567306301408-9b74779a11af',\r\n    title: 'Tomato basil',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1627328561499-a3584d4ee4f7',\r\n    title: 'Mountain',\r\n  },\r\n  {\r\n    img: 'https://images.unsplash.com/photo-1589118949245-7d38baf380d6',\r\n    title: 'Bike',\r\n  },\r\n];\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {styled} from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Masonry from '@mui/lab/Masonry';\r\n\r\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\r\n\r\nconst Item = styled(Paper)(({theme}) => ({\r\n  ...theme.typography.body2,\r\n  color: theme.palette.text.secondary,\r\n  border: '1px solid black',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport default function FixedColumns() {\r\n  return (\r\n    <Box sx={{width: 500, minHeight: 253}}>\r\n      <Masonry columns={4} spacing={1}>\r\n        {heights.map((height, index) => (\r\n          <Item key={index} sx={{height}}>\r\n            {index + 1}\r\n          </Item>\r\n        ))}\r\n      </Masonry>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Masonry from '@mui/lab/Masonry';\\r\\n\\r\\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\\r\\n\\r\\nconst Item = styled(Paper)(({theme}) => ({\\r\\n  ...theme.typography.body2,\\r\\n  color: theme.palette.text.secondary,\\r\\n  border: '1px solid black',\\r\\n  display: 'flex',\\r\\n  alignItems: 'center',\\r\\n  justifyContent: 'center',\\r\\n}));\\r\\n\\r\\nexport default function FixedColumns() {\\r\\n  return (\\r\\n    <Box sx={{width: 500, minHeight: 253}}>\\r\\n      <Masonry columns={4} spacing={1}>\\r\\n        {heights.map((height, index) => (\\r\\n          <Item key={index} sx={{height}}>\\r\\n            {index + 1}\\r\\n          </Item>\\r\\n        ))}\\r\\n      </Masonry>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {styled} from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Masonry from '@mui/lab/Masonry';\r\n\r\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\r\n\r\nconst Item = styled(Paper)(({theme}) => ({\r\n  ...theme.typography.body2,\r\n  color: theme.palette.text.secondary,\r\n  border: '1px solid black',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport default function ResponsiveColumns() {\r\n  return (\r\n    <Box sx={{width: 500, minHeight: 253}}>\r\n      <Masonry columns={{xs: 3, sm: 4}} spacing={1}>\r\n        {heights.map((height, index) => (\r\n          <Item key={index} sx={{height}}>\r\n            {index + 1}\r\n          </Item>\r\n        ))}\r\n      </Masonry>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Masonry from '@mui/lab/Masonry';\\r\\n\\r\\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\\r\\n\\r\\nconst Item = styled(Paper)(({theme}) => ({\\r\\n  ...theme.typography.body2,\\r\\n  color: theme.palette.text.secondary,\\r\\n  border: '1px solid black',\\r\\n  display: 'flex',\\r\\n  alignItems: 'center',\\r\\n  justifyContent: 'center',\\r\\n}));\\r\\n\\r\\nexport default function ResponsiveColumns() {\\r\\n  return (\\r\\n    <Box sx={{width: 500, minHeight: 253}}>\\r\\n      <Masonry columns={{xs: 3, sm: 4}} spacing={1}>\\r\\n        {heights.map((height, index) => (\\r\\n          <Item key={index} sx={{height}}>\\r\\n            {index + 1}\\r\\n          </Item>\\r\\n        ))}\\r\\n      </Masonry>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {styled} from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Masonry from '@mui/lab/Masonry';\r\n\r\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\r\n\r\nconst Item = styled(Paper)(({theme}) => ({\r\n  ...theme.typography.body2,\r\n  color: theme.palette.text.secondary,\r\n  border: '1px solid black',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport default function FixedSpacing() {\r\n  return (\r\n    <Box sx={{width: 500, minHeight: 377}}>\r\n      <Masonry columns={3} spacing={3}>\r\n        {heights.map((height, index) => (\r\n          <Item key={index} sx={{height}}>\r\n            {index + 1}\r\n          </Item>\r\n        ))}\r\n      </Masonry>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Masonry from '@mui/lab/Masonry';\\r\\n\\r\\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\\r\\n\\r\\nconst Item = styled(Paper)(({theme}) => ({\\r\\n  ...theme.typography.body2,\\r\\n  color: theme.palette.text.secondary,\\r\\n  border: '1px solid black',\\r\\n  display: 'flex',\\r\\n  alignItems: 'center',\\r\\n  justifyContent: 'center',\\r\\n}));\\r\\n\\r\\nexport default function FixedSpacing() {\\r\\n  return (\\r\\n    <Box sx={{width: 500, minHeight: 377}}>\\r\\n      <Masonry columns={3} spacing={3}>\\r\\n        {heights.map((height, index) => (\\r\\n          <Item key={index} sx={{height}}>\\r\\n            {index + 1}\\r\\n          </Item>\\r\\n        ))}\\r\\n      </Masonry>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {styled} from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Masonry from '@mui/lab/Masonry';\r\n\r\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\r\n\r\nconst Item = styled(Paper)(({theme}) => ({\r\n  ...theme.typography.body2,\r\n  color: theme.palette.text.secondary,\r\n  border: '1px solid black',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport default function ResponsiveSpacing() {\r\n  return (\r\n    <Box sx={{width: 500, minHeight: 377}}>\r\n      <Masonry columns={3} spacing={{xs: 1, sm: 2, md: 3}}>\r\n        {heights.map((height, index) => (\r\n          <Item key={index} sx={{height}}>\r\n            {index + 1}\r\n          </Item>\r\n        ))}\r\n      </Masonry>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Masonry from '@mui/lab/Masonry';\\r\\n\\r\\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\\r\\n\\r\\nconst Item = styled(Paper)(({theme}) => ({\\r\\n  ...theme.typography.body2,\\r\\n  color: theme.palette.text.secondary,\\r\\n  border: '1px solid black',\\r\\n  display: 'flex',\\r\\n  alignItems: 'center',\\r\\n  justifyContent: 'center',\\r\\n}));\\r\\n\\r\\nexport default function ResponsiveSpacing() {\\r\\n  return (\\r\\n    <Box sx={{width: 500, minHeight: 377}}>\\r\\n      <Masonry columns={3} spacing={{xs: 1, sm: 2, md: 3}}>\\r\\n        {heights.map((height, index) => (\\r\\n          <Item key={index} sx={{height}}>\\r\\n            {index + 1}\\r\\n          </Item>\\r\\n        ))}\\r\\n      </Masonry>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {styled} from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Masonry from '@mui/lab/Masonry';\r\n\r\nconst heights = [\r\n  150, 30, 90, 70, 110, 150, 130, 80, 50, 90, 100, 150, 30, 50, 80,\r\n];\r\n\r\nconst Item = styled(Paper)(({theme}) => ({\r\n  ...theme.typography.body2,\r\n  color: theme.palette.text.secondary,\r\n  border: '1px solid black',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport default function SSRMasonry() {\r\n  return (\r\n    <Box sx={{width: 500, minHeight: 393}}>\r\n      <Masonry\r\n        columns={4}\r\n        spacing={1}\r\n        defaultHeight={450}\r\n        defaultColumns={4}\r\n        defaultSpacing={1}\r\n      >\r\n        {heights.map((height, index) => (\r\n          <Item key={index} sx={{height}}>\r\n            {index + 1}\r\n          </Item>\r\n        ))}\r\n      </Masonry>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '@crema/core/AppComponentCard';\r\n\r\nimport BasicMasonry from './BasicMasonry';\r\nimport BasicMasonrySource from '!raw-loader!./BasicMasonry';\r\n\r\nimport ImageMasonry from './ImageMasonry';\r\nimport ImageMasonrySource from '!raw-loader!./ImageMasonry';\r\n\r\nimport FixedColumns from './FixedColumns';\r\nimport FixedColumnsSource from '!raw-loader!./FixedColumns';\r\n\r\nimport ResponsiveColumns from './ResponsiveColumns';\r\nimport ResponsiveColumnsSource from '!raw-loader!./ResponsiveColumns';\r\n\r\nimport FixedSpacing from './FixedSpacing';\r\nimport FixedSpacingSource from '!raw-loader!./FixedSpacing';\r\n\r\nimport ResponsiveSpacing from './ResponsiveSpacing';\r\nimport ResponsiveSpacingSource from '!raw-loader!./ResponsiveSpacing';\r\n\r\nimport SSRMasonry from './SSRMasonry';\r\nimport SSRMasonrySource from '!raw-loader!./SSRMasonry';\r\n\r\nconst Masonry = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Masonry'\r\n        description='Masonry lays out contents of different sizes as blocks of the same width and variable height with configurable gaps.'\r\n        refUrl='https://mui.com/components/masonry/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='FixedColumns'\r\n            component={FixedColumns}\r\n            source={FixedColumnsSource}\r\n            noScrollbar\r\n            description='This example demonstrates the use of the columns to configure the number of columns of a Masonry.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='ResponsiveColumns'\r\n            component={ResponsiveColumns}\r\n            source={ResponsiveColumnsSource}\r\n            noScrollbar\r\n            description='columns accepts responsive values:'\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='FixedSpacing'\r\n            component={FixedSpacing}\r\n            source={FixedSpacingSource}\r\n            noScrollbar\r\n            description='This example demonstrates the use of the spacing to configure the spacing between items. It is important to note that the value provided to the spacing prop is multiplied by the themes spacing field.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='ResponsiveSpacing'\r\n            component={ResponsiveSpacing}\r\n            source={ResponsiveSpacingSource}\r\n            noScrollbar\r\n            description='spacing accepts responsive values:'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='BasicMasonry'\r\n            component={BasicMasonry}\r\n            source={BasicMasonrySource}\r\n            noScrollbar\r\n            description='A simple example of a Masonry. Masonry is a container for one or more items. It can receive any element including <div /> and <img />.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='SSRMasonry'\r\n            component={SSRMasonry}\r\n            source={SSRMasonrySource}\r\n            noScrollbar\r\n            description='This example demonstrates the use of the defaultHeight, defaultColumns and defaultSpacing, which are used to support server-side rendering.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='ImageMasonry'\r\n            component={ImageMasonry}\r\n            source={ImageMasonrySource}\r\n            noScrollbar\r\n            description='This example demonstrates the use of Masonry for images. Masonry orders its children by row. If youd like to order images by column, check out ImageList.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Masonry;\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Masonry from '@mui/lab/Masonry';\\r\\n\\r\\nconst heights = [\\r\\n  150, 30, 90, 70, 110, 150, 130, 80, 50, 90, 100, 150, 30, 50, 80,\\r\\n];\\r\\n\\r\\nconst Item = styled(Paper)(({theme}) => ({\\r\\n  ...theme.typography.body2,\\r\\n  color: theme.palette.text.secondary,\\r\\n  border: '1px solid black',\\r\\n  display: 'flex',\\r\\n  alignItems: 'center',\\r\\n  justifyContent: 'center',\\r\\n}));\\r\\n\\r\\nexport default function SSRMasonry() {\\r\\n  return (\\r\\n    <Box sx={{width: 500, minHeight: 393}}>\\r\\n      <Masonry\\r\\n        columns={4}\\r\\n        spacing={1}\\r\\n        defaultHeight={450}\\r\\n        defaultColumns={4}\\r\\n        defaultSpacing={1}\\r\\n      >\\r\\n        {heights.map((height, index) => (\\r\\n          <Item key={index} sx={{height}}>\\r\\n            {index + 1}\\r\\n          </Item>\\r\\n        ))}\\r\\n      </Masonry>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stack from '@mui/material/Stack';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport Masonry from '@mui/lab/Masonry';\\r\\nimport {styled} from '@mui/material/styles';\\r\\n\\r\\nconst Label = styled(Paper)(({theme}) => ({\\r\\n  ...theme.typography.body2,\\r\\n  color: theme.palette.text.secondary,\\r\\n  border: '1px solid black',\\r\\n  borderBottomLeftRadius: 0,\\r\\n  borderBottomRightRadius: 0,\\r\\n  display: 'flex',\\r\\n  alignItems: 'center',\\r\\n  justifyContent: 'center',\\r\\n}));\\r\\n\\r\\nexport default function ImageMasonry() {\\r\\n  return (\\r\\n    <Box sx={{width: 500, minHeight: 829}}>\\r\\n      <Masonry columns={3} spacing={1}>\\r\\n        {itemData.map((item, index) => (\\r\\n          <Stack key={index}>\\r\\n            <Label>{index + 1}</Label>\\r\\n            <img\\r\\n              src={`${item.img}?w=162&auto=format`}\\r\\n              srcSet={`${item.img}?w=162&auto=format&dpr=2 2x`}\\r\\n              alt={item.title}\\r\\n              loading='lazy'\\r\\n              style={{borderBottomLeftRadius: 4, borderBottomRightRadius: 4}}\\r\\n            />\\r\\n          </Stack>\\r\\n        ))}\\r\\n      </Masonry>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst itemData = [\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1518756131217-31eb79b20e8f',\\r\\n    title: 'Fern',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1627308595229-7830a5c91f9f',\\r\\n    title: 'Snacks',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1597645587822-e99fa5d45d25',\\r\\n    title: 'Mushrooms',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1529655683826-aba9b3e77383',\\r\\n    title: 'Tower',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1471357674240-e1a485acb3e1',\\r\\n    title: 'Sea star',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1558642452-9d2a7deb7f62',\\r\\n    title: 'Honey',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1516802273409-68526ee1bdd6',\\r\\n    title: 'Basketball',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e',\\r\\n    title: 'Breakfast',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1627328715728-7bcc1b5db87d',\\r\\n    title: 'Tree',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1551782450-a2132b4ba21d',\\r\\n    title: 'Burger',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1522770179533-24471fcdba45',\\r\\n    title: 'Camera',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c',\\r\\n    title: 'Coffee',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1627000086207-76eabf23aa2e',\\r\\n    title: 'Camping Car',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1533827432537-70133748f5c8',\\r\\n    title: 'Hats',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1567306301408-9b74779a11af',\\r\\n    title: 'Tomato basil',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1627328561499-a3584d4ee4f7',\\r\\n    title: 'Mountain',\\r\\n  },\\r\\n  {\\r\\n    img: 'https://images.unsplash.com/photo-1589118949245-7d38baf380d6',\\r\\n    title: 'Bike',\\r\\n  },\\r\\n];\\r\\n\";"],"sourceRoot":""}