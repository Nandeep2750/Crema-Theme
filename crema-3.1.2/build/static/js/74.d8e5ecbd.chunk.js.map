{"version":3,"sources":["../node_modules/@mui/icons-material/ArrowUpward.js","../node_modules/@mui/icons-material/FavoriteBorderOutlined.js","../node_modules/@mui/icons-material/ArrowDownward.js","../node_modules/@mui/icons-material/SpeakerNotesOutlined.js","pages/dashboards/Metrics/StatsCard/index.js","pages/dashboards/Metrics/StatsCardWithGraph/IncomeGraph.js","pages/dashboards/Metrics/StatsCardWithGraph/WebTrafficGraph.js","pages/dashboards/Metrics/StatsCardWithGraph/RevenueGrowthGraph.js","pages/dashboards/Metrics/StatsCardWithGraph/index.js","pages/dashboards/Metrics/ComparisonCard/ActiveUsersGraph.js","pages/dashboards/Metrics/ComparisonCard/ExtraRevenueGraph.js","pages/dashboards/Metrics/ComparisonCard/TrafficRaiseGraph.js","pages/dashboards/Metrics/ComparisonCard/LessOrdersGraph.js","pages/dashboards/Metrics/ComparisonCard/index.js","pages/dashboards/Metrics/Sales/SalesGraph.js","pages/dashboards/Metrics/Sales/index.js","pages/dashboards/Metrics/YourAccount/AccountGraph.js","pages/dashboards/Metrics/YourAccount/index.js","pages/dashboards/Metrics/EarningInMonth/EarningGraph.js","pages/dashboards/Metrics/EarningInMonth/Categories.js","pages/dashboards/Metrics/EarningInMonth/index.js","pages/dashboards/Metrics/MetricTitleLineGraphCard/LineGraph.js","pages/dashboards/Metrics/MetricTitleLineGraphCard/index.js","pages/dashboards/Metrics/FloatingGraphs/GraphFile.js","pages/dashboards/Metrics/FloatingGraphs/index.js","pages/dashboards/Metrics/Visits/VisitsGraph.js","pages/dashboards/Metrics/Visits/index.js","pages/dashboards/Metrics/StatsCardSecond/index.js","pages/dashboards/Metrics/Orders/OrdersGraph.js","pages/dashboards/Metrics/Orders/index.js","pages/dashboards/Metrics/ProfileViews/ProfileViewsGraph.js","pages/dashboards/Metrics/ProfileViews/index.js","pages/dashboards/Metrics/WorkViews/WorkViewsGraph.js","pages/dashboards/Metrics/WorkViews/index.js","pages/dashboards/Metrics/SocialDataCard/index.js","pages/dashboards/Metrics/Stats/StatsGraph.js","pages/dashboards/Metrics/Stats/index.js","pages/dashboards/Metrics/SocialVisitors/SocialVisitorsGraph.js","pages/dashboards/Metrics/SocialVisitors/Categories.js","pages/dashboards/Metrics/SocialVisitors/index.js","pages/dashboards/Metrics/Subscriptions/SubscriptionGraph.js","pages/dashboards/Metrics/Subscriptions/index.js","pages/dashboards/Metrics/Share/index.js","pages/dashboards/Metrics/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","StatsCard","icon","bgColor","text","AppCard","sxStyle","height","textAlign","Avatar","sx","display","p","xs","xl","mb","md","mx","width","backgroundColor","src","alt","Box","component","color","fontSize","fontWeight","Fonts","MEDIUM","defaultProps","IncomeGraph","data","ResponsiveContainer","AreaChart","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","type","dataKey","stroke","strokeWidth","fill","dot","r","Tooltip","labelStyle","cursor","content","payload","revenue","wrapperStyle","background","borderRadius","radius","overflow","WebTrafficGraph","margin","top","right","left","bottom","RevenueGrowthGraph","StatsCardWithGraph","headingColor","valueColor","position","BOLD","pl","mr","graphData","onGetGraph","ActiveUsersGraph","className","LineChart","Line","ExtraRevenueGraph","TrafficRaiseGraph","LessOrdersGraph","ComparisonCard","contentStyle","padding","py","px","pt","SalesGraph","BarChart","barSize","Bar","Sales","messages","useIntl","title","flexDirection","salesToday","salesYesterday","IntlMessages","mt","salesGraphData","AccountGraph","CartesianGrid","strokeDasharray","XAxis","stackId","YourAccount","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","EarningGraph","PieChart","Pie","labelLine","label","map","entry","index","Cell","Categories","justifyContent","flexWrap","item","flex","alignItems","colorName","textTransform","ml","name","EarningInMonth","footer","my","alignSelf","LineGraph","props","graphColor","MetricTitleLineGraphCard","titleColor","differenceColor","difference","differencePercent","GraphFile","strokeColor","areaColor","fillOpacity","FloatingGraphs","change","green","LIGHT","m","VisitsGraph","Visits","useState","dataOne","setGraphData","action","AppSelect","menus","defaultValue","onChange","dataTwo","dataThree","new","returning","StatsCardSecond","marginLeft","marginRight","OrdersGraph","hide","Orders","theme","palette","primary","main","titleStyle","orders","ProfileViewsGraph","axisLine","tickLine","ProfileViews","views","REGULAR","WorkViewsGraph","objectPosition","WorkViews","SocialDataCard","borderRight","borderColor","sm","likes","comments","StatsGraph","ScatterChart","vertical","ticks","YAxis","Scatter","stats1","stats2","Stats","SocialVisitorsGraph","LabelList","dy","customizedLabel","bgcolor","visitors","SocialVisitors","SubscriptionGraph","Subscriptions","Share","AppGrid","itemPadding","responsive","lg","renderRow","contrastText","Metrics","dispatch","useDispatch","useEffect","onGetMetricsData","metricsData","useSelector","dashboard","AppAnimate","AppGridContainer","Grid","ordersThisYear","red","revenueThisYear","blue","visitsThisYear","indigo","queriesThisYear","incomeLastYear","websiteTrafficData","revenueGrowthData","incrementActiveUsers","extraRevenue","trafficRaise","lessOrders","salesData","accountData","earningInMonth","subscriptionData","metricsLineGraphData","grey","metricsFloatingGraphData","clientsData","revenueData","newUserData","visitsData","ordersData","profileViewsData","workViewsData","socialData","shareData","statsGraph","socialVisitorsData","AppInfoView"],"mappings":"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","file":"static/js/74.d8e5ecbd.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorderOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H5.17l-.59.59-.58.58V4h16v12zM6 12h2v2H6zm0-3h2v2H6zm0-3h2v2H6zm4 6h5v2h-5zm0-3h8v2h-8zm0-3h8v2h-8z\"\n}), 'SpeakerNotesOutlined');\n\nexports.default = _default;","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst StatsCard = ({icon, bgColor, text, value}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <Avatar\r\n        sx={{\r\n          display: 'flex',\r\n          p: {xs: 3, xl: 4},\r\n          mb: {xs: 4, md: 5},\r\n          mx: 'auto',\r\n          height: 60,\r\n          width: 60,\r\n          backgroundColor: bgColor,\r\n        }}\r\n      >\r\n        <img src={icon} alt='' />\r\n      </Avatar>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          color: 'text.secondary',\r\n          mb: 2,\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {text}\r\n      </Box>\r\n      <Box\r\n        component='h3'\r\n        sx={{\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: 20,\r\n        }}\r\n      >\r\n        {value}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default StatsCard;\r\n\r\nStatsCard.defaultProps = {\r\n  bgColor: '',\r\n  value: '',\r\n};\r\n\r\nStatsCard.propTypes = {\r\n  text: PropTypes.any.isRequired,\r\n  bgColor: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  value: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {AreaChart, Area, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst IncomeGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer height={200} width='100%'>\r\n      <AreaChart data={data}>\r\n        <defs>\r\n          <linearGradient id='color15' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor='#FFA940' stopOpacity={0.8} />\r\n            <stop offset='95%' stopColor='#FFF5F7' stopOpacity={0.8} />\r\n          </linearGradient>\r\n        </defs>\r\n\r\n        <Area\r\n          type='monotone'\r\n          dataKey='revenue'\r\n          stroke='#FFA940'\r\n          strokeWidth={3}\r\n          fill='url(#color15)'\r\n          dot={{r: 0}}\r\n        />\r\n        <Tooltip\r\n          labelStyle={{color: 'black'}}\r\n          cursor={false}\r\n          content={(data) => {\r\n            return data.payload[0] ? (\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  p: 4,\r\n                  color: 'text.primary',\r\n                }}\r\n              >\r\n                {data.payload[0].payload.revenue}\r\n              </Box>\r\n            ) : null;\r\n          }}\r\n          wrapperStyle={{\r\n            background: '#FFA940',\r\n            borderRadius: 10,\r\n            radius: 10,\r\n            overflow: 'hidden',\r\n          }}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default IncomeGraph;\r\n\r\nIncomeGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nIncomeGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WebTrafficGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer height={200} width='100%'>\r\n      <AreaChart\r\n        width={500}\r\n        height={100}\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <defs>\r\n          <linearGradient id='colorg14' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor='#E53E3E' stopOpacity={0.8} />\r\n            <stop offset='95%' stopColor='#FFF5F7' stopOpacity={0.8} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          type='monotone'\r\n          dataKey='traffic'\r\n          stroke='#E53E3E'\r\n          fill='url(#colorg14)'\r\n          strokeWidth={4}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default WebTrafficGraph;\r\n\r\nWebTrafficGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nWebTrafficGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RevenueGrowthGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer height={200} width='100%'>\r\n      <AreaChart\r\n        width={500}\r\n        height={100}\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <defs>\r\n          <linearGradient id='colorg13' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor='#3182CE' stopOpacity={0.8} />\r\n            <stop offset='95%' stopColor='#FFF5F7' stopOpacity={0.8} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          type='monotone'\r\n          dataKey='growth'\r\n          stroke='#3182CE'\r\n          fill='url(#colorg13)'\r\n          strokeWidth={4}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default RevenueGrowthGraph;\r\n\r\nRevenueGrowthGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nRevenueGrowthGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport IncomeGraph from './IncomeGraph';\r\nimport WebTrafficGraph from './WebTrafficGraph';\r\nimport RevenueGrowthGraph from './RevenueGrowthGraph';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst StatsCardWithGraph = ({\r\n  data,\r\n  text,\r\n  bgColor,\r\n  headingColor,\r\n  valueColor,\r\n  type,\r\n}) => {\r\n  const onGetGraph = () => {\r\n    switch (type) {\r\n      case 'incomeGraph':\r\n        return <IncomeGraph data={data.graphData} />;\r\n\r\n      case 'trafficGraph':\r\n        return <WebTrafficGraph data={data.graphData} />;\r\n\r\n      case 'revenueGrowth':\r\n        return <RevenueGrowthGraph data={data.graphData} />;\r\n\r\n      default:\r\n        return <IncomeGraph data={data.graphData} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        backgroundColor: bgColor,\r\n        height: 1,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: headingColor,\r\n              fontSize: 16,\r\n              fontWeight: Fonts.BOLD,\r\n              mb: {xs: 4, md: 6},\r\n            }}\r\n          >\r\n            {text}\r\n          </Box>\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              color: valueColor,\r\n              fontSize: 20,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {data.value}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            pl: -10,\r\n            mr: -8,\r\n            mb: -10,\r\n          }}\r\n        >\r\n          {onGetGraph()}\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default StatsCardWithGraph;\r\n\r\nStatsCardWithGraph.defaultProps = {\r\n  bgColor: '',\r\n  data: {\r\n    value: '',\r\n    graphData: [],\r\n  },\r\n  type: '',\r\n  headingColor: '',\r\n  valueColor: '',\r\n};\r\n\r\nStatsCardWithGraph.propTypes = {\r\n  text: PropTypes.any.isRequired,\r\n  bgColor: PropTypes.string,\r\n  data: PropTypes.object,\r\n  type: PropTypes.string,\r\n  headingColor: PropTypes.string,\r\n  valueColor: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {Line, LineChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ActiveUsersGraph = ({data}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        '& .containerGraph': {\r\n          width: '100%',\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={200} className='containerGraph'>\r\n        <LineChart data={data}>\r\n          <Line\r\n            type='monotone'\r\n            dataKey='activeUsers'\r\n            stroke='#4299E1'\r\n            strokeWidth={4}\r\n            dot={{r: 0}}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActiveUsersGraph;\r\n\r\nActiveUsersGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nActiveUsersGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ExtraRevenueGraph = ({data}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        '& .containerGraph': {\r\n          width: '100%',\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={200} className='containerGraph'>\r\n        <AreaChart\r\n          width={500}\r\n          height={100}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <Area\r\n            type='monotone'\r\n            dataKey='revenue'\r\n            stroke='#4C51BF'\r\n            fill='#4C51BF'\r\n            strokeWidth={4}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExtraRevenueGraph;\r\n\r\nExtraRevenueGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nExtraRevenueGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Line, LineChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst TrafficRaiseGraph = ({data}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        '& .containerGraph': {\r\n          width: '100%',\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={200} className='containerGraph'>\r\n        <LineChart data={data}>\r\n          <Line\r\n            type='monotone'\r\n            dataKey='traffic'\r\n            stroke='#4299E1'\r\n            strokeWidth={4}\r\n            dot={{r: 4}}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TrafficRaiseGraph;\r\n\r\nTrafficRaiseGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nTrafficRaiseGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst LessOrdersGraph = ({data}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        '& .containerGraph': {\r\n          width: '100%',\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={200} className='containerGraph'>\r\n        <AreaChart\r\n          width={500}\r\n          height={100}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <Area\r\n            type='monotone'\r\n            dataKey='orders'\r\n            stroke='#E53E3E'\r\n            fill='#E53E3E'\r\n            strokeWidth={4}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LessOrdersGraph;\r\n\r\nLessOrdersGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nLessOrdersGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport ActiveUsersGraph from './ActiveUsersGraph';\r\nimport ExtraRevenueGraph from './ExtraRevenueGraph';\r\nimport TrafficRaiseGraph from './TrafficRaiseGraph';\r\nimport LessOrdersGraph from './LessOrdersGraph';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst ComparisonCard = ({\r\n  data,\r\n  text,\r\n  bgColor,\r\n  headingColor,\r\n  valueColor,\r\n  type,\r\n}) => {\r\n  const onGetGraph = () => {\r\n    switch (type) {\r\n      case 'activeUsers':\r\n        return <ActiveUsersGraph data={data.graphData} />;\r\n\r\n      case 'extraRevenue':\r\n        return <ExtraRevenueGraph data={data.graphData} />;\r\n\r\n      case 'trafficRaise':\r\n        return <TrafficRaiseGraph data={data.graphData} />;\r\n\r\n      case 'lessOrders':\r\n        return <LessOrdersGraph data={data.graphData} />;\r\n\r\n      default:\r\n        return <ActiveUsersGraph data={data.graphData} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        backgroundColor: bgColor,\r\n      }}\r\n      contentStyle={{padding: 0}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            py: 5,\r\n            px: 6,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              mb: 4,\r\n              color: headingColor,\r\n              fontWeight: Fonts.BOLD,\r\n              fontSize: 16,\r\n            }}\r\n          >\r\n            {text}\r\n          </Box>\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              color: valueColor,\r\n              fontSize: 20,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {data.value}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            position: 'relative',\r\n            mb: -4,\r\n            pt: 4,\r\n          }}\r\n        >\r\n          {onGetGraph()}\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ComparisonCard;\r\n\r\nComparisonCard.defaultProps = {\r\n  bgColor: '',\r\n  data: {\r\n    value: '',\r\n    graphData: [],\r\n  },\r\n  type: '',\r\n  headingColor: '',\r\n  valueColor: '',\r\n};\r\n\r\nComparisonCard.propTypes = {\r\n  text: PropTypes.any.isRequired,\r\n  bgColor: PropTypes.string,\r\n  data: PropTypes.object,\r\n  type: PropTypes.string,\r\n  headingColor: PropTypes.string,\r\n  valueColor: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SalesGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={220}>\r\n      <BarChart barSize={13} data={data}>\r\n        <Bar dataKey='number' fill='#E2E8F0' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SalesGraph;\r\n\r\nSalesGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nSalesGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport SalesGraph from './SalesGraph';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst Sales = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.salesToday']}\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{display: 'flex', flexDirection: 'column'}}\r\n    >\r\n      <Box\r\n        component='h2'\r\n        sx={{\r\n          mb: 2,\r\n          color: 'text.secondary',\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: {xs: 24, md: 38, xl: 36},\r\n        }}\r\n      >\r\n        {data.salesToday}\r\n      </Box>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          color: 'secondary.main',\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {data.salesYesterday} <IntlMessages id='common.yesterday' />\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          mt: 'auto',\r\n        }}\r\n      >\r\n        <SalesGraph data={data.salesGraphData} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n\r\nSales.defaultProps = {\r\n  data: {\r\n    salesToday: '',\r\n    salesYesterday: '',\r\n    salesGraphData: [],\r\n  },\r\n};\r\n\r\nSales.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AccountGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={320}>\r\n      <AreaChart\r\n        data={data}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray='3 3' />\r\n        <XAxis dataKey='name' />\r\n\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='complete'\r\n          stackId='1'\r\n          stroke='#8884d8'\r\n          fill='#8884d8'\r\n        />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='week'\r\n          stackId='1'\r\n          stroke='#82ca9d'\r\n          fill='#82ca9d'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default AccountGraph;\r\n\r\nAccountGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nAccountGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport AccountGraph from './AccountGraph';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst YourAccount = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.yourAccount']}\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{display: 'flex', flexDirection: 'column'}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mt: 'auto',\r\n        }}\r\n      >\r\n        <AccountGraph data={data} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default YourAccount;\r\n\r\nYourAccount.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nYourAccount.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Cell, Pie, PieChart} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill='white'\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline='central'\r\n    >\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst EarningGraph = ({data}) => {\r\n  return (\r\n    <PieChart width={400} height={400}>\r\n      <Pie\r\n        data={data}\r\n        cx={200}\r\n        cy={200}\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={150}\r\n        fill='#8884d8'\r\n        dataKey='value'\r\n      >\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={entry.color} />\r\n        ))}\r\n      </Pie>\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default EarningGraph;\r\n\r\nEarningGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nEarningGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Categories = ({data}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        pl: {xl: 5},\r\n      }}\r\n    >\r\n      {data.map((item) => {\r\n        return (\r\n          <Box\r\n            sx={{\r\n              px: 3,\r\n              position: 'relative',\r\n              display: 'flex',\r\n              flex: 1,\r\n              alignItems: 'center',\r\n            }}\r\n            key={item.id}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                height: {xs: 12, xl: 16},\r\n                width: {xs: 12, xl: 16},\r\n                p: 1,\r\n                display: 'block',\r\n                borderRadius: '50%',\r\n                backgroundColor: item.colorName,\r\n              }}\r\n            />\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                textTransform: 'uppercase',\r\n                color: 'text.secondary',\r\n                ml: 3,\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              {item.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n\r\nCategories.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nCategories.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport EarningGraph from './EarningGraph';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport Categories from './Categories';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst EarningInMonth = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.earningInMonth']}\r\n      footer={<Categories data={data} />}\r\n      sxStyle={{height: 1}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          my: 3,\r\n          display: 'flex',\r\n          flex: 1,\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          '& .recharts-wrapper': {\r\n            width: '260px !important',\r\n            height: '260px !important',\r\n            alignSelf: 'center',\r\n            '& .recharts-surface': {\r\n              width: '260px !important',\r\n              height: '260px !important',\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <EarningGraph data={data} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default EarningInMonth;\r\n\r\nEarningInMonth.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nEarningInMonth.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Line, LineChart} from 'recharts';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LineGraph = (props) => {\r\n  const {data, graphColor} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ml: 'auto',\r\n        '& .lineChart': {\r\n          mb: 2,\r\n        },\r\n      }}\r\n    >\r\n      <LineChart className='lineChart' width={300} height={40} data={data}>\r\n        <Line\r\n          type='monotone'\r\n          dataKey='value'\r\n          stroke={graphColor}\r\n          strokeWidth={5}\r\n          dot={false}\r\n        />\r\n      </LineChart>\r\n\r\n      <LineChart width={300} height={40} data={data}>\r\n        <Line\r\n          type='monotone'\r\n          dataKey='value'\r\n          stroke={graphColor}\r\n          strokeWidth={5}\r\n          dot={false}\r\n          strokeDasharray='5 5'\r\n        />\r\n      </LineChart>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n\r\nLineGraph.defaultProps = {\r\n  data: [],\r\n  graphColor: '',\r\n};\r\n\r\nLineGraph.propTypes = {\r\n  data: PropTypes.array,\r\n  graphColor: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport LineGraph from './LineGraph';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst MetricTitleLineGraphCard = ({\r\n  title,\r\n  titleColor,\r\n  valueColor,\r\n  differenceColor,\r\n  bgColor,\r\n  data,\r\n  graphColor,\r\n}) => {\r\n  return (\r\n    <AppCard sxStyle={{backgroundColor: bgColor}}>\r\n      <Box\r\n        component='h3'\r\n        sx={{\r\n          mb: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          fontSize: 16,\r\n          color: titleColor,\r\n        }}\r\n      >\r\n        {title}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          mb: {xs: 3, xl: 0},\r\n        }}\r\n      >\r\n        <Box\r\n          component='h2'\r\n          sx={{\r\n            mb: 0,\r\n            mr: 3,\r\n            color: valueColor,\r\n            fontWeight: Fonts.MEDIUM,\r\n            fontSize: {xs: 24, md: 30, xl: 36},\r\n          }}\r\n        >\r\n          {data.value}\r\n        </Box>\r\n\r\n        <LineGraph data={data.graphData} graphColor={graphColor} />\r\n      </Box>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          fontSize: 14,\r\n          color: differenceColor,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mr: 1,\r\n          }}\r\n          component='span'\r\n        >\r\n          {data.difference}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mr: 1,\r\n          }}\r\n          component='span'\r\n        >\r\n          <IntlMessages id='dashboard.thisMonth' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mr: 1,\r\n          }}\r\n          component='span'\r\n        >\r\n          {data.differencePercent}\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default MetricTitleLineGraphCard;\r\n\r\nMetricTitleLineGraphCard.defaultProps = {\r\n  bgColor: '',\r\n  titleColor: '',\r\n  valueColor: '',\r\n  data: {\r\n    value: '',\r\n    difference: '',\r\n    differencePercent: '',\r\n    graphData: [],\r\n  },\r\n  differenceColor: '',\r\n  graphColor: '',\r\n};\r\n\r\nMetricTitleLineGraphCard.propTypes = {\r\n  title: PropTypes.any.isRequired,\r\n  bgColor: PropTypes.string,\r\n  titleColor: PropTypes.string,\r\n  valueColor: PropTypes.string,\r\n  data: PropTypes.object,\r\n  differenceColor: PropTypes.string,\r\n  graphColor: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {Area, AreaChart, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GraphFile = ({data, strokeColor, areaColor}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={140}>\r\n      <AreaChart data={data} margin={{top: 20, right: 0, left: 0, bottom: 0}}>\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <defs>\r\n          <linearGradient id='color15' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor={areaColor} stopOpacity={0.8} />\r\n            <stop offset='95%' stopColor={strokeColor} stopOpacity={0.8} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey='value'\r\n          strokeWidth={4}\r\n          stackId='2'\r\n          stroke={strokeColor}\r\n          fill={areaColor}\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default GraphFile;\r\n\r\nGraphFile.defaultProps = {\r\n  strokeColor: '#4299E1',\r\n  areaColor: '#90CDF4',\r\n  data: [],\r\n};\r\n\r\nGraphFile.propTypes = {\r\n  strokeColor: PropTypes.string,\r\n  areaColor: PropTypes.string,\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport GraphFile from './GraphFile';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport {green} from '@mui/material/colors';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst FloatingGraphs = ({data, title}) => {\r\n  return (\r\n    <AppCard sxStyle={{height: 1, textAlign: 'center'}}>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          mb: 3,\r\n          color: 'text.secondary',\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {title}\r\n      </Box>\r\n      <Box\r\n        component='h3'\r\n        sx={{\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: 20,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            px: 3,\r\n          }}\r\n        >\r\n          {data.value}\r\n        </Box>\r\n        {data.change > 0 ? (\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              color: green[500],\r\n              fontWeight: Fonts.MEDIUM,\r\n              mt: 1,\r\n              fontSize: 16,\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                fontWeight: Fonts.LIGHT,\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              <ArrowUpwardIcon />\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 1,\r\n                mb: 1,\r\n              }}\r\n            >\r\n              {data.change}\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              color: 'secondary.main',\r\n              fontWeight: Fonts.MEDIUM,\r\n              mt: 1,\r\n              fontSize: 16,\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                fontWeight: Fonts.LIGHT,\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              <ArrowDownwardIcon />\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 1,\r\n                mb: 1,\r\n              }}\r\n            >\r\n              {data.change}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          m: -8,\r\n          mt: -2,\r\n        }}\r\n      >\r\n        <GraphFile\r\n          data={data.graphData}\r\n          strokeColor={data.strokeColor}\r\n          areaColor={data.areaColor}\r\n        />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default FloatingGraphs;\r\n\r\nFloatingGraphs.defaultProps = {\r\n  title: '',\r\n  data: {\r\n    value: '',\r\n    change: 0,\r\n    strokeColor: '#4299E1',\r\n    areaColor: '#90CDF4',\r\n    graphData: [],\r\n  },\r\n};\r\n\r\nFloatingGraphs.propTypes = {\r\n  data: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {Line, LineChart, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst VisitsGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={220}>\r\n      <LineChart data={data}>\r\n        <Line\r\n          type='monotone'\r\n          dataKey='value'\r\n          stroke='#4299E1'\r\n          strokeWidth={3}\r\n          dot={{r: 5}}\r\n        />\r\n        <Tooltip\r\n          labelStyle={{color: 'black'}}\r\n          cursor={false}\r\n          content={(data) => {\r\n            return data.payload[0] ? (\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  p: 4,\r\n                  color: 'primary.contrastText',\r\n                }}\r\n              >\r\n                {data.payload[0].payload.value}\r\n              </Box>\r\n            ) : null;\r\n          }}\r\n          wrapperStyle={{\r\n            background: '#4299E1',\r\n            borderRadius: 10,\r\n            radius: 10,\r\n            overflow: 'hidden',\r\n          }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default VisitsGraph;\r\n\r\nVisitsGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nVisitsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport VisitsGraph from './VisitsGraph';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst Visits = ({data}) => {\r\n  const [graphData, setGraphData] = useState(data.graphData.dataOne);\r\n\r\n  const handleWeekChange = (value) => {\r\n    switch (value) {\r\n      case 'This Week':\r\n        setGraphData(data.graphData.dataTwo);\r\n        break;\r\n      case 'Last Weeks':\r\n        setGraphData(data.graphData.dataOne);\r\n        break;\r\n      case 'Last Month':\r\n        setGraphData(data.graphData.dataThree);\r\n        break;\r\n      default:\r\n        setGraphData(data.graphData.dataOne);\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.visits']}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleWeekChange}\r\n        />\r\n      }\r\n      sxStyle={{height: 1}}\r\n      footer={\r\n        <Box\r\n          sx={{\r\n            textTransform: 'uppercase',\r\n            width: 1,\r\n            mb: 1,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: Fonts.MEDIUM,\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.primary',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.new' />\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 2,\r\n                color: 'primary.main',\r\n              }}\r\n            >\r\n              {data.new}\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.primary',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.returning' />\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 2,\r\n                color: 'primary.main',\r\n              }}\r\n            >\r\n              {data.returning}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      }\r\n    >\r\n      <VisitsGraph data={graphData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Visits;\r\n\r\nVisits.defaultProps = {\r\n  data: {\r\n    new: 0,\r\n    returning: 0,\r\n    graphData: {\r\n      dataOne: [],\r\n      dataTwo: [],\r\n      dataThree: [],\r\n    },\r\n  },\r\n};\r\n\r\nVisits.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst StatsCardSecond = ({icon, bgColor, text, value}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <Avatar\r\n        sx={{\r\n          padding: 3,\r\n          display: 'flex',\r\n          mb: {xs: 4, xl: 6},\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n          height: {xs: 60},\r\n          width: {xs: 60},\r\n          backgroundColor: bgColor,\r\n        }}\r\n      >\r\n        <img src={icon} alt='' />\r\n      </Avatar>\r\n      <Box\r\n        component='h3'\r\n        sx={{\r\n          mb: 2,\r\n          fontSize: 20,\r\n          fontWeight: Fonts.MEDIUM,\r\n        }}\r\n      >\r\n        {value}\r\n      </Box>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          mb: 2,\r\n          color: 'text.secondary',\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {text}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default StatsCardSecond;\r\n\r\nStatsCardSecond.defaultProps = {\r\n  bgColor: '',\r\n  value: '',\r\n};\r\n\r\nStatsCardSecond.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  text: PropTypes.any.isRequired,\r\n  value: PropTypes.string,\r\n  icon: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer, XAxis} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OrdersGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={200}>\r\n      <BarChart barSize={8} data={data}>\r\n        <XAxis dataKey='number' hide />\r\n        <Bar\r\n          dataKey='value'\r\n          fill='#FFFFFF'\r\n          label={{position: 'top', color: 'white'}}\r\n        />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default OrdersGraph;\r\n\r\nOrdersGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nOrdersGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport OrdersGraph from './OrdersGraph';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst Orders = ({data}) => {\r\n  const [graphData, setGraphData] = useState(data.graphData.dataTwo);\r\n  const {messages} = useIntl();\r\n\r\n  const handleWeekChange = (value) => {\r\n    switch (value) {\r\n      case messages['dashboard.thisWeek']:\r\n        setGraphData(data.graphData.dataOne);\r\n        break;\r\n      case messages['dashboard.lastWeeks']:\r\n        setGraphData(data.graphData.dataTwo);\r\n        break;\r\n      case messages['dashboard.lastMonth']:\r\n        setGraphData(data.graphData.dataThree);\r\n        break;\r\n      default:\r\n        setGraphData(data.graphData.dataOne);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        backgroundColor: (theme) => theme.palette.primary.main,\r\n        color: 'white',\r\n        '& .MuiSelect-select, & .MuiSelect-icon': {\r\n          color: '#FFFFFF',\r\n        },\r\n        '& .recharts-label': {\r\n          fill: '#FFFFFF',\r\n        },\r\n      }}\r\n      title={messages['common.orders']}\r\n      titleStyle={{color: '#FFFFFF'}}\r\n      action={\r\n        <AppSelect\r\n          menus={[\r\n            messages['dashboard.thisWeek'],\r\n            messages['dashboard.lastWeeks'],\r\n            messages['dashboard.lastMonth'],\r\n          ]}\r\n          defaultValue={messages['dashboard.thisWeek']}\r\n          onChange={handleWeekChange}\r\n        />\r\n      }\r\n      footer={\r\n        <Box\r\n          sx={{\r\n            textTransform: 'uppercase',\r\n            width: 1,\r\n            mb: 1,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: Fonts.MEDIUM,\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: '#FFFFFF88',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.revenue' />\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 2,\r\n                color: 'primary.contrastText',\r\n              }}\r\n            >\r\n              {data.revenue}\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: '#FFFFFF88',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.orders' />\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 2,\r\n                color: 'primary.contrastText',\r\n              }}\r\n            >\r\n              {data.orders}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      }\r\n    >\r\n      <OrdersGraph data={graphData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n\r\nOrders.defaultProps = {\r\n  data: {\r\n    new: 0,\r\n    returning: 0,\r\n    graphData: {\r\n      dataOne: [],\r\n      dataTwo: [],\r\n      dataThree: [],\r\n    },\r\n  },\r\n};\r\n\r\nOrders.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {Bar, BarChart, ResponsiveContainer, XAxis} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileViewsGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={100}>\r\n      <BarChart barSize={13} data={data}>\r\n        <XAxis dataKey='data' axisLine={false} tickLine={false} />\r\n        <Bar dataKey='number' fill='#E2E8F0' />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ProfileViewsGraph;\r\n\r\nProfileViewsGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nProfileViewsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport ProfileViewsGraph from './ProfileViewsGraph';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst ProfileViews = ({data}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{display: 'flex', flexDirection: 'column'}}\r\n    >\r\n      <Box\r\n        component='h3'\r\n        sx={{\r\n          mb: 1,\r\n          color: 'text.primary',\r\n          fontSize: 20,\r\n          fontWeight: Fonts.MEDIUM,\r\n        }}\r\n      >\r\n        {data.views}\r\n      </Box>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontSize: 14,\r\n          fontWeight: Fonts.REGULAR,\r\n        }}\r\n      >\r\n        <IntlMessages id='dashboard.profileViews' />\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          mt: 'auto',\r\n        }}\r\n      >\r\n        <ProfileViewsGraph data={data.graphData} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ProfileViews;\r\n\r\nProfileViews.defaultProps = {\r\n  data: {\r\n    views: '',\r\n    graphData: [],\r\n  },\r\n};\r\n\r\nProfileViews.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {Line, LineChart, ResponsiveContainer} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst WorkViewsGraph = ({data}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 0,\r\n        mt: 'auto',\r\n        flexDirection: 'auto',\r\n        objectPosition: 'bottom',\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={100} width='100%'>\r\n        <LineChart data={data}>\r\n          <Line\r\n            type='monotone'\r\n            dataKey='value'\r\n            stroke='#E2E8F0'\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default WorkViewsGraph;\r\n\r\nWorkViewsGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nWorkViewsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport WorkViewsGraph from './WorkViewsGraph';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst WorkViews = ({data}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{display: 'flex', flexDirection: 'column'}}\r\n    >\r\n      <Box\r\n        component='h3'\r\n        sx={{\r\n          mb: 1,\r\n          color: 'secondary.main',\r\n          fontSize: 20,\r\n          fontWeight: Fonts.MEDIUM,\r\n        }}\r\n      >\r\n        {data.views}\r\n      </Box>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontSize: 14,\r\n          fontWeight: Fonts.REGULAR,\r\n        }}\r\n      >\r\n        <IntlMessages id='dashboard.workViews' />\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          mt: 'auto',\r\n        }}\r\n      >\r\n        <WorkViewsGraph data={data.graphData} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default WorkViews;\r\n\r\nWorkViews.defaultProps = {\r\n  data: {\r\n    views: '',\r\n    graphData: [],\r\n  },\r\n};\r\n\r\nWorkViews.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\r\nimport SpeakerNotesOutlinedIcon from '@mui/icons-material/SpeakerNotesOutlined';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst SocialDataCard = ({data}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          py: {xs: 4, xl: 8},\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            px: 3,\r\n            width: '50%',\r\n            borderRight: 4,\r\n            borderColor: 'grey.100',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              color: 'secondary.main',\r\n              fontSize: {xs: 24, sm: 30, xl: 36},\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <FavoriteBorderOutlinedIcon />\r\n          </Box>\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              mb: 2,\r\n              fontSize: 20,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {data.likes}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              mb: 1,\r\n              fontSize: 14,\r\n              fontWeight: Fonts.REGULAR,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.likes' />\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            width: '50%',\r\n            px: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              color: 'primary.main',\r\n              fontSize: {xs: 24, sm: 30, xl: 36},\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <SpeakerNotesOutlinedIcon />\r\n          </Box>\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              mb: 2,\r\n              fontSize: 20,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {data.comments}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              mb: 1,\r\n              fontSize: 14,\r\n              fontWeight: Fonts.REGULAR,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.comments' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default SocialDataCard;\r\n\r\nSocialDataCard.defaultProps = {};\r\n\r\nSocialDataCard.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Scatter,\r\n  ScatterChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatsGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={370}>\r\n      <ScatterChart margin={{top: 20, right: 0, bottom: 20, left: 0}}>\r\n        <CartesianGrid\r\n          strokeDasharray='5 5'\r\n          stroke='#E2E8F0'\r\n          vertical={false}\r\n        />\r\n        <XAxis\r\n          type='number'\r\n          dataKey='number'\r\n          name='number'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          ticks={[5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60]}\r\n        />\r\n        <YAxis\r\n          type='number'\r\n          dataKey='value'\r\n          name='value'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          ticks={[1000, 2000, 3000, 4000, 5000, 6000]}\r\n        />\r\n        <Tooltip\r\n          cursor={{strokeDasharray: '3 3'}}\r\n          labelStyle={{color: 'black'}}\r\n        />\r\n        <Scatter data={data.stats1} fill='#E53E3E' dot={{r: 7}} />\r\n        <Scatter data={data.stats2} fill='#38B2AC' dot={{r: 7}} />\r\n      </ScatterChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatsGraph;\r\n\r\nStatsGraph.defaultProps = {\r\n  data: {\r\n    stats1: [],\r\n    stats2: [],\r\n  },\r\n};\r\n\r\nStatsGraph.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport StatsGraph from './StatsGraph';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Box} from '@mui/material';\r\n\r\nconst Stats = ({data}) => {\r\n  const [graphData, setGraphData] = useState(data.dataOne);\r\n\r\n  const handleYearChange = (value) => {\r\n    switch (value) {\r\n      case 2017:\r\n        setGraphData(data.dataTwo);\r\n        break;\r\n      case 2018:\r\n        setGraphData(data.dataThree);\r\n        break;\r\n      case 2019:\r\n        setGraphData(data.dataOne);\r\n        break;\r\n      default:\r\n        setGraphData(data.dataOne);\r\n    }\r\n  };\r\n\r\n  const handleMonthChange = (value) => {\r\n    switch (value) {\r\n      case 'June':\r\n        setGraphData(data.dataTwo);\r\n        break;\r\n      case 'July':\r\n        setGraphData(data.dataThree);\r\n        break;\r\n      case 'August':\r\n        setGraphData(data.dataOne);\r\n        break;\r\n      default:\r\n        setGraphData(data.dataThree);\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.companyProduction']}\r\n      action={\r\n        <Box>\r\n          <AppSelect\r\n            menus={[2019, 2018, 2017]}\r\n            defaultValue={2019}\r\n            onChange={handleYearChange}\r\n          />\r\n          <AppSelect\r\n            menus={[\r\n              messages['common.june'],\r\n              messages['common.july'],\r\n              messages['common.august'],\r\n            ]}\r\n            defaultValue={messages['common.june']}\r\n            onChange={handleMonthChange}\r\n          />\r\n        </Box>\r\n      }\r\n    >\r\n      <StatsGraph data={graphData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n\r\nStats.defaultProps = {\r\n  data: {\r\n    dataOne: {\r\n      stats1: [],\r\n      stats2: [],\r\n    },\r\n    dataTwo: {\r\n      stats1: [],\r\n      stats2: [],\r\n    },\r\n    dataThree: {\r\n      stats1: [],\r\n      stats2: [],\r\n    },\r\n  },\r\n};\r\n\r\nStats.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Cell,\r\n  LabelList,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst SocialVisitorsGraph = ({data}) => {\r\n  const customizedLabel = (x, y, value) => {\r\n    return (\r\n      <text\r\n        x={x + 15}\r\n        y={y}\r\n        dy={-20}\r\n        fill={value > 0 ? '#48BB78' : '#E53E3E'}\r\n        className='graphText'\r\n        textAnchor='middle'\r\n      >\r\n        {value > 0 ? '+' + value : value}%\r\n      </text>\r\n    );\r\n  };\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        '& .graphText': {\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: {xs: 16, xl: 18},\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer width='100%' height={300}>\r\n        <BarChart\r\n          barSize={8}\r\n          data={data}\r\n          margin={{top: 30, right: 0, left: 0, bottom: 20}}\r\n        >\r\n          <XAxis dataKey='visitors' axisLine={false} tickLine={false} hide />\r\n          <YAxis hide />\r\n          <Bar dataKey='visitors'>\r\n            <LabelList\r\n              dataKey='change'\r\n              content={(x, y, value) => customizedLabel(x, y, value)}\r\n            />\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={entry.color} />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SocialVisitorsGraph;\r\n\r\nSocialVisitorsGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nSocialVisitorsGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst Categories = ({data}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n      }}\r\n    >\r\n      {data.map((item) => {\r\n        return (\r\n          <Box\r\n            sx={{\r\n              px: 4.5,\r\n              mb: 2,\r\n            }}\r\n            key={item.id}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  height: {xs: 12, xl: 16},\r\n                  width: {xs: 12, xl: 16},\r\n                  borderRadius: '50%',\r\n                  display: 'block',\r\n                  bgcolor: item.color,\r\n                  p: 1,\r\n                  mr: 2,\r\n                }}\r\n              />\r\n              <Box\r\n                component='p'\r\n                sx={{\r\n                  mb: 1,\r\n                  fontWeight: Fonts.MEDIUM,\r\n                  fontSize: 16,\r\n                }}\r\n              >\r\n                {item.visitors}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                textTransform: 'capitalize',\r\n                color: 'text.secondary',\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              {item.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n\r\nCategories.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nCategories.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport SocialVisitorsGraph from './SocialVisitorsGraph';\r\nimport PropTypes from 'prop-types';\r\nimport Categories from './Categories';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst SocialVisitors = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.socialVisitors']}\r\n      action={messages['common.viewAll']}\r\n    >\r\n      <SocialVisitorsGraph data={data} />\r\n\r\n      <Categories data={data} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default SocialVisitors;\r\n\r\nSocialVisitors.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nSocialVisitors.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Scatter,\r\n  ScatterChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SubscriptionGraph = ({data}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={340}>\r\n      <ScatterChart margin={{top: 0, right: 0, bottom: 0, left: 0}}>\r\n        <CartesianGrid\r\n          strokeDasharray='5 5'\r\n          stroke='#E2E8F0'\r\n          vertical={false}\r\n        />\r\n        <XAxis\r\n          type='number'\r\n          dataKey='number'\r\n          name='number'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          ticks={[5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60]}\r\n        />\r\n        <YAxis\r\n          type='number'\r\n          dataKey='value'\r\n          name='value'\r\n          tickLine={false}\r\n          axisLine={false}\r\n          ticks={[100, 200, 300, 400, 500, 600]}\r\n        />\r\n        <Tooltip\r\n          cursor={{strokeDasharray: '3 3'}}\r\n          labelStyle={{color: 'black'}}\r\n        />\r\n        <Scatter data={data} fill='#8884d8' />\r\n      </ScatterChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SubscriptionGraph;\r\n\r\nSubscriptionGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nSubscriptionGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport SubscriptionGraph from './SubscriptionGraph';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst Subscriptions = ({data}) => {\r\n  const [graphData, setGraphData] = useState(data.dataOne);\r\n\r\n  const handleYearChange = (value) => {\r\n    switch (value) {\r\n      case 2017:\r\n        setGraphData(data.dataTwo);\r\n        break;\r\n      case 2018:\r\n        setGraphData(data.dataThree);\r\n        break;\r\n      case 2019:\r\n        setGraphData(data.dataOne);\r\n        break;\r\n      default:\r\n        setGraphData(data.dataOne);\r\n    }\r\n  };\r\n\r\n  const handleMonthChange = (value) => {\r\n    switch (value) {\r\n      case 'June':\r\n        setGraphData(data.dataTwo);\r\n        break;\r\n      case 'July':\r\n        setGraphData(data.dataThree);\r\n        break;\r\n      case 'August':\r\n        setGraphData(data.dataOne);\r\n        break;\r\n      default:\r\n        setGraphData(data.dataThree);\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.subscriptions']}\r\n      action={\r\n        <Box\r\n          sx={{\r\n            textAlign: {sm: 'right'},\r\n          }}\r\n        >\r\n          <AppSelect\r\n            menus={[2019, 2018, 2017]}\r\n            defaultValue={2019}\r\n            onChange={handleYearChange}\r\n          />\r\n          <AppSelect\r\n            menus={[\r\n              messages['common.june'],\r\n              messages['common.july'],\r\n              messages['common.august'],\r\n            ]}\r\n            defaultValue={messages['common.june']}\r\n            onChange={handleMonthChange}\r\n          />\r\n        </Box>\r\n      }\r\n    >\r\n      <SubscriptionGraph data={graphData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Subscriptions;\r\n\r\nSubscriptions.defaultProps = {\r\n  data: {\r\n    dataOne: [],\r\n    dataTwo: [],\r\n    dataThree: [],\r\n  },\r\n};\r\n\r\nSubscriptions.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppGrid from '@crema/core/AppGrid';\r\n\r\nconst Share = (props) => {\r\n  const {data} = props;\r\n\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} title='Share'>\r\n      <AppGrid\r\n        data={data}\r\n        itemPadding={5}\r\n        responsive={{\r\n          xs: 1,\r\n          sm: 2,\r\n          md: 3,\r\n          lg: 3,\r\n          xl: 4,\r\n        }}\r\n        renderRow={(data, index) => (\r\n          <Box\r\n            key={index}\r\n            sx={{\r\n              backgroundColor: data.color,\r\n              width: {xs: 50, xl: 65},\r\n              color: (theme) => theme.palette.primary.contrastText,\r\n              padding: '6px 5px',\r\n              borderRadius: 1,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <i className={'zmdi zmdi-' + data.icon} />\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                ml: 1,\r\n              }}\r\n            >\r\n              {data.value}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Share;\r\n\r\nShare.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetMetricsData} from '../../../redux/actions';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport StatsCard from './StatsCard';\r\nimport StatsCardWithGraph from './StatsCardWithGraph';\r\nimport ComparisonCard from './ComparisonCard';\r\nimport Sales from './Sales';\r\nimport YourAccount from './YourAccount';\r\nimport EarningInMonth from './EarningInMonth';\r\nimport MetricTitleLineGraphCard from './MetricTitleLineGraphCard';\r\nimport FloatingGraphs from './FloatingGraphs';\r\nimport Visits from './Visits';\r\nimport StatsCardSecond from './StatsCardSecond';\r\nimport Orders from './Orders';\r\nimport ProfileViews from './ProfileViews';\r\nimport WorkViews from './WorkViews';\r\nimport SocialDataCard from './SocialDataCard';\r\nimport Stats from './Stats';\r\nimport SocialVisitors from './SocialVisitors';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport Subscriptions from './Subscriptions';\r\nimport Share from './Share';\r\nimport {blue, green, grey, indigo, red} from '@mui/material/colors';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AppAnimate from '@crema/core/AppAnimate';\r\nimport {useIntl} from 'react-intl';\r\nimport {AppLoader} from '../../../@crema';\r\n\r\nconst Metrics = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetMetricsData());\r\n  }, [dispatch]);\r\n  const {messages} = useIntl();\r\n\r\n  const metricsData = useSelector(({dashboard}) => dashboard.metricsData);\r\n\r\n  return (\r\n    <>\r\n      {metricsData ? (\r\n        <AppAnimate>\r\n          <>\r\n            <Box\r\n              component='h2'\r\n              sx={{\r\n                color: 'text.primary',\r\n                mb: {xs: 4, sm: 4, xl: 6},\r\n                fontSize: 16,\r\n                fontWeight: Fonts.BOLD,\r\n              }}\r\n            >\r\n              <IntlMessages id='dashboard.metrics' />\r\n            </Box>\r\n\r\n            <AppGridContainer>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCard\r\n                  text={messages['dashboard.ordersThisYear']}\r\n                  value={metricsData.ordersThisYear}\r\n                  bgColor={red[500]}\r\n                  icon={'/assets/images/metricsIcons/order.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCard\r\n                  text={messages['dashboard.revenueThisYear']}\r\n                  value={metricsData.revenueThisYear}\r\n                  bgColor={blue[300]}\r\n                  icon={'/assets/images/metricsIcons/revenue.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCard\r\n                  text={messages['dashboard.visitsThisYear']}\r\n                  value={metricsData.visitsThisYear}\r\n                  bgColor={indigo[400]}\r\n                  icon={'/assets/images/metricsIcons/visits.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCard\r\n                  text={messages['dashboard.queriesThisYear']}\r\n                  value={metricsData.queriesThisYear}\r\n                  bgColor={green[500]}\r\n                  icon={'/assets/images/metricsIcons/querries.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <StatsCardWithGraph\r\n                  text={messages['dashboard.incomeLastYear']}\r\n                  data={metricsData.incomeLastYear}\r\n                  type='incomeGraph'\r\n                  headingColor='text.primary'\r\n                  valueColor='#FFA940'\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <StatsCardWithGraph\r\n                  text={messages['dashboard.webTraffic']}\r\n                  data={metricsData.websiteTrafficData}\r\n                  bgColor='background.paper'\r\n                  type='trafficGraph'\r\n                  headingColor='text.primary'\r\n                  valueColor={red[600]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <StatsCardWithGraph\r\n                  text={messages['dashboard.growthInRevenue']}\r\n                  data={metricsData.revenueGrowthData}\r\n                  bgColor='background.paper'\r\n                  type='revenueGrowth'\r\n                  headingColor='text.primary'\r\n                  valueColor={blue[500]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <ComparisonCard\r\n                  text={messages['dashboard.incrementInUsers']}\r\n                  data={metricsData.incrementActiveUsers}\r\n                  bgColor='background.paper'\r\n                  type='activeUsers'\r\n                  headingColor='text.primary'\r\n                  valueColor='#4299E1'\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <ComparisonCard\r\n                  text={messages['dashboard.extraRevenue']}\r\n                  data={metricsData.extraRevenue}\r\n                  bgColor='background.paper'\r\n                  type='extraRevenue'\r\n                  headingColor='text.primary'\r\n                  valueColor='#4C51BF'\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <ComparisonCard\r\n                  text={messages['dashboard.trafficRaise']}\r\n                  data={metricsData.trafficRaise}\r\n                  bgColor='background.paper'\r\n                  type='trafficRaise'\r\n                  headingColor='text.primary'\r\n                  valueColor={blue[500]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <ComparisonCard\r\n                  text={messages['dashboard.lessOrders']}\r\n                  data={metricsData.lessOrders}\r\n                  bgColor='background.paper'\r\n                  type='lessOrders'\r\n                  headingColor='text.primary'\r\n                  valueColor={red[500]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <Sales data={metricsData.salesData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <YourAccount data={metricsData.accountData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <EarningInMonth data={metricsData.earningInMonth} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={7}>\r\n                <Subscriptions data={metricsData.subscriptionData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={5}>\r\n                <Box\r\n                  sx={{\r\n                    mb: 8,\r\n                  }}\r\n                >\r\n                  <MetricTitleLineGraphCard\r\n                    data={metricsData.metricsLineGraphData}\r\n                    title={messages['dashboard.rides']}\r\n                    titleColor='rgb(73, 80, 87)'\r\n                    valueColor={grey[500]}\r\n                    differenceColor={red[500]}\r\n                    bgColor='white'\r\n                    graphColor='#4299E1'\r\n                  />\r\n                </Box>\r\n\r\n                <Box>\r\n                  <MetricTitleLineGraphCard\r\n                    data={metricsData.metricsLineGraphData}\r\n                    title={messages['dashboard.visits']}\r\n                    titleColor='white'\r\n                    valueColor={indigo[300]}\r\n                    differenceColor='white'\r\n                    bgColor={indigo[500]}\r\n                    graphColor='#FFFFFF'\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCardSecond\r\n                  text={messages['dashboard.revenueThisYear']}\r\n                  value={metricsData.revenueThisYear}\r\n                  bgColor={blue[500]}\r\n                  icon={'/assets/images/metricsIcons/revenue.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCardSecond\r\n                  text={messages['dashboard.ordersThisYear']}\r\n                  value={metricsData.ordersThisYear}\r\n                  bgColor={red[500]}\r\n                  icon={'/assets/images/metricsIcons/order.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCardSecond\r\n                  text={messages['dashboard.visitsThisYear']}\r\n                  value={metricsData.visitsThisYear}\r\n                  bgColor={indigo[500]}\r\n                  icon={'/assets/images/metricsIcons/visits.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <StatsCardSecond\r\n                  text={messages['dashboard.queriesThisYear']}\r\n                  value={metricsData.queriesThisYear}\r\n                  bgColor={green[500]}\r\n                  icon={'/assets/images/metricsIcons/querries.svg'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <FloatingGraphs\r\n                  title={messages['dashboard.sales']}\r\n                  data={metricsData.metricsFloatingGraphData.salesData}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <FloatingGraphs\r\n                  title={messages['dashboard.clients']}\r\n                  data={metricsData.metricsFloatingGraphData.clientsData}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <FloatingGraphs\r\n                  title={messages['dashboard.revenue']}\r\n                  data={metricsData.metricsFloatingGraphData.revenueData}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <FloatingGraphs\r\n                  title={messages['dashboard.newUser']}\r\n                  data={metricsData.metricsFloatingGraphData.newUserData}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Visits data={metricsData.visitsData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Orders data={metricsData.ordersData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6} lg={3}>\r\n                <ProfileViews data={metricsData.profileViewsData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6} lg={3}>\r\n                <WorkViews data={metricsData.workViewsData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6} lg={3}>\r\n                <SocialDataCard data={metricsData.socialData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6} lg={3}>\r\n                <Share data={metricsData.shareData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Stats data={metricsData.statsGraph} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <SocialVisitors data={metricsData.socialVisitorsData} />\r\n              </Grid>\r\n            </AppGridContainer>\r\n          </>\r\n        </AppAnimate>\r\n      ) : (\r\n        <AppLoader />\r\n      )}\r\n      <AppInfoView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Metrics;\r\n"],"sourceRoot":""}