{"version":3,"sources":["pages/muiComponents/lab/DateRangePicker/BasicDateRangePicker.js","webpack:///./src/pages/muiComponents/lab/DateRangePicker/BasicDateRangePicker.js?0ff3","pages/muiComponents/lab/DateRangePicker/StaticDateRangePickerDemo.js","webpack:///./src/pages/muiComponents/lab/DateRangePicker/StaticDateRangePickerDemo.js?3017","pages/muiComponents/lab/DateRangePicker/ResponsiveDateRangePicker.js","pages/muiComponents/lab/DateRangePicker/FormPropsDateRangePickers.js","webpack:///./src/pages/muiComponents/lab/DateRangePicker/FormPropsDateRangePickers.js?9101","pages/muiComponents/lab/DateRangePicker/CalendarsDateRangePicker.js","webpack:///./src/pages/muiComponents/lab/DateRangePicker/CalendarsDateRangePicker.js?a0af","pages/muiComponents/lab/DateRangePicker/MinMaxDateRangePicker.js","pages/muiComponents/lab/DateRangePicker/CustomDateRangeInputs.js","webpack:///./src/pages/muiComponents/lab/DateRangePicker/CustomDateRangeInputs.js?3529","pages/muiComponents/lab/DateRangePicker/CustomDateRangePickerDay.js","pages/muiComponents/lab/DateRangePicker/index.js","webpack:///./src/pages/muiComponents/lab/DateRangePicker/MinMaxDateRangePicker.js?9610","webpack:///./src/pages/muiComponents/lab/DateRangePicker/ResponsiveDateRangePicker.js?c4dd","webpack:///./src/pages/muiComponents/lab/DateRangePicker/CustomDateRangePickerDay.js?b2f0"],"names":["BasicDateRangePicker","React","value","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","startText","endText","onChange","newValue","renderInput","startProps","endProps","TextField","Box","sx","mx","StaticDateRangePickerDemo","StaticDateRangePicker","displayStaticWrapperAs","ResponsiveDateRangePicker","Stack","spacing","MobileDateRangePicker","DesktopDateRangePicker","FormPropsDateRangePickers","disabled","readOnly","CalendarsDateRangePicker","Typography","mt","mb","calendars","MinMaxDateRangePicker","date","amount","disablePast","maxDate","addWeeks","undefined","CustomDateRangeInputs","label","ref","inputRef","inputProps","DateRangePickerDay","styled","MuiDateRangePickerDay","theme","isHighlighting","isStartOfHighlighting","isEndOfHighlighting","borderRadius","backgroundColor","palette","primary","main","color","common","white","dark","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","CustomDateRangePickerDay","renderDay","dateRangePickerDayProps","DateRangePicker","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","component","source","noScrollbar"],"mappings":"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","file":"static/js/143.c6fe9aac.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function BasicDateRangePicker() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DateRangePicker\r\n        startText='Check-in'\r\n        endText='Check-out'\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(startProps, endProps) => (\r\n          <React.Fragment>\r\n            <TextField {...startProps} />\r\n            <Box sx={{mx: 2}}> to </Box>\r\n            <TextField {...endProps} />\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport DateRangePicker from '@mui/lab/DateRangePicker';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\nimport Box from '@mui/material/Box';\\r\\n\\r\\nexport default function BasicDateRangePicker() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <DateRangePicker\\r\\n        startText='Check-in'\\r\\n        endText='Check-out'\\r\\n        value={value}\\r\\n        onChange={(newValue) => {\\r\\n          setValue(newValue);\\r\\n        }}\\r\\n        renderInput={(startProps, endProps) => (\\r\\n          <React.Fragment>\\r\\n            <TextField {...startProps} />\\r\\n            <Box sx={{mx: 2}}> to </Box>\\r\\n            <TextField {...endProps} />\\r\\n          </React.Fragment>\\r\\n        )}\\r\\n      />\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function StaticDateRangePickerDemo() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <StaticDateRangePicker\r\n        displayStaticWrapperAs='desktop'\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(startProps, endProps) => (\r\n          <React.Fragment>\r\n            <TextField {...startProps} />\r\n            <Box sx={{mx: 2}}> to </Box>\r\n            <TextField {...endProps} />\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\nimport Box from '@mui/material/Box';\\r\\n\\r\\nexport default function StaticDateRangePickerDemo() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <StaticDateRangePicker\\r\\n        displayStaticWrapperAs='desktop'\\r\\n        value={value}\\r\\n        onChange={(newValue) => {\\r\\n          setValue(newValue);\\r\\n        }}\\r\\n        renderInput={(startProps, endProps) => (\\r\\n          <React.Fragment>\\r\\n            <TextField {...startProps} />\\r\\n            <Box sx={{mx: 2}}> to </Box>\\r\\n            <TextField {...endProps} />\\r\\n          </React.Fragment>\\r\\n        )}\\r\\n      />\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport MobileDateRangePicker from '@mui/lab/MobileDateRangePicker';\r\nimport DesktopDateRangePicker from '@mui/lab/DesktopDateRangePicker';\r\n\r\nexport default function ResponsiveDateRangePicker() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <MobileDateRangePicker\r\n          startText='Mobile start'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{mx: 2}}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n        <DesktopDateRangePicker\r\n          startText='Desktop start'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{mx: 2}}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nexport default function FormPropsDateRangePickers() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <DateRangePicker\r\n          disabled\r\n          startText='disabled start'\r\n          endText='disabled end'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{mx: 2}}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n        <DateRangePicker\r\n          readOnly\r\n          startText='read-only start'\r\n          endText='read-only end'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{mx: 2}}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport DateRangePicker from '@mui/lab/DateRangePicker';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stack from '@mui/material/Stack';\\r\\n\\r\\nexport default function FormPropsDateRangePickers() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <Stack spacing={3}>\\r\\n        <DateRangePicker\\r\\n          disabled\\r\\n          startText='disabled start'\\r\\n          endText='disabled end'\\r\\n          value={value}\\r\\n          onChange={(newValue) => {\\r\\n            setValue(newValue);\\r\\n          }}\\r\\n          renderInput={(startProps, endProps) => (\\r\\n            <React.Fragment>\\r\\n              <TextField {...startProps} />\\r\\n              <Box sx={{mx: 2}}> to </Box>\\r\\n              <TextField {...endProps} />\\r\\n            </React.Fragment>\\r\\n          )}\\r\\n        />\\r\\n        <DateRangePicker\\r\\n          readOnly\\r\\n          startText='read-only start'\\r\\n          endText='read-only end'\\r\\n          value={value}\\r\\n          onChange={(newValue) => {\\r\\n            setValue(newValue);\\r\\n          }}\\r\\n          renderInput={(startProps, endProps) => (\\r\\n            <React.Fragment>\\r\\n              <TextField {...startProps} />\\r\\n              <Box sx={{mx: 2}}> to </Box>\\r\\n              <TextField {...endProps} />\\r\\n            </React.Fragment>\\r\\n          )}\\r\\n        />\\r\\n      </Stack>\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function CalendarsDateRangePicker() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <div>\r\n        <Typography sx={{mt: 2, mb: 1}}>1 calendar </Typography>\r\n        <DateRangePicker\r\n          calendars={1}\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{mx: 2}}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n        <Typography sx={{mt: 2, mb: 1}}>2 calendars</Typography>\r\n        <DateRangePicker\r\n          calendars={2}\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{mx: 2}}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n        <Typography sx={{mt: 2, mb: 1}}>3 calendars</Typography>\r\n        <DateRangePicker\r\n          calendars={3}\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{mx: 2}}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n      </div>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Typography from '@mui/material/Typography';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\nimport DateRangePicker from '@mui/lab/DateRangePicker';\\r\\nimport Box from '@mui/material/Box';\\r\\n\\r\\nexport default function CalendarsDateRangePicker() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <div>\\r\\n        <Typography sx={{mt: 2, mb: 1}}>1 calendar </Typography>\\r\\n        <DateRangePicker\\r\\n          calendars={1}\\r\\n          value={value}\\r\\n          onChange={(newValue) => {\\r\\n            setValue(newValue);\\r\\n          }}\\r\\n          renderInput={(startProps, endProps) => (\\r\\n            <React.Fragment>\\r\\n              <TextField {...startProps} />\\r\\n              <Box sx={{mx: 2}}> to </Box>\\r\\n              <TextField {...endProps} />\\r\\n            </React.Fragment>\\r\\n          )}\\r\\n        />\\r\\n        <Typography sx={{mt: 2, mb: 1}}>2 calendars</Typography>\\r\\n        <DateRangePicker\\r\\n          calendars={2}\\r\\n          value={value}\\r\\n          onChange={(newValue) => {\\r\\n            setValue(newValue);\\r\\n          }}\\r\\n          renderInput={(startProps, endProps) => (\\r\\n            <React.Fragment>\\r\\n              <TextField {...startProps} />\\r\\n              <Box sx={{mx: 2}}> to </Box>\\r\\n              <TextField {...endProps} />\\r\\n            </React.Fragment>\\r\\n          )}\\r\\n        />\\r\\n        <Typography sx={{mt: 2, mb: 1}}>3 calendars</Typography>\\r\\n        <DateRangePicker\\r\\n          calendars={3}\\r\\n          value={value}\\r\\n          onChange={(newValue) => {\\r\\n            setValue(newValue);\\r\\n          }}\\r\\n          renderInput={(startProps, endProps) => (\\r\\n            <React.Fragment>\\r\\n              <TextField {...startProps} />\\r\\n              <Box sx={{mx: 2}}> to </Box>\\r\\n              <TextField {...endProps} />\\r\\n            </React.Fragment>\\r\\n          )}\\r\\n        />\\r\\n      </div>\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport addWeeks from 'date-fns/addWeeks';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction getWeeksAfter(date, amount) {\r\n  return date ? addWeeks(date, amount) : undefined;\r\n}\r\n\r\nexport default function MinMaxDateRangePicker() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DateRangePicker\r\n        disablePast\r\n        value={value}\r\n        maxDate={getWeeksAfter(value[0], 4)}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(startProps, endProps) => (\r\n          <React.Fragment>\r\n            <TextField {...startProps} />\r\n            <Box sx={{mx: 2}}> to </Box>\r\n            <TextField {...endProps} />\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\n\r\nexport default function CustomDateRangeInputs() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DateRangePicker\r\n        label='Advanced keyboard'\r\n        value={value}\r\n        onChange={(newValue) => setValue(newValue)}\r\n        renderInput={(startProps, endProps) => (\r\n          <React.Fragment>\r\n            <input ref={startProps.inputRef} {...startProps.inputProps} />\r\n            <Box sx={{mx: 1}}> to </Box>\r\n            <input ref={endProps.inputRef} {...endProps.inputProps} />\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\nimport DateRangePicker from '@mui/lab/DateRangePicker';\\r\\n\\r\\nexport default function CustomDateRangeInputs() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <DateRangePicker\\r\\n        label='Advanced keyboard'\\r\\n        value={value}\\r\\n        onChange={(newValue) => setValue(newValue)}\\r\\n        renderInput={(startProps, endProps) => (\\r\\n          <React.Fragment>\\r\\n            <input ref={startProps.inputRef} {...startProps.inputProps} />\\r\\n            <Box sx={{mx: 1}}> to </Box>\\r\\n            <input ref={endProps.inputRef} {...endProps.inputProps} />\\r\\n          </React.Fragment>\\r\\n        )}\\r\\n      />\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n\r\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\r\nimport MuiDateRangePickerDay from '@mui/lab/DateRangePickerDay';\r\n\r\nconst DateRangePickerDay = styled(MuiDateRangePickerDay)(\r\n  ({theme, isHighlighting, isStartOfHighlighting, isEndOfHighlighting}) => ({\r\n    ...(isHighlighting && {\r\n      borderRadius: 0,\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n    }),\r\n    ...(isStartOfHighlighting && {\r\n      borderTopLeftRadius: '50%',\r\n      borderBottomLeftRadius: '50%',\r\n    }),\r\n    ...(isEndOfHighlighting && {\r\n      borderTopRightRadius: '50%',\r\n      borderBottomRightRadius: '50%',\r\n    }),\r\n  }),\r\n);\r\n\r\nexport default function CustomDateRangePickerDay() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  const renderWeekPickerDay = (date, dateRangePickerDayProps) => {\r\n    return <DateRangePickerDay {...dateRangePickerDayProps} />;\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <StaticDateRangePicker\r\n        displayStaticWrapperAs='desktop'\r\n        label='date range'\r\n        value={value}\r\n        onChange={(newValue) => setValue(newValue)}\r\n        renderDay={renderWeekPickerDay}\r\n        renderInput={(startProps, endProps) => (\r\n          <React.Fragment>\r\n            <TextField {...startProps} />\r\n            <Box sx={{mx: 2}}> to </Box>\r\n            <TextField {...endProps} />\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '@crema/core/AppComponentCard';\r\n\r\nimport BasicDateRangePicker from './BasicDateRangePicker';\r\nimport BasicDateRangePickerSource from '!raw-loader!./BasicDateRangePicker';\r\n\r\nimport StaticDateRangePickerDemo from './StaticDateRangePickerDemo';\r\nimport StaticDateRangePickerDemoSource from '!raw-loader!./StaticDateRangePickerDemo';\r\n\r\nimport ResponsiveDateRangePicker from './ResponsiveDateRangePicker';\r\nimport ResponsiveDateRangePickerSource from '!raw-loader!./ResponsiveDateRangePicker';\r\n\r\nimport FormPropsDateRangePickers from './FormPropsDateRangePickers';\r\nimport FormPropsDateRangePickersSource from '!raw-loader!./FormPropsDateRangePickers';\r\n\r\nimport CalendarsDateRangePicker from './CalendarsDateRangePicker';\r\nimport CalendarsDateRangePickerSource from '!raw-loader!./CalendarsDateRangePicker';\r\n\r\nimport MinMaxDateRangePicker from './MinMaxDateRangePicker';\r\nimport MinMaxDateRangePickerSource from '!raw-loader!./MinMaxDateRangePicker';\r\n\r\nimport CustomDateRangeInputs from './CustomDateRangeInputs';\r\nimport CustomDateRangeInputsSource from '!raw-loader!./CustomDateRangeInputs';\r\n\r\nimport CustomDateRangePickerDay from './CustomDateRangePickerDay';\r\nimport CustomDateRangePickerDaySource from '!raw-loader!./CustomDateRangePickerDay';\r\n\r\nconst DateRangePicker = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='DateRangePicker'\r\n        description='Date pickers let the user select a range of dates.'\r\n        refUrl='https://mui.com/components/date-range-picker/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='BasicDateRangePicker'\r\n            component={BasicDateRangePicker}\r\n            source={BasicDateRangePickerSource}\r\n            noScrollbar\r\n            description='Note that you can pass almost any prop from DatePicker.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='MinMaxDateRangePicker'\r\n            component={MinMaxDateRangePicker}\r\n            source={MinMaxDateRangePickerSource}\r\n            noScrollbar\r\n            description='Disabling dates behaves the same as the simple DatePicker.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='ResponsiveDateRangePicker'\r\n            component={ResponsiveDateRangePicker}\r\n            source={ResponsiveDateRangePickerSource}\r\n            noScrollbar\r\n            description='The date range picker component is designed to be optimized for the device it runs on.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='FormPropsDateRangePickers'\r\n            component={FormPropsDateRangePickers}\r\n            source={FormPropsDateRangePickersSource}\r\n            noScrollbar\r\n            description='The date range picker component can be disabled or read-only.'\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='CustomDateRangePickerDay'\r\n            component={CustomDateRangePickerDay}\r\n            source={CustomDateRangePickerDaySource}\r\n            noScrollbar\r\n            description='The displayed days are customizable with the renderDay function prop. You can take advantage of the internal DateRangePickerDay component.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='StaticDateRangePickerDemo'\r\n            component={StaticDateRangePickerDemo}\r\n            source={StaticDateRangePickerDemoSource}\r\n            noScrollbar\r\n            description='Its possible to render any picker inline. This will enable building custom popover/modal containers.\r\n            '\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='CalendarsDateRangePicker'\r\n            component={CalendarsDateRangePicker}\r\n            source={CalendarsDateRangePickerSource}\r\n            noScrollbar\r\n            description='Note that the calendars prop only works in desktop mode.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='CustomDateRangeInputs'\r\n            component={CustomDateRangeInputs}\r\n            source={CustomDateRangeInputsSource}\r\n            noScrollbar\r\n            description='You can customize the rendered input with the renderInput prop. For DateRangePicker it takes 2 parameters – for start and end input respectively. If you need to render custom inputs make sure to spread ref and inputProps correctly to the input components.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;\r\n","export default \"import * as React from 'react';\\r\\nimport addWeeks from 'date-fns/addWeeks';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\nimport DateRangePicker from '@mui/lab/DateRangePicker';\\r\\nimport Box from '@mui/material/Box';\\r\\n\\r\\nfunction getWeeksAfter(date, amount) {\\r\\n  return date ? addWeeks(date, amount) : undefined;\\r\\n}\\r\\n\\r\\nexport default function MinMaxDateRangePicker() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <DateRangePicker\\r\\n        disablePast\\r\\n        value={value}\\r\\n        maxDate={getWeeksAfter(value[0], 4)}\\r\\n        onChange={(newValue) => {\\r\\n          setValue(newValue);\\r\\n        }}\\r\\n        renderInput={(startProps, endProps) => (\\r\\n          <React.Fragment>\\r\\n            <TextField {...startProps} />\\r\\n            <Box sx={{mx: 2}}> to </Box>\\r\\n            <TextField {...endProps} />\\r\\n          </React.Fragment>\\r\\n        )}\\r\\n      />\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Stack from '@mui/material/Stack';\\r\\nimport MobileDateRangePicker from '@mui/lab/MobileDateRangePicker';\\r\\nimport DesktopDateRangePicker from '@mui/lab/DesktopDateRangePicker';\\r\\n\\r\\nexport default function ResponsiveDateRangePicker() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <Stack spacing={3}>\\r\\n        <MobileDateRangePicker\\r\\n          startText='Mobile start'\\r\\n          value={value}\\r\\n          onChange={(newValue) => {\\r\\n            setValue(newValue);\\r\\n          }}\\r\\n          renderInput={(startProps, endProps) => (\\r\\n            <React.Fragment>\\r\\n              <TextField {...startProps} />\\r\\n              <Box sx={{mx: 2}}> to </Box>\\r\\n              <TextField {...endProps} />\\r\\n            </React.Fragment>\\r\\n          )}\\r\\n        />\\r\\n        <DesktopDateRangePicker\\r\\n          startText='Desktop start'\\r\\n          value={value}\\r\\n          onChange={(newValue) => {\\r\\n            setValue(newValue);\\r\\n          }}\\r\\n          renderInput={(startProps, endProps) => (\\r\\n            <React.Fragment>\\r\\n              <TextField {...startProps} />\\r\\n              <Box sx={{mx: 2}}> to </Box>\\r\\n              <TextField {...endProps} />\\r\\n            </React.Fragment>\\r\\n          )}\\r\\n        />\\r\\n      </Stack>\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\\r\\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\\r\\n\\r\\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\\r\\nimport MuiDateRangePickerDay from '@mui/lab/DateRangePickerDay';\\r\\n\\r\\nconst DateRangePickerDay = styled(MuiDateRangePickerDay)(\\r\\n  ({theme, isHighlighting, isStartOfHighlighting, isEndOfHighlighting}) => ({\\r\\n    ...(isHighlighting && {\\r\\n      borderRadius: 0,\\r\\n      backgroundColor: theme.palette.primary.main,\\r\\n      color: theme.palette.common.white,\\r\\n      '&:hover, &:focus': {\\r\\n        backgroundColor: theme.palette.primary.dark,\\r\\n      },\\r\\n    }),\\r\\n    ...(isStartOfHighlighting && {\\r\\n      borderTopLeftRadius: '50%',\\r\\n      borderBottomLeftRadius: '50%',\\r\\n    }),\\r\\n    ...(isEndOfHighlighting && {\\r\\n      borderTopRightRadius: '50%',\\r\\n      borderBottomRightRadius: '50%',\\r\\n    }),\\r\\n  }),\\r\\n);\\r\\n\\r\\nexport default function CustomDateRangePickerDay() {\\r\\n  const [value, setValue] = React.useState([null, null]);\\r\\n\\r\\n  const renderWeekPickerDay = (date, dateRangePickerDayProps) => {\\r\\n    return <DateRangePickerDay {...dateRangePickerDayProps} />;\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\\r\\n      <StaticDateRangePicker\\r\\n        displayStaticWrapperAs='desktop'\\r\\n        label='date range'\\r\\n        value={value}\\r\\n        onChange={(newValue) => setValue(newValue)}\\r\\n        renderDay={renderWeekPickerDay}\\r\\n        renderInput={(startProps, endProps) => (\\r\\n          <React.Fragment>\\r\\n            <TextField {...startProps} />\\r\\n            <Box sx={{mx: 2}}> to </Box>\\r\\n            <TextField {...endProps} />\\r\\n          </React.Fragment>\\r\\n        )}\\r\\n      />\\r\\n    </LocalizationProvider>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}