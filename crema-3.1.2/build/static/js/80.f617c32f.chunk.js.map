{"version":3,"sources":["../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/CheckBox.js","pages/muiComponents/inputs/AutoComplete/ComboBox.js","webpack:///./src/pages/muiComponents/inputs/AutoComplete/ComboBox.js?a64b","pages/muiComponents/inputs/AutoComplete/CountrySelect.js","pages/muiComponents/inputs/AutoComplete/ControlledStates.js","pages/muiComponents/inputs/AutoComplete/Grouped.js","pages/muiComponents/inputs/AutoComplete/Asynchronous.js","pages/muiComponents/inputs/AutoComplete/Multiple.js","pages/muiComponents/inputs/AutoComplete/Checkboxes.js","pages/muiComponents/inputs/AutoComplete/Sizes.js","pages/muiComponents/inputs/AutoComplete/Customization.js","pages/muiComponents/inputs/AutoComplete/index.js","webpack:///./src/pages/muiComponents/inputs/AutoComplete/ControlledStates.js?f100","webpack:///./src/pages/muiComponents/inputs/AutoComplete/Grouped.js?9a79","webpack:///./src/pages/muiComponents/inputs/AutoComplete/Asynchronous.js?b775","webpack:///./src/pages/muiComponents/inputs/AutoComplete/Checkboxes.js?9e7b","webpack:///./src/pages/muiComponents/inputs/AutoComplete/Multiple.js?284a","webpack:///./src/pages/muiComponents/inputs/AutoComplete/Sizes.js?3d1d","webpack:///./src/pages/muiComponents/inputs/AutoComplete/Customization.js?84ec"],"names":["_excluded","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","styled","name","slot","overridesResolver","props","styles","root","ownerState","theme","_extends","display","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","flexDirection","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","deepmerge","margin","row","column","getValue","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as","createSvgIcon","d","getCheckboxUtilityClass","generateUtilityClass","checkboxClasses","generateUtilityClasses","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","color","capitalize","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","_interopRequireDefault","require","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","ComboBox","Autocomplete","disablePortal","id","options","top100Films","sx","width","renderInput","params","TextField","label","year","CountrySelect","countries","autoHighlight","getOptionLabel","option","renderOption","Box","mr","flexShrink","loading","src","code","toLowerCase","srcSet","alt","phone","autoComplete","suggested","ControllableStates","setValue","inputValue","setInputValue","onChange","event","newValue","onInputChange","newInputValue","Grouped","map","firstLetter","title","toUpperCase","test","sort","a","b","localeCompare","groupBy","sleep","delay","Promise","resolve","setTimeout","Asynchronous","open","setOpen","setOptions","topFilms","onOpen","onClose","isOptionEqualToValue","InputProps","endAdornment","CircularProgress","Multiple","multiple","defaultValue","variant","placeholder","filterSelectedOptions","freeSolo","renderTags","getTagProps","Chip","CheckboxesTags","disableCloseOnSelect","selected","style","marginRight","Sizes","CustomInputAutocomplete","bgcolor","getContrastText","background","paper","AutoComplete","AppComponentHeader","description","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","source","ComboBoxSource","noScrollbar","CountrySelectSource"],"mappings":"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","file":"static/js/80.f617c32f.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\n\nexports.default = _default;","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function ComboBox() {\r\n  return (\r\n    <Autocomplete\r\n      disablePortal\r\n      id='combo-box-demo'\r\n      options={top100Films}\r\n      sx={{width: 300}}\r\n      renderInput={(params) => <TextField {...params} label='Movie' />}\r\n    />\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  {label: 'The Shawshank Redemption', year: 1994},\r\n  {label: 'The Godfather', year: 1972},\r\n  {label: 'The Godfather: Part II', year: 1974},\r\n  {label: 'The Dark Knight', year: 2008},\r\n  {label: '12 Angry Men', year: 1957},\r\n  {label: \"Schindler's List\", year: 1993},\r\n  {label: 'Pulp Fiction', year: 1994},\r\n  {\r\n    label: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  {label: 'The Good, the Bad and the Ugly', year: 1966},\r\n  {label: 'Fight Club', year: 1999},\r\n  {\r\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  {label: 'Forrest Gump', year: 1994},\r\n  {label: 'Inception', year: 2010},\r\n  {\r\n    label: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  {label: \"One Flew Over the Cuckoo's Nest\", year: 1975},\r\n  {label: 'Goodfellas', year: 1990},\r\n  {label: 'The Matrix', year: 1999},\r\n  {label: 'Seven Samurai', year: 1954},\r\n  {\r\n    label: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  {label: 'City of God', year: 2002},\r\n  {label: 'Se7en', year: 1995},\r\n  {label: 'The Silence of the Lambs', year: 1991},\r\n  {label: \"It's a Wonderful Life\", year: 1946},\r\n  {label: 'Life Is Beautiful', year: 1997},\r\n  {label: 'The Usual Suspects', year: 1995},\r\n  {label: 'Léon: The Professional', year: 1994},\r\n  {label: 'Spirited Away', year: 2001},\r\n  {label: 'Saving Private Ryan', year: 1998},\r\n  {label: 'Once Upon a Time in the West', year: 1968},\r\n  {label: 'American History X', year: 1998},\r\n  {label: 'Interstellar', year: 2014},\r\n  {label: 'Casablanca', year: 1942},\r\n  {label: 'City Lights', year: 1931},\r\n  {label: 'Psycho', year: 1960},\r\n  {label: 'The Green Mile', year: 1999},\r\n  {label: 'The Intouchables', year: 2011},\r\n  {label: 'Modern Times', year: 1936},\r\n  {label: 'Raiders of the Lost Ark', year: 1981},\r\n  {label: 'Rear Window', year: 1954},\r\n  {label: 'The Pianist', year: 2002},\r\n  {label: 'The Departed', year: 2006},\r\n  {label: 'Terminator 2: Judgment Day', year: 1991},\r\n  {label: 'Back to the Future', year: 1985},\r\n  {label: 'Whiplash', year: 2014},\r\n  {label: 'Gladiator', year: 2000},\r\n  {label: 'Memento', year: 2000},\r\n  {label: 'The Prestige', year: 2006},\r\n  {label: 'The Lion King', year: 1994},\r\n  {label: 'Apocalypse Now', year: 1979},\r\n  {label: 'Alien', year: 1979},\r\n  {label: 'Sunset Boulevard', year: 1950},\r\n  {\r\n    label:\r\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  {label: 'The Great Dictator', year: 1940},\r\n  {label: 'Cinema Paradiso', year: 1988},\r\n  {label: 'The Lives of Others', year: 2006},\r\n  {label: 'Grave of the Fireflies', year: 1988},\r\n  {label: 'Paths of Glory', year: 1957},\r\n  {label: 'Django Unchained', year: 2012},\r\n  {label: 'The Shining', year: 1980},\r\n  {label: 'WALL·E', year: 2008},\r\n  {label: 'American Beauty', year: 1999},\r\n  {label: 'The Dark Knight Rises', year: 2012},\r\n  {label: 'Princess Mononoke', year: 1997},\r\n  {label: 'Aliens', year: 1986},\r\n  {label: 'Oldboy', year: 2003},\r\n  {label: 'Once Upon a Time in America', year: 1984},\r\n  {label: 'Witness for the Prosecution', year: 1957},\r\n  {label: 'Das Boot', year: 1981},\r\n  {label: 'Citizen Kane', year: 1941},\r\n  {label: 'North by Northwest', year: 1959},\r\n  {label: 'Vertigo', year: 1958},\r\n  {\r\n    label: 'Star Wars: Episode VI - Return of the Jedi',\r\n    year: 1983,\r\n  },\r\n  {label: 'Reservoir Dogs', year: 1992},\r\n  {label: 'Braveheart', year: 1995},\r\n  {label: 'M', year: 1931},\r\n  {label: 'Requiem for a Dream', year: 2000},\r\n  {label: 'Amélie', year: 2001},\r\n  {label: 'A Clockwork Orange', year: 1971},\r\n  {label: 'Like Stars on Earth', year: 2007},\r\n  {label: 'Taxi Driver', year: 1976},\r\n  {label: 'Lawrence of Arabia', year: 1962},\r\n  {label: 'Double Indemnity', year: 1944},\r\n  {\r\n    label: 'Eternal Sunshine of the Spotless Mind',\r\n    year: 2004,\r\n  },\r\n  {label: 'Amadeus', year: 1984},\r\n  {label: 'To Kill a Mockingbird', year: 1962},\r\n  {label: 'Toy Story 3', year: 2010},\r\n  {label: 'Logan', year: 2017},\r\n  {label: 'Full Metal Jacket', year: 1987},\r\n  {label: 'Dangal', year: 2016},\r\n  {label: 'The Sting', year: 1973},\r\n  {label: '2001: A Space Odyssey', year: 1968},\r\n  {label: \"Singin' in the Rain\", year: 1952},\r\n  {label: 'Toy Story', year: 1995},\r\n  {label: 'Bicycle Thieves', year: 1948},\r\n  {label: 'The Kid', year: 1921},\r\n  {label: 'Inglourious Basterds', year: 2009},\r\n  {label: 'Snatch', year: 2000},\r\n  {label: '3 Idiots', year: 2009},\r\n  {label: 'Monty Python and the Holy Grail', year: 1975},\r\n];\r\n","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\n\\r\\nexport default function ComboBox() {\\r\\n  return (\\r\\n    <Autocomplete\\r\\n      disablePortal\\r\\n      id='combo-box-demo'\\r\\n      options={top100Films}\\r\\n      sx={{width: 300}}\\r\\n      renderInput={(params) => <TextField {...params} label='Movie' />}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\r\\nconst top100Films = [\\r\\n  {label: 'The Shawshank Redemption', year: 1994},\\r\\n  {label: 'The Godfather', year: 1972},\\r\\n  {label: 'The Godfather: Part II', year: 1974},\\r\\n  {label: 'The Dark Knight', year: 2008},\\r\\n  {label: '12 Angry Men', year: 1957},\\r\\n  {label: \\\"Schindler's List\\\", year: 1993},\\r\\n  {label: 'Pulp Fiction', year: 1994},\\r\\n  {\\r\\n    label: 'The Lord of the Rings: The Return of the King',\\r\\n    year: 2003,\\r\\n  },\\r\\n  {label: 'The Good, the Bad and the Ugly', year: 1966},\\r\\n  {label: 'Fight Club', year: 1999},\\r\\n  {\\r\\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\\r\\n    year: 2001,\\r\\n  },\\r\\n  {\\r\\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\\r\\n    year: 1980,\\r\\n  },\\r\\n  {label: 'Forrest Gump', year: 1994},\\r\\n  {label: 'Inception', year: 2010},\\r\\n  {\\r\\n    label: 'The Lord of the Rings: The Two Towers',\\r\\n    year: 2002,\\r\\n  },\\r\\n  {label: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975},\\r\\n  {label: 'Goodfellas', year: 1990},\\r\\n  {label: 'The Matrix', year: 1999},\\r\\n  {label: 'Seven Samurai', year: 1954},\\r\\n  {\\r\\n    label: 'Star Wars: Episode IV - A New Hope',\\r\\n    year: 1977,\\r\\n  },\\r\\n  {label: 'City of God', year: 2002},\\r\\n  {label: 'Se7en', year: 1995},\\r\\n  {label: 'The Silence of the Lambs', year: 1991},\\r\\n  {label: \\\"It's a Wonderful Life\\\", year: 1946},\\r\\n  {label: 'Life Is Beautiful', year: 1997},\\r\\n  {label: 'The Usual Suspects', year: 1995},\\r\\n  {label: 'Léon: The Professional', year: 1994},\\r\\n  {label: 'Spirited Away', year: 2001},\\r\\n  {label: 'Saving Private Ryan', year: 1998},\\r\\n  {label: 'Once Upon a Time in the West', year: 1968},\\r\\n  {label: 'American History X', year: 1998},\\r\\n  {label: 'Interstellar', year: 2014},\\r\\n  {label: 'Casablanca', year: 1942},\\r\\n  {label: 'City Lights', year: 1931},\\r\\n  {label: 'Psycho', year: 1960},\\r\\n  {label: 'The Green Mile', year: 1999},\\r\\n  {label: 'The Intouchables', year: 2011},\\r\\n  {label: 'Modern Times', year: 1936},\\r\\n  {label: 'Raiders of the Lost Ark', year: 1981},\\r\\n  {label: 'Rear Window', year: 1954},\\r\\n  {label: 'The Pianist', year: 2002},\\r\\n  {label: 'The Departed', year: 2006},\\r\\n  {label: 'Terminator 2: Judgment Day', year: 1991},\\r\\n  {label: 'Back to the Future', year: 1985},\\r\\n  {label: 'Whiplash', year: 2014},\\r\\n  {label: 'Gladiator', year: 2000},\\r\\n  {label: 'Memento', year: 2000},\\r\\n  {label: 'The Prestige', year: 2006},\\r\\n  {label: 'The Lion King', year: 1994},\\r\\n  {label: 'Apocalypse Now', year: 1979},\\r\\n  {label: 'Alien', year: 1979},\\r\\n  {label: 'Sunset Boulevard', year: 1950},\\r\\n  {\\r\\n    label:\\r\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\r\\n    year: 1964,\\r\\n  },\\r\\n  {label: 'The Great Dictator', year: 1940},\\r\\n  {label: 'Cinema Paradiso', year: 1988},\\r\\n  {label: 'The Lives of Others', year: 2006},\\r\\n  {label: 'Grave of the Fireflies', year: 1988},\\r\\n  {label: 'Paths of Glory', year: 1957},\\r\\n  {label: 'Django Unchained', year: 2012},\\r\\n  {label: 'The Shining', year: 1980},\\r\\n  {label: 'WALL·E', year: 2008},\\r\\n  {label: 'American Beauty', year: 1999},\\r\\n  {label: 'The Dark Knight Rises', year: 2012},\\r\\n  {label: 'Princess Mononoke', year: 1997},\\r\\n  {label: 'Aliens', year: 1986},\\r\\n  {label: 'Oldboy', year: 2003},\\r\\n  {label: 'Once Upon a Time in America', year: 1984},\\r\\n  {label: 'Witness for the Prosecution', year: 1957},\\r\\n  {label: 'Das Boot', year: 1981},\\r\\n  {label: 'Citizen Kane', year: 1941},\\r\\n  {label: 'North by Northwest', year: 1959},\\r\\n  {label: 'Vertigo', year: 1958},\\r\\n  {\\r\\n    label: 'Star Wars: Episode VI - Return of the Jedi',\\r\\n    year: 1983,\\r\\n  },\\r\\n  {label: 'Reservoir Dogs', year: 1992},\\r\\n  {label: 'Braveheart', year: 1995},\\r\\n  {label: 'M', year: 1931},\\r\\n  {label: 'Requiem for a Dream', year: 2000},\\r\\n  {label: 'Amélie', year: 2001},\\r\\n  {label: 'A Clockwork Orange', year: 1971},\\r\\n  {label: 'Like Stars on Earth', year: 2007},\\r\\n  {label: 'Taxi Driver', year: 1976},\\r\\n  {label: 'Lawrence of Arabia', year: 1962},\\r\\n  {label: 'Double Indemnity', year: 1944},\\r\\n  {\\r\\n    label: 'Eternal Sunshine of the Spotless Mind',\\r\\n    year: 2004,\\r\\n  },\\r\\n  {label: 'Amadeus', year: 1984},\\r\\n  {label: 'To Kill a Mockingbird', year: 1962},\\r\\n  {label: 'Toy Story 3', year: 2010},\\r\\n  {label: 'Logan', year: 2017},\\r\\n  {label: 'Full Metal Jacket', year: 1987},\\r\\n  {label: 'Dangal', year: 2016},\\r\\n  {label: 'The Sting', year: 1973},\\r\\n  {label: '2001: A Space Odyssey', year: 1968},\\r\\n  {label: \\\"Singin' in the Rain\\\", year: 1952},\\r\\n  {label: 'Toy Story', year: 1995},\\r\\n  {label: 'Bicycle Thieves', year: 1948},\\r\\n  {label: 'The Kid', year: 1921},\\r\\n  {label: 'Inglourious Basterds', year: 2009},\\r\\n  {label: 'Snatch', year: 2000},\\r\\n  {label: '3 Idiots', year: 2009},\\r\\n  {label: 'Monty Python and the Holy Grail', year: 1975},\\r\\n];\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function CountrySelect() {\r\n  return (\r\n    <Autocomplete\r\n      id='country-select-demo'\r\n      sx={{width: 300}}\r\n      options={countries}\r\n      autoHighlight\r\n      getOptionLabel={(option) => option.label}\r\n      renderOption={(props, option) => (\r\n        <Box component='li' sx={{'& > img': {mr: 2, flexShrink: 0}}} {...props}>\r\n          <img\r\n            loading='lazy'\r\n            width='20'\r\n            src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\r\n            alt=''\r\n          />\r\n          {option.label} ({option.code}) +{option.phone}\r\n        </Box>\r\n      )}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label='Choose a country'\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\r\nconst countries = [\r\n  {code: 'AD', label: 'Andorra', phone: '376'},\r\n  {\r\n    code: 'AE',\r\n    label: 'United Arab Emirates',\r\n    phone: '971',\r\n  },\r\n  {code: 'AF', label: 'Afghanistan', phone: '93'},\r\n  {\r\n    code: 'AG',\r\n    label: 'Antigua and Barbuda',\r\n    phone: '1-268',\r\n  },\r\n  {code: 'AI', label: 'Anguilla', phone: '1-264'},\r\n  {code: 'AL', label: 'Albania', phone: '355'},\r\n  {code: 'AM', label: 'Armenia', phone: '374'},\r\n  {code: 'AO', label: 'Angola', phone: '244'},\r\n  {code: 'AQ', label: 'Antarctica', phone: '672'},\r\n  {code: 'AR', label: 'Argentina', phone: '54'},\r\n  {code: 'AS', label: 'American Samoa', phone: '1-684'},\r\n  {code: 'AT', label: 'Austria', phone: '43'},\r\n  {\r\n    code: 'AU',\r\n    label: 'Australia',\r\n    phone: '61',\r\n    suggested: true,\r\n  },\r\n  {code: 'AW', label: 'Aruba', phone: '297'},\r\n  {code: 'AX', label: 'Alland Islands', phone: '358'},\r\n  {code: 'AZ', label: 'Azerbaijan', phone: '994'},\r\n  {\r\n    code: 'BA',\r\n    label: 'Bosnia and Herzegovina',\r\n    phone: '387',\r\n  },\r\n  {code: 'BB', label: 'Barbados', phone: '1-246'},\r\n  {code: 'BD', label: 'Bangladesh', phone: '880'},\r\n  {code: 'BE', label: 'Belgium', phone: '32'},\r\n  {code: 'BF', label: 'Burkina Faso', phone: '226'},\r\n  {code: 'BG', label: 'Bulgaria', phone: '359'},\r\n  {code: 'BH', label: 'Bahrain', phone: '973'},\r\n  {code: 'BI', label: 'Burundi', phone: '257'},\r\n  {code: 'BJ', label: 'Benin', phone: '229'},\r\n  {code: 'BL', label: 'Saint Barthelemy', phone: '590'},\r\n  {code: 'BM', label: 'Bermuda', phone: '1-441'},\r\n  {code: 'BN', label: 'Brunei Darussalam', phone: '673'},\r\n  {code: 'BO', label: 'Bolivia', phone: '591'},\r\n  {code: 'BR', label: 'Brazil', phone: '55'},\r\n  {code: 'BS', label: 'Bahamas', phone: '1-242'},\r\n  {code: 'BT', label: 'Bhutan', phone: '975'},\r\n  {code: 'BV', label: 'Bouvet Island', phone: '47'},\r\n  {code: 'BW', label: 'Botswana', phone: '267'},\r\n  {code: 'BY', label: 'Belarus', phone: '375'},\r\n  {code: 'BZ', label: 'Belize', phone: '501'},\r\n  {\r\n    code: 'CA',\r\n    label: 'Canada',\r\n    phone: '1',\r\n    suggested: true,\r\n  },\r\n  {\r\n    code: 'CC',\r\n    label: 'Cocos (Keeling) Islands',\r\n    phone: '61',\r\n  },\r\n  {\r\n    code: 'CD',\r\n    label: 'Congo, Democratic Republic of the',\r\n    phone: '243',\r\n  },\r\n  {\r\n    code: 'CF',\r\n    label: 'Central African Republic',\r\n    phone: '236',\r\n  },\r\n  {\r\n    code: 'CG',\r\n    label: 'Congo, Republic of the',\r\n    phone: '242',\r\n  },\r\n  {code: 'CH', label: 'Switzerland', phone: '41'},\r\n  {code: 'CI', label: \"Cote d'Ivoire\", phone: '225'},\r\n  {code: 'CK', label: 'Cook Islands', phone: '682'},\r\n  {code: 'CL', label: 'Chile', phone: '56'},\r\n  {code: 'CM', label: 'Cameroon', phone: '237'},\r\n  {code: 'CN', label: 'China', phone: '86'},\r\n  {code: 'CO', label: 'Colombia', phone: '57'},\r\n  {code: 'CR', label: 'Costa Rica', phone: '506'},\r\n  {code: 'CU', label: 'Cuba', phone: '53'},\r\n  {code: 'CV', label: 'Cape Verde', phone: '238'},\r\n  {code: 'CW', label: 'Curacao', phone: '599'},\r\n  {code: 'CX', label: 'Christmas Island', phone: '61'},\r\n  {code: 'CY', label: 'Cyprus', phone: '357'},\r\n  {code: 'CZ', label: 'Czech Republic', phone: '420'},\r\n  {\r\n    code: 'DE',\r\n    label: 'Germany',\r\n    phone: '49',\r\n    suggested: true,\r\n  },\r\n  {code: 'DJ', label: 'Djibouti', phone: '253'},\r\n  {code: 'DK', label: 'Denmark', phone: '45'},\r\n  {code: 'DM', label: 'Dominica', phone: '1-767'},\r\n  {\r\n    code: 'DO',\r\n    label: 'Dominican Republic',\r\n    phone: '1-809',\r\n  },\r\n  {code: 'DZ', label: 'Algeria', phone: '213'},\r\n  {code: 'EC', label: 'Ecuador', phone: '593'},\r\n  {code: 'EE', label: 'Estonia', phone: '372'},\r\n  {code: 'EG', label: 'Egypt', phone: '20'},\r\n  {code: 'EH', label: 'Western Sahara', phone: '212'},\r\n  {code: 'ER', label: 'Eritrea', phone: '291'},\r\n  {code: 'ES', label: 'Spain', phone: '34'},\r\n  {code: 'ET', label: 'Ethiopia', phone: '251'},\r\n  {code: 'FI', label: 'Finland', phone: '358'},\r\n  {code: 'FJ', label: 'Fiji', phone: '679'},\r\n  {\r\n    code: 'FK',\r\n    label: 'Falkland Islands (Malvinas)',\r\n    phone: '500',\r\n  },\r\n  {\r\n    code: 'FM',\r\n    label: 'Micronesia, Federated States of',\r\n    phone: '691',\r\n  },\r\n  {code: 'FO', label: 'Faroe Islands', phone: '298'},\r\n  {\r\n    code: 'FR',\r\n    label: 'France',\r\n    phone: '33',\r\n    suggested: true,\r\n  },\r\n  {code: 'GA', label: 'Gabon', phone: '241'},\r\n  {code: 'GB', label: 'United Kingdom', phone: '44'},\r\n  {code: 'GD', label: 'Grenada', phone: '1-473'},\r\n  {code: 'GE', label: 'Georgia', phone: '995'},\r\n  {code: 'GF', label: 'French Guiana', phone: '594'},\r\n  {code: 'GG', label: 'Guernsey', phone: '44'},\r\n  {code: 'GH', label: 'Ghana', phone: '233'},\r\n  {code: 'GI', label: 'Gibraltar', phone: '350'},\r\n  {code: 'GL', label: 'Greenland', phone: '299'},\r\n  {code: 'GM', label: 'Gambia', phone: '220'},\r\n  {code: 'GN', label: 'Guinea', phone: '224'},\r\n  {code: 'GP', label: 'Guadeloupe', phone: '590'},\r\n  {code: 'GQ', label: 'Equatorial Guinea', phone: '240'},\r\n  {code: 'GR', label: 'Greece', phone: '30'},\r\n  {\r\n    code: 'GS',\r\n    label: 'South Georgia and the South Sandwich Islands',\r\n    phone: '500',\r\n  },\r\n  {code: 'GT', label: 'Guatemala', phone: '502'},\r\n  {code: 'GU', label: 'Guam', phone: '1-671'},\r\n  {code: 'GW', label: 'Guinea-Bissau', phone: '245'},\r\n  {code: 'GY', label: 'Guyana', phone: '592'},\r\n  {code: 'HK', label: 'Hong Kong', phone: '852'},\r\n  {\r\n    code: 'HM',\r\n    label: 'Heard Island and McDonald Islands',\r\n    phone: '672',\r\n  },\r\n  {code: 'HN', label: 'Honduras', phone: '504'},\r\n  {code: 'HR', label: 'Croatia', phone: '385'},\r\n  {code: 'HT', label: 'Haiti', phone: '509'},\r\n  {code: 'HU', label: 'Hungary', phone: '36'},\r\n  {code: 'ID', label: 'Indonesia', phone: '62'},\r\n  {code: 'IE', label: 'Ireland', phone: '353'},\r\n  {code: 'IL', label: 'Israel', phone: '972'},\r\n  {code: 'IM', label: 'Isle of Man', phone: '44'},\r\n  {code: 'IN', label: 'India', phone: '91'},\r\n  {\r\n    code: 'IO',\r\n    label: 'British Indian Ocean Territory',\r\n    phone: '246',\r\n  },\r\n  {code: 'IQ', label: 'Iraq', phone: '964'},\r\n  {\r\n    code: 'IR',\r\n    label: 'Iran, Islamic Republic of',\r\n    phone: '98',\r\n  },\r\n  {code: 'IS', label: 'Iceland', phone: '354'},\r\n  {code: 'IT', label: 'Italy', phone: '39'},\r\n  {code: 'JE', label: 'Jersey', phone: '44'},\r\n  {code: 'JM', label: 'Jamaica', phone: '1-876'},\r\n  {code: 'JO', label: 'Jordan', phone: '962'},\r\n  {\r\n    code: 'JP',\r\n    label: 'Japan',\r\n    phone: '81',\r\n    suggested: true,\r\n  },\r\n  {code: 'KE', label: 'Kenya', phone: '254'},\r\n  {code: 'KG', label: 'Kyrgyzstan', phone: '996'},\r\n  {code: 'KH', label: 'Cambodia', phone: '855'},\r\n  {code: 'KI', label: 'Kiribati', phone: '686'},\r\n  {code: 'KM', label: 'Comoros', phone: '269'},\r\n  {\r\n    code: 'KN',\r\n    label: 'Saint Kitts and Nevis',\r\n    phone: '1-869',\r\n  },\r\n  {\r\n    code: 'KP',\r\n    label: \"Korea, Democratic People's Republic of\",\r\n    phone: '850',\r\n  },\r\n  {code: 'KR', label: 'Korea, Republic of', phone: '82'},\r\n  {code: 'KW', label: 'Kuwait', phone: '965'},\r\n  {code: 'KY', label: 'Cayman Islands', phone: '1-345'},\r\n  {code: 'KZ', label: 'Kazakhstan', phone: '7'},\r\n  {\r\n    code: 'LA',\r\n    label: \"Lao People's Democratic Republic\",\r\n    phone: '856',\r\n  },\r\n  {code: 'LB', label: 'Lebanon', phone: '961'},\r\n  {code: 'LC', label: 'Saint Lucia', phone: '1-758'},\r\n  {code: 'LI', label: 'Liechtenstein', phone: '423'},\r\n  {code: 'LK', label: 'Sri Lanka', phone: '94'},\r\n  {code: 'LR', label: 'Liberia', phone: '231'},\r\n  {code: 'LS', label: 'Lesotho', phone: '266'},\r\n  {code: 'LT', label: 'Lithuania', phone: '370'},\r\n  {code: 'LU', label: 'Luxembourg', phone: '352'},\r\n  {code: 'LV', label: 'Latvia', phone: '371'},\r\n  {code: 'LY', label: 'Libya', phone: '218'},\r\n  {code: 'MA', label: 'Morocco', phone: '212'},\r\n  {code: 'MC', label: 'Monaco', phone: '377'},\r\n  {\r\n    code: 'MD',\r\n    label: 'Moldova, Republic of',\r\n    phone: '373',\r\n  },\r\n  {code: 'ME', label: 'Montenegro', phone: '382'},\r\n  {\r\n    code: 'MF',\r\n    label: 'Saint Martin (French part)',\r\n    phone: '590',\r\n  },\r\n  {code: 'MG', label: 'Madagascar', phone: '261'},\r\n  {code: 'MH', label: 'Marshall Islands', phone: '692'},\r\n  {\r\n    code: 'MK',\r\n    label: 'Macedonia, the Former Yugoslav Republic of',\r\n    phone: '389',\r\n  },\r\n  {code: 'ML', label: 'Mali', phone: '223'},\r\n  {code: 'MM', label: 'Myanmar', phone: '95'},\r\n  {code: 'MN', label: 'Mongolia', phone: '976'},\r\n  {code: 'MO', label: 'Macao', phone: '853'},\r\n  {\r\n    code: 'MP',\r\n    label: 'Northern Mariana Islands',\r\n    phone: '1-670',\r\n  },\r\n  {code: 'MQ', label: 'Martinique', phone: '596'},\r\n  {code: 'MR', label: 'Mauritania', phone: '222'},\r\n  {code: 'MS', label: 'Montserrat', phone: '1-664'},\r\n  {code: 'MT', label: 'Malta', phone: '356'},\r\n  {code: 'MU', label: 'Mauritius', phone: '230'},\r\n  {code: 'MV', label: 'Maldives', phone: '960'},\r\n  {code: 'MW', label: 'Malawi', phone: '265'},\r\n  {code: 'MX', label: 'Mexico', phone: '52'},\r\n  {code: 'MY', label: 'Malaysia', phone: '60'},\r\n  {code: 'MZ', label: 'Mozambique', phone: '258'},\r\n  {code: 'NA', label: 'Namibia', phone: '264'},\r\n  {code: 'NC', label: 'New Caledonia', phone: '687'},\r\n  {code: 'NE', label: 'Niger', phone: '227'},\r\n  {code: 'NF', label: 'Norfolk Island', phone: '672'},\r\n  {code: 'NG', label: 'Nigeria', phone: '234'},\r\n  {code: 'NI', label: 'Nicaragua', phone: '505'},\r\n  {code: 'NL', label: 'Netherlands', phone: '31'},\r\n  {code: 'NO', label: 'Norway', phone: '47'},\r\n  {code: 'NP', label: 'Nepal', phone: '977'},\r\n  {code: 'NR', label: 'Nauru', phone: '674'},\r\n  {code: 'NU', label: 'Niue', phone: '683'},\r\n  {code: 'NZ', label: 'New Zealand', phone: '64'},\r\n  {code: 'OM', label: 'Oman', phone: '968'},\r\n  {code: 'PA', label: 'Panama', phone: '507'},\r\n  {code: 'PE', label: 'Peru', phone: '51'},\r\n  {code: 'PF', label: 'French Polynesia', phone: '689'},\r\n  {code: 'PG', label: 'Papua New Guinea', phone: '675'},\r\n  {code: 'PH', label: 'Philippines', phone: '63'},\r\n  {code: 'PK', label: 'Pakistan', phone: '92'},\r\n  {code: 'PL', label: 'Poland', phone: '48'},\r\n  {\r\n    code: 'PM',\r\n    label: 'Saint Pierre and Miquelon',\r\n    phone: '508',\r\n  },\r\n  {code: 'PN', label: 'Pitcairn', phone: '870'},\r\n  {code: 'PR', label: 'Puerto Rico', phone: '1'},\r\n  {\r\n    code: 'PS',\r\n    label: 'Palestine, State of',\r\n    phone: '970',\r\n  },\r\n  {code: 'PT', label: 'Portugal', phone: '351'},\r\n  {code: 'PW', label: 'Palau', phone: '680'},\r\n  {code: 'PY', label: 'Paraguay', phone: '595'},\r\n  {code: 'QA', label: 'Qatar', phone: '974'},\r\n  {code: 'RE', label: 'Reunion', phone: '262'},\r\n  {code: 'RO', label: 'Romania', phone: '40'},\r\n  {code: 'RS', label: 'Serbia', phone: '381'},\r\n  {code: 'RU', label: 'Russian Federation', phone: '7'},\r\n  {code: 'RW', label: 'Rwanda', phone: '250'},\r\n  {code: 'SA', label: 'Saudi Arabia', phone: '966'},\r\n  {code: 'SB', label: 'Solomon Islands', phone: '677'},\r\n  {code: 'SC', label: 'Seychelles', phone: '248'},\r\n  {code: 'SD', label: 'Sudan', phone: '249'},\r\n  {code: 'SE', label: 'Sweden', phone: '46'},\r\n  {code: 'SG', label: 'Singapore', phone: '65'},\r\n  {code: 'SH', label: 'Saint Helena', phone: '290'},\r\n  {code: 'SI', label: 'Slovenia', phone: '386'},\r\n  {\r\n    code: 'SJ',\r\n    label: 'Svalbard and Jan Mayen',\r\n    phone: '47',\r\n  },\r\n  {code: 'SK', label: 'Slovakia', phone: '421'},\r\n  {code: 'SL', label: 'Sierra Leone', phone: '232'},\r\n  {code: 'SM', label: 'San Marino', phone: '378'},\r\n  {code: 'SN', label: 'Senegal', phone: '221'},\r\n  {code: 'SO', label: 'Somalia', phone: '252'},\r\n  {code: 'SR', label: 'Suriname', phone: '597'},\r\n  {code: 'SS', label: 'South Sudan', phone: '211'},\r\n  {\r\n    code: 'ST',\r\n    label: 'Sao Tome and Principe',\r\n    phone: '239',\r\n  },\r\n  {code: 'SV', label: 'El Salvador', phone: '503'},\r\n  {\r\n    code: 'SX',\r\n    label: 'Sint Maarten (Dutch part)',\r\n    phone: '1-721',\r\n  },\r\n  {\r\n    code: 'SY',\r\n    label: 'Syrian Arab Republic',\r\n    phone: '963',\r\n  },\r\n  {code: 'SZ', label: 'Swaziland', phone: '268'},\r\n  {\r\n    code: 'TC',\r\n    label: 'Turks and Caicos Islands',\r\n    phone: '1-649',\r\n  },\r\n  {code: 'TD', label: 'Chad', phone: '235'},\r\n  {\r\n    code: 'TF',\r\n    label: 'French Southern Territories',\r\n    phone: '262',\r\n  },\r\n  {code: 'TG', label: 'Togo', phone: '228'},\r\n  {code: 'TH', label: 'Thailand', phone: '66'},\r\n  {code: 'TJ', label: 'Tajikistan', phone: '992'},\r\n  {code: 'TK', label: 'Tokelau', phone: '690'},\r\n  {code: 'TL', label: 'Timor-Leste', phone: '670'},\r\n  {code: 'TM', label: 'Turkmenistan', phone: '993'},\r\n  {code: 'TN', label: 'Tunisia', phone: '216'},\r\n  {code: 'TO', label: 'Tonga', phone: '676'},\r\n  {code: 'TR', label: 'Turkey', phone: '90'},\r\n  {\r\n    code: 'TT',\r\n    label: 'Trinidad and Tobago',\r\n    phone: '1-868',\r\n  },\r\n  {code: 'TV', label: 'Tuvalu', phone: '688'},\r\n  {\r\n    code: 'TW',\r\n    label: 'Taiwan, Province of China',\r\n    phone: '886',\r\n  },\r\n  {\r\n    code: 'TZ',\r\n    label: 'United Republic of Tanzania',\r\n    phone: '255',\r\n  },\r\n  {code: 'UA', label: 'Ukraine', phone: '380'},\r\n  {code: 'UG', label: 'Uganda', phone: '256'},\r\n  {\r\n    code: 'US',\r\n    label: 'United States',\r\n    phone: '1',\r\n    suggested: true,\r\n  },\r\n  {code: 'UY', label: 'Uruguay', phone: '598'},\r\n  {code: 'UZ', label: 'Uzbekistan', phone: '998'},\r\n  {\r\n    code: 'VA',\r\n    label: 'Holy See (Vatican City State)',\r\n    phone: '379',\r\n  },\r\n  {\r\n    code: 'VC',\r\n    label: 'Saint Vincent and the Grenadines',\r\n    phone: '1-784',\r\n  },\r\n  {code: 'VE', label: 'Venezuela', phone: '58'},\r\n  {\r\n    code: 'VG',\r\n    label: 'British Virgin Islands',\r\n    phone: '1-284',\r\n  },\r\n  {\r\n    code: 'VI',\r\n    label: 'US Virgin Islands',\r\n    phone: '1-340',\r\n  },\r\n  {code: 'VN', label: 'Vietnam', phone: '84'},\r\n  {code: 'VU', label: 'Vanuatu', phone: '678'},\r\n  {code: 'WF', label: 'Wallis and Futuna', phone: '681'},\r\n  {code: 'WS', label: 'Samoa', phone: '685'},\r\n  {code: 'XK', label: 'Kosovo', phone: '383'},\r\n  {code: 'YE', label: 'Yemen', phone: '967'},\r\n  {code: 'YT', label: 'Mayotte', phone: '262'},\r\n  {code: 'ZA', label: 'South Africa', phone: '27'},\r\n  {code: 'ZM', label: 'Zambia', phone: '260'},\r\n  {code: 'ZW', label: 'Zimbabwe', phone: '263'},\r\n];\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nconst options = ['Option 1', 'Option 2'];\r\n\r\nexport default function ControllableStates() {\r\n  const [value, setValue] = React.useState(options[0]);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n\r\n  return (\r\n    <div>\r\n      <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\r\n      <div>{`inputValue: '${inputValue}'`}</div>\r\n      <br />\r\n      <Autocomplete\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        id='controllable-states-demo'\r\n        options={options}\r\n        sx={{width: 300}}\r\n        renderInput={(params) => <TextField {...params} label='Controllable' />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function Grouped() {\r\n  const options = top100Films.map((option) => {\r\n    const firstLetter = option.title[0].toUpperCase();\r\n    return {\r\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n      ...option,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Autocomplete\r\n      id='grouped-demo'\r\n      options={options.sort(\r\n        (a, b) => -b.firstLetter.localeCompare(a.firstLetter),\r\n      )}\r\n      groupBy={(option) => option.firstLetter}\r\n      getOptionLabel={(option) => option.title}\r\n      sx={{width: 300}}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label='With categories' />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  {title: 'The Shawshank Redemption', year: 1994},\r\n  {title: 'The Godfather', year: 1972},\r\n  {title: 'The Godfather: Part II', year: 1974},\r\n  {title: 'The Dark Knight', year: 2008},\r\n  {title: '12 Angry Men', year: 1957},\r\n  {title: \"Schindler's List\", year: 1993},\r\n  {title: 'Pulp Fiction', year: 1994},\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\r\n  {title: 'Fight Club', year: 1999},\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  {title: 'Forrest Gump', year: 1994},\r\n  {title: 'Inception', year: 2010},\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  {title: \"One Flew Over the Cuckoo's Nest\", year: 1975},\r\n  {title: 'Goodfellas', year: 1990},\r\n  {title: 'The Matrix', year: 1999},\r\n  {title: 'Seven Samurai', year: 1954},\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  {title: 'City of God', year: 2002},\r\n  {title: 'Se7en', year: 1995},\r\n  {title: 'The Silence of the Lambs', year: 1991},\r\n  {title: \"It's a Wonderful Life\", year: 1946},\r\n  {title: 'Life Is Beautiful', year: 1997},\r\n  {title: 'The Usual Suspects', year: 1995},\r\n  {title: 'Léon: The Professional', year: 1994},\r\n  {title: 'Spirited Away', year: 2001},\r\n  {title: 'Saving Private Ryan', year: 1998},\r\n  {title: 'Once Upon a Time in the West', year: 1968},\r\n  {title: 'American History X', year: 1998},\r\n  {title: 'Interstellar', year: 2014},\r\n  {title: 'Casablanca', year: 1942},\r\n  {title: 'City Lights', year: 1931},\r\n  {title: 'Psycho', year: 1960},\r\n  {title: 'The Green Mile', year: 1999},\r\n  {title: 'The Intouchables', year: 2011},\r\n  {title: 'Modern Times', year: 1936},\r\n  {title: 'Raiders of the Lost Ark', year: 1981},\r\n  {title: 'Rear Window', year: 1954},\r\n  {title: 'The Pianist', year: 2002},\r\n  {title: 'The Departed', year: 2006},\r\n  {title: 'Terminator 2: Judgment Day', year: 1991},\r\n  {title: 'Back to the Future', year: 1985},\r\n  {title: 'Whiplash', year: 2014},\r\n  {title: 'Gladiator', year: 2000},\r\n  {title: 'Memento', year: 2000},\r\n  {title: 'The Prestige', year: 2006},\r\n  {title: 'The Lion King', year: 1994},\r\n  {title: 'Apocalypse Now', year: 1979},\r\n  {title: 'Alien', year: 1979},\r\n  {title: 'Sunset Boulevard', year: 1950},\r\n  {\r\n    title:\r\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  {title: 'The Great Dictator', year: 1940},\r\n  {title: 'Cinema Paradiso', year: 1988},\r\n  {title: 'The Lives of Others', year: 2006},\r\n  {title: 'Grave of the Fireflies', year: 1988},\r\n  {title: 'Paths of Glory', year: 1957},\r\n  {title: 'Django Unchained', year: 2012},\r\n  {title: 'The Shining', year: 1980},\r\n  {title: 'WALL·E', year: 2008},\r\n  {title: 'American Beauty', year: 1999},\r\n  {title: 'The Dark Knight Rises', year: 2012},\r\n  {title: 'Princess Mononoke', year: 1997},\r\n  {title: 'Aliens', year: 1986},\r\n  {title: 'Oldboy', year: 2003},\r\n  {title: 'Once Upon a Time in America', year: 1984},\r\n  {title: 'Witness for the Prosecution', year: 1957},\r\n  {title: 'Das Boot', year: 1981},\r\n  {title: 'Citizen Kane', year: 1941},\r\n  {title: 'North by Northwest', year: 1959},\r\n  {title: 'Vertigo', year: 1958},\r\n  {\r\n    title: 'Star Wars: Episode VI - Return of the Jedi',\r\n    year: 1983,\r\n  },\r\n  {title: 'Reservoir Dogs', year: 1992},\r\n  {title: 'Braveheart', year: 1995},\r\n  {title: 'M', year: 1931},\r\n  {title: 'Requiem for a Dream', year: 2000},\r\n  {title: 'Amélie', year: 2001},\r\n  {title: 'A Clockwork Orange', year: 1971},\r\n  {title: 'Like Stars on Earth', year: 2007},\r\n  {title: 'Taxi Driver', year: 1976},\r\n  {title: 'Lawrence of Arabia', year: 1962},\r\n  {title: 'Double Indemnity', year: 1944},\r\n  {\r\n    title: 'Eternal Sunshine of the Spotless Mind',\r\n    year: 2004,\r\n  },\r\n  {title: 'Amadeus', year: 1984},\r\n  {title: 'To Kill a Mockingbird', year: 1962},\r\n  {title: 'Toy Story 3', year: 2010},\r\n  {title: 'Logan', year: 2017},\r\n  {title: 'Full Metal Jacket', year: 1987},\r\n  {title: 'Dangal', year: 2016},\r\n  {title: 'The Sting', year: 1973},\r\n  {title: '2001: A Space Odyssey', year: 1968},\r\n  {title: \"Singin' in the Rain\", year: 1952},\r\n  {title: 'Toy Story', year: 1995},\r\n  {title: 'Bicycle Thieves', year: 1948},\r\n  {title: 'The Kid', year: 1921},\r\n  {title: 'Inglourious Basterds', year: 2009},\r\n  {title: 'Snatch', year: 2000},\r\n  {title: '3 Idiots', year: 2009},\r\n  {title: 'Monty Python and the Holy Grail', year: 1975},\r\n];\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function Asynchronous() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      await sleep(1e3); // For demo purposes.\r\n\r\n      if (active) {\r\n        setOptions([...topFilms]);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id='asynchronous-demo'\r\n      sx={{width: 300}}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      isOptionEqualToValue={(option, value) => option.title === value.title}\r\n      getOptionLabel={(option) => option.title}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label='Asynchronous'\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color='inherit' size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst topFilms = [\r\n  {title: 'The Shawshank Redemption', year: 1994},\r\n  {title: 'The Godfather', year: 1972},\r\n  {title: 'The Godfather: Part II', year: 1974},\r\n  {title: 'The Dark Knight', year: 2008},\r\n  {title: '12 Angry Men', year: 1957},\r\n  {title: \"Schindler's List\", year: 1993},\r\n  {title: 'Pulp Fiction', year: 1994},\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\r\n  {title: 'Fight Club', year: 1999},\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  {title: 'Forrest Gump', year: 1994},\r\n  {title: 'Inception', year: 2010},\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  {title: \"One Flew Over the Cuckoo's Nest\", year: 1975},\r\n  {title: 'Goodfellas', year: 1990},\r\n  {title: 'The Matrix', year: 1999},\r\n  {title: 'Seven Samurai', year: 1954},\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  {title: 'City of God', year: 2002},\r\n  {title: 'Se7en', year: 1995},\r\n  {title: 'The Silence of the Lambs', year: 1991},\r\n  {title: \"It's a Wonderful Life\", year: 1946},\r\n  {title: 'Life Is Beautiful', year: 1997},\r\n  {title: 'The Usual Suspects', year: 1995},\r\n  {title: 'Léon: The Professional', year: 1994},\r\n  {title: 'Spirited Away', year: 2001},\r\n  {title: 'Saving Private Ryan', year: 1998},\r\n  {title: 'Once Upon a Time in the West', year: 1968},\r\n  {title: 'American History X', year: 1998},\r\n  {title: 'Interstellar', year: 2014},\r\n];\r\n","import * as React from 'react';\r\nimport Chip from '@mui/material/Chip';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nexport default function Multiple() {\r\n  return (\r\n    <Stack spacing={3} sx={{width: 500}}>\r\n      <Autocomplete\r\n        multiple\r\n        id='tags-standard'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant='standard'\r\n            label='Multiple values'\r\n            placeholder='Favorites'\r\n          />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        multiple\r\n        id='tags-outlined'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label='filterSelectedOptions'\r\n            placeholder='Favorites'\r\n          />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        multiple\r\n        id='tags-filled'\r\n        options={top100Films.map((option) => option.title)}\r\n        defaultValue={[top100Films[13].title]}\r\n        freeSolo\r\n        renderTags={(value, getTagProps) =>\r\n          value.map((option, index) => (\r\n            <Chip\r\n              key={index}\r\n              variant='outlined'\r\n              label={option}\r\n              {...getTagProps({index})}\r\n            />\r\n          ))\r\n        }\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant='filled'\r\n            label='freeSolo'\r\n            placeholder='Favorites'\r\n          />\r\n        )}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  {title: 'The Shawshank Redemption', year: 1994},\r\n  {title: 'The Godfather', year: 1972},\r\n  {title: 'The Godfather: Part II', year: 1974},\r\n  {title: 'The Dark Knight', year: 2008},\r\n  {title: '12 Angry Men', year: 1957},\r\n  {title: \"Schindler's List\", year: 1993},\r\n  {title: 'Pulp Fiction', year: 1994},\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\r\n  {title: 'Fight Club', year: 1999},\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  {title: 'Forrest Gump', year: 1994},\r\n  {title: 'Inception', year: 2010},\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  {title: \"One Flew Over the Cuckoo's Nest\", year: 1975},\r\n  {title: 'Goodfellas', year: 1990},\r\n  {title: 'The Matrix', year: 1999},\r\n  {title: 'Seven Samurai', year: 1954},\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  {title: 'City of God', year: 2002},\r\n  {title: 'Se7en', year: 1995},\r\n  {title: 'The Silence of the Lambs', year: 1991},\r\n  {title: \"It's a Wonderful Life\", year: 1946},\r\n  {title: 'Life Is Beautiful', year: 1997},\r\n  {title: 'The Usual Suspects', year: 1995},\r\n  {title: 'Léon: The Professional', year: 1994},\r\n  {title: 'Spirited Away', year: 2001},\r\n  {title: 'Saving Private Ryan', year: 1998},\r\n  {title: 'Once Upon a Time in the West', year: 1968},\r\n  {title: 'American History X', year: 1998},\r\n  {title: 'Interstellar', year: 2014},\r\n  {title: 'Casablanca', year: 1942},\r\n  {title: 'City Lights', year: 1931},\r\n  {title: 'Psycho', year: 1960},\r\n  {title: 'The Green Mile', year: 1999},\r\n  {title: 'The Intouchables', year: 2011},\r\n  {title: 'Modern Times', year: 1936},\r\n  {title: 'Raiders of the Lost Ark', year: 1981},\r\n  {title: 'Rear Window', year: 1954},\r\n  {title: 'The Pianist', year: 2002},\r\n  {title: 'The Departed', year: 2006},\r\n  {title: 'Terminator 2: Judgment Day', year: 1991},\r\n  {title: 'Back to the Future', year: 1985},\r\n  {title: 'Whiplash', year: 2014},\r\n  {title: 'Gladiator', year: 2000},\r\n  {title: 'Memento', year: 2000},\r\n  {title: 'The Prestige', year: 2006},\r\n  {title: 'The Lion King', year: 1994},\r\n  {title: 'Apocalypse Now', year: 1979},\r\n  {title: 'Alien', year: 1979},\r\n  {title: 'Sunset Boulevard', year: 1950},\r\n  {\r\n    title:\r\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  {title: 'The Great Dictator', year: 1940},\r\n  {title: 'Cinema Paradiso', year: 1988},\r\n  {title: 'The Lives of Others', year: 2006},\r\n  {title: 'Grave of the Fireflies', year: 1988},\r\n  {title: 'Paths of Glory', year: 1957},\r\n  {title: 'Django Unchained', year: 2012},\r\n  {title: 'The Shining', year: 1980},\r\n  {title: 'WALL·E', year: 2008},\r\n  {title: 'American Beauty', year: 1999},\r\n  {title: 'The Dark Knight Rises', year: 2012},\r\n  {title: 'Princess Mononoke', year: 1997},\r\n  {title: 'Aliens', year: 1986},\r\n  {title: 'Oldboy', year: 2003},\r\n  {title: 'Once Upon a Time in America', year: 1984},\r\n  {title: 'Witness for the Prosecution', year: 1957},\r\n  {title: 'Das Boot', year: 1981},\r\n  {title: 'Citizen Kane', year: 1941},\r\n  {title: 'North by Northwest', year: 1959},\r\n  {title: 'Vertigo', year: 1958},\r\n  {\r\n    title: 'Star Wars: Episode VI - Return of the Jedi',\r\n    year: 1983,\r\n  },\r\n  {title: 'Reservoir Dogs', year: 1992},\r\n  {title: 'Braveheart', year: 1995},\r\n  {title: 'M', year: 1931},\r\n  {title: 'Requiem for a Dream', year: 2000},\r\n  {title: 'Amélie', year: 2001},\r\n  {title: 'A Clockwork Orange', year: 1971},\r\n  {title: 'Like Stars on Earth', year: 2007},\r\n  {title: 'Taxi Driver', year: 1976},\r\n  {title: 'Lawrence of Arabia', year: 1962},\r\n  {title: 'Double Indemnity', year: 1944},\r\n  {\r\n    title: 'Eternal Sunshine of the Spotless Mind',\r\n    year: 2004,\r\n  },\r\n  {title: 'Amadeus', year: 1984},\r\n  {title: 'To Kill a Mockingbird', year: 1962},\r\n  {title: 'Toy Story 3', year: 2010},\r\n  {title: 'Logan', year: 2017},\r\n  {title: 'Full Metal Jacket', year: 1987},\r\n  {title: 'Dangal', year: 2016},\r\n  {title: 'The Sting', year: 1973},\r\n  {title: '2001: A Space Odyssey', year: 1968},\r\n  {title: \"Singin' in the Rain\", year: 1952},\r\n  {title: 'Toy Story', year: 1995},\r\n  {title: 'Bicycle Thieves', year: 1948},\r\n  {title: 'The Kid', year: 1921},\r\n  {title: 'Inglourious Basterds', year: 2009},\r\n  {title: 'Snatch', year: 2000},\r\n  {title: '3 Idiots', year: 2009},\r\n  {title: 'Monty Python and the Holy Grail', year: 1975},\r\n];\r\n","import * as React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize='small' />;\r\nconst checkedIcon = <CheckBoxIcon fontSize='small' />;\r\n\r\nexport default function CheckboxesTags() {\r\n  return (\r\n    <Autocomplete\r\n      multiple\r\n      id='checkboxes-tags-demo'\r\n      options={top100Films}\r\n      disableCloseOnSelect\r\n      getOptionLabel={(option) => option.title}\r\n      renderOption={(props, option, {selected}) => (\r\n        <li {...props}>\r\n          <Checkbox\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n            style={{marginRight: 8}}\r\n            checked={selected}\r\n          />\r\n          {option.title}\r\n        </li>\r\n      )}\r\n      style={{width: 500}}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label='Checkboxes' placeholder='Favorites' />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  {title: 'The Shawshank Redemption', year: 1994},\r\n  {title: 'The Godfather', year: 1972},\r\n  {title: 'The Godfather: Part II', year: 1974},\r\n  {title: 'The Dark Knight', year: 2008},\r\n  {title: '12 Angry Men', year: 1957},\r\n  {title: \"Schindler's List\", year: 1993},\r\n  {title: 'Pulp Fiction', year: 1994},\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\r\n  {title: 'Fight Club', year: 1999},\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  {title: 'Forrest Gump', year: 1994},\r\n  {title: 'Inception', year: 2010},\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  {title: \"One Flew Over the Cuckoo's Nest\", year: 1975},\r\n  {title: 'Goodfellas', year: 1990},\r\n  {title: 'The Matrix', year: 1999},\r\n  {title: 'Seven Samurai', year: 1954},\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  {title: 'City of God', year: 2002},\r\n  {title: 'Se7en', year: 1995},\r\n  {title: 'The Silence of the Lambs', year: 1991},\r\n  {title: \"It's a Wonderful Life\", year: 1946},\r\n  {title: 'Life Is Beautiful', year: 1997},\r\n  {title: 'The Usual Suspects', year: 1995},\r\n  {title: 'Léon: The Professional', year: 1994},\r\n  {title: 'Spirited Away', year: 2001},\r\n  {title: 'Saving Private Ryan', year: 1998},\r\n  {title: 'Once Upon a Time in the West', year: 1968},\r\n  {title: 'American History X', year: 1998},\r\n  {title: 'Interstellar', year: 2014},\r\n];\r\n","import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function Sizes() {\r\n  return (\r\n    <Stack spacing={2} sx={{width: 500}}>\r\n      <Autocomplete\r\n        id='size-small-standard'\r\n        size='small'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={top100Films[13]}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant='standard'\r\n            label='Size small'\r\n            placeholder='Favorites'\r\n          />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        multiple\r\n        id='size-small-standard-multi'\r\n        size='small'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant='standard'\r\n            label='Size small'\r\n            placeholder='Favorites'\r\n          />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        id='size-small-outlined'\r\n        size='small'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={top100Films[13]}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label='Size small' placeholder='Favorites' />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        multiple\r\n        id='size-small-outlined-multi'\r\n        size='small'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label='Size small' placeholder='Favorites' />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        id='size-small-filled'\r\n        size='small'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={top100Films[13]}\r\n        renderTags={(value, getTagProps) =>\r\n          value.map((option, index) => (\r\n            <Chip\r\n              key={index}\r\n              variant='outlined'\r\n              label={option.title}\r\n              size='small'\r\n              {...getTagProps({index})}\r\n            />\r\n          ))\r\n        }\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant='filled'\r\n            label='Size small'\r\n            placeholder='Favorites'\r\n          />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        multiple\r\n        id='size-small-filled-multi'\r\n        size='small'\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        renderTags={(value, getTagProps) =>\r\n          value.map((option, index) => (\r\n            <Chip\r\n              key={index}\r\n              variant='outlined'\r\n              label={option.title}\r\n              size='small'\r\n              {...getTagProps({index})}\r\n            />\r\n          ))\r\n        }\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant='filled'\r\n            label='Size small'\r\n            placeholder='Favorites'\r\n          />\r\n        )}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  {title: 'The Shawshank Redemption', year: 1994},\r\n  {title: 'The Godfather', year: 1972},\r\n  {title: 'The Godfather: Part II', year: 1974},\r\n  {title: 'The Dark Knight', year: 2008},\r\n  {title: '12 Angry Men', year: 1957},\r\n  {title: \"Schindler's List\", year: 1993},\r\n  {title: 'Pulp Fiction', year: 1994},\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\r\n  {title: 'Fight Club', year: 1999},\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  {title: 'Forrest Gump', year: 1994},\r\n  {title: 'Inception', year: 2010},\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  {title: \"One Flew Over the Cuckoo's Nest\", year: 1975},\r\n  {title: 'Goodfellas', year: 1990},\r\n  {title: 'The Matrix', year: 1999},\r\n  {title: 'Seven Samurai', year: 1954},\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  {title: 'City of God', year: 2002},\r\n  {title: 'Se7en', year: 1995},\r\n  {title: 'The Silence of the Lambs', year: 1991},\r\n  {title: \"It's a Wonderful Life\", year: 1946},\r\n  {title: 'Life Is Beautiful', year: 1997},\r\n  {title: 'The Usual Suspects', year: 1995},\r\n  {title: 'Léon: The Professional', year: 1994},\r\n  {title: 'Spirited Away', year: 2001},\r\n  {title: 'Saving Private Ryan', year: 1998},\r\n  {title: 'Once Upon a Time in the West', year: 1968},\r\n  {title: 'American History X', year: 1998},\r\n  {title: 'Interstellar', year: 2014},\r\n  {title: 'Casablanca', year: 1942},\r\n  {title: 'City Lights', year: 1931},\r\n  {title: 'Psycho', year: 1960},\r\n  {title: 'The Green Mile', year: 1999},\r\n  {title: 'The Intouchables', year: 2011},\r\n  {title: 'Modern Times', year: 1936},\r\n  {title: 'Raiders of the Lost Ark', year: 1981},\r\n  {title: 'Rear Window', year: 1954},\r\n  {title: 'The Pianist', year: 2002},\r\n  {title: 'The Departed', year: 2006},\r\n  {title: 'Terminator 2: Judgment Day', year: 1991},\r\n  {title: 'Back to the Future', year: 1985},\r\n  {title: 'Whiplash', year: 2014},\r\n  {title: 'Gladiator', year: 2000},\r\n  {title: 'Memento', year: 2000},\r\n  {title: 'The Prestige', year: 2006},\r\n  {title: 'The Lion King', year: 1994},\r\n  {title: 'Apocalypse Now', year: 1979},\r\n  {title: 'Alien', year: 1979},\r\n  {title: 'Sunset Boulevard', year: 1950},\r\n  {\r\n    title:\r\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  {title: 'The Great Dictator', year: 1940},\r\n  {title: 'Cinema Paradiso', year: 1988},\r\n  {title: 'The Lives of Others', year: 2006},\r\n  {title: 'Grave of the Fireflies', year: 1988},\r\n  {title: 'Paths of Glory', year: 1957},\r\n  {title: 'Django Unchained', year: 2012},\r\n  {title: 'The Shining', year: 1980},\r\n  {title: 'WALL·E', year: 2008},\r\n  {title: 'American Beauty', year: 1999},\r\n  {title: 'The Dark Knight Rises', year: 2012},\r\n  {title: 'Princess Mononoke', year: 1997},\r\n  {title: 'Aliens', year: 1986},\r\n  {title: 'Oldboy', year: 2003},\r\n  {title: 'Once Upon a Time in America', year: 1984},\r\n  {title: 'Witness for the Prosecution', year: 1957},\r\n  {title: 'Das Boot', year: 1981},\r\n  {title: 'Citizen Kane', year: 1941},\r\n  {title: 'North by Northwest', year: 1959},\r\n  {title: 'Vertigo', year: 1958},\r\n  {\r\n    title: 'Star Wars: Episode VI - Return of the Jedi',\r\n    year: 1983,\r\n  },\r\n  {title: 'Reservoir Dogs', year: 1992},\r\n  {title: 'Braveheart', year: 1995},\r\n  {title: 'M', year: 1931},\r\n  {title: 'Requiem for a Dream', year: 2000},\r\n  {title: 'Amélie', year: 2001},\r\n  {title: 'A Clockwork Orange', year: 1971},\r\n  {title: 'Like Stars on Earth', year: 2007},\r\n  {title: 'Taxi Driver', year: 1976},\r\n  {title: 'Lawrence of Arabia', year: 1962},\r\n  {title: 'Double Indemnity', year: 1944},\r\n  {\r\n    title: 'Eternal Sunshine of the Spotless Mind',\r\n    year: 2004,\r\n  },\r\n  {title: 'Amadeus', year: 1984},\r\n  {title: 'To Kill a Mockingbird', year: 1962},\r\n  {title: 'Toy Story 3', year: 2010},\r\n  {title: 'Logan', year: 2017},\r\n  {title: 'Full Metal Jacket', year: 1987},\r\n  {title: 'Dangal', year: 2016},\r\n  {title: 'The Sting', year: 1973},\r\n  {title: '2001: A Space Odyssey', year: 1968},\r\n  {title: \"Singin' in the Rain\", year: 1952},\r\n  {title: 'Toy Story', year: 1995},\r\n  {title: 'Bicycle Thieves', year: 1948},\r\n  {title: 'The Kid', year: 1921},\r\n  {title: 'Inglourious Basterds', year: 2009},\r\n  {title: 'Snatch', year: 2000},\r\n  {title: '3 Idiots', year: 2009},\r\n  {title: 'Monty Python and the Holy Grail', year: 1975},\r\n];\r\n","import * as React from 'react';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nconst options = ['Option 1', 'Option 2'];\r\n\r\nexport default function CustomInputAutocomplete() {\r\n  return (\r\n    <label>\r\n      Value:{' '}\r\n      <Autocomplete\r\n        sx={{\r\n          display: 'inline-block',\r\n          '& input': {\r\n            width: 200,\r\n            bgcolor: 'background.paper',\r\n            color: (theme) =>\r\n              theme.palette.getContrastText(theme.palette.background.paper),\r\n          },\r\n        }}\r\n        id='custom-input-demo'\r\n        options={options}\r\n        renderInput={(params) => (\r\n          <div ref={params.InputProps.ref}>\r\n            <input type='text' {...params.inputProps} />\r\n          </div>\r\n        )}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport ComboBox from './ComboBox';\r\nimport ComboBoxSource from '!raw-loader!./ComboBox';\r\n\r\nimport CountrySelect from './CountrySelect';\r\nimport CountrySelectSource from '!raw-loader!./ComboBox';\r\n\r\nimport ControllableStates from './ControlledStates';\r\nimport ControlledStatesSource from '!raw-loader!./ControlledStates';\r\n\r\nimport Grouped from './Grouped';\r\nimport GroupedSource from '!raw-loader!./Grouped';\r\n\r\nimport Asynchronous from './Asynchronous';\r\nimport AsynchronousSource from '!raw-loader!./Asynchronous';\r\n\r\nimport Multiple from './Multiple';\r\nimport MultipleSource from '!raw-loader!./Multiple';\r\n\r\nimport CheckboxesTags from './Checkboxes';\r\nimport CheckboxesTagsSource from '!raw-loader!./Checkboxes';\r\n\r\nimport Sizes from './Sizes';\r\nimport SizesSource from '!raw-loader!./Sizes';\r\n\r\nimport CustomInputAutocomplete from './Customization';\r\nimport CustomInputAutocompleteSource from '!raw-loader!./Customization';\r\n\r\nconst AutoComplete = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Autocomplete'\r\n        description='The autocomplete is a normal text input enhanced by a panel of suggested options.'\r\n        refUrl='https://mui.com/components/autocomplete/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Combo Box'\r\n            component={ComboBox}\r\n            source={ComboBoxSource}\r\n            noScrollbar\r\n            description='The value must be chosen from a predefined set of allowed values.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Country Select'\r\n            component={CountrySelect}\r\n            source={CountrySelectSource}\r\n            description='Choose one of the 248 countries.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Controllable States'\r\n            component={ControllableStates}\r\n            source={ControlledStatesSource}\r\n            description='The component has two states that can be controlled.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Grouped'\r\n            component={Grouped}\r\n            source={GroupedSource}\r\n            description='You can group the options with the groupBy prop. If you do so, make sure that the options are also sorted with the same dimension that they are grouped by, otherwise you will notice duplicate headers.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Asynchronous'\r\n            component={Asynchronous}\r\n            source={AsynchronousSource}\r\n            description='The component supports two different asynchronous use-cases'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='CheckboxesTags'\r\n            component={CheckboxesTags}\r\n            source={CheckboxesTagsSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Multiple'\r\n            component={Multiple}\r\n            source={MultipleSource}\r\n            description='Also known as tags, the user is allowed to enter more than one value.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Sizes'\r\n            component={Sizes}\r\n            source={SizesSource}\r\n            description='Fancy smaller inputs? Use the size prop.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='CustomInput Autocomplete'\r\n            component={CustomInputAutocomplete}\r\n            source={CustomInputAutocompleteSource}\r\n            description='Fancy smaller inputs? Use the size prop.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\n\\r\\nconst options = ['Option 1', 'Option 2'];\\r\\n\\r\\nexport default function ControllableStates() {\\r\\n  const [value, setValue] = React.useState(options[0]);\\r\\n  const [inputValue, setInputValue] = React.useState('');\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\\r\\n      <div>{`inputValue: '${inputValue}'`}</div>\\r\\n      <br />\\r\\n      <Autocomplete\\r\\n        value={value}\\r\\n        onChange={(event, newValue) => {\\r\\n          setValue(newValue);\\r\\n        }}\\r\\n        inputValue={inputValue}\\r\\n        onInputChange={(event, newInputValue) => {\\r\\n          setInputValue(newInputValue);\\r\\n        }}\\r\\n        id='controllable-states-demo'\\r\\n        options={options}\\r\\n        sx={{width: 300}}\\r\\n        renderInput={(params) => <TextField {...params} label='Controllable' />}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\n\\r\\nexport default function Grouped() {\\r\\n  const options = top100Films.map((option) => {\\r\\n    const firstLetter = option.title[0].toUpperCase();\\r\\n    return {\\r\\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\\r\\n      ...option,\\r\\n    };\\r\\n  });\\r\\n\\r\\n  return (\\r\\n    <Autocomplete\\r\\n      id='grouped-demo'\\r\\n      options={options.sort(\\r\\n        (a, b) => -b.firstLetter.localeCompare(a.firstLetter),\\r\\n      )}\\r\\n      groupBy={(option) => option.firstLetter}\\r\\n      getOptionLabel={(option) => option.title}\\r\\n      sx={{width: 300}}\\r\\n      renderInput={(params) => (\\r\\n        <TextField {...params} label='With categories' />\\r\\n      )}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\r\\nconst top100Films = [\\r\\n  {title: 'The Shawshank Redemption', year: 1994},\\r\\n  {title: 'The Godfather', year: 1972},\\r\\n  {title: 'The Godfather: Part II', year: 1974},\\r\\n  {title: 'The Dark Knight', year: 2008},\\r\\n  {title: '12 Angry Men', year: 1957},\\r\\n  {title: \\\"Schindler's List\\\", year: 1993},\\r\\n  {title: 'Pulp Fiction', year: 1994},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Return of the King',\\r\\n    year: 2003,\\r\\n  },\\r\\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\\r\\n  {title: 'Fight Club', year: 1999},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\r\\n    year: 2001,\\r\\n  },\\r\\n  {\\r\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\r\\n    year: 1980,\\r\\n  },\\r\\n  {title: 'Forrest Gump', year: 1994},\\r\\n  {title: 'Inception', year: 2010},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Two Towers',\\r\\n    year: 2002,\\r\\n  },\\r\\n  {title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975},\\r\\n  {title: 'Goodfellas', year: 1990},\\r\\n  {title: 'The Matrix', year: 1999},\\r\\n  {title: 'Seven Samurai', year: 1954},\\r\\n  {\\r\\n    title: 'Star Wars: Episode IV - A New Hope',\\r\\n    year: 1977,\\r\\n  },\\r\\n  {title: 'City of God', year: 2002},\\r\\n  {title: 'Se7en', year: 1995},\\r\\n  {title: 'The Silence of the Lambs', year: 1991},\\r\\n  {title: \\\"It's a Wonderful Life\\\", year: 1946},\\r\\n  {title: 'Life Is Beautiful', year: 1997},\\r\\n  {title: 'The Usual Suspects', year: 1995},\\r\\n  {title: 'Léon: The Professional', year: 1994},\\r\\n  {title: 'Spirited Away', year: 2001},\\r\\n  {title: 'Saving Private Ryan', year: 1998},\\r\\n  {title: 'Once Upon a Time in the West', year: 1968},\\r\\n  {title: 'American History X', year: 1998},\\r\\n  {title: 'Interstellar', year: 2014},\\r\\n  {title: 'Casablanca', year: 1942},\\r\\n  {title: 'City Lights', year: 1931},\\r\\n  {title: 'Psycho', year: 1960},\\r\\n  {title: 'The Green Mile', year: 1999},\\r\\n  {title: 'The Intouchables', year: 2011},\\r\\n  {title: 'Modern Times', year: 1936},\\r\\n  {title: 'Raiders of the Lost Ark', year: 1981},\\r\\n  {title: 'Rear Window', year: 1954},\\r\\n  {title: 'The Pianist', year: 2002},\\r\\n  {title: 'The Departed', year: 2006},\\r\\n  {title: 'Terminator 2: Judgment Day', year: 1991},\\r\\n  {title: 'Back to the Future', year: 1985},\\r\\n  {title: 'Whiplash', year: 2014},\\r\\n  {title: 'Gladiator', year: 2000},\\r\\n  {title: 'Memento', year: 2000},\\r\\n  {title: 'The Prestige', year: 2006},\\r\\n  {title: 'The Lion King', year: 1994},\\r\\n  {title: 'Apocalypse Now', year: 1979},\\r\\n  {title: 'Alien', year: 1979},\\r\\n  {title: 'Sunset Boulevard', year: 1950},\\r\\n  {\\r\\n    title:\\r\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\r\\n    year: 1964,\\r\\n  },\\r\\n  {title: 'The Great Dictator', year: 1940},\\r\\n  {title: 'Cinema Paradiso', year: 1988},\\r\\n  {title: 'The Lives of Others', year: 2006},\\r\\n  {title: 'Grave of the Fireflies', year: 1988},\\r\\n  {title: 'Paths of Glory', year: 1957},\\r\\n  {title: 'Django Unchained', year: 2012},\\r\\n  {title: 'The Shining', year: 1980},\\r\\n  {title: 'WALL·E', year: 2008},\\r\\n  {title: 'American Beauty', year: 1999},\\r\\n  {title: 'The Dark Knight Rises', year: 2012},\\r\\n  {title: 'Princess Mononoke', year: 1997},\\r\\n  {title: 'Aliens', year: 1986},\\r\\n  {title: 'Oldboy', year: 2003},\\r\\n  {title: 'Once Upon a Time in America', year: 1984},\\r\\n  {title: 'Witness for the Prosecution', year: 1957},\\r\\n  {title: 'Das Boot', year: 1981},\\r\\n  {title: 'Citizen Kane', year: 1941},\\r\\n  {title: 'North by Northwest', year: 1959},\\r\\n  {title: 'Vertigo', year: 1958},\\r\\n  {\\r\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\r\\n    year: 1983,\\r\\n  },\\r\\n  {title: 'Reservoir Dogs', year: 1992},\\r\\n  {title: 'Braveheart', year: 1995},\\r\\n  {title: 'M', year: 1931},\\r\\n  {title: 'Requiem for a Dream', year: 2000},\\r\\n  {title: 'Amélie', year: 2001},\\r\\n  {title: 'A Clockwork Orange', year: 1971},\\r\\n  {title: 'Like Stars on Earth', year: 2007},\\r\\n  {title: 'Taxi Driver', year: 1976},\\r\\n  {title: 'Lawrence of Arabia', year: 1962},\\r\\n  {title: 'Double Indemnity', year: 1944},\\r\\n  {\\r\\n    title: 'Eternal Sunshine of the Spotless Mind',\\r\\n    year: 2004,\\r\\n  },\\r\\n  {title: 'Amadeus', year: 1984},\\r\\n  {title: 'To Kill a Mockingbird', year: 1962},\\r\\n  {title: 'Toy Story 3', year: 2010},\\r\\n  {title: 'Logan', year: 2017},\\r\\n  {title: 'Full Metal Jacket', year: 1987},\\r\\n  {title: 'Dangal', year: 2016},\\r\\n  {title: 'The Sting', year: 1973},\\r\\n  {title: '2001: A Space Odyssey', year: 1968},\\r\\n  {title: \\\"Singin' in the Rain\\\", year: 1952},\\r\\n  {title: 'Toy Story', year: 1995},\\r\\n  {title: 'Bicycle Thieves', year: 1948},\\r\\n  {title: 'The Kid', year: 1921},\\r\\n  {title: 'Inglourious Basterds', year: 2009},\\r\\n  {title: 'Snatch', year: 2000},\\r\\n  {title: '3 Idiots', year: 2009},\\r\\n  {title: 'Monty Python and the Holy Grail', year: 1975},\\r\\n];\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\nimport CircularProgress from '@mui/material/CircularProgress';\\r\\n\\r\\nfunction sleep(delay = 0) {\\r\\n  return new Promise((resolve) => {\\r\\n    setTimeout(resolve, delay);\\r\\n  });\\r\\n}\\r\\n\\r\\nexport default function Asynchronous() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [options, setOptions] = React.useState([]);\\r\\n  const loading = open && options.length === 0;\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    let active = true;\\r\\n\\r\\n    if (!loading) {\\r\\n      return undefined;\\r\\n    }\\r\\n\\r\\n    (async () => {\\r\\n      await sleep(1e3); // For demo purposes.\\r\\n\\r\\n      if (active) {\\r\\n        setOptions([...topFilms]);\\r\\n      }\\r\\n    })();\\r\\n\\r\\n    return () => {\\r\\n      active = false;\\r\\n    };\\r\\n  }, [loading]);\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    if (!open) {\\r\\n      setOptions([]);\\r\\n    }\\r\\n  }, [open]);\\r\\n\\r\\n  return (\\r\\n    <Autocomplete\\r\\n      id='asynchronous-demo'\\r\\n      sx={{width: 300}}\\r\\n      open={open}\\r\\n      onOpen={() => {\\r\\n        setOpen(true);\\r\\n      }}\\r\\n      onClose={() => {\\r\\n        setOpen(false);\\r\\n      }}\\r\\n      isOptionEqualToValue={(option, value) => option.title === value.title}\\r\\n      getOptionLabel={(option) => option.title}\\r\\n      options={options}\\r\\n      loading={loading}\\r\\n      renderInput={(params) => (\\r\\n        <TextField\\r\\n          {...params}\\r\\n          label='Asynchronous'\\r\\n          InputProps={{\\r\\n            ...params.InputProps,\\r\\n            endAdornment: (\\r\\n              <React.Fragment>\\r\\n                {loading ? (\\r\\n                  <CircularProgress color='inherit' size={20} />\\r\\n                ) : null}\\r\\n                {params.InputProps.endAdornment}\\r\\n              </React.Fragment>\\r\\n            ),\\r\\n          }}\\r\\n        />\\r\\n      )}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\\r\\nconst topFilms = [\\r\\n  {title: 'The Shawshank Redemption', year: 1994},\\r\\n  {title: 'The Godfather', year: 1972},\\r\\n  {title: 'The Godfather: Part II', year: 1974},\\r\\n  {title: 'The Dark Knight', year: 2008},\\r\\n  {title: '12 Angry Men', year: 1957},\\r\\n  {title: \\\"Schindler's List\\\", year: 1993},\\r\\n  {title: 'Pulp Fiction', year: 1994},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Return of the King',\\r\\n    year: 2003,\\r\\n  },\\r\\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\\r\\n  {title: 'Fight Club', year: 1999},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\r\\n    year: 2001,\\r\\n  },\\r\\n  {\\r\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\r\\n    year: 1980,\\r\\n  },\\r\\n  {title: 'Forrest Gump', year: 1994},\\r\\n  {title: 'Inception', year: 2010},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Two Towers',\\r\\n    year: 2002,\\r\\n  },\\r\\n  {title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975},\\r\\n  {title: 'Goodfellas', year: 1990},\\r\\n  {title: 'The Matrix', year: 1999},\\r\\n  {title: 'Seven Samurai', year: 1954},\\r\\n  {\\r\\n    title: 'Star Wars: Episode IV - A New Hope',\\r\\n    year: 1977,\\r\\n  },\\r\\n  {title: 'City of God', year: 2002},\\r\\n  {title: 'Se7en', year: 1995},\\r\\n  {title: 'The Silence of the Lambs', year: 1991},\\r\\n  {title: \\\"It's a Wonderful Life\\\", year: 1946},\\r\\n  {title: 'Life Is Beautiful', year: 1997},\\r\\n  {title: 'The Usual Suspects', year: 1995},\\r\\n  {title: 'Léon: The Professional', year: 1994},\\r\\n  {title: 'Spirited Away', year: 2001},\\r\\n  {title: 'Saving Private Ryan', year: 1998},\\r\\n  {title: 'Once Upon a Time in the West', year: 1968},\\r\\n  {title: 'American History X', year: 1998},\\r\\n  {title: 'Interstellar', year: 2014},\\r\\n];\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Checkbox from '@mui/material/Checkbox';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\\r\\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\\r\\n\\r\\nconst icon = <CheckBoxOutlineBlankIcon fontSize='small' />;\\r\\nconst checkedIcon = <CheckBoxIcon fontSize='small' />;\\r\\n\\r\\nexport default function CheckboxesTags() {\\r\\n  return (\\r\\n    <Autocomplete\\r\\n      multiple\\r\\n      id='checkboxes-tags-demo'\\r\\n      options={top100Films}\\r\\n      disableCloseOnSelect\\r\\n      getOptionLabel={(option) => option.title}\\r\\n      renderOption={(props, option, {selected}) => (\\r\\n        <li {...props}>\\r\\n          <Checkbox\\r\\n            icon={icon}\\r\\n            checkedIcon={checkedIcon}\\r\\n            style={{marginRight: 8}}\\r\\n            checked={selected}\\r\\n          />\\r\\n          {option.title}\\r\\n        </li>\\r\\n      )}\\r\\n      style={{width: 500}}\\r\\n      renderInput={(params) => (\\r\\n        <TextField {...params} label='Checkboxes' placeholder='Favorites' />\\r\\n      )}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\r\\nconst top100Films = [\\r\\n  {title: 'The Shawshank Redemption', year: 1994},\\r\\n  {title: 'The Godfather', year: 1972},\\r\\n  {title: 'The Godfather: Part II', year: 1974},\\r\\n  {title: 'The Dark Knight', year: 2008},\\r\\n  {title: '12 Angry Men', year: 1957},\\r\\n  {title: \\\"Schindler's List\\\", year: 1993},\\r\\n  {title: 'Pulp Fiction', year: 1994},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Return of the King',\\r\\n    year: 2003,\\r\\n  },\\r\\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\\r\\n  {title: 'Fight Club', year: 1999},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\r\\n    year: 2001,\\r\\n  },\\r\\n  {\\r\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\r\\n    year: 1980,\\r\\n  },\\r\\n  {title: 'Forrest Gump', year: 1994},\\r\\n  {title: 'Inception', year: 2010},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Two Towers',\\r\\n    year: 2002,\\r\\n  },\\r\\n  {title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975},\\r\\n  {title: 'Goodfellas', year: 1990},\\r\\n  {title: 'The Matrix', year: 1999},\\r\\n  {title: 'Seven Samurai', year: 1954},\\r\\n  {\\r\\n    title: 'Star Wars: Episode IV - A New Hope',\\r\\n    year: 1977,\\r\\n  },\\r\\n  {title: 'City of God', year: 2002},\\r\\n  {title: 'Se7en', year: 1995},\\r\\n  {title: 'The Silence of the Lambs', year: 1991},\\r\\n  {title: \\\"It's a Wonderful Life\\\", year: 1946},\\r\\n  {title: 'Life Is Beautiful', year: 1997},\\r\\n  {title: 'The Usual Suspects', year: 1995},\\r\\n  {title: 'Léon: The Professional', year: 1994},\\r\\n  {title: 'Spirited Away', year: 2001},\\r\\n  {title: 'Saving Private Ryan', year: 1998},\\r\\n  {title: 'Once Upon a Time in the West', year: 1968},\\r\\n  {title: 'American History X', year: 1998},\\r\\n  {title: 'Interstellar', year: 2014},\\r\\n];\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Chip from '@mui/material/Chip';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport Stack from '@mui/material/Stack';\\r\\n\\r\\nexport default function Multiple() {\\r\\n  return (\\r\\n    <Stack spacing={3} sx={{width: 500}}>\\r\\n      <Autocomplete\\r\\n        multiple\\r\\n        id='tags-standard'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={[top100Films[13]]}\\r\\n        renderInput={(params) => (\\r\\n          <TextField\\r\\n            {...params}\\r\\n            variant='standard'\\r\\n            label='Multiple values'\\r\\n            placeholder='Favorites'\\r\\n          />\\r\\n        )}\\r\\n      />\\r\\n      <Autocomplete\\r\\n        multiple\\r\\n        id='tags-outlined'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={[top100Films[13]]}\\r\\n        filterSelectedOptions\\r\\n        renderInput={(params) => (\\r\\n          <TextField\\r\\n            {...params}\\r\\n            label='filterSelectedOptions'\\r\\n            placeholder='Favorites'\\r\\n          />\\r\\n        )}\\r\\n      />\\r\\n      <Autocomplete\\r\\n        multiple\\r\\n        id='tags-filled'\\r\\n        options={top100Films.map((option) => option.title)}\\r\\n        defaultValue={[top100Films[13].title]}\\r\\n        freeSolo\\r\\n        renderTags={(value, getTagProps) =>\\r\\n          value.map((option, index) => (\\r\\n            <Chip\\r\\n              key={index}\\r\\n              variant='outlined'\\r\\n              label={option}\\r\\n              {...getTagProps({index})}\\r\\n            />\\r\\n          ))\\r\\n        }\\r\\n        renderInput={(params) => (\\r\\n          <TextField\\r\\n            {...params}\\r\\n            variant='filled'\\r\\n            label='freeSolo'\\r\\n            placeholder='Favorites'\\r\\n          />\\r\\n        )}\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n}\\r\\n\\r\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\r\\nconst top100Films = [\\r\\n  {title: 'The Shawshank Redemption', year: 1994},\\r\\n  {title: 'The Godfather', year: 1972},\\r\\n  {title: 'The Godfather: Part II', year: 1974},\\r\\n  {title: 'The Dark Knight', year: 2008},\\r\\n  {title: '12 Angry Men', year: 1957},\\r\\n  {title: \\\"Schindler's List\\\", year: 1993},\\r\\n  {title: 'Pulp Fiction', year: 1994},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Return of the King',\\r\\n    year: 2003,\\r\\n  },\\r\\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\\r\\n  {title: 'Fight Club', year: 1999},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\r\\n    year: 2001,\\r\\n  },\\r\\n  {\\r\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\r\\n    year: 1980,\\r\\n  },\\r\\n  {title: 'Forrest Gump', year: 1994},\\r\\n  {title: 'Inception', year: 2010},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Two Towers',\\r\\n    year: 2002,\\r\\n  },\\r\\n  {title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975},\\r\\n  {title: 'Goodfellas', year: 1990},\\r\\n  {title: 'The Matrix', year: 1999},\\r\\n  {title: 'Seven Samurai', year: 1954},\\r\\n  {\\r\\n    title: 'Star Wars: Episode IV - A New Hope',\\r\\n    year: 1977,\\r\\n  },\\r\\n  {title: 'City of God', year: 2002},\\r\\n  {title: 'Se7en', year: 1995},\\r\\n  {title: 'The Silence of the Lambs', year: 1991},\\r\\n  {title: \\\"It's a Wonderful Life\\\", year: 1946},\\r\\n  {title: 'Life Is Beautiful', year: 1997},\\r\\n  {title: 'The Usual Suspects', year: 1995},\\r\\n  {title: 'Léon: The Professional', year: 1994},\\r\\n  {title: 'Spirited Away', year: 2001},\\r\\n  {title: 'Saving Private Ryan', year: 1998},\\r\\n  {title: 'Once Upon a Time in the West', year: 1968},\\r\\n  {title: 'American History X', year: 1998},\\r\\n  {title: 'Interstellar', year: 2014},\\r\\n  {title: 'Casablanca', year: 1942},\\r\\n  {title: 'City Lights', year: 1931},\\r\\n  {title: 'Psycho', year: 1960},\\r\\n  {title: 'The Green Mile', year: 1999},\\r\\n  {title: 'The Intouchables', year: 2011},\\r\\n  {title: 'Modern Times', year: 1936},\\r\\n  {title: 'Raiders of the Lost Ark', year: 1981},\\r\\n  {title: 'Rear Window', year: 1954},\\r\\n  {title: 'The Pianist', year: 2002},\\r\\n  {title: 'The Departed', year: 2006},\\r\\n  {title: 'Terminator 2: Judgment Day', year: 1991},\\r\\n  {title: 'Back to the Future', year: 1985},\\r\\n  {title: 'Whiplash', year: 2014},\\r\\n  {title: 'Gladiator', year: 2000},\\r\\n  {title: 'Memento', year: 2000},\\r\\n  {title: 'The Prestige', year: 2006},\\r\\n  {title: 'The Lion King', year: 1994},\\r\\n  {title: 'Apocalypse Now', year: 1979},\\r\\n  {title: 'Alien', year: 1979},\\r\\n  {title: 'Sunset Boulevard', year: 1950},\\r\\n  {\\r\\n    title:\\r\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\r\\n    year: 1964,\\r\\n  },\\r\\n  {title: 'The Great Dictator', year: 1940},\\r\\n  {title: 'Cinema Paradiso', year: 1988},\\r\\n  {title: 'The Lives of Others', year: 2006},\\r\\n  {title: 'Grave of the Fireflies', year: 1988},\\r\\n  {title: 'Paths of Glory', year: 1957},\\r\\n  {title: 'Django Unchained', year: 2012},\\r\\n  {title: 'The Shining', year: 1980},\\r\\n  {title: 'WALL·E', year: 2008},\\r\\n  {title: 'American Beauty', year: 1999},\\r\\n  {title: 'The Dark Knight Rises', year: 2012},\\r\\n  {title: 'Princess Mononoke', year: 1997},\\r\\n  {title: 'Aliens', year: 1986},\\r\\n  {title: 'Oldboy', year: 2003},\\r\\n  {title: 'Once Upon a Time in America', year: 1984},\\r\\n  {title: 'Witness for the Prosecution', year: 1957},\\r\\n  {title: 'Das Boot', year: 1981},\\r\\n  {title: 'Citizen Kane', year: 1941},\\r\\n  {title: 'North by Northwest', year: 1959},\\r\\n  {title: 'Vertigo', year: 1958},\\r\\n  {\\r\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\r\\n    year: 1983,\\r\\n  },\\r\\n  {title: 'Reservoir Dogs', year: 1992},\\r\\n  {title: 'Braveheart', year: 1995},\\r\\n  {title: 'M', year: 1931},\\r\\n  {title: 'Requiem for a Dream', year: 2000},\\r\\n  {title: 'Amélie', year: 2001},\\r\\n  {title: 'A Clockwork Orange', year: 1971},\\r\\n  {title: 'Like Stars on Earth', year: 2007},\\r\\n  {title: 'Taxi Driver', year: 1976},\\r\\n  {title: 'Lawrence of Arabia', year: 1962},\\r\\n  {title: 'Double Indemnity', year: 1944},\\r\\n  {\\r\\n    title: 'Eternal Sunshine of the Spotless Mind',\\r\\n    year: 2004,\\r\\n  },\\r\\n  {title: 'Amadeus', year: 1984},\\r\\n  {title: 'To Kill a Mockingbird', year: 1962},\\r\\n  {title: 'Toy Story 3', year: 2010},\\r\\n  {title: 'Logan', year: 2017},\\r\\n  {title: 'Full Metal Jacket', year: 1987},\\r\\n  {title: 'Dangal', year: 2016},\\r\\n  {title: 'The Sting', year: 1973},\\r\\n  {title: '2001: A Space Odyssey', year: 1968},\\r\\n  {title: \\\"Singin' in the Rain\\\", year: 1952},\\r\\n  {title: 'Toy Story', year: 1995},\\r\\n  {title: 'Bicycle Thieves', year: 1948},\\r\\n  {title: 'The Kid', year: 1921},\\r\\n  {title: 'Inglourious Basterds', year: 2009},\\r\\n  {title: 'Snatch', year: 2000},\\r\\n  {title: '3 Idiots', year: 2009},\\r\\n  {title: 'Monty Python and the Holy Grail', year: 1975},\\r\\n];\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Stack from '@mui/material/Stack';\\r\\nimport Chip from '@mui/material/Chip';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function Sizes() {\\r\\n  return (\\r\\n    <Stack spacing={2} sx={{width: 500}}>\\r\\n      <Autocomplete\\r\\n        id='size-small-standard'\\r\\n        size='small'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={top100Films[13]}\\r\\n        renderInput={(params) => (\\r\\n          <TextField\\r\\n            {...params}\\r\\n            variant='standard'\\r\\n            label='Size small'\\r\\n            placeholder='Favorites'\\r\\n          />\\r\\n        )}\\r\\n      />\\r\\n      <Autocomplete\\r\\n        multiple\\r\\n        id='size-small-standard-multi'\\r\\n        size='small'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={[top100Films[13]]}\\r\\n        renderInput={(params) => (\\r\\n          <TextField\\r\\n            {...params}\\r\\n            variant='standard'\\r\\n            label='Size small'\\r\\n            placeholder='Favorites'\\r\\n          />\\r\\n        )}\\r\\n      />\\r\\n      <Autocomplete\\r\\n        id='size-small-outlined'\\r\\n        size='small'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={top100Films[13]}\\r\\n        renderInput={(params) => (\\r\\n          <TextField {...params} label='Size small' placeholder='Favorites' />\\r\\n        )}\\r\\n      />\\r\\n      <Autocomplete\\r\\n        multiple\\r\\n        id='size-small-outlined-multi'\\r\\n        size='small'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={[top100Films[13]]}\\r\\n        renderInput={(params) => (\\r\\n          <TextField {...params} label='Size small' placeholder='Favorites' />\\r\\n        )}\\r\\n      />\\r\\n      <Autocomplete\\r\\n        id='size-small-filled'\\r\\n        size='small'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={top100Films[13]}\\r\\n        renderTags={(value, getTagProps) =>\\r\\n          value.map((option, index) => (\\r\\n            <Chip\\r\\n              key={index}\\r\\n              variant='outlined'\\r\\n              label={option.title}\\r\\n              size='small'\\r\\n              {...getTagProps({index})}\\r\\n            />\\r\\n          ))\\r\\n        }\\r\\n        renderInput={(params) => (\\r\\n          <TextField\\r\\n            {...params}\\r\\n            variant='filled'\\r\\n            label='Size small'\\r\\n            placeholder='Favorites'\\r\\n          />\\r\\n        )}\\r\\n      />\\r\\n      <Autocomplete\\r\\n        multiple\\r\\n        id='size-small-filled-multi'\\r\\n        size='small'\\r\\n        options={top100Films}\\r\\n        getOptionLabel={(option) => option.title}\\r\\n        defaultValue={[top100Films[13]]}\\r\\n        renderTags={(value, getTagProps) =>\\r\\n          value.map((option, index) => (\\r\\n            <Chip\\r\\n              key={index}\\r\\n              variant='outlined'\\r\\n              label={option.title}\\r\\n              size='small'\\r\\n              {...getTagProps({index})}\\r\\n            />\\r\\n          ))\\r\\n        }\\r\\n        renderInput={(params) => (\\r\\n          <TextField\\r\\n            {...params}\\r\\n            variant='filled'\\r\\n            label='Size small'\\r\\n            placeholder='Favorites'\\r\\n          />\\r\\n        )}\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n}\\r\\n\\r\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\r\\nconst top100Films = [\\r\\n  {title: 'The Shawshank Redemption', year: 1994},\\r\\n  {title: 'The Godfather', year: 1972},\\r\\n  {title: 'The Godfather: Part II', year: 1974},\\r\\n  {title: 'The Dark Knight', year: 2008},\\r\\n  {title: '12 Angry Men', year: 1957},\\r\\n  {title: \\\"Schindler's List\\\", year: 1993},\\r\\n  {title: 'Pulp Fiction', year: 1994},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Return of the King',\\r\\n    year: 2003,\\r\\n  },\\r\\n  {title: 'The Good, the Bad and the Ugly', year: 1966},\\r\\n  {title: 'Fight Club', year: 1999},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\r\\n    year: 2001,\\r\\n  },\\r\\n  {\\r\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\r\\n    year: 1980,\\r\\n  },\\r\\n  {title: 'Forrest Gump', year: 1994},\\r\\n  {title: 'Inception', year: 2010},\\r\\n  {\\r\\n    title: 'The Lord of the Rings: The Two Towers',\\r\\n    year: 2002,\\r\\n  },\\r\\n  {title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975},\\r\\n  {title: 'Goodfellas', year: 1990},\\r\\n  {title: 'The Matrix', year: 1999},\\r\\n  {title: 'Seven Samurai', year: 1954},\\r\\n  {\\r\\n    title: 'Star Wars: Episode IV - A New Hope',\\r\\n    year: 1977,\\r\\n  },\\r\\n  {title: 'City of God', year: 2002},\\r\\n  {title: 'Se7en', year: 1995},\\r\\n  {title: 'The Silence of the Lambs', year: 1991},\\r\\n  {title: \\\"It's a Wonderful Life\\\", year: 1946},\\r\\n  {title: 'Life Is Beautiful', year: 1997},\\r\\n  {title: 'The Usual Suspects', year: 1995},\\r\\n  {title: 'Léon: The Professional', year: 1994},\\r\\n  {title: 'Spirited Away', year: 2001},\\r\\n  {title: 'Saving Private Ryan', year: 1998},\\r\\n  {title: 'Once Upon a Time in the West', year: 1968},\\r\\n  {title: 'American History X', year: 1998},\\r\\n  {title: 'Interstellar', year: 2014},\\r\\n  {title: 'Casablanca', year: 1942},\\r\\n  {title: 'City Lights', year: 1931},\\r\\n  {title: 'Psycho', year: 1960},\\r\\n  {title: 'The Green Mile', year: 1999},\\r\\n  {title: 'The Intouchables', year: 2011},\\r\\n  {title: 'Modern Times', year: 1936},\\r\\n  {title: 'Raiders of the Lost Ark', year: 1981},\\r\\n  {title: 'Rear Window', year: 1954},\\r\\n  {title: 'The Pianist', year: 2002},\\r\\n  {title: 'The Departed', year: 2006},\\r\\n  {title: 'Terminator 2: Judgment Day', year: 1991},\\r\\n  {title: 'Back to the Future', year: 1985},\\r\\n  {title: 'Whiplash', year: 2014},\\r\\n  {title: 'Gladiator', year: 2000},\\r\\n  {title: 'Memento', year: 2000},\\r\\n  {title: 'The Prestige', year: 2006},\\r\\n  {title: 'The Lion King', year: 1994},\\r\\n  {title: 'Apocalypse Now', year: 1979},\\r\\n  {title: 'Alien', year: 1979},\\r\\n  {title: 'Sunset Boulevard', year: 1950},\\r\\n  {\\r\\n    title:\\r\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\r\\n    year: 1964,\\r\\n  },\\r\\n  {title: 'The Great Dictator', year: 1940},\\r\\n  {title: 'Cinema Paradiso', year: 1988},\\r\\n  {title: 'The Lives of Others', year: 2006},\\r\\n  {title: 'Grave of the Fireflies', year: 1988},\\r\\n  {title: 'Paths of Glory', year: 1957},\\r\\n  {title: 'Django Unchained', year: 2012},\\r\\n  {title: 'The Shining', year: 1980},\\r\\n  {title: 'WALL·E', year: 2008},\\r\\n  {title: 'American Beauty', year: 1999},\\r\\n  {title: 'The Dark Knight Rises', year: 2012},\\r\\n  {title: 'Princess Mononoke', year: 1997},\\r\\n  {title: 'Aliens', year: 1986},\\r\\n  {title: 'Oldboy', year: 2003},\\r\\n  {title: 'Once Upon a Time in America', year: 1984},\\r\\n  {title: 'Witness for the Prosecution', year: 1957},\\r\\n  {title: 'Das Boot', year: 1981},\\r\\n  {title: 'Citizen Kane', year: 1941},\\r\\n  {title: 'North by Northwest', year: 1959},\\r\\n  {title: 'Vertigo', year: 1958},\\r\\n  {\\r\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\r\\n    year: 1983,\\r\\n  },\\r\\n  {title: 'Reservoir Dogs', year: 1992},\\r\\n  {title: 'Braveheart', year: 1995},\\r\\n  {title: 'M', year: 1931},\\r\\n  {title: 'Requiem for a Dream', year: 2000},\\r\\n  {title: 'Amélie', year: 2001},\\r\\n  {title: 'A Clockwork Orange', year: 1971},\\r\\n  {title: 'Like Stars on Earth', year: 2007},\\r\\n  {title: 'Taxi Driver', year: 1976},\\r\\n  {title: 'Lawrence of Arabia', year: 1962},\\r\\n  {title: 'Double Indemnity', year: 1944},\\r\\n  {\\r\\n    title: 'Eternal Sunshine of the Spotless Mind',\\r\\n    year: 2004,\\r\\n  },\\r\\n  {title: 'Amadeus', year: 1984},\\r\\n  {title: 'To Kill a Mockingbird', year: 1962},\\r\\n  {title: 'Toy Story 3', year: 2010},\\r\\n  {title: 'Logan', year: 2017},\\r\\n  {title: 'Full Metal Jacket', year: 1987},\\r\\n  {title: 'Dangal', year: 2016},\\r\\n  {title: 'The Sting', year: 1973},\\r\\n  {title: '2001: A Space Odyssey', year: 1968},\\r\\n  {title: \\\"Singin' in the Rain\\\", year: 1952},\\r\\n  {title: 'Toy Story', year: 1995},\\r\\n  {title: 'Bicycle Thieves', year: 1948},\\r\\n  {title: 'The Kid', year: 1921},\\r\\n  {title: 'Inglourious Basterds', year: 2009},\\r\\n  {title: 'Snatch', year: 2000},\\r\\n  {title: '3 Idiots', year: 2009},\\r\\n  {title: 'Monty Python and the Holy Grail', year: 1975},\\r\\n];\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Autocomplete from '@mui/material/Autocomplete';\\r\\n\\r\\nconst options = ['Option 1', 'Option 2'];\\r\\n\\r\\nexport default function CustomInputAutocomplete() {\\r\\n  return (\\r\\n    <label>\\r\\n      Value:{' '}\\r\\n      <Autocomplete\\r\\n        sx={{\\r\\n          display: 'inline-block',\\r\\n          '& input': {\\r\\n            width: 200,\\r\\n            bgcolor: 'background.paper',\\r\\n            color: (theme) =>\\r\\n              theme.palette.getContrastText(theme.palette.background.paper),\\r\\n          },\\r\\n        }}\\r\\n        id='custom-input-demo'\\r\\n        options={options}\\r\\n        renderInput={(params) => (\\r\\n          <div ref={params.InputProps.ref}>\\r\\n            <input type='text' {...params.inputProps} />\\r\\n          </div>\\r\\n        )}\\r\\n      />\\r\\n    </label>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}