{"version":3,"sources":["pages/muiComponents/datagrid/Virtualization/ColumnVirtualizationGrid.js","pages/muiComponents/datagrid/Virtualization/index.js","webpack:///./src/pages/muiComponents/datagrid/Virtualization/ColumnVirtualizationGrid.js?bb05"],"names":["ColumnVirtualizationGrid","data","rowLength","columnLength","React","columns","rows","setData","i","row","id","j","toString","push","field","hide","headerName","useData","style","height","width","columnBuffer","columnThreshold","Virtualization","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","AppComponentCard","component","source","noScrollbar"],"mappings":"yLAoCe,SAASA,IACtB,IAAMC,EAlCR,SAAiBC,EAAWC,GAC1B,MAAwBC,WAAe,CAACC,QAAS,GAAIC,KAAM,KAA3D,mBAAOL,EAAP,KAAaM,EAAb,KA6BA,OA3BAH,aAAgB,WAGd,IAFA,IAAME,EAAO,GAEJE,EAAI,EAAGA,EAAIN,EAAWM,GAAK,EAAG,CAKrC,IAJA,IAAMC,EAAM,CACVC,GAAIF,GAGGG,EAAI,EAAGA,GAAKR,EAAcQ,GAAK,EACtCF,EAAI,QAAD,OAASE,EAAT,MAAH,UAAuBH,EAAEI,WAAzB,aAAwCD,EAAxC,KAGFL,EAAKO,KAAKJ,GAKZ,IAFA,IAAMJ,EAAU,CAAC,CAACS,MAAO,KAAMC,MAAM,IAE5BJ,EAAI,EAAGA,GAAKR,EAAcQ,GAAK,EACtCN,EAAQQ,KAAK,CAACC,MAAM,QAAD,OAAUH,EAAV,KAAgBK,WAAW,GAAD,OAAKL,EAAL,OAG/CJ,EAAQ,CACND,OACAD,cAED,CAACH,EAAWC,IAERF,EAIMgB,CAAQ,IAAK,KAE1B,OACE,qBAAKC,MAAO,CAACC,OAAQ,IAAKC,MAAO,QAAjC,SACE,cAAC,IAAD,2BAAcnB,GAAd,IAAoBoB,aAAc,EAAGC,gBAAiB,OCR7CC,UAxBQ,WACrB,OACE,qCACE,cAACC,EAAA,EAAD,CACEC,MAAM,iBACNC,YAAY,oFACZC,OAAO,yDAGT,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,2BACNQ,UAAWjC,EACXkC,OCvBG,qlCDwBHC,aAAW,EACXT,YAAY","file":"static/js/138.66e3ec47.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\n\r\nfunction useData(rowLength, columnLength) {\r\n  const [data, setData] = React.useState({columns: [], rows: []});\r\n\r\n  React.useEffect(() => {\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < rowLength; i += 1) {\r\n      const row = {\r\n        id: i,\r\n      };\r\n\r\n      for (let j = 1; j <= columnLength; j += 1) {\r\n        row[`price${j}M`] = `${i.toString()}, ${j} `;\r\n      }\r\n\r\n      rows.push(row);\r\n    }\r\n\r\n    const columns = [{field: 'id', hide: true}];\r\n\r\n    for (let j = 1; j <= columnLength; j += 1) {\r\n      columns.push({field: `price${j}M`, headerName: `${j}M`});\r\n    }\r\n\r\n    setData({\r\n      rows,\r\n      columns,\r\n    });\r\n  }, [rowLength, columnLength]);\r\n\r\n  return data;\r\n}\r\n\r\nexport default function ColumnVirtualizationGrid() {\r\n  const data = useData(100, 1000);\r\n\r\n  return (\r\n    <div style={{height: 400, width: '100%'}}>\r\n      <DataGrid {...data} columnBuffer={2} columnThreshold={2} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport ColumnVirtualizationGrid from './ColumnVirtualizationGrid';\r\nimport ColumnVirtualizationGridSource from '!raw-loader!./ColumnVirtualizationGrid';\r\n\r\nconst Virtualization = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Virtualization'\r\n        description='The grid is high performing thanks to its rows and columns virtualization engine.'\r\n        refUrl='https://mui.com/components/data-grid/virtualization/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='ColumnVirtualizationGrid'\r\n            component={ColumnVirtualizationGrid}\r\n            source={ColumnVirtualizationGridSource}\r\n            noScrollbar\r\n            description='Column virtualization is the insertion and removal of columns as the grid scrolls horizontally.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Virtualization;\r\n","export default \"import * as React from 'react';\\r\\nimport {DataGrid} from '@mui/x-data-grid';\\r\\n\\r\\nfunction useData(rowLength, columnLength) {\\r\\n  const [data, setData] = React.useState({columns: [], rows: []});\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    const rows = [];\\r\\n\\r\\n    for (let i = 0; i < rowLength; i += 1) {\\r\\n      const row = {\\r\\n        id: i,\\r\\n      };\\r\\n\\r\\n      for (let j = 1; j <= columnLength; j += 1) {\\r\\n        row[`price${j}M`] = `${i.toString()}, ${j} `;\\r\\n      }\\r\\n\\r\\n      rows.push(row);\\r\\n    }\\r\\n\\r\\n    const columns = [{field: 'id', hide: true}];\\r\\n\\r\\n    for (let j = 1; j <= columnLength; j += 1) {\\r\\n      columns.push({field: `price${j}M`, headerName: `${j}M`});\\r\\n    }\\r\\n\\r\\n    setData({\\r\\n      rows,\\r\\n      columns,\\r\\n    });\\r\\n  }, [rowLength, columnLength]);\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\nexport default function ColumnVirtualizationGrid() {\\r\\n  const data = useData(100, 1000);\\r\\n\\r\\n  return (\\r\\n    <div style={{height: 400, width: '100%'}}>\\r\\n      <DataGrid {...data} columnBuffer={2} columnThreshold={2} />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}