{"version":3,"sources":["pages/dashboards/Widgets/CountryMap/MapChart.js","pages/dashboards/Widgets/WallPaper/ImageCardWrapper.js","pages/dashboards/Widgets/WallPaper/index.js","pages/dashboards/Widgets/TemperatureCard/DayTemperature.js","pages/dashboards/Widgets/TemperatureCard/index.js","pages/dashboards/Widgets/VisitorAnalysis/index.js","pages/dashboards/Widgets/BirthdayCard/index.js","pages/dashboards/Widgets/RecentActivity/index.js","pages/dashboards/Widgets/IllustrationDesign/index.js","pages/dashboards/Widgets/Categories/CategoryItem.js","pages/dashboards/Widgets/Categories/index.js","pages/dashboards/Widgets/Header/index.js","pages/dashboards/Widgets/Subscribe/index.js","pages/dashboards/Widgets/Profile/index.js","pages/dashboards/Widgets/Messages/index.js","pages/dashboards/Widgets/TaskList/TaskItem.js","pages/dashboards/Widgets/TaskList/index.js","pages/dashboards/Widgets/HollywoodMovie/index.js","pages/dashboards/Widgets/CountryMap/index.js","pages/dashboards/Widgets/Colors/ColorItem.js","pages/dashboards/Widgets/Colors/index.js","pages/dashboards/Widgets/AddTags/AddNewTag.js","pages/dashboards/Widgets/AddTags/index.js","pages/dashboards/Widgets/Reviews/ReviewItem.js","pages/dashboards/Widgets/Reviews/index.js","pages/dashboards/Widgets/CremaCard/index.js","pages/dashboards/Widgets/Formats/index.js","pages/dashboards/Widgets/Price/index.js","pages/dashboards/Widgets/CityInfo/SlideContentWrapper.js","pages/dashboards/Widgets/CityInfo/ImageCardSlideWrapper.js","pages/dashboards/Widgets/CityInfo/index.js","pages/dashboards/Widgets/DatePicker/CalendarWrapper.js","pages/dashboards/Widgets/DatePicker/index.js","pages/dashboards/Widgets/index.js"],"names":["allStates","id","val","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","MapChart","className","projection","geography","geographies","map","geo","stroke","fill","rsmKey","centroid","geoCentroid","cur","find","s","Object","keys","indexOf","coordinates","y","fontSize","textAnchor","subject","dx","dy","x","alignmentBaseline","ImageCardWrapper","children","AppCard","sxStyle","height","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","color","position","minHeight","content","left","top","zIndex","width","display","backgroundColor","WallPaper","Box","sx","alignItems","mb","xs","lg","component","fontWeight","Fonts","BOLD","textTransform","IntlMessages","ml","mr","Checkbox","icon","FavoriteBorder","style","checkedIcon","Favorite","pt","Avatar","src","MEDIUM","sm","xl","lineHeight","px","verticalAlign","DayTemperature","props","day","textAlign","image","alt","TemperatureCard","temperatures","contentStyle","padding","flexDirection","py","flex","teal","cursor","justifyContent","md","marginRight","defaultProps","VisitorAnalysis","messages","useIntl","title","footer","borderRadius","Typography","AppCircularProgress","activeColor","value","thickness","BirthdayCard","p","blue","pb","RecentActivity","data","action","mt","AppScrollbar","AppList","renderRow","item","NotificationItem","IllustrationDesign","bottom","m","Chip","theme","palette","primary","main","contrastText","LIGHT","label","Divider","my","CategoryItem","handleChange","ListItem","ListItemIcon","checked","isChecked","onChange","e","ListItemText","name","Categories","useState","categoryList","handleList","category","target","list","maxHeight","List","flexWrap","paddingTop","minWidth","Header","titleStyle","Button","variant","border","borderColor","validationSchema","yup","email","required","Subscribe","dispatch","useDispatch","red","pr","validateOnChange","initialValues","onSubmit","setSubmitting","resetForm","showMessage","isSubmitting","AppTextField","placeholder","inputProps","size","disabled","type","Profile","photos","followers","following","Messages","MessageItem","TaskItem","secondary","desc","TaskList","HollywoodMovie","CountryMap","ColorItem","Colors","colorsList","AddNewTag","onAddNewTag","newTag","setNewTag","isAddNewTag","setAddNewTag","TextField","mx","onClick","colorList","green","orange","AddTags","tags","setTags","darken","background","default","margin","onDelete","tagToDelete","filter","tag","key","Math","floor","random","length","concat","ReviewItem","Rating","rating","readOnly","time","by","Reviews","CremaCard","bgColor","overflow","textOverflow","whiteSpace","letterSpacing","Formats","RadioGroup","marginLeft","FormControlLabel","control","Radio","paddingLeft","paddingRight","fontFamily","Price","React","setValue","Slider","root","thumb","marginTop","boxShadow","active","valueLabel","track","rail","opacity","event","newValue","SlideContentWrapper","ImageCardSlideWrapper","paddingBottom","right","settings","dots","infinite","speed","slidesToShow","slidesToScroll","CityInfo","cityData","city","objectFit","CalendarWrapper","DateSelector","Date","StaticDatePicker","orientation","openTo","renderInput","params","Widgets","useEffect","onGetWidgetsData","widgetsData","useSelector","dashboard","AppAnimate","animation","delay","AppGridContainer","Grid","recentActivity","categories","profile","taskList","reviewsList","tagsList","mateInfo","facebookInfo","indigo","twitterInfo","formatList","AppInfoView"],"mappings":"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","file":"static/js/109.ea411ac0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {geoCentroid} from 'd3-geo';\r\nimport {\r\n  Annotation,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n} from 'react-simple-maps';\r\n\r\nconst allStates = [\r\n  {id: 'AL', val: '01'},\r\n  {id: 'AK', val: '02'},\r\n  {id: 'AS', val: '60'},\r\n  {id: 'AZ', val: '04'},\r\n  {id: 'AR', val: '05'},\r\n  {id: 'CA', val: '06'},\r\n  {id: 'CO', val: '08'},\r\n  {id: 'CT', val: '09'},\r\n  {id: 'DE', val: '10'},\r\n  {id: 'DC', val: '11'},\r\n  {id: 'FL', val: '12'},\r\n  {id: 'FM', val: '64'},\r\n  {id: 'GA', val: '13'},\r\n  {id: 'GU', val: '66'},\r\n  {id: 'HI', val: '15'},\r\n  {id: 'ID', val: '16'},\r\n  {id: 'IL', val: '17'},\r\n  {id: 'IN', val: '18'},\r\n  {id: 'IA', val: '19'},\r\n  {id: 'KS', val: '20'},\r\n  {id: 'KY', val: '21'},\r\n  {id: 'LA', val: '22'},\r\n  {id: 'ME', val: '23'},\r\n  {id: 'MH', val: '68'},\r\n  {id: 'MD', val: '24'},\r\n  {id: 'MA', val: '25'},\r\n  {id: 'MI', val: '26'},\r\n  {id: 'MN', val: '27'},\r\n  {id: 'MS', val: '28'},\r\n  {id: 'MO', val: '29'},\r\n  {id: 'MT', val: '30'},\r\n  {id: 'NE', val: '31'},\r\n  {id: 'NV', val: '32'},\r\n  {id: 'NH', val: '33'},\r\n  {id: 'NJ', val: '34'},\r\n  {id: 'NM', val: '35'},\r\n  {id: 'NY', val: '36'},\r\n  {id: 'NC', val: '37'},\r\n  {id: 'ND', val: '38'},\r\n  {id: 'MP', val: '69'},\r\n  {id: 'OH', val: '39'},\r\n  {id: 'OK', val: '40'},\r\n  {id: 'OR', val: '41'},\r\n  {id: 'PW', val: '70'},\r\n  {id: 'PA', val: '42'},\r\n  {id: 'PR', val: '72'},\r\n  {id: 'RI', val: '44'},\r\n  {id: 'SC', val: '45'},\r\n  {id: 'SD', val: '46'},\r\n  {id: 'TN', val: '47'},\r\n  {id: 'TX', val: '48'},\r\n  {id: 'UM', val: '74'},\r\n  {id: 'UT', val: '49'},\r\n  {id: 'VT', val: '50'},\r\n  {id: 'VA', val: '51'},\r\n  {id: 'VI', val: '78'},\r\n  {id: 'WA', val: '53'},\r\n  {id: 'WV', val: '54'},\r\n  {id: 'WI', val: '55'},\r\n  {id: 'WY', val: '56'},\r\n];\r\n\r\nconst geoUrl = 'https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json';\r\n\r\nconst offsets = {\r\n  VT: [50, -8],\r\n  NH: [34, 2],\r\n  MA: [30, -1],\r\n  RI: [28, 2],\r\n  CT: [35, 10],\r\n  NJ: [34, 1],\r\n  DE: [33, 0],\r\n  MD: [47, 10],\r\n  DC: [49, 21],\r\n};\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap className='map-chart' projection='geoAlbersUsa'>\r\n      <Geographies geography={geoUrl}>\r\n        {({geographies}) => (\r\n          <>\r\n            {geographies.map((geo) => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                stroke='#FFF'\r\n                geography={geo}\r\n                fill='#DDD'\r\n              />\r\n            ))}\r\n            {geographies.map((geo) => {\r\n              const centroid = geoCentroid(geo);\r\n              const cur = allStates.find((s) => s.val === geo.id);\r\n              return (\r\n                <g key={geo.rsmKey + '-name'}>\r\n                  {cur &&\r\n                    centroid[0] > -160 &&\r\n                    centroid[0] < -67 &&\r\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                      <Marker coordinates={centroid}>\r\n                        <text y='2' fontSize={14} textAnchor='middle'>\r\n                          {cur.id}\r\n                        </text>\r\n                      </Marker>\r\n                    ) : (\r\n                      <Annotation\r\n                        subject={centroid}\r\n                        dx={offsets[cur.id][0]}\r\n                        dy={offsets[cur.id][1]}\r\n                      >\r\n                        <text x={4} fontSize={14} alignmentBaseline='middle'>\r\n                          {cur.id}\r\n                        </text>\r\n                      </Annotation>\r\n                    ))}\r\n                </g>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nconst ImageCardWrapper = ({children}) => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        backgroundImage: `url(/assets/images/widgets/latestpost.png)`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center center',\r\n        backgroundSize: 'cover',\r\n        color: 'white',\r\n        position: 'relative',\r\n        minHeight: 300,\r\n        '&:before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          left: '0',\r\n          top: '0',\r\n          zIndex: 1,\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'block',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.35)',\r\n        },\r\n        '& > *': {\r\n          position: 'relative',\r\n          zIndex: 3,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ImageCardWrapper;\r\n\r\nImageCardWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport {Favorite, FavoriteBorder} from '@mui/icons-material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport ImageCardWrapper from './ImageCardWrapper';\r\n\r\nconst WallPaper = () => {\r\n  return (\r\n    <ImageCardWrapper>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          mb: {xs: 4, lg: 6},\r\n        }}\r\n      >\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            fontWeight: Fonts.BOLD,\r\n            fontSize: 16,\r\n            textTransform: 'uppercase',\r\n          }}\r\n        >\r\n          <IntlMessages id='dashboard.latestPost' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            ml: 'auto',\r\n            mr: -3,\r\n          }}\r\n        >\r\n          <Checkbox\r\n            icon={<FavoriteBorder style={{color: 'white'}} />}\r\n            checkedIcon={<Favorite />}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          pt: 10,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mb: 6,\r\n          }}\r\n        >\r\n          <Avatar\r\n            sx={{\r\n              width: 70,\r\n              height: 70,\r\n            }}\r\n            src={'/assets/images/avatar/A1.jpg'}\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          component='h1'\r\n          sx={{\r\n            fontWeight: Fonts.MEDIUM,\r\n            fontSize: {xs: 20, sm: 24, xl: 30},\r\n            lineHeight: 1.25,\r\n          }}\r\n        >\r\n          <IntlMessages id='dashboard.hdColorful' />\r\n        </Box>\r\n        <Box\r\n          component='h1'\r\n          sx={{\r\n            fontWeight: Fonts.MEDIUM,\r\n            fontSize: {xs: 20, sm: 24, xl: 30},\r\n            lineHeight: 1.25,\r\n          }}\r\n        >\r\n          <IntlMessages id='dashboard.wallpaperFree' />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          <Box\r\n            component='h1'\r\n            sx={{\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: {xs: 20, sm: 24, xl: 30},\r\n              lineHeight: 1.25,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.download' />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              ml: 'auto',\r\n              mr: -3,\r\n              fontWeight: Fonts.MEDIUM,\r\n              display: 'flex',\r\n              textTransform: 'uppercase',\r\n              fontSize: {xs: 14, sm: 16, xl: 18},\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                display: 'block',\r\n                px: 3,\r\n              }}\r\n            >\r\n              <VisibilityIcon\r\n                sx={{\r\n                  display: {xs: 'block', sm: 'inline-block'},\r\n                  verticalAlign: {sm: 'middle'},\r\n                }}\r\n              />{' '}\r\n              11.7 K\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                display: 'block',\r\n                px: 3,\r\n              }}\r\n            >\r\n              <FavoriteBorderOutlinedIcon\r\n                sx={{\r\n                  display: {xs: 'block', sm: 'inline-block'},\r\n                  verticalAlign: {sm: 'middle'},\r\n                }}\r\n              />{' '}\r\n              2.6 K\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                display: 'block',\r\n                px: 3,\r\n              }}\r\n            >\r\n              <ChatIcon\r\n                sx={{\r\n                  display: {xs: 'block', sm: 'inline-block'},\r\n                  verticalAlign: {sm: 'middle'},\r\n                }}\r\n              />{' '}\r\n              345\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </ImageCardWrapper>\r\n  );\r\n};\r\n\r\nexport default WallPaper;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst DayTemperature = (props) => {\r\n  const {day} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        px: 4,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <Box\r\n        component='span'\r\n        sx={{\r\n          mb: 3,\r\n          display: 'block',\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: 14,\r\n          textTransform: 'uppercase',\r\n        }}\r\n      >\r\n        {day.day}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'inline-block',\r\n        }}\r\n      >\r\n        <img src={day.image} alt='weather' />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DayTemperature;\r\n\r\nDayTemperature.propTypes = {\r\n  day: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {Box} from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport DayTemperature from './DayTemperature';\r\nimport {teal} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst TemperatureCard = (props) => {\r\n  const {temperatures} = props;\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{padding: 0, display: 'flex', flexDirection: 'column'}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          py: 5,\r\n          px: 6,\r\n          color: 'primary.contrastText',\r\n          flex: 1,\r\n          backgroundColor: teal[500],\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              fontWeight: Fonts.BOLD,\r\n              fontSize: 16,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.newYork' />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              ml: 'auto',\r\n            }}\r\n          >\r\n            <SearchIcon\r\n              sx={{\r\n                cursor: 'pointer',\r\n                display: 'block',\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            py: 4,\r\n            flex: 1,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='h1'\r\n            sx={{\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: {xs: 24, sm: 36, md: 64, xl: 96},\r\n            }}\r\n          >\r\n            -32<sup>0</sup>\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                marginRight: 12,\r\n              }}\r\n              src={'/assets/images/weather/weather1.png'}\r\n              alt='weather'\r\n            />\r\n            <IntlMessages id='dashboard.heavySnow' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          py: 5,\r\n          px: 6,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        {temperatures.map((day) => {\r\n          return <DayTemperature key={day.id} day={day} />;\r\n        })}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TemperatureCard;\r\n\r\nTemperatureCard.defaultProps = {\r\n  temperatures: [],\r\n};\r\n\r\nTemperatureCard.propTypes = {\r\n  temperatures: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Box} from '@mui/material';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Typography from '@mui/material/Typography';\r\nimport AppCircularProgress from '@crema/core/AppCircularProgress';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst VisitorAnalysis = () => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.visitorAnalysis']}\r\n      sxStyle={{height: 1}}\r\n      footer={\r\n        <Box color='text.secondary' display='flex' alignItems='center'>\r\n          <Box\r\n            sx={{\r\n              backgroundColor: 'secondary.main',\r\n              height: {xs: 12, xl: 16},\r\n              width: {xs: 12, xl: 16},\r\n              mr: 4,\r\n              borderRadius: '50%',\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              <IntlMessages id='dashboard.visitorAnalysisContent' />\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      }\r\n    >\r\n      <Box>\r\n        <AppCircularProgress activeColor='#F04F47' value={59} thickness={2} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default VisitorAnalysis;\r\n","import React from 'react';\r\nimport {Box} from '@mui/material';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {blue} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst BirthdayCard = () => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        p: 0,\r\n      }}\r\n      contentStyle={{padding: 0}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          p: {xs: 5, xl: 8},\r\n          color: 'primary.contrastText',\r\n          textAlign: 'center',\r\n          backgroundColor: blue[700],\r\n        }}\r\n      >\r\n        <Box\r\n          component='h3'\r\n          sx={{\r\n            fontWeight: Fonts.BOLD,\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          Sunday, 07 July 1991\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          px: {xs: 6, sm: 8, xl: 10},\r\n          py: {xs: 5, sm: 7, xl: 8},\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            pb: 4,\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <img src={'/assets/images/cakeicon.png'} alt='cake' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mb: {xl: 5},\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.antonBirthday' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default BirthdayCard;\r\n","import React from 'react';\r\nimport {Box} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport NotificationItem from '@crema/core/AppNotifications/NotificationItem';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\n\r\nconst RecentActivity = (props) => {\r\n  const {data} = props;\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.recentActivity']}\r\n      contentStyle={{px: 0}}\r\n      action={\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            ml: 'auto',\r\n            mt: 1.5,\r\n          }}\r\n        >\r\n          <CloseIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n            }}\r\n          />\r\n        </Box>\r\n      }\r\n    >\r\n      <AppScrollbar\r\n        sx={{\r\n          height: {xs: 296, xl: 346},\r\n        }}\r\n      >\r\n        <AppList\r\n          data={data}\r\n          renderRow={(item) => {\r\n            return <NotificationItem item={item} key={item.id} />;\r\n          }}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default RecentActivity;\r\n\r\nRecentActivity.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nRecentActivity.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Chip from '@mui/material/Chip';\r\nimport Divider from '@mui/material/Divider';\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\r\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\n\r\nconst IllustrationDesign = () => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n      contentStyle={{padding: 0}}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          flex: 1,\r\n          display: 'flex',\r\n          '& .widthFull': {\r\n            width: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <img\r\n          className='widthFull'\r\n          src={'/assets/images/illustration.png'}\r\n          alt='illustration'\r\n        />\r\n        <Box\r\n          sx={{\r\n            color: 'primary.contrastText',\r\n            position: 'absolute',\r\n            left: 0,\r\n            bottom: 0,\r\n            m: {xs: 4, xl: 6},\r\n          }}\r\n        >\r\n          <Chip\r\n            sx={{\r\n              backgroundColor: (theme) => theme.palette.primary.main,\r\n              color: (theme) => theme.palette.primary.contrastText,\r\n              fontWeight: Fonts.LIGHT,\r\n              textTransform: 'capitalize',\r\n              fontSize: {xs: 16, sm: 18},\r\n            }}\r\n            label={<IntlMessages id='dashboard.designs' />}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          pt: {xs: 4, xl: 6},\r\n          px: {xs: 4, xl: 6},\r\n        }}\r\n      >\r\n        <Box\r\n          component='h4'\r\n          sx={{\r\n            mb: 4,\r\n            fontSize: 16,\r\n            fontWeight: Fonts.BOLD,\r\n          }}\r\n        >\r\n          <IntlMessages id='dashboard.illustrationDesign' />\r\n        </Box>\r\n        <Divider\r\n          sx={{\r\n            my: 4,\r\n          }}\r\n        />\r\n        <Box\r\n          sx={{\r\n            color: 'text.secondary',\r\n            fontWeight: Fonts.MEDIUM,\r\n            fontSize: 14,\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              px: 3,\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                mr: 2,\r\n                verticalAlign: 'middle',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <VisibilityOutlinedIcon />\r\n            </Box>\r\n            11.7 K\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              px: 3,\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                mr: 2,\r\n                verticalAlign: 'middle',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <FavoriteBorderOutlinedIcon />\r\n            </Box>\r\n            2.6 K\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              px: 3,\r\n            }}\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                mr: 2,\r\n                verticalAlign: 'middle',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <ChatOutlinedIcon />\r\n            </Box>\r\n            345\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default IllustrationDesign;\r\n","import React from 'react';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryItem = (props) => {\r\n  const {item, handleChange} = props;\r\n  return (\r\n    <ListItem key={item.id} className='item-hover'>\r\n      <ListItemIcon>\r\n        <Box\r\n          sx={{\r\n            ml: -2,\r\n          }}\r\n        >\r\n          <Checkbox\r\n            color='primary'\r\n            checked={item.isChecked}\r\n            onChange={(e) => handleChange(e, item)}\r\n          />\r\n        </Box>\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              color: !item.isChecked ? 'text.secondary' : '',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {item.name}\r\n          </Box>\r\n        }\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default CategoryItem;\r\n\r\nCategoryItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport List from '@mui/material/List';\r\nimport PropTypes from 'prop-types';\r\nimport CategoryItem from './CategoryItem';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport {AppScrollbar} from '../../../../@crema';\r\n\r\nconst getData = (data) => {\r\n  return data;\r\n};\r\n\r\nconst Categories = (props) => {\r\n  const {messages} = useIntl();\r\n  const data = getData(props.data);\r\n\r\n  const [categoryList, handleList] = useState(data);\r\n\r\n  const handleChange = (e, category) => {\r\n    category.isChecked = e.target.checked;\r\n    const list = categoryList.map((item) =>\r\n      item.id === category.id ? category : item,\r\n    );\r\n    handleList(list);\r\n  };\r\n\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.categories']}\r\n      contentStyle={{px: 0}}\r\n      action={\r\n        <CloseIcon\r\n          sx={{\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n      }\r\n      sxStyle={{height: 1}}\r\n    >\r\n      <AppScrollbar sx={{maxHeight: 218}}>\r\n        <List\r\n          sx={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            alignItems: 'center',\r\n            paddingTop: 2,\r\n\r\n            '& li': {\r\n              width: '50%',\r\n              padding: '0px 20px',\r\n              '& .MuiListItemIcon-root': {\r\n                minWidth: 0,\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {categoryList.map((item) => {\r\n            return (\r\n              <CategoryItem\r\n                key={item.id}\r\n                item={item}\r\n                handleChange={handleChange}\r\n              />\r\n            );\r\n          })}\r\n        </List>\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n\r\nCategories.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nCategories.propTypes = {\r\n  data: PropTypes.array,\r\n  icon: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst Header = () => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        backgroundImage: `url(/assets/images/widgets/jombie.png)`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center center',\r\n        backgroundSize: 'cover',\r\n        color: 'white',\r\n        position: 'relative',\r\n        '&:before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          left: '0',\r\n          top: '0',\r\n          zIndex: 1,\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'block',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.45)',\r\n        },\r\n        '& > *': {\r\n          position: 'relative',\r\n          zIndex: 3,\r\n        },\r\n      }}\r\n      titleStyle={{color: 'white'}}\r\n      title={messages['dashboard.jombie']}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: {xs: '100%', lg: '70%', xl: '50%'},\r\n          height: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <IntlMessages id='dashboard.jombieContent' />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            pt: 4,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            sx={{\r\n              fontWeight: Fonts.LIGHT,\r\n              fontSize: 14,\r\n              mr: 4,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.getStarted' />\r\n          </Button>\r\n          <Button\r\n            variant='outlined'\r\n            sx={{\r\n              fontWeight: Fonts.LIGHT,\r\n              fontSize: 14,\r\n              border: '1px solid',\r\n              borderColor: (theme) => theme.palette.primary.contrastText,\r\n              color: (theme) => theme.palette.primary.contrastText,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.readMore' />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Form, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from '@mui/material/Button';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport {useDispatch} from 'react-redux';\r\nimport {showMessage} from '../../../../redux/actions';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport {red} from '@mui/material/colors';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppTextField from '../../../../@crema/core/AppFormComponents/AppTextField';\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst Subscribe = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        backgroundColor: red[600],\r\n        color: 'white',\r\n      }}\r\n      titleStyle={{color: 'white'}}\r\n      title={messages['dashboard.subscribe']}\r\n    >\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          mb: 6,\r\n          pr: 4,\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        <IntlMessages id='dashboard.subscribeContent' />\r\n      </Box>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          email: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n          setSubmitting(true);\r\n          dispatch(\r\n            showMessage(<IntlMessages id='message.thankYouSubscription' />),\r\n          );\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({isSubmitting}) => (\r\n          <Box\r\n            sx={{\r\n              textAlign: 'left',\r\n              mt: 8,\r\n            }}\r\n          >\r\n            <Form>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    width: '75%',\r\n                  }}\r\n                >\r\n                  <AppTextField\r\n                    placeholder={messages['common.email']}\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    inputProps={{\r\n                      'aria-label': 'naked',\r\n                    }}\r\n                    sx={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      '& input[type=\"text\"]': {\r\n                        backgroundColor: 'white',\r\n                        color: 'black',\r\n                        fontSize: 14,\r\n                        borderRadius: 2,\r\n                      },\r\n                      '& .MuiFormHelperText-root.Mui-error': {\r\n                        color: 'white',\r\n                      },\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    ml: 5,\r\n                    width: 80,\r\n                    color: 'primary.contrastText',\r\n                  }}\r\n                >\r\n                  <Button\r\n                    size='large'\r\n                    variant='contained'\r\n                    color='primary'\r\n                    disabled={isSubmitting}\r\n                    type='submit'\r\n                    sx={{\r\n                      width: '100%',\r\n                      height: '51.1px',\r\n                      padding: '5.3px 22px',\r\n                    }}\r\n                  >\r\n                    <ChevronRightIcon\r\n                      sx={{\r\n                        fontSize: 30,\r\n                      }}\r\n                    />\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Form>\r\n          </Box>\r\n        )}\r\n      </Formik>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Subscribe;\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst Profile = (props) => {\r\n  const {data} = props;\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n      title={messages['common.wall']}\r\n      action={\r\n        <CloseIcon\r\n          sx={{\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      <Box\r\n        sx={{\r\n          mb: 8,\r\n          flex: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <Avatar\r\n          sx={{\r\n            width: {xs: 100, md: 120},\r\n            height: {xs: 100, md: 120},\r\n          }}\r\n          src={data.image}\r\n        />\r\n        <Box\r\n          component='h3'\r\n          sx={{\r\n            mt: 8,\r\n            fontWeight: Fonts.BOLD,\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          {data.name}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          textAlign: 'center',\r\n          mb: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            px: {xs: 2, xl: 4},\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'block',\r\n              mb: 2,\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            {data.photos}\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              display: 'block',\r\n              fontSize: 14,\r\n              textTransform: 'uppercase',\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.photos' />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            px: {xs: 2, xl: 4},\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'block',\r\n              mb: 2,\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            {data.followers}\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              display: 'block',\r\n              fontSize: 14,\r\n              textTransform: 'uppercase',\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.followers' />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            px: {xs: 2, xl: 4},\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'block',\r\n              mb: 2,\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            {data.following}\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              display: 'block',\r\n              fontSize: 14,\r\n              textTransform: 'uppercase',\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.following' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport MessageItem from '../../../../@crema/core/AppMessages/MessageItem';\r\n\r\nconst getData = (data) => {\r\n  return data;\r\n};\r\n\r\nconst Messages = (props) => {\r\n  const data = getData(props.data);\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.messages']}\r\n      contentStyle={{px: 0}}\r\n      action={\r\n        <CloseIcon\r\n          sx={{\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      <AppScrollbar\r\n        sx={{\r\n          height: 263,\r\n        }}\r\n      >\r\n        <AppList\r\n          data={data}\r\n          renderRow={(item) => {\r\n            return <MessageItem key={item.id} item={item} />;\r\n          }}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n\r\nMessages.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nMessages.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst TaskItem = (props) => {\r\n  const {item} = props;\r\n\r\n  return (\r\n    <ListItem\r\n      key={item.id}\r\n      sx={{\r\n        padding: '8px 20px',\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <ListItemText\r\n        primary={\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              color: 'primary.main',\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {item.title}\r\n          </Box>\r\n        }\r\n        secondary={\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              color: 'text.secondary',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {item.desc}\r\n          </Box>\r\n        }\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n\r\nTaskItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport PropTypes from 'prop-types';\r\nimport TaskItem from './TaskItem';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\n\r\nconst getData = (data) => {\r\n  return data;\r\n};\r\n\r\nconst TaskList = (props) => {\r\n  const data = getData(props.data);\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      title={messages['dashboard.taskList']}\r\n      contentStyle={{px: 0}}\r\n      action={\r\n        <CloseIcon\r\n          sx={{\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      <AppScrollbar\r\n        sx={{\r\n          height: 263,\r\n        }}\r\n      >\r\n        <AppList\r\n          data={data}\r\n          renderRow={(item) => {\r\n            return <TaskItem key={item.id} item={item} />;\r\n          }}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n\r\nTaskList.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nTaskList.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst HollywoodMovie = () => {\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        backgroundImage: `url(/assets/images/widgets/movie.png)`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center center',\r\n        backgroundSize: 'cover',\r\n        color: 'white',\r\n        position: 'relative',\r\n        minHeight: 300,\r\n        '&:before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          left: '0',\r\n          top: '0',\r\n          zIndex: 1,\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'block',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.35)',\r\n        },\r\n        '& > *': {\r\n          position: 'relative',\r\n          zIndex: 3,\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              width: {xs: 50, sm: 70, md: 90, xl: 110},\r\n              height: {xs: 50, sm: 70, md: 90, xl: 110},\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <img src={'/assets/images/playbutton.png'} alt='play' />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mt: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            component='h1'\r\n            sx={{\r\n              color: 'primary.contrastText',\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: {xs: 20, sm: 24, xl: 30},\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.hollywoodMovie' />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default HollywoodMovie;\r\n","import React from 'react';\r\nimport {Box} from '@mui/material';\r\nimport MapChart from './MapChart';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst CountryMap = () => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      contentStyle={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.usa']}\r\n      action={messages['common.next']}\r\n    >\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <MapChart />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CountryMap;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst ColorItem = (props) => {\r\n  const {item, handleChange} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        px: 5,\r\n      }}\r\n      key={item.id}\r\n      className='item-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          mr: 2,\r\n          ml: -3,\r\n        }}\r\n      >\r\n        <Checkbox\r\n          sx={{\r\n            color: item.color + `!important`,\r\n          }}\r\n          checked={item.isChecked}\r\n          onChange={(e) => handleChange(e, item)}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component='span'\r\n        sx={{\r\n          color: item.color,\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {item.name}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorItem;\r\n\r\nColorItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport ColorItem from './ColorItem';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\n\r\nconst getData = (data) => {\r\n  return data;\r\n};\r\n\r\nconst Colors = (props) => {\r\n  const data = getData(props.data);\r\n\r\n  const [colorsList, handleList] = useState(data);\r\n\r\n  const handleChange = (e, color) => {\r\n    color.isChecked = e.target.checked;\r\n    const list = colorsList.map((item) =>\r\n      item.id === color.id ? color : item,\r\n    );\r\n    handleList(list);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.colors']}\r\n      contentStyle={{px: 0}}\r\n    >\r\n      <AppScrollbar\r\n        sx={{\r\n          height: {xs: 362, xl: 316},\r\n        }}\r\n      >\r\n        <AppList\r\n          data={data}\r\n          renderRow={(item) => {\r\n            return (\r\n              <ColorItem\r\n                key={item.id}\r\n                item={item}\r\n                handleChange={handleChange}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Colors;\r\n\r\nColors.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nColors.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst AddNewTag = (props) => {\r\n  const {onAddNewTag} = props;\r\n  const [newTag, setNewTag] = useState('');\r\n\r\n  const [isAddNewTag, setAddNewTag] = useState(false);\r\n\r\n  const onAddTag = () => {\r\n    onAddNewTag(newTag);\r\n    setNewTag('');\r\n    setAddNewTag(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAddNewTag ? (\r\n        <Box\r\n          sx={{\r\n            m: 2,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box component='span'>\r\n            <TextField\r\n              label={<IntlMessages id='common.tag' />}\r\n              variant='outlined'\r\n              value={newTag}\r\n              onChange={(e) => setNewTag(e.target.value)}\r\n            />\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mx: 3,\r\n            }}\r\n          >\r\n            <CheckIcon\r\n              sx={{\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={onAddTag}\r\n            />\r\n          </Box>\r\n          <CloseIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n            }}\r\n            onClick={() => setAddNewTag(false)}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            m: 2,\r\n            ml: 3,\r\n            color: 'secondary.main',\r\n            fontSize: {xs: 16, xl: 18},\r\n            cursor: 'pointer',\r\n            fontWeight: Fonts.MEDIUM,\r\n          }}\r\n          onClick={() => setAddNewTag(true)}\r\n        >\r\n          <IntlMessages id='dashboard.addNewTag' />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewTag;\r\n\r\nAddNewTag.propTypes = {\r\n  onAddNewTag: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport AddNewTag from './AddNewTag';\r\nimport PropTypes from 'prop-types';\r\nimport {blue, green, orange, red, teal} from '@mui/material/colors';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport {darken} from '@mui/material';\r\n\r\nconst colorList = [\r\n  {id: 9001, color: blue[600]},\r\n  {id: 9002, color: red[600]},\r\n  {id: 9003, color: green[600]},\r\n  {id: 9004, color: orange[600]},\r\n  {id: 9005, color: teal[600]},\r\n  {id: 9006, color: blue[600]},\r\n];\r\n\r\nconst AddTags = (props) => {\r\n  const {data} = props;\r\n\r\n  const [tags, setTags] = useState(data);\r\n\r\n  const handleDelete = (tagToDelete) => () => {\r\n    setTags((tags) => tags.filter((tag) => tag.id !== tagToDelete.id));\r\n  };\r\n\r\n  const onAddNewTag = (newTag) => {\r\n    let tag = {\r\n      label: newTag,\r\n      key: Math.floor(Math.random() * 10000),\r\n      color: colorList[Math.floor(Math.random() * colorList.length)].color,\r\n    };\r\n    setTags((tags) => tags.concat(tag));\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} title={messages['dashboard.addTags']}>\r\n      <Box\r\n        sx={{\r\n          p: 2,\r\n          borderRadius: 1,\r\n          backgroundColor: (theme) =>\r\n            darken(theme.palette.background.default, 0.03),\r\n        }}\r\n      >\r\n        {tags.map((item) => {\r\n          return (\r\n            <Chip\r\n              key={item.id}\r\n              sx={{\r\n                backgroundColor: item.color,\r\n                fontSize: 14,\r\n                margin: 2,\r\n                padding: '8px 4px',\r\n                color: (theme) => theme.palette.primary.contrastText,\r\n              }}\r\n              label={item.label}\r\n              onDelete={handleDelete(item)}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <AddNewTag onAddNewTag={onAddNewTag} />\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default AddTags;\r\n\r\nAddTags.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nAddTags.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst ReviewItem = ({item}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        fontSize: 14,\r\n        px: 5,\r\n        py: 2,\r\n      }}\r\n      className='item-hover'\r\n      key={item.id}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mb: 1,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Rating value={item.rating} readOnly />\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            ml: 'auto',\r\n            color: 'text.secondary',\r\n            fontWeight: Fonts.MEDIUM,\r\n          }}\r\n        >\r\n          {item.time}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          color: 'text.secondary',\r\n          mb: 1,\r\n        }}\r\n      >\r\n        {item.content}\r\n      </Box>\r\n      <Box\r\n        component='span'\r\n        sx={{\r\n          color: 'primary.main',\r\n          fontWeight: Fonts.MEDIUM,\r\n        }}\r\n      >\r\n        - {item.by}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReviewItem;\r\n\r\nReviewItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReviewItem from './ReviewItem';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\n\r\nconst Reviews = (props) => {\r\n  const {data} = props;\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['common.reviews']}\r\n      contentStyle={{px: 0}}\r\n    >\r\n      <AppScrollbar\r\n        sx={{\r\n          height: {xs: 362, xl: 316},\r\n        }}\r\n      >\r\n        <AppList\r\n          data={data}\r\n          renderRow={(item) => {\r\n            return <ReviewItem key={item.id} item={item} />;\r\n          }}\r\n        />\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n\r\nReviews.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nReviews.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\n\r\nconst CremaCard = (props) => {\r\n  const {data, bgColor, icon} = props;\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        height: 1,\r\n        backgroundColor: bgColor,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mb: {xs: 4, xl: 6},\r\n          mt: 1,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            mr: 2,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: 'calc(100% - 35px)',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              minWidth: 40,\r\n              width: 40,\r\n            }}\r\n          >\r\n            <img alt='logo' src={data.image} />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n              fontSize: 14,\r\n              width: 'calc(100% - 55px)',\r\n            }}\r\n          >\r\n            <Box\r\n              component='h4'\r\n              sx={{\r\n                color: 'primary.contrastText',\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 16,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                textTransform: 'uppercase',\r\n                letterSpacing: '0.1em',\r\n              }}\r\n            >\r\n              {data.name}\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                color: 'primary.contrastText',\r\n                mb: 0,\r\n                display: 'block',\r\n                cursor: 'pointer',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n            >\r\n              {data.id}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            ml: 'auto',\r\n            fontSize: 20,\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          color: 'primary.contrastText',\r\n          mb: {xs: 1, xl: 4},\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {data.desc}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CremaCard;\r\n\r\nCremaCard.defaultProps = {\r\n  bgColor: '',\r\n};\r\n\r\nCremaCard.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  bgColor: PropTypes.string,\r\n  icon: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst getData = (data) => {\r\n  return data;\r\n};\r\n\r\nconst Formats = (props) => {\r\n  const data = getData(props.data);\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} title={messages['dashboard.formats']}>\r\n      <RadioGroup\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'center',\r\n          marginLeft: '-25px',\r\n          marginRight: '-15px',\r\n        }}\r\n      >\r\n        {data.map((item) => {\r\n          return (\r\n            <FormControlLabel\r\n              key={item.id}\r\n              value={item.name}\r\n              control={<Radio />}\r\n              label={item.name}\r\n              sx={{\r\n                width: '50%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                paddingLeft: '15px',\r\n                paddingRight: '15px',\r\n                mx: 0,\r\n                mb: 0.5,\r\n                '& .MuiTypography-body1': {\r\n                  fontSize: 14,\r\n                  fontFamily: `${Fonts.MEDIUM} !important`,\r\n                  color: '#A8A8A8',\r\n                  ml: 2.5,\r\n                  mb: 1.5,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Formats;\r\n\r\nFormats.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nFormats.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst Price = () => {\r\n  const [value, setValue] = React.useState([20, 37]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard title={messages['dashboard.price']}>\r\n      <Box\r\n        component='p'\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontWeight: Fonts.MEDIUM,\r\n          fontSize: 14,\r\n        }}\r\n      >{`$${value[0]}mi - $${value[1]}mi`}</Box>\r\n\r\n      <Slider\r\n        sx={{\r\n          root: {\r\n            color: '#E53E3E',\r\n            height: 10,\r\n            padding: '13px 0',\r\n          },\r\n          thumb: {\r\n            height: 27,\r\n            width: 27,\r\n            backgroundColor: '#fff',\r\n            border: '1px solid currentColor',\r\n            marginTop: -10,\r\n            marginLeft: -13,\r\n            boxShadow: '#ebebeb 0px 2px 2px',\r\n            '&:focus,&:hover,&$active': {\r\n              boxShadow: '#ccc 0px 2px 3px 1px',\r\n            },\r\n            '& .bar': {\r\n              // display: inline-block !important;\r\n              height: 9,\r\n              width: 1,\r\n              backgroundColor: 'currentColor',\r\n              marginLeft: 1,\r\n              marginRight: 1,\r\n            },\r\n          },\r\n          active: {},\r\n          valueLabel: {\r\n            left: 'calc(-50% + 4px)',\r\n          },\r\n          track: {\r\n            height: 10,\r\n          },\r\n          rail: {\r\n            color: '#d8d8d8',\r\n            opacity: 1,\r\n            height: 10,\r\n            borderRadius: 6,\r\n          },\r\n        }}\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst SlideContentWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        height: '100%',\r\n        color: 'white',\r\n        padding: '20px 20px 60px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        '&:before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          left: '0',\r\n          top: '0',\r\n          zIndex: 1,\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'block',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.35)',\r\n        },\r\n        '& > *': {\r\n          position: 'relative',\r\n          zIndex: 3,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SlideContentWrapper;\r\n\r\nSlideContentWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageCardSlideWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '100%',\r\n        '& .imageCardSlide': {\r\n          position: 'relative',\r\n          paddingBottom: 0,\r\n          height: '100%',\r\n          '& .slick-list, & .slick-track, & .slick-slide > div': {\r\n            height: '100%',\r\n          },\r\n          '& .slick-dots': {\r\n            bottom: 30,\r\n          },\r\n          '& .slick-dots li': {\r\n            mx: 1.5,\r\n          },\r\n          '& .slick-dots li button': {\r\n            width: {xs: 10, xl: 14},\r\n            height: {xs: 10, xl: 14},\r\n          },\r\n          '& .slick-dots li button:before': {\r\n            color: 'transparent',\r\n            border: 'solid 2px #fff',\r\n            opacity: 1,\r\n            borderRadius: '50%',\r\n            width: {xs: 10, xl: 14},\r\n            height: {xs: 10, xl: 14},\r\n          },\r\n          '& .slick-dots li.slick-active button:before': {\r\n            backgroundColor: (theme) => theme.palette.primary.main,\r\n            borderColor: (theme) => theme.palette.primary.main,\r\n          },\r\n          '& .slick-prev': {\r\n            top: 32,\r\n            left: 36,\r\n            zIndex: 3,\r\n          },\r\n          '& .slick-next': {\r\n            top: 32,\r\n            right: 36,\r\n            zIndex: 3,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ImageCardSlideWrapper;\r\n\r\nImageCardSlideWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Slider from 'react-slick/lib';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport SlideContentWrapper from './SlideContentWrapper';\r\nimport ImageCardSlideWrapper from './ImageCardSlideWrapper';\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nconst CityInfo = (props) => {\r\n  const {cityData} = props;\r\n\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} contentStyle={{p: 0, pb: '0 !important'}}>\r\n      <ImageCardSlideWrapper>\r\n        <Slider className='imageCardSlide' {...settings}>\r\n          {cityData.map((city) => {\r\n            return (\r\n              <Box\r\n                key={city.id}\r\n                sx={{\r\n                  position: 'relative',\r\n                  textAlign: 'center',\r\n                  fontSize: {xs: 20, xl: 24},\r\n                  height: '100%',\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    '& .imageSlideFull': {\r\n                      position: 'absolute',\r\n                      left: 0,\r\n                      top: 0,\r\n                      zIndex: -1,\r\n                      width: '100% !important',\r\n                      height: '100% !important',\r\n                      objectFit: 'cover !important',\r\n                    },\r\n                  }}\r\n                >\r\n                  <img\r\n                    className='imageSlideFull'\r\n                    src={city.image}\r\n                    alt='building'\r\n                  />\r\n                </Box>\r\n                <SlideContentWrapper>\r\n                  <Box\r\n                    component='h3'\r\n                    sx={{\r\n                      mb: 4,\r\n                      fontWeight: Fonts.BOLD,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {city.name}\r\n                  </Box>\r\n\r\n                  <Box\r\n                    sx={{\r\n                      mt: 'auto',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>{city.desc}</Typography>\r\n                  </Box>\r\n                </SlideContentWrapper>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Slider>\r\n      </ImageCardSlideWrapper>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CityInfo;\r\n\r\nCityInfo.defaultProps = {\r\n  cityData: [],\r\n};\r\n\r\nCityInfo.propTypes = {\r\n  cityData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CalendarWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '100%',\r\n        width: '100%',\r\n        position: 'relative',\r\n        '& .PrivatePickersToolbar-root': {\r\n          display: 'none',\r\n        },\r\n        '& > div': {\r\n          minWidth: 100,\r\n          height: '100%',\r\n          '& > div': {\r\n            height: '100%',\r\n            '& > div, & .MuiCalendarPicker-root': {\r\n              height: '100%',\r\n              maxHeight: 360,\r\n              width: '100%',\r\n            },\r\n          },\r\n        },\r\n        '& .PrivatePickersFadeTransitionGroup-root': {\r\n          height: '100%',\r\n          '& > div': {\r\n            height: '100%',\r\n            '& > div': {\r\n              justifyContent: 'space-around',\r\n            },\r\n          },\r\n        },\r\n        '& .PrivatePickersSlideTransition-root': {\r\n          height: 'calc(100% - 40px)',\r\n          '& > div': {\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-around',\r\n            '& > div': {\r\n              justifyContent: 'space-around',\r\n            },\r\n          },\r\n        },\r\n        '& .MuiButtonBase-root': {\r\n          padding: '3px',\r\n          color: 'text.primary',\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CalendarWrapper;\r\n\r\nCalendarWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {TextField} from '@mui/material';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport CalendarWrapper from './CalendarWrapper';\r\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\r\n\r\nconst DateSelector = () => {\r\n  const [value, setValue] = React.useState(new Date());\r\n\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} contentStyle={{padding: 0}}>\r\n      <CalendarWrapper>\r\n        <StaticDatePicker\r\n          orientation='landscape'\r\n          openTo='day'\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </CalendarWrapper>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetWidgetsData} from '../../../redux/actions';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport WallPaper from './WallPaper';\r\nimport TemperatureCard from './TemperatureCard';\r\nimport VisitorAnalysis from './VisitorAnalysis';\r\nimport BirthdayCard from './BirthdayCard';\r\nimport RecentActivity from './RecentActivity';\r\nimport IllustrationDesign from './IllustrationDesign';\r\nimport Categories from './Categories';\r\nimport Header from './Header';\r\nimport Subscribe from './Subscribe';\r\nimport Profile from './Profile';\r\nimport Messages from './Messages';\r\nimport TaskList from './TaskList';\r\nimport HollywoodMovie from './HollywoodMovie';\r\nimport CountryMap from './CountryMap';\r\nimport Colors from './Colors';\r\nimport AddTags from './AddTags';\r\nimport Reviews from './Reviews';\r\nimport CremaCard from './CremaCard';\r\nimport Formats from './Formats';\r\nimport Price from './Price';\r\nimport {FiFacebook, FiTwitter} from 'react-icons/fi';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport CityInfo from './CityInfo';\r\nimport {blue, indigo} from '@mui/material/colors';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport DateSelector from './DatePicker';\r\nimport AppAnimate from '@crema/core/AppAnimate';\r\nimport {AppLoader} from '../../../@crema';\r\n\r\nconst Widgets = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetWidgetsData());\r\n  }, [dispatch]);\r\n\r\n  const widgetsData = useSelector(({dashboard}) => dashboard.widgetsData);\r\n\r\n  return (\r\n    <>\r\n      {widgetsData ? (\r\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n          <>\r\n            <Box\r\n              component='h3'\r\n              sx={{\r\n                color: 'text.primary',\r\n                mb: {xs: 4, sm: 4, xl: 6},\r\n                fontSize: 16,\r\n                fontWeight: Fonts.BOLD,\r\n              }}\r\n            >\r\n              <IntlMessages id='dashboard.widgets' />\r\n            </Box>\r\n\r\n            <AppGridContainer>\r\n              <Grid item xs={12} md={6}>\r\n                <WallPaper />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <HollywoodMovie />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <TemperatureCard temperatures={widgetsData.temperatures} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <DateSelector />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <VisitorAnalysis />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <BirthdayCard />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <CountryMap />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <RecentActivity data={widgetsData.recentActivity} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <IllustrationDesign />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <CityInfo cityData={widgetsData.cityData} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <Categories data={widgetsData.categories} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={7}>\r\n                <Header />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={5}>\r\n                <Subscribe />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <Profile data={widgetsData.profile} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <Messages data={widgetsData.messages} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <TaskList data={widgetsData.taskList} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <Colors data={widgetsData.colorsList} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={5}>\r\n                <Reviews data={widgetsData.reviewsList} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <AppGridContainer>\r\n                  <Grid item xs={12} md={12}>\r\n                    <AddTags data={widgetsData.tagsList} />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <Price />\r\n                  </Grid>\r\n                </AppGridContainer>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <CremaCard\r\n                  data={widgetsData.mateInfo.facebookInfo}\r\n                  bgColor={indigo[600]}\r\n                  color='white'\r\n                  icon={\r\n                    <Box\r\n                      sx={{\r\n                        '& svg': {\r\n                          color: 'white',\r\n                          cursor: 'pointer',\r\n                        },\r\n                      }}\r\n                    >\r\n                      <FiFacebook />\r\n                    </Box>\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <CremaCard\r\n                  data={widgetsData.mateInfo.twitterInfo}\r\n                  bgColor={blue[600]}\r\n                  color='white'\r\n                  icon={\r\n                    <Box\r\n                      sx={{\r\n                        '& svg': {\r\n                          color: 'white',\r\n                          cursor: 'pointer',\r\n                        },\r\n                      }}\r\n                    >\r\n                      <FiTwitter />\r\n                    </Box>\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <Formats data={widgetsData.formatList} />\r\n              </Grid>\r\n            </AppGridContainer>\r\n\r\n            <AppInfoView />\r\n          </>\r\n        </AppAnimate>\r\n      ) : (\r\n        <AppLoader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n"],"sourceRoot":""}