{"version":3,"sources":["pages/muiComponents/utils/Popover/BasicPopover.js","pages/muiComponents/utils/Popover/MouseOverPopover.js","pages/muiComponents/utils/Popover/index.js","webpack:///./src/pages/muiComponents/utils/Popover/BasicPopover.js?723b","webpack:///./src/pages/muiComponents/utils/Popover/MouseOverPopover.js?e9a6"],"names":["BasicPopover","React","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","variant","onClick","event","currentTarget","onClose","anchorOrigin","vertical","horizontal","Typography","sx","p","MouseOverPopover","handlePopoverClose","onMouseEnter","onMouseLeave","pointerEvents","transformOrigin","disableRestoreFocus","Popover","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","component","source","noScrollbar"],"mappings":"oMAKe,SAASA,IACtB,MAAgCC,WAAe,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAUMC,EAAOC,QAAQH,GACfI,EAAKF,EAAO,sBAAmBG,EAErC,OACE,gCACE,cAACC,EAAA,EAAD,CAAQ,mBAAkBF,EAAIG,QAAQ,YAAYC,QAblC,SAACC,GACnBR,EAAYQ,EAAMC,gBAYhB,0BAGA,cAAC,IAAD,CACEN,GAAIA,EACJF,KAAMA,EACNF,SAAUA,EACVW,QAhBc,WAClBV,EAAY,OAgBRW,aAAc,CACZC,SAAU,SACVC,WAAY,QAPhB,SAUE,cAACC,EAAA,EAAD,CAAYC,GAAI,CAACC,EAAG,GAApB,8CC9BO,SAASC,IACtB,MAAgCnB,WAAe,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMkB,EAAqB,WACzBlB,EAAY,OAGRC,EAAOC,QAAQH,GAErB,OACE,gCACE,cAACe,EAAA,EAAD,CACE,YAAWb,EAAO,0BAAuBG,EACzC,gBAAc,OACde,aAfoB,SAACX,GACzBR,EAAYQ,EAAMC,gBAedW,aAAcF,EAJhB,mCAQA,cAAC,IAAD,CACEf,GAAG,qBACHY,GAAI,CACFM,cAAe,QAEjBpB,KAAMA,EACNF,SAAUA,EACVY,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdS,gBAAiB,CACfV,SAAU,MACVC,WAAY,QAEdH,QAASQ,EACTK,qBAAmB,EAhBrB,SAkBE,cAACT,EAAA,EAAD,CAAYC,GAAI,CAACC,EAAG,GAApB,iCCDOQ,UAhCC,WACd,OACE,qCACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,YAAY,mEACZC,OAAO,wCAGT,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACER,MAAM,eACNS,UAAWtC,EACXuC,OC1BG,8iCD2BHC,aAAW,MAGf,cAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACER,MAAM,qBACNS,UAAWlB,EACXmB,OElCG,s0CFmCHC,aAAW,EACXV,YAAY","file":"static/js/156.b688f31c.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function BasicPopover() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\r\n        Open Popover\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <Typography sx={{p: 2}}>The content of the Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function MouseOverPopover() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        aria-owns={open ? 'mouse-over-popover' : undefined}\r\n        aria-haspopup='true'\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        Hover with a Popover.\r\n      </Typography>\r\n      <Popover\r\n        id='mouse-over-popover'\r\n        sx={{\r\n          pointerEvents: 'none',\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography sx={{p: 1}}>I use Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport BasicPopover from './BasicPopover';\r\nimport BasicPopoverSource from '!raw-loader!./BasicPopover';\r\n\r\nimport MouseOverPopover from './MouseOverPopover';\r\nimport MouseOverPopoverSource from '!raw-loader!./MouseOverPopover';\r\n\r\nconst Popover = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Popover'\r\n        description='A Popover can be used to display some content on top of another.'\r\n        refUrl='https://mui.com/components/popover/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='BasicPopover'\r\n            component={BasicPopover}\r\n            source={BasicPopoverSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Mouse Over Popover'\r\n            component={MouseOverPopover}\r\n            source={MouseOverPopoverSource}\r\n            noScrollbar\r\n            description='This demo demonstrates how to use the Popover component and the mouseover event to achieve popover behavior.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n","export default \"import * as React from 'react';\\r\\nimport Popover from '@mui/material/Popover';\\r\\nimport Typography from '@mui/material/Typography';\\r\\nimport Button from '@mui/material/Button';\\r\\n\\r\\nexport default function BasicPopover() {\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n\\r\\n  const handleClick = (event) => {\\r\\n    setAnchorEl(event.currentTarget);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setAnchorEl(null);\\r\\n  };\\r\\n\\r\\n  const open = Boolean(anchorEl);\\r\\n  const id = open ? 'simple-popover' : undefined;\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\\r\\n        Open Popover\\r\\n      </Button>\\r\\n      <Popover\\r\\n        id={id}\\r\\n        open={open}\\r\\n        anchorEl={anchorEl}\\r\\n        onClose={handleClose}\\r\\n        anchorOrigin={{\\r\\n          vertical: 'bottom',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n      >\\r\\n        <Typography sx={{p: 2}}>The content of the Popover.</Typography>\\r\\n      </Popover>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Popover from '@mui/material/Popover';\\r\\nimport Typography from '@mui/material/Typography';\\r\\n\\r\\nexport default function MouseOverPopover() {\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n\\r\\n  const handlePopoverOpen = (event) => {\\r\\n    setAnchorEl(event.currentTarget);\\r\\n  };\\r\\n\\r\\n  const handlePopoverClose = () => {\\r\\n    setAnchorEl(null);\\r\\n  };\\r\\n\\r\\n  const open = Boolean(anchorEl);\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Typography\\r\\n        aria-owns={open ? 'mouse-over-popover' : undefined}\\r\\n        aria-haspopup='true'\\r\\n        onMouseEnter={handlePopoverOpen}\\r\\n        onMouseLeave={handlePopoverClose}\\r\\n      >\\r\\n        Hover with a Popover.\\r\\n      </Typography>\\r\\n      <Popover\\r\\n        id='mouse-over-popover'\\r\\n        sx={{\\r\\n          pointerEvents: 'none',\\r\\n        }}\\r\\n        open={open}\\r\\n        anchorEl={anchorEl}\\r\\n        anchorOrigin={{\\r\\n          vertical: 'bottom',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n        transformOrigin={{\\r\\n          vertical: 'top',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n        onClose={handlePopoverClose}\\r\\n        disableRestoreFocus\\r\\n      >\\r\\n        <Typography sx={{p: 1}}>I use Popover.</Typography>\\r\\n      </Popover>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}