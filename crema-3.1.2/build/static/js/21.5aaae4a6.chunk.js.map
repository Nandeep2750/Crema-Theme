{"version":3,"sources":["../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/icons-material/ArrowDropDown.js","../node_modules/@mui/icons-material/FormatAlignLeft.js","../node_modules/@mui/icons-material/FormatAlignCenter.js","../node_modules/@mui/icons-material/FormatAlignRight.js","../node_modules/@mui/icons-material/FormatBold.js","../node_modules/@mui/icons-material/FormatItalic.js","../node_modules/@mui/icons-material/FormatAlignJustify.js","../node_modules/@mui/icons-material/FormatUnderlined.js","../node_modules/@mui/icons-material/FormatColorFill.js","../node_modules/@mui/icons-material/ViewList.js","../node_modules/@mui/icons-material/ViewModule.js","../node_modules/@mui/icons-material/ViewQuilt.js","../node_modules/@mui/icons-material/Laptop.js","../node_modules/@mui/icons-material/Tv.js","../node_modules/@mui/icons-material/PhoneAndroid.js","pages/muiComponents/inputs/ToggleButtons/ExclusiveSelection.js","webpack:///./src/pages/muiComponents/inputs/ToggleButtons/ExclusiveSelection.js?6e92","pages/muiComponents/inputs/ToggleButtons/MultipleSelection.js","pages/muiComponents/inputs/ToggleButtons/Color.js","webpack:///./src/pages/muiComponents/inputs/ToggleButtons/Color.js?e81c","pages/muiComponents/inputs/ToggleButtons/VerticalButtons.js","webpack:///./src/pages/muiComponents/inputs/ToggleButtons/VerticalButtons.js?4f34","pages/muiComponents/inputs/ToggleButtons/EnforceValueSet.js","webpack:///./src/pages/muiComponents/inputs/ToggleButtons/EnforceValueSet.js?e40e","pages/muiComponents/inputs/ToggleButtons/StandaloneToggleButton.js","webpack:///./src/pages/muiComponents/inputs/ToggleButtons/StandaloneToggleButton.js?40d0","pages/muiComponents/inputs/ToggleButtons/Customization.js","pages/muiComponents/inputs/ToggleButtons/index.js","webpack:///./src/pages/muiComponents/inputs/ToggleButtons/MultipleSelection.js?608b","webpack:///./src/pages/muiComponents/inputs/ToggleButtons/Customization.js?b8b4"],"names":["_excluded","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","styled","name","slot","overridesResolver","props","styles","root","ownerState","theme","_extends","display","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","flexDirection","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","deepmerge","margin","row","column","getValue","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as","_interopRequireDefault","require","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ToggleButtons","alignment","setAlignment","ToggleButtonGroup","exclusive","onChange","event","newAlignment","ToggleButton","disabled","ToggleButtonsMultiple","formats","setFormats","newFormats","ColorToggleButton","color","VerticalToggleButtons","view","setView","orientation","nextView","ToggleButtonNotEmpty","devices","setDevices","newDevices","StandaloneToggleButton","selected","setSelected","StyledToggleButtonGroup","border","borderRadius","shape","CustomizedDividers","Paper","elevation","sx","palette","flexWrap","size","Divider","flexItem","mx","my","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","md","AppComponentCard","ExclusiveSelection","source","noScrollbar"],"mappings":"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","file":"static/js/21.5aaae4a6.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"\n}), 'FormatAlignCenter');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"\n}), 'FormatBold');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\"\n}), 'FormatItalic');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"\n}), 'FormatAlignJustify');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"\n}), 'FormatUnderlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.56 8.94 7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10 10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5zM2 20h20v4H2v-4z\"\n}), 'FormatColorFill');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 14h4v-4H3v4zm0 5h4v-4H3v4zM3 9h4V5H3v4zm5 5h13v-4H8v4zm0 5h13v-4H8v4zM8 5v4h13V5H8z\"\n}), 'ViewList');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.67 5v6.5H9.33V5h5.34zm1 6.5H21V5h-5.33v6.5zm-1 7.5v-6.5H9.33V19h5.34zm1-6.5V19H21v-6.5h-5.33zm-7.34 0H3V19h5.33v-6.5zm0-1V5H3v6.5h5.33z\"\n}), 'ViewModule');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 5v6.5H9.33V5H21zm-6.33 14v-6.5H9.33V19h5.34zm1-6.5V19H21v-6.5h-5.33zM8.33 19V5H3v14h5.33z\"\n}), 'ViewQuilt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\"\n}), 'Laptop');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.1-.9-2-2-2zm0 14H3V5h18v12z\"\n}), 'Tv');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H8C6.34 1 5 2.34 5 4v16c0 1.66 1.34 3 3 3h8c1.66 0 3-1.34 3-3V4c0-1.66-1.34-3-3-3zm-2 20h-4v-1h4v1zm3.25-3H6.75V4h10.5v14z\"\n}), 'PhoneAndroid');\n\nexports.default = _default;","import * as React from 'react';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtons() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={alignment}\r\n      exclusive\r\n      onChange={handleAlignment}\r\n      aria-label='text alignment'\r\n    >\r\n      <ToggleButton value='left' aria-label='left aligned'>\r\n        <FormatAlignLeftIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='center' aria-label='centered'>\r\n        <FormatAlignCenterIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='right' aria-label='right aligned'>\r\n        <FormatAlignRightIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='justify' aria-label='justified' disabled>\r\n        <FormatAlignJustifyIcon />\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\\r\\nimport ToggleButton from '@mui/material/ToggleButton';\\r\\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\\r\\n\\r\\nexport default function ToggleButtons() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n\\r\\n  const handleAlignment = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ToggleButtonGroup\\r\\n      value={alignment}\\r\\n      exclusive\\r\\n      onChange={handleAlignment}\\r\\n      aria-label='text alignment'\\r\\n    >\\r\\n      <ToggleButton value='left' aria-label='left aligned'>\\r\\n        <FormatAlignLeftIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='center' aria-label='centered'>\\r\\n        <FormatAlignCenterIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='right' aria-label='right aligned'>\\r\\n        <FormatAlignRightIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='justify' aria-label='justified' disabled>\\r\\n        <FormatAlignJustifyIcon />\\r\\n      </ToggleButton>\\r\\n    </ToggleButtonGroup>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\r\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\r\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\r\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonsMultiple() {\r\n  const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={formats}\r\n      onChange={handleFormat}\r\n      aria-label='text formatting'\r\n    >\r\n      <ToggleButton value='bold' aria-label='bold'>\r\n        <FormatBoldIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='italic' aria-label='italic'>\r\n        <FormatItalicIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='underlined' aria-label='underlined'>\r\n        <FormatUnderlinedIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='color' aria-label='color' disabled>\r\n        <FormatColorFillIcon />\r\n        <ArrowDropDownIcon />\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function ColorToggleButton() {\r\n  const [alignment, setAlignment] = React.useState('web');\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      color='primary'\r\n      value={alignment}\r\n      exclusive\r\n      onChange={handleChange}\r\n    >\r\n      <ToggleButton value='web'>Web</ToggleButton>\r\n      <ToggleButton value='android'>Android</ToggleButton>\r\n      <ToggleButton value='ios'>iOS</ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport ToggleButton from '@mui/material/ToggleButton';\\r\\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\\r\\n\\r\\nexport default function ColorToggleButton() {\\r\\n  const [alignment, setAlignment] = React.useState('web');\\r\\n\\r\\n  const handleChange = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ToggleButtonGroup\\r\\n      color='primary'\\r\\n      value={alignment}\\r\\n      exclusive\\r\\n      onChange={handleChange}\\r\\n    >\\r\\n      <ToggleButton value='web'>Web</ToggleButton>\\r\\n      <ToggleButton value='android'>Android</ToggleButton>\\r\\n      <ToggleButton value='ios'>iOS</ToggleButton>\\r\\n    </ToggleButtonGroup>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport ViewListIcon from '@mui/icons-material/ViewList';\r\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\r\nimport ViewQuiltIcon from '@mui/icons-material/ViewQuilt';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function VerticalToggleButtons() {\r\n  const [view, setView] = React.useState('list');\r\n\r\n  const handleChange = (event, nextView) => {\r\n    setView(nextView);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      orientation='vertical'\r\n      value={view}\r\n      exclusive\r\n      onChange={handleChange}\r\n    >\r\n      <ToggleButton value='list' aria-label='list'>\r\n        <ViewListIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='module' aria-label='module'>\r\n        <ViewModuleIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value='quilt' aria-label='quilt'>\r\n        <ViewQuiltIcon />\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport ViewListIcon from '@mui/icons-material/ViewList';\\r\\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\\r\\nimport ViewQuiltIcon from '@mui/icons-material/ViewQuilt';\\r\\nimport ToggleButton from '@mui/material/ToggleButton';\\r\\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\\r\\n\\r\\nexport default function VerticalToggleButtons() {\\r\\n  const [view, setView] = React.useState('list');\\r\\n\\r\\n  const handleChange = (event, nextView) => {\\r\\n    setView(nextView);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ToggleButtonGroup\\r\\n      orientation='vertical'\\r\\n      value={view}\\r\\n      exclusive\\r\\n      onChange={handleChange}\\r\\n    >\\r\\n      <ToggleButton value='list' aria-label='list'>\\r\\n        <ViewListIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='module' aria-label='module'>\\r\\n        <ViewModuleIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='quilt' aria-label='quilt'>\\r\\n        <ViewQuiltIcon />\\r\\n      </ToggleButton>\\r\\n    </ToggleButtonGroup>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport LaptopIcon from '@mui/icons-material/Laptop';\r\nimport TvIcon from '@mui/icons-material/Tv';\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\r\nimport Stack from '@mui/material/Stack';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonNotEmpty() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [devices, setDevices] = React.useState(() => ['phone']);\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    if (newAlignment !== null) {\r\n      setAlignment(newAlignment);\r\n    }\r\n  };\r\n\r\n  const handleDevices = (event, newDevices) => {\r\n    if (newDevices.length) {\r\n      setDevices(newDevices);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack direction='row' spacing={4}>\r\n      <ToggleButtonGroup\r\n        value={alignment}\r\n        exclusive\r\n        onChange={handleAlignment}\r\n        aria-label='text alignment'\r\n      >\r\n        <ToggleButton value='left' aria-label='left aligned'>\r\n          <FormatAlignLeftIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value='center' aria-label='centered'>\r\n          <FormatAlignCenterIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value='right' aria-label='right aligned'>\r\n          <FormatAlignRightIcon />\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n      <ToggleButtonGroup\r\n        value={devices}\r\n        onChange={handleDevices}\r\n        aria-label='device'\r\n      >\r\n        <ToggleButton value='laptop' aria-label='laptop'>\r\n          <LaptopIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value='tv' aria-label='tv'>\r\n          <TvIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value='phone' aria-label='phone'>\r\n          <PhoneAndroidIcon />\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </Stack>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\\r\\nimport LaptopIcon from '@mui/icons-material/Laptop';\\r\\nimport TvIcon from '@mui/icons-material/Tv';\\r\\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\\r\\nimport Stack from '@mui/material/Stack';\\r\\nimport ToggleButton from '@mui/material/ToggleButton';\\r\\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\\r\\n\\r\\nexport default function ToggleButtonNotEmpty() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n  const [devices, setDevices] = React.useState(() => ['phone']);\\r\\n\\r\\n  const handleAlignment = (event, newAlignment) => {\\r\\n    if (newAlignment !== null) {\\r\\n      setAlignment(newAlignment);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleDevices = (event, newDevices) => {\\r\\n    if (newDevices.length) {\\r\\n      setDevices(newDevices);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Stack direction='row' spacing={4}>\\r\\n      <ToggleButtonGroup\\r\\n        value={alignment}\\r\\n        exclusive\\r\\n        onChange={handleAlignment}\\r\\n        aria-label='text alignment'\\r\\n      >\\r\\n        <ToggleButton value='left' aria-label='left aligned'>\\r\\n          <FormatAlignLeftIcon />\\r\\n        </ToggleButton>\\r\\n        <ToggleButton value='center' aria-label='centered'>\\r\\n          <FormatAlignCenterIcon />\\r\\n        </ToggleButton>\\r\\n        <ToggleButton value='right' aria-label='right aligned'>\\r\\n          <FormatAlignRightIcon />\\r\\n        </ToggleButton>\\r\\n      </ToggleButtonGroup>\\r\\n\\r\\n      <ToggleButtonGroup\\r\\n        value={devices}\\r\\n        onChange={handleDevices}\\r\\n        aria-label='device'\\r\\n      >\\r\\n        <ToggleButton value='laptop' aria-label='laptop'>\\r\\n          <LaptopIcon />\\r\\n        </ToggleButton>\\r\\n        <ToggleButton value='tv' aria-label='tv'>\\r\\n          <TvIcon />\\r\\n        </ToggleButton>\\r\\n        <ToggleButton value='phone' aria-label='phone'>\\r\\n          <PhoneAndroidIcon />\\r\\n        </ToggleButton>\\r\\n      </ToggleButtonGroup>\\r\\n    </Stack>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\n\r\nexport default function StandaloneToggleButton() {\r\n  const [selected, setSelected] = React.useState(false);\r\n\r\n  return (\r\n    <ToggleButton\r\n      value='check'\r\n      selected={selected}\r\n      onChange={() => {\r\n        setSelected(!selected);\r\n      }}\r\n    >\r\n      <CheckIcon />\r\n    </ToggleButton>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport CheckIcon from '@mui/icons-material/Check';\\r\\nimport ToggleButton from '@mui/material/ToggleButton';\\r\\n\\r\\nexport default function StandaloneToggleButton() {\\r\\n  const [selected, setSelected] = React.useState(false);\\r\\n\\r\\n  return (\\r\\n    <ToggleButton\\r\\n      value='check'\\r\\n      selected={selected}\\r\\n      onChange={() => {\\r\\n        setSelected(!selected);\\r\\n      }}\\r\\n    >\\r\\n      <CheckIcon />\\r\\n    </ToggleButton>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\r\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\r\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\r\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\r\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport Divider from '@mui/material/Divider';\r\nimport Paper from '@mui/material/Paper';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({theme}) => ({\r\n  '& .MuiToggleButtonGroup-grouped': {\r\n    margin: theme.spacing(0.5),\r\n    border: 0,\r\n    '&.Mui-disabled': {\r\n      border: 0,\r\n    },\r\n    '&:not(:first-of-type)': {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    '&:first-of-type': {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedDividers() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [formats, setFormats] = React.useState(() => ['italic']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          display: 'flex',\r\n          border: (theme) => `1px solid ${theme.palette.divider}`,\r\n          flexWrap: 'wrap',\r\n        }}\r\n      >\r\n        <StyledToggleButtonGroup\r\n          size='small'\r\n          value={alignment}\r\n          exclusive\r\n          onChange={handleAlignment}\r\n          aria-label='text alignment'\r\n        >\r\n          <ToggleButton value='left' aria-label='left aligned'>\r\n            <FormatAlignLeftIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value='center' aria-label='centered'>\r\n            <FormatAlignCenterIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value='right' aria-label='right aligned'>\r\n            <FormatAlignRightIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value='justify' aria-label='justified' disabled>\r\n            <FormatAlignJustifyIcon />\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n        <Divider flexItem orientation='vertical' sx={{mx: 0.5, my: 1}} />\r\n        <StyledToggleButtonGroup\r\n          size='small'\r\n          value={formats}\r\n          onChange={handleFormat}\r\n          aria-label='text formatting'\r\n        >\r\n          <ToggleButton value='bold' aria-label='bold'>\r\n            <FormatBoldIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value='italic' aria-label='italic'>\r\n            <FormatItalicIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value='underlined' aria-label='underlined'>\r\n            <FormatUnderlinedIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value='color' aria-label='color' disabled>\r\n            <FormatColorFillIcon />\r\n            <ArrowDropDownIcon />\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport ExclusiveSelection from './ExclusiveSelection';\r\nimport ExclusiveSelectionSource from '!raw-loader!./ExclusiveSelection';\r\nimport ToggleButtonsMultiple from './MultipleSelection';\r\nimport ToggleButtonsMultipleSource from '!raw-loader!./MultipleSelection';\r\nimport ColorToggleButton from './Color';\r\nimport ColorToggleButtonSource from '!raw-loader!./Color';\r\nimport VerticalToggleButtons from './VerticalButtons';\r\nimport VerticalToggleButtonsSource from '!raw-loader!./VerticalButtons';\r\nimport ToggleButtonNotEmpty from './EnforceValueSet';\r\nimport ToggleButtonNotEmptySource from '!raw-loader!./EnforceValueSet';\r\nimport StandaloneToggleButton from './StandaloneToggleButton';\r\nimport StandaloneToggleButtonSource from '!raw-loader!./StandaloneToggleButton';\r\nimport CustomizedDividers from './Customization';\r\nimport CustomizedDividersSource from '!raw-loader!./Customization';\r\n\r\nconst ToggleButtons = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Toggle Buttons'\r\n        description='Toggle buttons can be used to group related options.'\r\n        refUrl='https://mui.com/components/toggle-button/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Exclusive selection'\r\n            component={ExclusiveSelection}\r\n            source={ExclusiveSelectionSource}\r\n            noScrollbar\r\n            description='With exclusive selection, selecting one option deselects any other.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Multiple selection'\r\n            component={ToggleButtonsMultiple}\r\n            source={ToggleButtonsMultipleSource}\r\n            noScrollbar\r\n            description='Multiple selection allows for logically-grouped options, like bold, italic, and underline, to have multiple options selected.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Color'\r\n            component={ColorToggleButton}\r\n            source={ColorToggleButtonSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Standalone toggle button'\r\n            component={StandaloneToggleButton}\r\n            source={StandaloneToggleButtonSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Enforce value sets'\r\n            component={ToggleButtonNotEmpty}\r\n            source={ToggleButtonNotEmptySource}\r\n            noScrollbar\r\n            description='If you want to enforce that at least one button must be active, you can adapt your handleChange function.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Customization'\r\n            component={CustomizedDividers}\r\n            source={CustomizedDividersSource}\r\n            noScrollbar\r\n            description='Here is an example of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Vertical buttons'\r\n            component={VerticalToggleButtons}\r\n            source={VerticalToggleButtonsSource}\r\n            noScrollbar\r\n            description='The buttons can be stacked vertically with the orientation prop set to \"vertical\".'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToggleButtons;\r\n","export default \"import * as React from 'react';\\r\\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\\r\\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\\r\\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\\r\\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\\r\\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\\r\\nimport ToggleButton from '@mui/material/ToggleButton';\\r\\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\\r\\n\\r\\nexport default function ToggleButtonsMultiple() {\\r\\n  const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\\r\\n\\r\\n  const handleFormat = (event, newFormats) => {\\r\\n    setFormats(newFormats);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ToggleButtonGroup\\r\\n      value={formats}\\r\\n      onChange={handleFormat}\\r\\n      aria-label='text formatting'\\r\\n    >\\r\\n      <ToggleButton value='bold' aria-label='bold'>\\r\\n        <FormatBoldIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='italic' aria-label='italic'>\\r\\n        <FormatItalicIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='underlined' aria-label='underlined'>\\r\\n        <FormatUnderlinedIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value='color' aria-label='color' disabled>\\r\\n        <FormatColorFillIcon />\\r\\n        <ArrowDropDownIcon />\\r\\n      </ToggleButton>\\r\\n    </ToggleButtonGroup>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport {styled} from '@mui/material/styles';\\r\\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\\r\\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\\r\\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\\r\\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\\r\\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\\r\\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\\r\\nimport Divider from '@mui/material/Divider';\\r\\nimport Paper from '@mui/material/Paper';\\r\\nimport ToggleButton from '@mui/material/ToggleButton';\\r\\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\\r\\n\\r\\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({theme}) => ({\\r\\n  '& .MuiToggleButtonGroup-grouped': {\\r\\n    margin: theme.spacing(0.5),\\r\\n    border: 0,\\r\\n    '&.Mui-disabled': {\\r\\n      border: 0,\\r\\n    },\\r\\n    '&:not(:first-of-type)': {\\r\\n      borderRadius: theme.shape.borderRadius,\\r\\n    },\\r\\n    '&:first-of-type': {\\r\\n      borderRadius: theme.shape.borderRadius,\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomizedDividers() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n  const [formats, setFormats] = React.useState(() => ['italic']);\\r\\n\\r\\n  const handleFormat = (event, newFormats) => {\\r\\n    setFormats(newFormats);\\r\\n  };\\r\\n\\r\\n  const handleAlignment = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Paper\\r\\n        elevation={0}\\r\\n        sx={{\\r\\n          display: 'flex',\\r\\n          border: (theme) => `1px solid ${theme.palette.divider}`,\\r\\n          flexWrap: 'wrap',\\r\\n        }}\\r\\n      >\\r\\n        <StyledToggleButtonGroup\\r\\n          size='small'\\r\\n          value={alignment}\\r\\n          exclusive\\r\\n          onChange={handleAlignment}\\r\\n          aria-label='text alignment'\\r\\n        >\\r\\n          <ToggleButton value='left' aria-label='left aligned'>\\r\\n            <FormatAlignLeftIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value='center' aria-label='centered'>\\r\\n            <FormatAlignCenterIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value='right' aria-label='right aligned'>\\r\\n            <FormatAlignRightIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value='justify' aria-label='justified' disabled>\\r\\n            <FormatAlignJustifyIcon />\\r\\n          </ToggleButton>\\r\\n        </StyledToggleButtonGroup>\\r\\n        <Divider flexItem orientation='vertical' sx={{mx: 0.5, my: 1}} />\\r\\n        <StyledToggleButtonGroup\\r\\n          size='small'\\r\\n          value={formats}\\r\\n          onChange={handleFormat}\\r\\n          aria-label='text formatting'\\r\\n        >\\r\\n          <ToggleButton value='bold' aria-label='bold'>\\r\\n            <FormatBoldIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value='italic' aria-label='italic'>\\r\\n            <FormatItalicIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value='underlined' aria-label='underlined'>\\r\\n            <FormatUnderlinedIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value='color' aria-label='color' disabled>\\r\\n            <FormatColorFillIcon />\\r\\n            <ArrowDropDownIcon />\\r\\n          </ToggleButton>\\r\\n        </StyledToggleButtonGroup>\\r\\n      </Paper>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}