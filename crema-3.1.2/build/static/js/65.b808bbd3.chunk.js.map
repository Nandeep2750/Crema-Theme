{"version":3,"sources":["../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/icons-material/Pageview.js","pages/dashboards/Crypto/TotalBalance/CoinsInfo.js","pages/dashboards/Crypto/TotalBalance/index.js","pages/dashboards/Crypto/Coins/CoinStats.js","pages/dashboards/Crypto/Coins/index.js","pages/dashboards/Crypto/Bitcoin/BitcoinGraph.js","pages/dashboards/Crypto/Bitcoin/index.js","pages/dashboards/Crypto/BuySell/TabForm.js","pages/dashboards/Crypto/BuySell/index.js","pages/dashboards/Crypto/BtcVolumeCurrency/BtcGraph.js","pages/dashboards/Crypto/BtcVolumeCurrency/index.js","pages/dashboards/Crypto/PopularCoins/PopularCoinsTable/TableHeading.js","pages/dashboards/Crypto/PopularCoins/PopularCoinsTable/TableItem.js","pages/dashboards/Crypto/PopularCoins/PopularCoinsTable/index.js","pages/dashboards/Crypto/PopularCoins/index.js","pages/dashboards/Crypto/LatestNews/NewsList.js","pages/dashboards/Crypto/LatestNews/index.js","pages/dashboards/Crypto/CryptoMarketActivity/MarketGraph.js","pages/dashboards/Crypto/CryptoMarketActivity/index.js","pages/dashboards/Crypto/index.js"],"names":["getTableRowUtilityClass","slot","generateUtilityClass","tableRowClasses","generateUtilityClasses","_excluded","TableRowRoot","styled","name","overridesResolver","props","styles","ownerState","root","head","footer","theme","color","display","verticalAlign","outline","hover","backgroundColor","palette","action","selected","alpha","primary","main","selectedOpacity","hoverOpacity","TableRow","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","tablelvl2","Tablelvl2Context","_extends","variant","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","role","getTableUtilityClass","TableRoot","stickyHeader","width","borderCollapse","borderSpacing","typography","body2","padding","spacing","text","secondary","textAlign","captionSide","defaultComponent","Table","size","table","TableContext","Provider","value","children","getTableHeadUtilityClass","TableHeadRoot","TableHead","getTableBodyUtilityClass","TableBodyRoot","TableBody","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","CoinsInfo","coins","Box","sx","mx","mb","xl","flexWrap","justifyContent","map","coin","mt","px","fontWeight","Fonts","BOLD","fontSize","id","defaultProps","TotalBalance","totalBalanceData","textTransform","xs","sm","IntlMessages","AppCard","sxStyle","md","position","MEDIUM","balance","whiteSpace","Button","LIGHT","lineHeight","ml","pt","lg","CoinStats","icon","bgColor","data","heading","borderRadius","components","MuiCard","styleOverrides","alignItems","Avatar","p","height","alt","src","mr","price","increment","green","red","Coins","coinsData","Grid","container","item","bitcoin","etherium","liteCoin","ripple","onGetDataKey","BitcoinGraph","ResponsiveContainer","AreaChart","margin","top","right","left","bottom","XAxis","dataKey","tickLine","axisLine","Tooltip","labelStyle","YAxis","ticks","type","CartesianGrid","strokeDasharray","stroke","vertical","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","strokeWidth","stackId","fill","fillOpacity","Bitcoin","coinGraphData","onGetCoinData","useCallback","litecoin","useState","graphType","setGraphType","coinType","setCoinType","coinData","setCoinData","useEffect","messages","useIntl","flexDirection","flex","AppSelect","menus","defaultValue","onChange","indigo","Tabs","minWidth","event","newValue","indicatorColor","textColor","Tab","label","yearlyData","monthlyData","weeklyData","dailyData","TabForm","inputValue","setValue","inputPrice","setPrice","amount","inputAmount","setAmount","noValidate","autoComplete","TextField","fullWidth","e","target","InputProps","BuySell","buySell","a11yProps","index","buyData","sellData","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","sin","cos","sy","my","ex","ey","textAnchor","x","y","dy","Sector","r","BtcGraph","activeIndex","setActiveIndex","alignSelf","PieChart","Pie","activeShape","paddingAngle","onMouseEnter","entry","Cell","BtcVolumeCurrency","title","pl","SEMI_BOLD","TableHeading","borderBottom","pr","TableCell","align","TableItem","row","scope","image","shortName","marketCap","volume","h","PopularCoinsTable","popularCoins","AppTableContainer","PopularCoins","contentStyle","NewsList","newsData","AppScrollbar","List","AppList","renderRow","news","ListItem","ListItemText","created","by","LatestNews","MarketGraph","marketGraphData","BarChart","barSize","barGap","hide","Bar","CryptoMarketActivity","teal","Crypto","dispatch","useDispatch","onGetCryptoData","cryptoData","useSelector","dashboard","AppAnimate","animation","delay","AppGridContainer","btcChartData","AppInfoView"],"mappings":"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","file":"static/js/65.b808bbd3.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\"\n}), 'Pageview');\n\nexports.default = _default;","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst CoinsInfo = ({coins}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mx: -2,\r\n        mb: {xl: 1},\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n      }}\r\n    >\r\n      {coins.map((coin) => {\r\n        return (\r\n          <Box\r\n            sx={{\r\n              mt: {xl: 3},\r\n              px: 2,\r\n            }}\r\n            key={coin.id}\r\n          >\r\n            <Box\r\n              component='h3'\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 20,\r\n                color: 'primary.main',\r\n              }}\r\n            >\r\n              {coin.value}\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                fontSize: 14,\r\n                color: 'text.secondary',\r\n              }}\r\n            >\r\n              {coin.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CoinsInfo;\r\n\r\nCoinsInfo.defaultProps = {\r\n  coins: [],\r\n};\r\n\r\nCoinsInfo.propTypes = {\r\n  coins: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {alpha, Box} from '@mui/material';\r\nimport CoinsInfo from './CoinsInfo';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nconst TotalBalance = ({totalBalanceData}) => {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        component='h2'\r\n        sx={{\r\n          color: 'text.primary',\r\n          fontSize: 16,\r\n          textTransform: 'uppercase',\r\n          mb: {xs: 4, sm: 4, xl: 6},\r\n          fontWeight: Fonts.BOLD,\r\n        }}\r\n      >\r\n        <IntlMessages id='dashboard.totalBalance' />\r\n      </Box>\r\n      <AppCard sxStyle={{}}>\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 3, md: 6, xl: 8},\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: 'relative',\r\n            }}\r\n          >\r\n            <Box\r\n              component='h3'\r\n              sx={{\r\n                fontWeight: Fonts.MEDIUM,\r\n                fontSize: 20,\r\n              }}\r\n            >\r\n              ${totalBalanceData.balance}\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                color: 'text.secondary',\r\n                fontSize: 14,\r\n                whiteSpace: 'nowrap',\r\n                mb: 1,\r\n              }}\r\n            >\r\n              <IntlMessages id='dashboard.avlBalance' />\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <Box>\r\n              <Button\r\n                sx={{\r\n                  backgroundColor: (theme) =>\r\n                    alpha(theme.palette.primary.main, 0.1),\r\n                  color: 'primary.main',\r\n                  fontWeight: Fonts.LIGHT,\r\n                  textTransform: 'capitalize',\r\n                  width: 96,\r\n                  fontSize: 16,\r\n                  '&:hover, &:focus': {\r\n                    backgroundColor: (theme) =>\r\n                      alpha(theme.palette.primary.main, 0.15),\r\n                    color: 'primary.main',\r\n                  },\r\n                  lineHeight: {xs: '16px', sm: '20px', xl: '26px'},\r\n                }}\r\n              >\r\n                <IntlMessages id='common.send' />\r\n              </Button>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                ml: 3,\r\n              }}\r\n            >\r\n              <Button\r\n                variant='contained'\r\n                sx={{\r\n                  fontWeight: Fonts.LIGHT,\r\n                  textTransform: 'capitalize',\r\n                  width: 96,\r\n                  fontSize: 16,\r\n                  lineHeight: {xs: '16px', sm: '20px', xl: '26px'},\r\n                }}\r\n              >\r\n                <IntlMessages id='common.receive' />\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          component='p'\r\n          sx={{\r\n            mb: {xs: 3.5, md: 4},\r\n            fontSize: 16,\r\n            color: 'text.secondary',\r\n          }}\r\n        >\r\n          <IntlMessages id='dashboard.buyCurrency' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            pt: {md: 2, lg: 3},\r\n          }}\r\n        >\r\n          <CoinsInfo coins={totalBalanceData.coins} />\r\n        </Box>\r\n      </AppCard>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TotalBalance;\r\n\r\nTotalBalance.defaultProps = {\r\n  totalBalanceData: {\r\n    balance: '',\r\n    coins: [],\r\n  },\r\n};\r\n\r\nTotalBalance.propTypes = {\r\n  totalBalanceData: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport {green, red} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\n\r\nconst CoinStats = (props) => {\r\n  const {icon, bgColor, data, heading} = props;\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{\r\n        borderRadius: (theme) =>\r\n          theme.components.MuiCard.styleOverrides.root.borderRadius / 4,\r\n      }}\r\n      className='card-hover'\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar\r\n          sx={{\r\n            p: 3,\r\n            fontSize: {xs: 30, md: 48},\r\n            height: {xs: 46, md: 50, xl: 60},\r\n            width: {xs: 46, md: 50, xl: 60},\r\n            backgroundColor: bgColor,\r\n          }}\r\n        >\r\n          <img alt='' src={icon} />\r\n        </Avatar>\r\n\r\n        <Box\r\n          sx={{\r\n            position: 'relative',\r\n            ml: 4,\r\n          }}\r\n        >\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n              color: 'text.secondary',\r\n              mb: 2,\r\n            }}\r\n          >\r\n            {heading}\r\n          </Box>\r\n          <Box\r\n            component='h3'\r\n            sx={{\r\n              display: 'inline-block',\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 17,\r\n              mr: 3,\r\n            }}\r\n          >\r\n            ${data.price}\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              fontSize: 16,\r\n              fontWeight: Fonts.MEDIUM,\r\n              color: data.increment > 0.0 ? green[500] : red[500],\r\n            }}\r\n          >\r\n            {data.increment}%\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CoinStats;\r\n\r\nCoinStats.defaultProps = {\r\n  bgColor: '',\r\n  data: {\r\n    price: '',\r\n    increment: null,\r\n  },\r\n};\r\n\r\nCoinStats.propTypes = {\r\n  icon: PropTypes.string,\r\n  bgColor: PropTypes.string,\r\n  data: PropTypes.object,\r\n  heading: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport CoinStats from './CoinStats';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst Coins = ({coinsData}) => {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        component='h2'\r\n        sx={{\r\n          color: 'text.primary',\r\n          textTransform: 'uppercase',\r\n          fontSize: 16,\r\n          mb: {xs: 4, sm: 4, xl: 6},\r\n          fontWeight: Fonts.BOLD,\r\n        }}\r\n      >\r\n        <IntlMessages id='dashboard.coins' />\r\n      </Box>\r\n      <Grid container spacing={{xs: 4, md: 8}}>\r\n        <Grid item xs={12} sm={6}>\r\n          <CoinStats\r\n            icon={'/assets/images/bitcoin.svg'}\r\n            bgColor='#9E49E6'\r\n            data={coinsData.bitcoin}\r\n            heading={<IntlMessages id='dashboard.bitcoinPrice' />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <CoinStats\r\n            icon={'/assets/images/etherium.svg'}\r\n            bgColor='#0A8FDC'\r\n            data={coinsData.etherium}\r\n            heading={<IntlMessages id='dashboard.etheriumPrice' />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <CoinStats\r\n            icon={'/assets/images/litcoin.svg'}\r\n            bgColor='#FFA940'\r\n            data={coinsData.liteCoin}\r\n            heading={<IntlMessages id='dashboard.litecoinPrice' />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <CoinStats\r\n            icon={'/assets/images/ripple.svg'}\r\n            bgColor='#F44D50'\r\n            data={coinsData.ripple}\r\n            heading={<IntlMessages id='dashboard.ripplePrice' />}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Coins;\r\n\r\nCoins.defaultProps = {\r\n  coinsData: {\r\n    bitcoin: {\r\n      price: '',\r\n      increment: null,\r\n    },\r\n    etherium: {\r\n      price: '',\r\n      increment: null,\r\n    },\r\n    liteCoin: {\r\n      price: '',\r\n      increment: null,\r\n    },\r\n    ripple: {\r\n      price: '',\r\n      increment: null,\r\n    },\r\n  },\r\n};\r\n\r\nCoins.propTypes = {\r\n  coinsData: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst onGetDataKey = (value) => {\r\n  switch (value) {\r\n    case 0:\r\n      return 'month';\r\n\r\n    case 1:\r\n      return 'date';\r\n\r\n    case 2:\r\n      return 'day';\r\n\r\n    case 3:\r\n      return 'time';\r\n\r\n    default:\r\n      return 'month';\r\n  }\r\n};\r\n\r\nconst BitcoinGraph = ({data, value}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={360}>\r\n      <AreaChart data={data} margin={{top: 50, right: 0, left: 0, bottom: 0}}>\r\n        <XAxis\r\n          dataKey={onGetDataKey(value)}\r\n          tickLine={false}\r\n          axisLine={false}\r\n          padding={{left: 20, right: 20}}\r\n        />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <YAxis\r\n          tickLine={false}\r\n          axisLine={false}\r\n          ticks={[2000, 4000, 6000, 8000, 10000]}\r\n          type='number'\r\n        />\r\n        <CartesianGrid\r\n          strokeDasharray='2 10'\r\n          stroke='#E53E3E'\r\n          vertical={false}\r\n        />\r\n        <defs>\r\n          <linearGradient id='color15' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor='#FED7E2' stopOpacity={0.8} />\r\n            <stop offset='95%' stopColor='#FFF5F7' stopOpacity={0.8} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey='amount'\r\n          strokeWidth={4}\r\n          stackId='2'\r\n          stroke='#E53E3E'\r\n          fill='url(#color15)'\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default BitcoinGraph;\r\n\r\nBitcoinGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nBitcoinGraph.propTypes = {\r\n  data: PropTypes.array,\r\n  value: PropTypes.number,\r\n};\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport BitcoinGraph from './BitcoinGraph';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport {green, indigo} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport AppSelect from '../../../../@crema/core/AppSelect';\r\n\r\nconst Bitcoin = (props) => {\r\n  const {coinGraphData} = props;\r\n\r\n  const onGetCoinData = useCallback(\r\n    (coin) => {\r\n      switch (coin) {\r\n        case 'Bitcoin': {\r\n          return coinGraphData.bitcoin;\r\n        }\r\n        case 'Litecoin': {\r\n          return coinGraphData.litecoin;\r\n        }\r\n        case 'Ripple': {\r\n          return coinGraphData.ripple;\r\n        }\r\n        default:\r\n          return coinGraphData.bitcoin;\r\n      }\r\n    },\r\n    [coinGraphData],\r\n  );\r\n\r\n  const [graphType, setGraphType] = useState(0);\r\n  const [coinType, setCoinType] = useState('Bitcoin');\r\n  const [coinData, setCoinData] = useState(onGetCoinData(coinType));\r\n\r\n  useEffect(() => {\r\n    setCoinData(onGetCoinData(coinType));\r\n  }, [coinType, onGetCoinData]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setGraphType(newValue);\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  const handleSelectionType = (data) => {\r\n    setCoinType(data);\r\n  };\r\n\r\n  return (\r\n    <AppCard>\r\n      <Box\r\n        sx={{\r\n          mt: -2,\r\n          display: 'flex',\r\n          flexDirection: {xs: 'column', md: 'row'},\r\n          alignItems: {md: 'center'},\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            ml: -3,\r\n            flex: 1,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'inline-block',\r\n            }}\r\n          >\r\n            <AppSelect\r\n              menus={[\r\n                messages['dashboard.bitcoin'],\r\n                messages['dashboard.litecoin'],\r\n                messages['dashboard.ripple'],\r\n              ]}\r\n              defaultValue={messages['dashboard.bitcoin']}\r\n              onChange={handleSelectionType}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mx: 2,\r\n                fontWeight: Fonts.MEDIUM,\r\n                color: indigo[700],\r\n                fontSize: 18,\r\n              }}\r\n              component='h3'\r\n            >\r\n              $7280.45\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                mt: 1,\r\n                fontWeight: Fonts.MEDIUM,\r\n                color: green[600],\r\n                fontSize: 14,\r\n              }}\r\n              component='span'\r\n            >\r\n              0.8%\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            ml: {md: 'auto'},\r\n          }}\r\n        >\r\n          <Tabs\r\n            sx={{\r\n              position: 'relative',\r\n              '& .muiTab': {\r\n                fontSize: 14,\r\n                textTransform: 'capitalize',\r\n                padding: 0,\r\n                mx: {xs: 1, sm: 2, xl: 5},\r\n                minWidth: 10,\r\n              },\r\n            }}\r\n            value={graphType}\r\n            onChange={handleChange}\r\n            indicatorColor='primary'\r\n            textColor='primary'\r\n          >\r\n            <Tab\r\n              className='muiTab'\r\n              label={<IntlMessages id='common.yearly' />}\r\n            />\r\n            <Tab\r\n              className='muiTab'\r\n              label={<IntlMessages id='common.monthly' />}\r\n            />\r\n            <Tab\r\n              className='muiTab'\r\n              label={<IntlMessages id='common.weekly' />}\r\n            />\r\n            <Tab\r\n              className='muiTab'\r\n              label={<IntlMessages id='common.today' />}\r\n            />\r\n          </Tabs>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          ml: -3,\r\n        }}\r\n      >\r\n        {graphType === 0 && (\r\n          <BitcoinGraph data={coinData.yearlyData} value={graphType} />\r\n        )}\r\n        {graphType === 1 && (\r\n          <BitcoinGraph data={coinData.monthlyData} value={graphType} />\r\n        )}\r\n        {graphType === 2 && (\r\n          <BitcoinGraph data={coinData.weeklyData} value={graphType} />\r\n        )}\r\n        {graphType === 3 && (\r\n          <BitcoinGraph data={coinData.dailyData} value={graphType} />\r\n        )}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Bitcoin;\r\n\r\nBitcoin.defaultProps = {\r\n  coinGraphData: {\r\n    bitcoin: {\r\n      yearlyData: [],\r\n      monthlyData: [],\r\n      weeklyData: [],\r\n      dailyData: [],\r\n    },\r\n    litecoin: {\r\n      yearlyData: [],\r\n      monthlyData: [],\r\n      weeklyData: [],\r\n      dailyData: [],\r\n    },\r\n    ripple: {\r\n      yearlyData: [],\r\n      monthlyData: [],\r\n      weeklyData: [],\r\n      dailyData: [],\r\n    },\r\n  },\r\n};\r\n\r\nBitcoin.propTypes = {\r\n  coinGraphData: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst TabForm = (props) => {\r\n  const {data} = props;\r\n\r\n  const [inputValue, setValue] = useState(data.value);\r\n  const [inputPrice, setPrice] = useState(data.price);\r\n  const [inputAmount, setAmount] = useState(data.amount);\r\n\r\n  return (\r\n    <Box>\r\n      <form noValidate autoComplete='off'>\r\n        <Box\r\n          sx={{\r\n            mb: 5,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mb: 2,\r\n              color: 'grey.400',\r\n              textAlign: 'right',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.btc' />\r\n          </Box>\r\n          <TextField\r\n            fullWidth\r\n            variant='outlined'\r\n            label={<IntlMessages id='common.volume' />}\r\n            value={inputValue}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            sx={{\r\n              '& .inputText': {\r\n                fontWeight: Fonts.MEDIUM,\r\n                width: '100%',\r\n              },\r\n            }}\r\n            InputProps={{\r\n              className: 'inputText',\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mb: 5,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mb: 2,\r\n              color: 'grey.400',\r\n              textAlign: 'right',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.btc' />\r\n          </Box>\r\n          <TextField\r\n            fullWidth\r\n            variant='outlined'\r\n            label={<IntlMessages id='common.price' />}\r\n            value={inputPrice}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n            sx={{\r\n              '& .inputText': {\r\n                fontWeight: Fonts.MEDIUM,\r\n                width: '100%',\r\n              },\r\n            }}\r\n            InputProps={{\r\n              className: 'inputText',\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mb: 5,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mb: 2,\r\n              color: 'grey.400',\r\n              textAlign: 'right',\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            <IntlMessages id='dashboard.btc' />\r\n          </Box>\r\n          <TextField\r\n            fullWidth\r\n            variant='outlined'\r\n            label={<IntlMessages id='common.amount' />}\r\n            value={inputAmount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            sx={{\r\n              '& .inputText': {\r\n                fontWeight: Fonts.MEDIUM,\r\n                width: '100%',\r\n              },\r\n            }}\r\n            InputProps={{\r\n              className: 'inputText',\r\n            }}\r\n          />\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TabForm;\r\n\r\nTabForm.defaultProps = {\r\n  data: {\r\n    value: '',\r\n    price: '',\r\n    amount: '',\r\n  },\r\n};\r\n\r\nTabForm.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabForm from './TabForm';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst BuySell = (props) => {\r\n  const {buySell} = props;\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  };\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard sxStyle={{height: 1}} footer={messages['dashboard.buyNow']}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor='primary'\r\n        textColor='primary'\r\n        aria-label='simple tabs example'\r\n        sx={{\r\n          position: 'relative',\r\n          mt: -2,\r\n          ml: {xs: -2, xl: -5},\r\n          '& .muiTab': {\r\n            fontSize: 16,\r\n            textTransform: 'capitalize',\r\n            padding: 0,\r\n            mx: {xs: 2, xl: 5},\r\n            minWidth: 10,\r\n            fontWeight: Fonts.BOLD,\r\n          },\r\n        }}\r\n      >\r\n        <Tab\r\n          className='muiTab'\r\n          label={<IntlMessages id='common.buy' />}\r\n          {...a11yProps(0)}\r\n        />\r\n        <Tab\r\n          className='muiTab'\r\n          label={<IntlMessages id='common.sell' />}\r\n          {...a11yProps(1)}\r\n        />\r\n      </Tabs>\r\n      {value === 0 && <TabForm data={buySell.buyData} />}\r\n      {value === 1 && <TabForm data={buySell.sellData} />}\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default BuySell;\r\n\r\nBuySell.defaultProps = {\r\n  buySell: {\r\n    buyData: {\r\n      value: '',\r\n      price: '',\r\n      amount: '',\r\n    },\r\n    sellData: {\r\n      value: '',\r\n      price: '',\r\n      amount: '',\r\n    },\r\n  },\r\n};\r\n\r\nBuySell.propTypes = {\r\n  buySell: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Cell, Pie, PieChart, ResponsiveContainer, Sector} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    value,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor='middle' fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius}\r\n        outerRadius={outerRadius + 4}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill='none'\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke='none' />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill='#333'\r\n      >{`${value}`}</text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst BtcGraph = (props) => {\r\n  const {data} = props;\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const onPieEnter = (data, index) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 290,\r\n        width: '100%',\r\n        position: 'relative',\r\n        '& .btcGraph': {\r\n          width: '100% !important',\r\n          height: '280px !important',\r\n          alignSelf: 'center',\r\n\r\n          '& .recharts-surface': {\r\n            width: '100% !important',\r\n            height: '280px !important',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <ResponsiveContainer height='100%' width='100%'>\r\n        <PieChart className='btcGraph'>\r\n          <Pie\r\n            activeIndex={activeIndex}\r\n            activeShape={renderActiveShape}\r\n            data={data}\r\n            cx='50%'\r\n            cy='50%'\r\n            innerRadius={100}\r\n            outerRadius={115}\r\n            fill='#8884d8'\r\n            paddingAngle={5}\r\n            dataKey='value'\r\n            onMouseEnter={onPieEnter}\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={entry.color} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BtcGraph;\r\n\r\nBtcGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nBtcGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport BtcGraph from './BtcGraph';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst BtcVolumeCurrency = (props) => {\r\n  const {data} = props;\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.btcVolumeByCurency']}\r\n    >\r\n      <BtcGraph data={data} />\r\n      <Box\r\n        sx={{\r\n          pl: {xl: 5},\r\n          pt: 5,\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'space-around',\r\n          mb: -4,\r\n        }}\r\n      >\r\n        {data.map((item) => {\r\n          return (\r\n            <Box\r\n              key={item.id}\r\n              sx={{\r\n                px: 3,\r\n                flex: 1,\r\n                mb: 4,\r\n              }}\r\n            >\r\n              <Box\r\n                component='h3'\r\n                sx={{\r\n                  fontSize: 18,\r\n                  fontWeight: Fonts.SEMI_BOLD,\r\n                  color: item.color,\r\n                }}\r\n              >\r\n                {item.value}\r\n              </Box>\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  color: 'text.secondary',\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                {item.name}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default BtcVolumeCurrency;\r\n\r\nBtcVolumeCurrency.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nBtcVolumeCurrency.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        borderBottom: '0 none',\r\n        '& .tableCell': {\r\n          borderBottom: '0 none',\r\n          fontSize: 13,\r\n          padding: 2,\r\n          fontWeight: Fonts.BOLD,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell className='tableCell'>\r\n        <IntlMessages id='common.num' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='common.name' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='dashboard.marketCap' />\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <IntlMessages id='dashboard.volume24h' />\r\n      </TableCell>\r\n      <TableCell align='right' className='tableCell'>\r\n        <IntlMessages id='dashboard.24h' /> %\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import React from 'react';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport {Box} from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PageviewIcon from '@mui/icons-material/Pageview';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport {green, red} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TableItem = (props) => {\r\n  const {row} = props;\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        borderBottom: '0 none',\r\n        '& .tableCell': {\r\n          borderBottom: '0 none',\r\n          fontSize: 13,\r\n          padding: 2,\r\n          '&:first-of-type': {\r\n            pl: 5,\r\n          },\r\n          '&:last-of-type': {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n      className='item-hover'\r\n    >\r\n      <TableCell scope='row' className='tableCell'>\r\n        {row.id}.\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              mr: 3.5,\r\n            }}\r\n          >\r\n            {row.image ? (\r\n              <Avatar\r\n                sx={{\r\n                  width: {xs: 40, xl: 50},\r\n                  height: {xs: 40, xl: 50},\r\n                  padding: 3,\r\n                  backgroundColor: row.image ? row.color : red[500],\r\n                }}\r\n              >\r\n                <img src={row.image} alt='' />\r\n              </Avatar>\r\n            ) : (\r\n              <Avatar\r\n                sx={{\r\n                  width: {xs: 40, xl: 50},\r\n                  height: {xs: 40, xl: 50},\r\n                  padding: 3,\r\n                  backgroundColor: row.image ? row.color : red[500],\r\n                }}\r\n              >\r\n                <PageviewIcon />\r\n              </Avatar>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mr: 1,\r\n              fontWeight: Fonts.MEDIUM,\r\n            }}\r\n          >\r\n            {row.name}\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              color: 'text.secondary',\r\n              ml: 1,\r\n            }}\r\n          >\r\n            ({row.shortName})\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        ${row.marketCap}\r\n      </TableCell>\r\n      <TableCell align='left' className='tableCell'>\r\n        ${row.volume}\r\n      </TableCell>\r\n      <TableCell\r\n        align='right'\r\n        sx={{\r\n          color: green[600],\r\n        }}\r\n        className='tableCell'\r\n      >\r\n        {row.h} %\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  row: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeading from './TableHeading';\r\nimport TableItem from './TableItem';\r\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\r\n\r\nconst PopularCoinsTable = (props) => {\r\n  const {popularCoins} = props;\r\n\r\n  return (\r\n    <AppTableContainer>\r\n      <Table>\r\n        <TableHead\r\n          sx={{\r\n            borderBottom: '0 none',\r\n          }}\r\n        >\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody>\r\n          {popularCoins.map((row) => (\r\n            <TableItem key={row.name} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </AppTableContainer>\r\n  );\r\n};\r\n\r\nexport default PopularCoinsTable;\r\n\r\nPopularCoinsTable.defaultProps = {\r\n  popularCoins: [],\r\n};\r\n\r\nPopularCoinsTable.propTypes = {\r\n  popularCoins: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PopularCoinsTable from './PopularCoinsTable';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst PopularCoins = (props) => {\r\n  const {popularCoins} = props;\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{px: 0}}\r\n      title={messages['dashboard.popularCoins']}\r\n      action={messages['common.viewAll']}\r\n    >\r\n      <PopularCoinsTable popularCoins={popularCoins} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default PopularCoins;\r\n\r\nPopularCoins.defaultProps = {\r\n  popularCoins: [],\r\n};\r\n\r\nPopularCoins.propTypes = {\r\n  popularCoins: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport List from '@mui/material/List';\r\nimport PropTypes from 'prop-types';\r\nimport {Box} from '@mui/material';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppScrollbar from '../../../../@crema/core/AppScrollbar';\r\nimport AppList from '../../../../@crema/core/AppList';\r\n\r\nconst NewsList = (props) => {\r\n  const {newsData} = props;\r\n\r\n  return (\r\n    <AppScrollbar>\r\n      <List>\r\n        <AppList\r\n          data={newsData}\r\n          renderRow={(news) => {\r\n            return (\r\n              <ListItem\r\n                key={news.id}\r\n                className='item-hover'\r\n                sx={{\r\n                  px: 5,\r\n                  display: 'flex',\r\n                  alignItems: 'flex-start',\r\n                  flexDirection: {xs: 'column', sm: 'row'},\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  sx={{\r\n                    flex: '1 1 0',\r\n                  }}\r\n                  primary={\r\n                    <Box\r\n                      component='span'\r\n                      sx={{\r\n                        mb: 1,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          color: 'text.secondary',\r\n                        }}\r\n                      >\r\n                        {news.created}\r\n                      </Box>\r\n                      <Box\r\n                        sx={{\r\n                          ml: 2,\r\n                          color: 'primary.main',\r\n                        }}\r\n                      >\r\n                        {news.by}\r\n                      </Box>\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Box\r\n                      component='span'\r\n                      sx={{\r\n                        color: 'text.secondary',\r\n                        fontWeight: Fonts.MEDIUM,\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {news.news}\r\n                    </Box>\r\n                  }\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    ml: {sm: 3, xl: 5},\r\n                    width: {xs: '100%', sm: 'auto'},\r\n                    '& .newsImg': {\r\n                      width: {xs: '100%', sm: '10rem'},\r\n                      display: 'block',\r\n                    },\r\n                  }}\r\n                >\r\n                  <img className='newsImg' src={news.image} alt='bitcoin' />\r\n                </Box>\r\n              </ListItem>\r\n            );\r\n          }}\r\n        />\r\n      </List>\r\n    </AppScrollbar>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n\r\nNewsList.defaultProps = {\r\n  newsData: [],\r\n};\r\n\r\nNewsList.propTypes = {\r\n  newsData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport NewsList from './NewsList';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst LatestNews = (props) => {\r\n  const {newsData} = props;\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      contentStyle={{px: 0}}\r\n      title={messages['dashboard.latestNews']}\r\n      action={messages['common.viewAll']}\r\n    >\r\n      <NewsList newsData={newsData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default LatestNews;\r\n\r\nLatestNews.defaultProps = {\r\n  newsData: [],\r\n};\r\n\r\nLatestNews.propTypes = {\r\n  newsData: PropTypes.array,\r\n};\r\n","import {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst MarketGraph = ({marketGraphData}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <ResponsiveContainer height={300} width='100%'>\r\n        <BarChart barSize={8} barGap={3} data={marketGraphData}>\r\n          <XAxis dataKey='month' axisLine={false} tickLine={false} />\r\n          <YAxis hide />\r\n          <CartesianGrid strokeDasharray='3 3' vertical={false} />\r\n          <Bar dataKey='low' stackId='a' fill='#319795' />\r\n          <Bar dataKey='medium' stackId='a' fill='#4C51BF' />\r\n          <Bar dataKey='high' stackId='a' fill='#E53E3E' />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MarketGraph;\r\n\r\nMarketGraph.defaultProps = {\r\n  marketGraphData: [],\r\n};\r\n\r\nMarketGraph.propTypes = {\r\n  marketGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport MarketGraph from './MarketGraph';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {Box} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport {indigo, red, teal} from '@mui/material/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst CryptoMarketActivity = (props) => {\r\n  const {marketGraphData} = props;\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard\r\n      sxStyle={{height: 1}}\r\n      title={messages['dashboard.cryptoMarketActivity']}\r\n      action={messages['common.viewAll']}\r\n      contentStyle={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n      }}\r\n      footer={\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            flexWrap: 'wrap',\r\n            width: '100%',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between',\r\n              mr: {sm: 2},\r\n              mt: {xs: -4, sm: 2, md: 2},\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mr: 3,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  height: {xs: 12, xl: 16},\r\n                  width: {xs: 12, xl: 16},\r\n                  display: 'block',\r\n                  borderRadius: '50%',\r\n                  mr: 2,\r\n                  backgroundColor: teal[600],\r\n                }}\r\n              />\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  mr: 2,\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                <IntlMessages id='common.low' />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                mr: 3,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  height: {xs: 12, xl: 16},\r\n                  width: {xs: 12, xl: 16},\r\n                  display: 'block',\r\n                  borderRadius: '50%',\r\n                  mr: 2,\r\n                  backgroundColor: indigo[700],\r\n                }}\r\n              />\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  mr: 2,\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                <IntlMessages id='common.medium' />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  height: {xs: 12, xl: 16},\r\n                  width: {xs: 12, xl: 16},\r\n                  display: 'block',\r\n                  borderRadius: '50%',\r\n                  mr: 2,\r\n                  backgroundColor: red[600],\r\n                }}\r\n              />\r\n              <Box\r\n                component='span'\r\n                sx={{\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                <IntlMessages id='common.high' />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              mt: {xs: 8, sm: 5, md: 2},\r\n              width: '100%',\r\n              fontSize: 14,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mr: 3,\r\n                color: 'text.secondary',\r\n              }}\r\n            >\r\n              <Box\r\n                component='h3'\r\n                sx={{\r\n                  fontWeight: Fonts.MEDIUM,\r\n                  color: 'text.primary',\r\n                  fontSize: 18,\r\n                }}\r\n              >\r\n                1356\r\n              </Box>\r\n              <Box component='span'>\r\n                <IntlMessages id='dashboard.openDeals' />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                color: 'text.secondary',\r\n              }}\r\n            >\r\n              <Box\r\n                component='h3'\r\n                sx={{\r\n                  fontWeight: Fonts.MEDIUM,\r\n                  color: 'text.primary',\r\n                  fontSize: 18,\r\n                }}\r\n              >\r\n                $5.9B\r\n              </Box>\r\n              <Box component='span'>\r\n                <IntlMessages id='dashboard.dealsVolume' />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      }\r\n    >\r\n      <MarketGraph marketGraphData={marketGraphData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CryptoMarketActivity;\r\n\r\nCryptoMarketActivity.defaultProps = {\r\n  marketGraphData: [],\r\n};\r\n\r\nCryptoMarketActivity.propTypes = {\r\n  marketGraphData: PropTypes.array,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport TotalBalance from './TotalBalance';\r\nimport Coins from './Coins';\r\nimport Bitcoin from './Bitcoin';\r\nimport BuySell from './BuySell';\r\nimport BtcVolumeCurrency from './BtcVolumeCurrency';\r\nimport PopularCoins from './PopularCoins';\r\nimport LatestNews from './LatestNews';\r\nimport CryptoMarketActivity from './CryptoMarketActivity';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetCryptoData} from '../../../redux/actions';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\n\r\nconst Crypto = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetCryptoData());\r\n  }, [dispatch]);\r\n\r\n  const cryptoData = useSelector(({dashboard}) => dashboard.cryptoData);\r\n\r\n  return (\r\n    <>\r\n      {cryptoData ? (\r\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n          <AppGridContainer>\r\n            <Grid item xs={12} md={5}>\r\n              <TotalBalance totalBalanceData={cryptoData.totalBalanceData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={7}>\r\n              <Coins coinsData={cryptoData.coinsData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <Bitcoin coinGraphData={cryptoData.coinGraphData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <BuySell buySell={cryptoData.buySell} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <BtcVolumeCurrency data={cryptoData.btcChartData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <PopularCoins popularCoins={cryptoData.popularCoins} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <LatestNews newsData={cryptoData.newsData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <CryptoMarketActivity\r\n                marketGraphData={cryptoData.marketGraphData}\r\n              />\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </AppAnimate>\r\n      ) : null}\r\n\r\n      <AppInfoView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Crypto;\r\n"],"sourceRoot":""}