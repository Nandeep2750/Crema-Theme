{"version":3,"sources":["@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/AppContainerWrapper.js","@crema/core/AppsContainer/index.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppsContainer/AppsContent/index.js","@crema/core/AppList/ListEmptyResult.js","../node_modules/@mui/icons-material/EditOutlined.js","@crema/core/AppsStarredIcon/index.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppDialog/index.js","../node_modules/@mui/icons-material/PhoneOutlined.js","../node_modules/@mui/icons-material/List.js","@crema/core/AppsSideBarFolderItem/index.js","@crema/core/AppSkeleton/SidebarListSkeleton.js","../node_modules/@mui/icons-material/Apps.js","../node_modules/@mui/icons-material/Language.js","../node_modules/@mui/icons-material/Business.js","../node_modules/@mui/icons-material/CakeOutlined.js","../node_modules/@mui/icons-material/HomeOutlined.js","pages/apps/Contact/ContactListing/ContactHeader/CheckBox.js","pages/apps/Contact/ContactListing/ContactHeader/ContactCheckedActions.js","pages/apps/Contact/ContactListing/ContactHeader/ViewSelectButtons.js","pages/apps/Contact/ContactListing/ContactHeader/index.js","@crema/core/AppFormComponents/AppDateFiled.js","pages/apps/Contact/CreateContact/AddContactForm.js","pages/apps/Contact/CreateContact/index.js","pages/apps/Contact/ContactListing/ContactView/ItemMenu/index.js","pages/apps/Contact/ContactListing/ContactView/ContactListItem/index.js","pages/apps/Contact/ContactListing/ContactView/ContactGridItem/index.js","@crema/core/AppSkeleton/ContactListSkeleton.js","pages/apps/Contact/ContactListing/ContactView/ContactListItem/ContactListItemMobile.js","pages/apps/Contact/ContactListing/ContactView/index.js","pages/apps/Contact/ContactDetail/ContactActions.js","pages/apps/Contact/ContactDetail/PersonalDetails.js","pages/apps/Contact/ContactDetail/OtherDetails.js","pages/apps/Contact/ContactDetail/index.js","pages/apps/Contact/ContactListing/index.js","pages/apps/Contact/ContactSideBar/LabelItem.js","pages/apps/Contact/ContactSideBar/index.js","pages/apps/Contact/index.js"],"names":["AppSidebar","props","isAppDrawerOpen","sidebarContent","dispatch","useDispatch","Slide","direction","in","mountOnEnter","unmountOnExit","Box","sx","height","width","lg","Hidden","lgUp","Drawer","open","onClose","onToggleAppDrawer","position","drawerClasses","paper","zIndex","lgDown","Card","style","getMainHeaderHeight","navStyle","screenSize","NavStyle","BIT_BUCKET","AppContainerWrapper","children","footer","rest","display","xs","sm","md","xl","AppsContainer","useSelector","common","useLayoutContext","title","fullView","flex","flexDirection","overflow","margin","padding","sxStyle","marginTop","alignItems","mb","mt","IconButton","edge","marginRight","theme","spacing","color","onClick","size","Zoom","transitionDelay","component","variant","fontSize","fontWeight","Fonts","SEMI_BOLD","pl","cardStyle","AppInfoView","defaultProps","AppsHeader","borderBottom","palette","divider","className","AppsContentContainer","styled","SimpleBarReact","paddingTop","paddingBottom","AppsContent","isDetailView","ListEmptyResult","loader","placeholder","loading","actionTitle","content","Fragment","minHeight","p","justifyContent","borderColor","borderRadius","textAlign","ml","border","text","secondary","MEDIUM","minWidth","id","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AppsStarredIcon","item","onChange","warning","main","icon","checkedIcon","checked","isStarred","event","target","AppsFooter","px","py","borderTop","Transition","React","forwardRef","ref","AppDialog","maxWidth","hideClose","dividers","fullHeight","overflowY","paddingLeft","paddingRight","TransitionComponent","right","top","maxHeight","type","AppsSideBarFolderList","ListItem","marginBottom","breakpoints","up","backgroundColor","alpha","primary","getIconByName","name","AppsSideBarFolderItem","path","button","to","AppNavLink","activeClassName","mr","alias","my","SidebarItem","viewBox","x","y","rx","ry","SidebarListSkeleton","CheckBox","checkedContacts","setCheckedContacts","contactList","contactApp","Checkbox","disabled","indeterminate","length","contactIds","map","contact","ContactCheckedActions","onSelectContactsForDelete","pathname","useLocation","useState","isLabelOpen","onOpenLabel","onLabelClose","onSelectLabel","split","labelType","onUpdateContactLabel","AppTooltip","IntlMessages","cursor","smDown","currentTarget","Menu","anchorEl","keepMounted","elevation","Boolean","MenuItem","IconBtn","ViewSelectButtons","pageView","onChangePageView","clsx","active","ContactHeader","filterText","onSetFilterText","page","onPageChange","totalContacts","messages","useIntl","AppSearchBar","iconPosition","overlap","AppsPagination","count","AppDateFiled","DatePicker","inputVariant","format","mask","renderInput","params","TextField","HeaderWrapper","marginLeft","outline","AvatarViewWrapper","bottom","background","contrastText","transition","AddContactForm","values","userImage","setUserImage","setFieldValue","labelList","useDropzone","accept","onDrop","acceptedFiles","URL","createObjectURL","getRootProps","getInputProps","noValidate","autoComplete","htmlFor","Avatar","src","pb","mx","AppTextField","label","AppGridContainer","Grid","autoOk","disableFuture","birthday","FormControl","InputLabel","labelId","as","Select","multiline","rows","Button","validationSchema","yup","required","email","CreateContact","isAddContact","handleAddContactClose","selectContact","onUpdateContact","image","useEffect","validateOnChange","initialValues","website","company","address","facebookId","twitterId","notes","onSubmit","data","setSubmitting","resetForm","newContact","isFrequent","onUpdateSelectedContact","Math","floor","random","onCreateContact","ContactActionHoverWrapper","transform","opacity","visibility","ItemMenu","onChangeStarred","onOpenEditContact","e","stopPropagation","ContactListItemWrapper","boxShadow","black","ContactListItem","onChangeCheckedContacts","onViewContactDetail","dense","rootCheck","includes","blue","toUpperCase","textOverflow","whiteSpace","find","onGetLabelColor","GridCard","cardRadius","grey","ContactGridItem","pt","ContactItem","cx","cy","r","ContactListSkeleton","ContactListItemMobile","ContactView","list","handleAddContactOpen","AppList","animation","ListEmptyComponent","renderRow","smUp","AppGrid","responsive","ContactActions","onDeleteContact","PersonalDetails","OtherDetails","ContactDetail","isShowDetail","selectedContact","onShowDetail","setContact","updatedContact","pr","DialogActions","ContactListing","setPage","setPageView","isDeleteDialogOpen","setDeleteDialogOpen","toDeleteContacts","setToDeleteContacts","onSetIsAddContact","setSelectedContact","onGetContactList","filter","view","concat","contactId","status","selectedIdList","onUpdateStarredStatus","AppConfirmDialog","onDeny","onConfirm","onDeleteContacts","dialogTitle","ContactSidebarListItemWrapper","LabelItem","ListItemText","SideBarContent","folderList","startIcon","AppScrollbar","Contact","onGetFolderList","onGetLabelList"],"mappings":"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","file":"static/js/19.ab1fe67e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Card from '@mui/material/Card';\r\nimport {Box, drawerClasses, Slide} from '@mui/material';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {onToggleAppDrawer} from '../../../redux/actions';\r\n\r\nconst AppSidebar = (props) => {\r\n  const {isAppDrawerOpen, sidebarContent} = props;\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Slide direction='right' in mountOnEnter unmountOnExit>\r\n      <Box\r\n        sx={{\r\n          height: '100%',\r\n          width: {\r\n            lg: 280,\r\n          },\r\n        }}\r\n      >\r\n        <Hidden lgUp>\r\n          <Drawer\r\n            open={isAppDrawerOpen}\r\n            onClose={() => dispatch(onToggleAppDrawer())}\r\n            sx={{\r\n              position: 'absolute',\r\n              [`& .${drawerClasses.paper}`]: {\r\n                width: 280,\r\n                '& .listItem': {\r\n                  zIndex: 1305,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {sidebarContent}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden lgDown>\r\n          <Card style={{height: '100%'}}>{sidebarContent}</Card>\r\n        </Hidden>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\n\r\nAppSidebar.propTypes = {\r\n  isAppDrawerOpen: PropTypes.bool,\r\n  footer: PropTypes.bool,\r\n  navStyle: PropTypes.string,\r\n  fullView: PropTypes.bool,\r\n  sidebarContent: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport {NavStyle} from '../../../shared/constants/AppEnums';\r\n\r\nconst getMainHeaderHeight = (navStyle, screenSize) => {\r\n  if (navStyle === NavStyle.BIT_BUCKET) return screenSize >= 1200 ? 0 : 70; // Header Height\r\n  return screenSize >= 600 ? 70 : 56;\r\n};\r\n\r\nconst AppContainerWrapper = ({children, navStyle, footer, ...rest}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        height: {\r\n          xs: `calc(100vh - ${\r\n            47 + // AppsHeader Height // apps title block height\r\n            40 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 0) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          sm: `calc(100vh - ${\r\n            47 + // AppsHeader Height\r\n            40 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 600) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          md: `calc(100vh - ${\r\n            47 + // AppsHeader Height\r\n            60 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 900) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          lg: `calc(100vh - ${\r\n            40 + // AppsHeader Height\r\n            60 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 1200) +\r\n            (footer ? 47 : 0)\r\n          }px) !important`,\r\n          xl: `calc(100vh - ${\r\n            40 + // AppsHeader Height\r\n            100 + //Container Padding\r\n            getMainHeaderHeight(navStyle, 1536) +\r\n            (footer ? 57 : 0)\r\n          }px) !important`,\r\n        },\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppContainerWrapper;\r\n\r\nAppContainerWrapper.propTypes = {\r\n  children: PropsTypes.node,\r\n  navStyle: PropsTypes.string,\r\n  footer: PropsTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport {Box, Slide, Zoom} from '@mui/material';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@mui/material/Card';\r\n\r\nimport {onToggleAppDrawer} from '../../../redux/actions';\r\nimport AppSidebar from './AppSidebar';\r\nimport {useLayoutContext} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AppContainerWrapper from './AppContainerWrapper';\r\n\r\nconst AppsContainer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isAppDrawerOpen = useSelector(({common}) => common.isAppDrawerOpen);\r\n  const {footer} = useLayoutContext();\r\n  const {navStyle} = useLayoutContext();\r\n  const {title, sidebarContent, fullView, children} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n        margin: -4,\r\n        padding: 4,\r\n        ...props.sxStyle,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          marginTop: fullView ? 0 : -4,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          mb: {\r\n            xs: fullView ? 4 : 2,\r\n            lg: 4,\r\n          },\r\n          mt: {\r\n            xs: fullView ? 0 : -4,\r\n            lg: 0,\r\n          },\r\n        }}\r\n      >\r\n        {fullView ? null : (\r\n          <Hidden lgUp>\r\n            <IconButton\r\n              edge='start'\r\n              sx={{\r\n                marginRight: (theme) => theme.spacing(2),\r\n              }}\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={() => dispatch(onToggleAppDrawer())}\r\n              size='large'\r\n            >\r\n              <MenuIcon\r\n                sx={{\r\n                  width: 35,\r\n                  height: 35,\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Hidden>\r\n        )}\r\n        <Zoom in style={{transitionDelay: '300ms'}}>\r\n          <Box\r\n            component='h2'\r\n            variant='h2'\r\n            sx={{\r\n              fontSize: 16,\r\n              color: 'text.primary',\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            {title}\r\n          </Box>\r\n        </Zoom>\r\n      </Box>\r\n\r\n      <AppContainerWrapper navStyle={navStyle} footer={footer}>\r\n        {sidebarContent ? (\r\n          <AppSidebar\r\n            isAppDrawerOpen={isAppDrawerOpen}\r\n            footer={footer}\r\n            fullView={fullView}\r\n            navStyle={navStyle}\r\n            sidebarContent={sidebarContent}\r\n          />\r\n        ) : null}\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: {\r\n              xs: '100%',\r\n              lg: `calc(100% - ${fullView ? 0 : 280}px)`,\r\n            },\r\n            pl: {\r\n              lg: props.fullView ? 0 : 8,\r\n            },\r\n          }}\r\n        >\r\n          <Slide direction='left' in mountOnEnter unmountOnExit>\r\n            <Card\r\n              style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                position: 'relative',\r\n                ...props.cardStyle,\r\n              }}\r\n            >\r\n              {children}\r\n            </Card>\r\n          </Slide>\r\n          <AppInfoView />\r\n        </Box>\r\n      </AppContainerWrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsContainer;\r\n\r\nAppsContainer.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nAppsContainer.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  sidebarContent: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  sxStyle: PropTypes.object,\r\n  cardStyle: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Box} from '@mui/material';\r\nconst AppsHeader = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 60,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n        padding: {\r\n          xs: '4px 10px',\r\n          xl: '12px 10px',\r\n        },\r\n      }}\r\n      className='apps-header'\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsHeader;\r\n\r\nAppsHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nAppsHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {styled} from '@mui/material/styles';\r\nimport SimpleBarReact from 'simplebar-react';\r\n\r\nconst AppsContentContainer = styled(SimpleBarReact)(() => {\r\n  return {\r\n    width: '100%',\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& .simplebar-content': {\r\n      height: '100%',\r\n    },\r\n  };\r\n});\r\n\r\nconst AppsContent = ({isDetailView, fullView, children, ...rest}) => {\r\n  return (\r\n    <AppsContentContainer\r\n      {...rest}\r\n      sx={{\r\n        height: {\r\n          xs: `calc(100% - ${isDetailView ? 60 : 129}px)`,\r\n          sm: `calc(100% - ${fullView ? 0 : 60}px)`,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </AppsContentContainer>\r\n  );\r\n};\r\n\r\nexport default AppsContent;\r\n\r\nAppsContent.propTypes = {\r\n  children: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  isDetailView: PropTypes.bool,\r\n};\r\n\r\nAppsContent.defaultProps = {isDetailView: false};\r\n","import React from 'react';\r\nimport {Box, Button, CircularProgress, Typography} from '@mui/material';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst ListEmptyResult = ({\r\n  loader,\r\n  placeholder,\r\n  loading,\r\n  title,\r\n  actionTitle,\r\n  content,\r\n  onClick,\r\n}) => {\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <Box\r\n            sx={{\r\n              flexDirection: 'row',\r\n              minHeight: '450px',\r\n              height: '100%',\r\n              flex: 1,\r\n              display: 'flex',\r\n              p: 5,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              borderColor: 'transparent',\r\n              borderRadius: '4px',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <CircularProgress size={16} />\r\n            <Box component='span' sx={{ml: 2}}>\r\n              Loading...\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          flexDirection: 'column',\r\n          minHeight: '450px',\r\n          height: '100%',\r\n          flex: 1,\r\n          display: 'flex',\r\n          p: 5,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          border: 1,\r\n          borderColor: 'transparent',\r\n          borderRadius: '4px',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        {title ? (\r\n          <Typography\r\n            sx={{\r\n              fontSize: 14,\r\n              color: (theme) => theme.palette.text.secondary,\r\n              fontWeight: Fonts.MEDIUM,\r\n              mb: 2,\r\n            }}\r\n            component='h4'\r\n            variant='h4'\r\n          >\r\n            {title}\r\n          </Typography>\r\n        ) : null}\r\n        <Typography\r\n          sx={{\r\n            fontSize: 14,\r\n            color: (theme) => theme.palette.text.secondary,\r\n          }}\r\n        >\r\n          {content}\r\n        </Typography>\r\n\r\n        {actionTitle ? (\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            style={{mt: 7.5, height: 45, minWidth: 150}}\r\n            onClick={onClick}\r\n          >\r\n            {actionTitle}\r\n          </Button>\r\n        ) : null}\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n\r\nListEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n};\r\n\r\nListEmptyResult.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  actionTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  onClick: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  loader: PropTypes.bool,\r\n  placeholder: PropTypes.node,\r\n  content: PropTypes.string,\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14.06 9.02.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n}), 'EditOutlined');\n\nexports.default = _default;","import React from 'react';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport {Checkbox} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppsStarredIcon = ({item, onChange}) => {\r\n  return (\r\n    <Checkbox\r\n      sx={{\r\n        color: (theme) => theme.palette.warning.main,\r\n        '&.Mui-checked': {\r\n          color: (theme) => theme.palette.warning.main,\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: 20,\r\n        },\r\n      }}\r\n      icon={<StarBorderIcon />}\r\n      checkedIcon={<StarIcon />}\r\n      checked={item.isStarred}\r\n      onChange={(event) => onChange(event.target.checked, item)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n\r\nAppsStarredIcon.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Box} from '@mui/material';\r\n\r\nconst AppsFooter = (props) => {\r\n  const {children} = props;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        px: 5,\r\n        py: 2,\r\n        borderTop: (theme) => `1px solid ${theme.palette.divider}`,\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppsFooter;\r\n\r\nAppsFooter.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport {Dialog, DialogTitle, Slide} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nconst AppDialog = ({\r\n  sxStyle,\r\n  maxWidth,\r\n  hideClose,\r\n  open,\r\n  onClose,\r\n  children,\r\n  dividers,\r\n  title,\r\n  actionTitle,\r\n  fullHeight,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      sx={{\r\n        '& .MuiDialog-paper': {\r\n          width: '100%',\r\n        },\r\n        '& .MuiDialogContent-root': {\r\n          overflowY: 'hidden',\r\n          paddingLeft: 0,\r\n          paddingRight: 0,\r\n        },\r\n        ...sxStyle,\r\n      }}\r\n      maxWidth={maxWidth}\r\n      TransitionComponent={Transition}\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          fontSize: 14,\r\n          fontWeight: Fonts.MEDIUM,\r\n        }}\r\n        id='app-dialog-title'\r\n      >\r\n        {title}\r\n        {hideClose ? null : (\r\n          <IconButton\r\n            aria-label='close'\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 4,\r\n              top: 4,\r\n              color: 'grey.500',\r\n            }}\r\n            onClick={onClose}\r\n            size='large'\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent dividers={dividers}>\r\n        <AppScrollbar\r\n          sx={{\r\n            paddingTop: 1,\r\n            height: fullHeight ? '70vh' : '100%',\r\n            minHeight: '300px',\r\n            maxHeight: '400px',\r\n            paddingRight: 6,\r\n            paddingLeft: 6,\r\n          }}\r\n        >\r\n          {children}\r\n        </AppScrollbar>\r\n      </DialogContent>\r\n      {actionTitle ? (\r\n        <DialogActions>\r\n          <Button color='primary' variant='contained' type='submit'>\r\n            {actionTitle}\r\n          </Button>\r\n        </DialogActions>\r\n      ) : null}\r\n    </Dialog>\r\n  );\r\n};\r\nexport default AppDialog;\r\n\r\nAppDialog.propTypes = {\r\n  maxWidth: PropTypes.string,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.node,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  dividers: PropTypes.bool,\r\n  hideClose: PropTypes.bool,\r\n  fullHeight: PropTypes.bool,\r\n  actionTitle: PropTypes.string,\r\n  sxStyle: PropTypes.object,\r\n};\r\nAppDialog.defaultProps = {\r\n  dividers: false,\r\n  fullHeight: false,\r\n  maxWidth: 'sm',\r\n  hideClose: false,\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.54 5c.06.89.21 1.76.45 2.59l-1.2 1.2c-.41-1.2-.67-2.47-.76-3.79h1.51m9.86 12.02c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19M7.5 3H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1-1.24 0-2.45-.2-3.57-.57-.1-.04-.21-.05-.31-.05-.26 0-.51.1-.71.29l-2.2 2.2c-2.83-1.45-5.15-3.76-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1z\"\n}), 'PhoneOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"\n}), 'List');\n\nexports.default = _default;","import React from 'react';\r\nimport {AppNavLink} from '../../index';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';\r\nimport DraftsOutlinedIcon from '@mui/icons-material/DraftsOutlined';\r\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport ArchiveOutlinedIcon from '@mui/icons-material/ArchiveOutlined';\r\nimport GroupOutlinedIcon from '@mui/icons-material/GroupOutlined';\r\nimport AutorenewOutlinedIcon from '@mui/icons-material/AutorenewOutlined';\r\nimport ScheduleOutlinedIcon from '@mui/icons-material/ScheduleOutlined';\r\nimport TodayOutlinedIcon from '@mui/icons-material/TodayOutlined';\r\nimport CheckCircleOutlinedIcon from '@mui/icons-material/CheckCircleOutlined';\r\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport LabelImportantIcon from '@mui/icons-material/LabelImportant';\r\nimport {alpha, styled} from '@mui/material/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst AppsSideBarFolderList = styled(ListItem)(({theme}) => {\r\n  return {\r\n    padding: '7px 16px',\r\n    borderRadius: '0 30px 30px 0',\r\n    marginBottom: 1,\r\n    marginTop: 1,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n\r\n    '& svg': {\r\n      fontSize: '18px',\r\n    },\r\n\r\n    '&:hover,&:focus,&.active': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      color: theme.palette.primary.main,\r\n\r\n      '& .material-icons, & svg, & .MuiTypography-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n\r\n      '& .material-icons, & .MuiTypography-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      '& .list-item-text': {\r\n        '& .MuiTypography-body1': {\r\n          fontWeight: Fonts.SEMI_BOLD,\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst getIconByName = (name) => {\r\n  switch (name) {\r\n    case 'inbox':\r\n      return <EmailOutlinedIcon />;\r\n    case 'sent':\r\n      return <SendOutlinedIcon />;\r\n    case 'draft':\r\n      return <DraftsOutlinedIcon />;\r\n    case 'starred':\r\n      return <StarBorderOutlinedIcon />;\r\n    case 'spam':\r\n      return <InfoOutlinedIcon />;\r\n    case 'trash':\r\n      return <DeleteOutlineIcon />;\r\n    case 'archive':\r\n      return <ArchiveOutlinedIcon />;\r\n    case 'all':\r\n      return <GroupOutlinedIcon />;\r\n    case 'frequent':\r\n      return <AutorenewOutlinedIcon />;\r\n    case 'priority':\r\n      return <LabelImportantIcon />;\r\n    case 'scheduled':\r\n      return <ScheduleOutlinedIcon />;\r\n    case 'today':\r\n      return <TodayOutlinedIcon />;\r\n    case 'completed':\r\n      return <CheckCircleOutlinedIcon />;\r\n    case 'deleted':\r\n      return <DeleteOutlineIcon />;\r\n    default:\r\n      return <PersonOutlinedIcon />;\r\n  }\r\n};\r\n\r\nconst AppsSideBarFolderItem = ({item, path}) => {\r\n  return (\r\n    <AppsSideBarFolderList\r\n      button\r\n      key={item.id}\r\n      to={path}\r\n      component={AppNavLink}\r\n      activeClassName='active'\r\n    >\r\n      <ListItemIcon\r\n        sx={{\r\n          minWidth: 10,\r\n          mr: 3.5,\r\n          '& .material-icons, & svg': {\r\n            fontSize: 22,\r\n            color: (theme) => theme.palette.text.secondary,\r\n          },\r\n        }}\r\n      >\r\n        {getIconByName(item.alias)}\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={item.name}\r\n        sx={{\r\n          my: 0,\r\n          '& .MuiTypography-body1': {\r\n            fontSize: 14,\r\n            mb: 0.5,\r\n          },\r\n        }}\r\n        className='list-item-text'\r\n      />\r\n    </AppsSideBarFolderList>\r\n  );\r\n};\r\n\r\nexport default AppsSideBarFolderItem;\r\nAppsSideBarFolderItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst SidebarItem = () => (\r\n  <ContentLoader viewBox='0 0 200 45'>\r\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\r\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\r\n  </ContentLoader>\r\n);\r\nconst SidebarListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SidebarListSkeleton;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\"\n}), 'Apps');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z\"\n}), 'Language');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\"\n}), 'Business');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6c1.11 0 2-.9 2-2 0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2zm6 3h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v9c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-9c0-1.66-1.34-3-3-3zm1 11H5v-3c.9-.01 1.76-.37 2.4-1.01l1.09-1.07 1.07 1.07c1.31 1.31 3.59 1.3 4.89 0l1.08-1.07 1.07 1.07c.64.64 1.5 1 2.4 1.01v3zm0-4.5c-.51-.01-.99-.2-1.35-.57l-2.13-2.13-2.14 2.13c-.74.74-2.03.74-2.77 0L8.48 12.8l-2.14 2.13c-.35.36-.83.56-1.34.57V12c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v3.5z\"\n}), 'CakeOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 5.69 5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3 2 12h3v8h6v-6h2v6h6v-8h3L12 3z\"\n}), 'HomeOutlined');\n\nexports.default = _default;","import React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst CheckBox = ({checkedContacts, setCheckedContacts}) => {\r\n  const contactList = useSelector(({contactApp}) => contactApp.contactList);\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const contactIds = contactList.map((contact) => contact.id);\r\n      setCheckedContacts(contactIds);\r\n    } else {\r\n      setCheckedContacts([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <Checkbox\r\n        sx={{\r\n          color: (theme) => theme.palette.text.disabled,\r\n        }}\r\n        color='primary'\r\n        indeterminate={\r\n          checkedContacts.length > 0 &&\r\n          checkedContacts.length < contactList.length\r\n        }\r\n        checked={\r\n          contactList.length > 0 &&\r\n          checkedContacts.length === contactList.length\r\n        }\r\n        onChange={onHandleMasterCheckbox}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n\r\nCheckBox.propTypes = {\r\n  checkedContacts: PropTypes.array.isRequired,\r\n  setCheckedContacts: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport {onUpdateContactLabel} from '../../../../../redux/actions/ContactApp';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useLocation} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport {Hidden} from '@mui/material';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\n\r\nconst ContactCheckedActions = (props) => {\r\n  const {checkedContacts, setCheckedContacts, onSelectContactsForDelete} =\r\n    props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const [isLabelOpen, onOpenLabel] = React.useState(null);\r\n\r\n  const onLabelOpen = (event) => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onSelectLabel = (event) => {\r\n    const path = pathname.split('/');\r\n    const labelType = event.target.value;\r\n    dispatch(\r\n      onUpdateContactLabel(checkedContacts, labelType, path[path.length - 2]),\r\n    );\r\n    setCheckedContacts([]);\r\n    onLabelClose();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component='span'\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        mr: {xs: 2, xl: 3},\r\n      }}\r\n    >\r\n      <AppTooltip title={<IntlMessages id='common.delete' />}>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n          }}\r\n          size='large'\r\n        >\r\n          <DeleteOutlinedIcon\r\n            sx={{\r\n              cursor: 'pointer',\r\n              display: 'block',\r\n            }}\r\n            onClick={() => onSelectContactsForDelete(checkedContacts)}\r\n          />\r\n        </IconButton>\r\n      </AppTooltip>\r\n\r\n      <Hidden smDown>\r\n        <AppTooltip title={<IntlMessages id='common.label' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n            }}\r\n            size='large'\r\n          >\r\n            <LabelOutlinedIcon\r\n              sx={{\r\n                cursor: 'pointer',\r\n                display: 'block',\r\n              }}\r\n              value={1}\r\n              onClick={onLabelOpen}\r\n            />\r\n          </IconButton>\r\n        </AppTooltip>\r\n      </Hidden>\r\n\r\n      <Menu\r\n        anchorEl={isLabelOpen}\r\n        keepMounted\r\n        elevation={0}\r\n        open={Boolean(isLabelOpen)}\r\n        onClose={onLabelClose}\r\n      >\r\n        <MenuItem value={311} onClick={onSelectLabel}>\r\n          <IntlMessages id='common.crema' />\r\n        </MenuItem>\r\n        <MenuItem value={312} onClick={onSelectLabel}>\r\n          <IntlMessages id='common.personal' />\r\n        </MenuItem>\r\n        <MenuItem value={313} onClick={onSelectLabel}>\r\n          <IntlMessages id='common.work' />\r\n        </MenuItem>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactCheckedActions;\r\n\r\nContactCheckedActions.propTypes = {\r\n  checkedContacts: PropTypes.array.isRequired,\r\n  setCheckedContacts: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\nimport clsx from 'clsx';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {styled} from '@mui/material/styles';\r\nimport {alpha} from '@mui/material';\r\n\r\nconst IconBtn = styled(IconButton)(({theme}) => {\r\n  return {\r\n    color: theme.palette.text.disabled,\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n    padding: 8,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nconst ViewSelectButtons = ({pageView, onChangePageView}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        ml: 'auto',\r\n      }}\r\n    >\r\n      <Box>\r\n        <IconBtn\r\n          className={clsx({\r\n            active: pageView === 'grid',\r\n          })}\r\n          onClick={() => onChangePageView('grid')}\r\n          size='large'\r\n        >\r\n          <AppsIcon />\r\n        </IconBtn>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          ml: 3.5,\r\n        }}\r\n      >\r\n        <IconBtn\r\n          className={clsx({\r\n            active: pageView === 'list',\r\n          })}\r\n          onClick={() => onChangePageView('list')}\r\n          size='large'\r\n        >\r\n          <ListIcon />\r\n        </IconBtn>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ViewSelectButtons;\r\n\r\nViewSelectButtons.propTypes = {\r\n  pageView: PropTypes.string.isRequired,\r\n  onChangePageView: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport AppSearchBar from '@crema/core/AppSearchBar';\r\nimport {Hidden} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport CheckBox from './CheckBox';\r\nimport ContactCheckedActions from './ContactCheckedActions';\r\nimport ViewSelectButtons from './ViewSelectButtons';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\n\r\nconst ContactHeader = (props) => {\r\n  const {\r\n    checkedContacts,\r\n    setCheckedContacts,\r\n    filterText,\r\n    onSetFilterText,\r\n    onChangePageView,\r\n    onSelectContactsForDelete,\r\n    page,\r\n    onPageChange,\r\n    pageView,\r\n  } = props;\r\n\r\n  const contactList = useSelector(({contactApp}) => contactApp.contactList);\r\n\r\n  const totalContacts = useSelector(({contactApp}) => contactApp.totalContacts);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <CheckBox\r\n          checkedContacts={checkedContacts}\r\n          setCheckedContacts={setCheckedContacts}\r\n        />\r\n\r\n        <AppSearchBar\r\n          iconPosition='right'\r\n          overlap={false}\r\n          value={filterText}\r\n          onChange={(event) => onSetFilterText(event.target.value)}\r\n          placeholder={messages['common.searchHere']}\r\n        />\r\n        {checkedContacts.length > 0 ? (\r\n          <ContactCheckedActions\r\n            onSelectContactsForDelete={onSelectContactsForDelete}\r\n            checkedContacts={checkedContacts}\r\n            setCheckedContacts={setCheckedContacts}\r\n          />\r\n        ) : null}\r\n\r\n        <ViewSelectButtons\r\n          pageView={pageView}\r\n          onChangePageView={onChangePageView}\r\n        />\r\n      </Box>\r\n      <Hidden smDown>\r\n        {contactList.length > 0 ? (\r\n          <AppsPagination\r\n            sx={{ml: 2}}\r\n            count={totalContacts}\r\n            page={page}\r\n            onPageChange={onPageChange}\r\n          />\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactHeader;\r\n\r\nContactHeader.defaultProps = {\r\n  checkedContacts: [],\r\n  filterText: '',\r\n  page: 0,\r\n};\r\n\r\nContactHeader.propTypes = {\r\n  checkedContacts: PropTypes.array,\r\n  setCheckedContacts: PropTypes.func,\r\n  filterText: PropTypes.string,\r\n  onSetFilterText: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n  pageView: PropTypes.string.isRequired,\r\n  onChangePageView: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {Field} from 'formik';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppDateFiled = (props) => {\r\n  return (\r\n    <Field\r\n      component={DatePicker}\r\n      variant='outlined'\r\n      inputVariant='outlined'\r\n      format='YYYY-MM-DD'\r\n      mask='____-__-__'\r\n      {...props}\r\n      renderInput={(params) => (\r\n        <TextField className={props.className} {...params} />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppDateFiled;\r\n\r\nAppDateFiled.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport {alpha, Box, Button, Select} from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {Field, Form} from 'formik';\r\nimport {useSelector} from 'react-redux';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppTextField from '@crema/core/AppFormComponents/AppTextField';\r\nimport AppDateFiled from '@crema/core/AppFormComponents/AppDateFiled';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst HeaderWrapper = styled('div')(({theme}) => {\r\n  return {\r\n    padding: 20,\r\n    marginLeft: -24,\r\n    marginRight: -24,\r\n    marginTop: -20,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    '& .dropzone': {\r\n      outline: 0,\r\n      '&:hover .edit-icon, &:focus .edit-icon': {\r\n        display: 'flex',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst AvatarViewWrapper = styled('div')(({theme}) => {\r\n  return {\r\n    position: 'relative',\r\n    cursor: 'pointer',\r\n    '& .edit-icon': {\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      right: 0,\r\n      zIndex: 1,\r\n      border: `solid 2px ${theme.palette.background.paper}`,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.7),\r\n      color: theme.palette.primary.contrastText,\r\n      borderRadius: '50%',\r\n      width: 26,\r\n      height: 26,\r\n      display: 'none',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      transition: 'all 0.4s ease',\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 16,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst AddContactForm = (props) => {\r\n  const {values, userImage, setUserImage, setFieldValue} = props;\r\n  const labelList = useSelector(({contactApp}) => contactApp.labelList);\r\n\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles) => {\r\n      setUserImage(URL.createObjectURL(acceptedFiles[0]));\r\n    },\r\n  });\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Form noValidate autoComplete='off'>\r\n      <HeaderWrapper>\r\n        <div {...getRootProps({className: 'dropzone'})}>\r\n          <input {...getInputProps()} />\r\n          <label htmlFor='icon-button-file'>\r\n            <AvatarViewWrapper>\r\n              <Avatar\r\n                sx={{\r\n                  width: 60,\r\n                  height: 60,\r\n                }}\r\n                src={userImage ? userImage : ''}\r\n              />\r\n              <Box className='edit-icon'>\r\n                <EditIcon />\r\n              </Box>\r\n            </AvatarViewWrapper>\r\n          </label>\r\n        </div>\r\n        {values.name ? (\r\n          <Box component='h4' fontWeight={Fonts.SEMI_BOLD} mt={2}>\r\n            {values.name}\r\n          </Box>\r\n        ) : null}\r\n      </HeaderWrapper>\r\n\r\n      <Box\r\n        sx={{\r\n          padding: 5,\r\n          ml: -6,\r\n          mr: -6,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            pb: 5,\r\n            px: 5,\r\n            mx: -5,\r\n            mb: 5,\r\n            borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n          }}\r\n        >\r\n          <Box\r\n            component='h6'\r\n            sx={{\r\n              mb: {xs: 4, xl: 6},\r\n              fontSize: 14,\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            <IntlMessages id='contactApp.personalDetails' />\r\n          </Box>\r\n\r\n          <div>\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n                mb: {xs: 4, xl: 6},\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.name' />}\r\n              name='name'\r\n            />\r\n\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n                mb: {xs: 4, xl: 6},\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.email' />}\r\n              name='email'\r\n            />\r\n\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n                mb: {xs: 4, xl: 6},\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.phone' />}\r\n              name='contact'\r\n            />\r\n            <AppGridContainer spacing={5}>\r\n              <Grid item xs={12} md={6}>\r\n                <AppDateFiled\r\n                  autoOk\r\n                  disableFuture\r\n                  sx={{\r\n                    width: '100%',\r\n                    mb: {xs: 4, xl: 6},\r\n                  }}\r\n                  format='MM/DD/YYYY'\r\n                  variant='outlined'\r\n                  inputVariant='outlined'\r\n                  label={<IntlMessages id='common.birthday' />}\r\n                  name='birthday'\r\n                  value={values.birthday}\r\n                  onChange={(value) => setFieldValue('birthday', value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl\r\n                  variant='outlined'\r\n                  sx={{\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                  <InputLabel id='label-select-outlined-label'>\r\n                    <IntlMessages id='common.selectLabel' />\r\n                  </InputLabel>\r\n                  <Field\r\n                    name='label'\r\n                    label={<IntlMessages id='common.selectLabel' />}\r\n                    labelId='label-select-outlined-label'\r\n                    as={Select}\r\n                    sx={{\r\n                      width: '100%',\r\n                      mb: {xs: 4, xl: 6},\r\n                    }}\r\n                  >\r\n                    {labelList.map((label) => {\r\n                      return (\r\n                        <MenuItem\r\n                          value={label.id}\r\n                          key={label.id}\r\n                          sx={{\r\n                            cursor: 'pointer',\r\n                          }}\r\n                        >\r\n                          {label.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Field>\r\n                </FormControl>\r\n              </Grid>\r\n            </AppGridContainer>\r\n\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.website' />}\r\n              name='website'\r\n            />\r\n          </div>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            pb: 5,\r\n            px: 5,\r\n            mx: -5,\r\n            mb: 5,\r\n            borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n          }}\r\n        >\r\n          <Box\r\n            component='h6'\r\n            sx={{\r\n              mb: {xs: 4, xl: 6},\r\n              fontSize: 14,\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.otherDetails' />\r\n          </Box>\r\n\r\n          <div>\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n                mb: {xs: 4, xl: 6},\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.company' />}\r\n              name='company'\r\n            />\r\n\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.address' />}\r\n              name='address'\r\n            />\r\n          </div>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            pb: 5,\r\n            px: 5,\r\n            mx: -5,\r\n            mb: 5,\r\n            borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n          }}\r\n        >\r\n          <Box\r\n            component='h6'\r\n            sx={{\r\n              mb: {xs: 4, xl: 6},\r\n              fontSize: 14,\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.socialMedia' />\r\n          </Box>\r\n\r\n          <div>\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n                mb: {xs: 4, xl: 6},\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.facebookId' />}\r\n              name='facebookId'\r\n            />\r\n\r\n            <AppTextField\r\n              sx={{\r\n                width: '100%',\r\n              }}\r\n              variant='outlined'\r\n              label={<IntlMessages id='common.twitterId' />}\r\n              name='twitterId'\r\n            />\r\n          </div>\r\n        </Box>\r\n\r\n        <div>\r\n          <Box\r\n            component='h6'\r\n            sx={{\r\n              mb: {xs: 4, xl: 6},\r\n              fontSize: 14,\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.notes' />\r\n          </Box>\r\n\r\n          <AppTextField\r\n            name='notes'\r\n            multiline\r\n            sx={{\r\n              width: '100%',\r\n            }}\r\n            rows='4'\r\n            variant='outlined'\r\n            placeholder={messages['common.notes']}\r\n          />\r\n        </div>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          pb: 4,\r\n          mx: -1,\r\n          textAlign: 'right',\r\n        }}\r\n      >\r\n        <Button\r\n          sx={{\r\n            position: 'relative',\r\n            minWidth: 100,\r\n          }}\r\n          color='primary'\r\n          variant='outlined'\r\n          type='submit'\r\n        >\r\n          <IntlMessages id='common.save' />\r\n        </Button>\r\n      </Box>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n\r\nAddContactForm.propTypes = {\r\n  values: PropTypes.object.isRequired,\r\n  userImage: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\r\n    .isRequired,\r\n  setUserImage: PropTypes.func,\r\n  setFieldValue: PropTypes.func,\r\n  handleAddContactClose: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onCreateContact,\r\n  onUpdateSelectedContact,\r\n} from '../../../../redux/actions';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport AddContactForm from './AddContactForm';\r\nimport AppDialog from '@crema/core/AppDialog';\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  contact: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.phoneNumberRequired' />),\r\n});\r\n\r\nconst CreateContact = (props) => {\r\n  const {isAddContact, handleAddContactClose, selectContact, onUpdateContact} =\r\n    props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [userImage, setUserImage] = useState(\r\n    selectContact && selectContact.image\r\n      ? selectContact.image\r\n      : '/assets/images/placeholder.jpg',\r\n  );\r\n  useEffect(() => {\r\n    setUserImage(\r\n      selectContact && selectContact.image\r\n        ? selectContact.image\r\n        : '/assets/images/placeholder.jpg',\r\n    );\r\n  }, [selectContact]);\r\n\r\n  return (\r\n    <AppDialog\r\n      fullHeight\r\n      open={isAddContact}\r\n      onClose={() => handleAddContactClose()}\r\n    >\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          name: selectContact ? selectContact.name : '',\r\n          email: selectContact ? selectContact.email : '',\r\n          contact: selectContact ? selectContact.contact : '',\r\n          birthday:\r\n            selectContact && selectContact.birthday\r\n              ? selectContact.birthday\r\n              : null,\r\n          website:\r\n            selectContact && selectContact.website ? selectContact.website : '',\r\n          company:\r\n            selectContact && selectContact.company ? selectContact.company : '',\r\n          address:\r\n            selectContact && selectContact.address ? selectContact.address : '',\r\n          facebookId:\r\n            selectContact && selectContact.facebookId\r\n              ? selectContact.facebookId\r\n              : '',\r\n          twitterId:\r\n            selectContact && selectContact.twitterId\r\n              ? selectContact.twitterId\r\n              : '',\r\n          notes:\r\n            selectContact && selectContact.notes ? selectContact.notes : '',\r\n          label:\r\n            selectContact && selectContact.label ? selectContact.label : '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n          setSubmitting(true);\r\n          if (selectContact) {\r\n            const newContact = {\r\n              id: selectContact.id,\r\n              isStarred: selectContact.isStarred,\r\n              isFrequent: selectContact.isFrequent,\r\n              image: userImage,\r\n              ...data,\r\n            };\r\n            dispatch(onUpdateSelectedContact(newContact));\r\n            onUpdateContact(newContact);\r\n          } else {\r\n            const newContact = {\r\n              id: Math.floor(Math.random() * 1000),\r\n              isStarred: false,\r\n              isFrequent: Math.random() > 0.5,\r\n              image: userImage,\r\n              ...data,\r\n            };\r\n            dispatch(onCreateContact(newContact));\r\n          }\r\n          handleAddContactClose();\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        {({values, setFieldValue}) => (\r\n          <AddContactForm\r\n            setUserImage={setUserImage}\r\n            userImage={userImage}\r\n            values={values}\r\n            setFieldValue={setFieldValue}\r\n            handleAddContactClose={handleAddContactClose}\r\n          />\r\n        )}\r\n      </Formik>\r\n    </AppDialog>\r\n  );\r\n};\r\n\r\nexport default CreateContact;\r\n\r\nCreateContact.defaultProps = {\r\n  selectContact: null,\r\n};\r\n\r\nCreateContact.propTypes = {\r\n  isAddContact: PropTypes.bool.isRequired,\r\n  handleAddContactClose: PropTypes.func.isRequired,\r\n  selectContact: PropTypes.object,\r\n  onUpdateContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport AppTooltip from '@crema/core/AppTooltip';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst ContactActionHoverWrapper = styled('div')(() => {\r\n  return {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    right: -30,\r\n    top: '50%',\r\n    zIndex: 1,\r\n    transform: 'translateY(-50%)',\r\n    transition: 'all 0.4s ease',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n  };\r\n});\r\n\r\nconst ItemMenu = (props) => {\r\n  const {\r\n    onSelectContactsForDelete,\r\n    contact,\r\n    onChangeStarred,\r\n    onOpenEditContact,\r\n  } = props;\r\n\r\n  const onDeleteContact = (e) => {\r\n    onSelectContactsForDelete([contact.id]);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const onChangeStarredStatus = (e) => {\r\n    onChangeStarred(!contact.isStarred, contact);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const onClickEditOption = (e) => {\r\n    onOpenEditContact(contact);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component='span'\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: 'auto',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <span className='conActionHoverHideRoot'>\r\n        <AppTooltip title={<IntlMessages id='common.more' />}>\r\n          <IconButton\r\n            sx={{\r\n              color: (theme) => theme.palette.text.disabled,\r\n              padding: 2,\r\n              '& .MuiSvgIcon-root': {\r\n                fontSize: 22,\r\n              },\r\n            }}\r\n            size='large'\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </AppTooltip>\r\n      </span>\r\n\r\n      <ContactActionHoverWrapper className='conActionHoverRoot'>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.warning.main,\r\n            padding: 2,\r\n            '& .MuiSvgIcon-root': {\r\n              fontSize: 22,\r\n            },\r\n          }}\r\n          onClick={onChangeStarredStatus}\r\n          size='large'\r\n        >\r\n          {contact.isStarred ? <StarBorderIcon /> : <StarIcon />}\r\n        </IconButton>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n            padding: 2,\r\n            '& .MuiSvgIcon-root': {\r\n              fontSize: 22,\r\n            },\r\n          }}\r\n          onClick={onClickEditOption}\r\n          size='large'\r\n        >\r\n          <EditOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          sx={{\r\n            color: (theme) => theme.palette.text.disabled,\r\n            padding: 2,\r\n            '& .MuiSvgIcon-root': {\r\n              fontSize: 22,\r\n            },\r\n          }}\r\n          onClick={onDeleteContact}\r\n          size='large'\r\n        >\r\n          <DeleteOutlinedIcon />\r\n        </IconButton>\r\n      </ContactActionHoverWrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ItemMenu;\r\n\r\nItemMenu.propTypes = {\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  contact: PropTypes.object.isRequired,\r\n  onChangeStarred: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport ItemMenu from '../ItemMenu';\r\nimport {blue} from '@mui/material/colors';\r\n\r\nimport {styled} from '@mui/material/styles';\r\nimport {alpha} from '@mui/material';\r\n\r\nconst ContactListItemWrapper = styled(ListItem)(({theme}) => {\r\n  return {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    fontSize: 14,\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    cursor: 'pointer',\r\n    overflow: 'hidden',\r\n    '&.rootCheck': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      boxShadow: `0 3px 5px 0 ${alpha(theme.palette.common.black, 0.08)}`,\r\n    },\r\n    '& .conActionHoverHideRoot': {\r\n      transition: 'all 0.4s ease',\r\n    },\r\n    '&:hover': {\r\n      '& .conActionHoverRoot': {\r\n        opacity: 1,\r\n        visibility: 'visible',\r\n        right: 0,\r\n      },\r\n      '& .conActionHoverHideRoot': {\r\n        opacity: 0,\r\n        visibility: 'hidden',\r\n      },\r\n      '& .contactViewInfo': {\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 'calc(100% - 114px)',\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst ContactListItem = ({\r\n  contact,\r\n  labelList,\r\n  onChangeCheckedContacts,\r\n  checkedContacts,\r\n  onChangeStarred,\r\n  onSelectContactsForDelete,\r\n  onViewContactDetail,\r\n  onOpenEditContact,\r\n}) => {\r\n  const onGetLabelColor = (labelId) => {\r\n    if (labelId) {\r\n      return (\r\n        labelList.length > 0 &&\r\n        labelList.find((label) => label.id === labelId).color\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContactListItemWrapper\r\n        dense\r\n        button\r\n        key={contact.id}\r\n        className={clsx('item-hover', {\r\n          rootCheck: checkedContacts.includes(contact.id),\r\n        })}\r\n        onClick={() => onViewContactDetail(contact)}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: {xs: '75%', sm: '80%', md: '50%'},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <span onClick={(event) => event.stopPropagation()}>\r\n            <Checkbox\r\n              sx={{\r\n                color: (theme) => theme.palette.text.disabled,\r\n              }}\r\n              checked={checkedContacts.includes(contact.id)}\r\n              onChange={(event) => onChangeCheckedContacts(event, contact.id)}\r\n              color='primary'\r\n            />\r\n          </span>\r\n          <Box\r\n            sx={{\r\n              mr: 2.5,\r\n            }}\r\n            component='span'\r\n            onClick={(event) => event.stopPropagation()}\r\n          >\r\n            <AppsStarredIcon item={contact} onChange={onChangeStarred} />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              mr: 3,\r\n            }}\r\n            component='span'\r\n          >\r\n            {contact.image ? (\r\n              <Avatar\r\n                sx={{\r\n                  backgroundColor: blue[500],\r\n                  width: 36,\r\n                  height: 36,\r\n                }}\r\n                src={contact.image}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                sx={{\r\n                  backgroundColor: blue[500],\r\n                  width: 36,\r\n                  height: 36,\r\n                }}\r\n              >\r\n                {contact.name[0].toUpperCase()}\r\n              </Avatar>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mr: 4,\r\n              fontWeight: Fonts.MEDIUM,\r\n              flex: 1,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {contact.name}\r\n          </Box>\r\n\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              mr: 4,\r\n              flex: 1,\r\n              display: {xs: 'none', sm: 'block'},\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {contact.email ? contact.email : null}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            width: {xs: '25%', sm: '20%', md: '50%'},\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              transition: 'all 0.4s ease',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              width: {sm: 'calc(100% - 70px)'},\r\n            }}\r\n            className='contactViewInfo'\r\n          >\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                mr: 4,\r\n                flex: 1,\r\n                display: {xs: 'none', md: 'block'},\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n            >\r\n              {contact.contact}\r\n            </Box>\r\n            <Box\r\n              component='span'\r\n              sx={{\r\n                mr: 4,\r\n                flex: 1,\r\n                display: {xs: 'none', md: 'block'},\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n            >\r\n              {contact.company ? contact.company : null}\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginLeft: 'auto',\r\n            }}\r\n          >\r\n            <span className='conActionHoverHideRoot'>\r\n              <LabelOutlinedIcon\r\n                sx={{\r\n                  ml: 2,\r\n                  color: onGetLabelColor(contact.label),\r\n                }}\r\n              />\r\n            </span>\r\n\r\n            <ItemMenu\r\n              contact={contact}\r\n              onChangeStarred={onChangeStarred}\r\n              onOpenEditContact={onOpenEditContact}\r\n              onSelectContactsForDelete={onSelectContactsForDelete}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </ContactListItemWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.defaultProps = {\r\n  labelList: [],\r\n  checkedContacts: [],\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  onChangeCheckedContacts: PropTypes.func,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onViewContactDetail: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {Card} from '@mui/material';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PhoneOutlinedIcon from '@mui/icons-material/PhoneOutlined';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {blue} from '@mui/material/colors';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport ItemMenu from '../ItemMenu';\r\n\r\nimport {styled} from '@mui/material/styles';\r\n\r\nconst GridCard = styled(Card)(({theme}) => {\r\n  return {\r\n    borderRadius: theme.cardRadius,\r\n    border: `solid 1px ${theme.palette.grey[300]}`,\r\n    position: 'relative',\r\n    padding: 16,\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: 20,\r\n    },\r\n    '&:hover': {\r\n      '& .conActionHoverRoot': {\r\n        opacity: 1,\r\n        visibility: 'visible',\r\n        right: 0,\r\n      },\r\n      '& .conActionHoverHideRoot': {\r\n        opacity: 0,\r\n        visibility: 'hidden',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst ContactGridItem = (props) => {\r\n  const {\r\n    contact,\r\n    onChangeCheckedContacts,\r\n    checkedContacts,\r\n    onChangeStarred,\r\n    onSelectContactsForDelete,\r\n    onOpenEditContact,\r\n    onViewContactDetail,\r\n  } = props;\r\n\r\n  return (\r\n    <GridCard\r\n      className='card-hover'\r\n      onClick={() => onViewContactDetail(contact)}\r\n    >\r\n      <Box\r\n        sx={{\r\n          mb: 1,\r\n          mt: -3,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            ml: -2,\r\n          }}\r\n          component='span'\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          <Checkbox\r\n            checked={checkedContacts.includes(contact.id)}\r\n            onChange={(event) => onChangeCheckedContacts(event, contact.id)}\r\n            color='primary'\r\n          />\r\n        </Box>\r\n\r\n        <ItemMenu\r\n          contact={contact}\r\n          onChangeStarred={onChangeStarred}\r\n          onOpenEditContact={onOpenEditContact}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          mb: {xs: 3, lg: 4, xl: 5},\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        {contact.image ? (\r\n          <Avatar\r\n            sx={{\r\n              width: 46,\r\n              height: 46,\r\n              backgroundColor: blue[500],\r\n            }}\r\n            src={contact.image}\r\n          />\r\n        ) : (\r\n          <Avatar\r\n            sx={{\r\n              width: 46,\r\n              height: 46,\r\n              backgroundColor: blue[500],\r\n            }}\r\n          >\r\n            {contact.name[0].toUpperCase()}\r\n          </Avatar>\r\n        )}\r\n        <Box\r\n          sx={{\r\n            ml: 4,\r\n            width: 'calc(100% - 65px)',\r\n          }}\r\n        >\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontWeight: Fonts.MEDIUM,\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {contact.name}\r\n          </Box>\r\n          <Box\r\n            component='p'\r\n            sx={{\r\n              fontSize: 14,\r\n              color: 'text.secondary',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {contact.email ? contact.email : null}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          pt: 2,\r\n          fontSize: 13,\r\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            py: 2,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <BusinessIcon\r\n            sx={{\r\n              fontSize: 20,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n            component='p'\r\n          >\r\n            {contact.company ? (\r\n              contact.company\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            pt: 2,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <PhoneOutlinedIcon\r\n            sx={{\r\n              fontSize: 20,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n            component='p'\r\n          >\r\n            {contact.contact}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </GridCard>\r\n  );\r\n};\r\n\r\nexport default ContactGridItem;\r\n\r\nContactGridItem.defaultProps = {\r\n  checkedContacts: [],\r\n};\r\n\r\nContactGridItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  onChangeCheckedContacts: PropTypes.func,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n  onViewContactDetail: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const ContactItem = (props) => (\r\n  <ContentLoader viewBox='0 0 400 21' {...props}>\r\n    <rect x='10' y='8' rx='3' ry='3' width='10' height='10' />\r\n    <circle cx='32' cy='12' r='8' />\r\n    <rect x='45' y='8' rx='0' ry='0' width='50' height='10' />\r\n    <rect x='120' y='8' rx='0' ry='0' width='70' height='10' />\r\n    <rect x='220' y='8' rx='0' ry='0' width='40' height='10' />\r\n    <rect x='280' y='8' rx='0' ry='0' width='60' height='10' />\r\n    <circle cx='360' cy='12' r='5' />\r\n    <circle cx='380' cy='12' r='5' />\r\n  </ContentLoader>\r\n);\r\nconst ContactListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContactListSkeleton;\r\n","import React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport {blue} from '@mui/material/colors';\r\n\r\nimport {styled} from '@mui/material/styles';\r\nimport {alpha} from '@mui/material';\r\n\r\nconst ContactListItemWrapper = styled(ListItem)(({theme}) => {\r\n  return {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    fontSize: 14,\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    paddingRight: 10,\r\n    cursor: 'pointer',\r\n    overflow: 'hidden',\r\n    paddingLeft: 20,\r\n    alignItems: 'flex-start',\r\n    '& .contactViewLeft': {\r\n      alignItems: 'flex-start',\r\n    },\r\n    '&.rootCheck': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      boxShadow: `0 3px 5px 0 ${alpha(theme.palette.common.black, 0.08)}`,\r\n    },\r\n  };\r\n});\r\n\r\nconst ContactListItemMobile = ({\r\n  contact,\r\n  checkedContacts,\r\n  onChangeStarred,\r\n  labelList,\r\n  onViewContactDetail,\r\n}) => {\r\n  const onGetLabelColor = (labelId) => {\r\n    if (labelId) {\r\n      return (\r\n        labelList.length > 0 &&\r\n        labelList.find((label) => label.id === labelId).color\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContactListItemWrapper\r\n        dense\r\n        button\r\n        key={contact.id}\r\n        className={clsx('item-hover', {\r\n          rootCheck: checkedContacts.includes(contact.id),\r\n        })}\r\n        onClick={() => onViewContactDetail(contact)}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: {xs: '75%', sm: '80%', md: '50%'},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n          className='contactViewLeft'\r\n        >\r\n          <Box\r\n            sx={{\r\n              mr: 3,\r\n              mt: 1,\r\n            }}\r\n            component='span'\r\n          >\r\n            {contact.image ? (\r\n              <Avatar\r\n                sx={{\r\n                  backgroundColor: blue[500],\r\n                  width: 36,\r\n                  height: 36,\r\n                }}\r\n                src={contact.image}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                sx={{\r\n                  backgroundColor: blue[500],\r\n                  width: 36,\r\n                  height: 36,\r\n                }}\r\n              >\r\n                {contact.name[0].toUpperCase()}\r\n              </Avatar>\r\n            )}\r\n          </Box>\r\n          <Box sx={{mr: 3, overflow: 'hidden'}}>\r\n            <Box\r\n              sx={{\r\n                fontWeight: Fonts.MEDIUM,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n              component='p'\r\n            >\r\n              {contact.name}\r\n            </Box>\r\n\r\n            <Box\r\n              component='p'\r\n              sx={{\r\n                color: 'text.secondary',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n            >\r\n              {contact.contact}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            width: {xs: '25%', sm: '20%', md: '50%'},\r\n          }}\r\n        >\r\n          <span>\r\n            <LabelOutlinedIcon\r\n              style={{color: `${onGetLabelColor(contact.label)}`}}\r\n              sx={{\r\n                ml: 2,\r\n              }}\r\n            />\r\n          </span>\r\n          <span onClick={(event) => event.stopPropagation()}>\r\n            <AppsStarredIcon item={contact} onChange={onChangeStarred} />\r\n          </span>\r\n        </Box>\r\n      </ContactListItemWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactListItemMobile;\r\n\r\nContactListItemMobile.defaultProps = {\r\n  checkedContacts: [],\r\n};\r\n\r\nContactListItemMobile.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  labelList: PropTypes.array,\r\n  onViewContactDetail: PropTypes.func,\r\n};\r\n","import ContactListItem from './ContactListItem';\r\nimport Box from '@mui/material/Box';\r\nimport ContactGridItem from './ContactGridItem';\r\nimport React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppGrid from '@crema/core/AppGrid';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport ContactListSkeleton from '@crema/core/AppSkeleton/ContactListSkeleton';\r\nimport {Hidden} from '@mui/material';\r\nimport ContactListItemMobile from './ContactListItem/ContactListItemMobile';\r\n\r\nconst ContactView = (props) => {\r\n  const {\r\n    list,\r\n    pageView,\r\n    loading,\r\n    handleAddContactOpen,\r\n    onChangeStarred,\r\n    onChangeCheckedContacts,\r\n    checkedContacts,\r\n    onSelectContactsForDelete,\r\n    onOpenEditContact,\r\n    onViewContactDetail,\r\n  } = props;\r\n  const labelList = useSelector(({contactApp}) => contactApp.labelList);\r\n\r\n  return (\r\n    <>\r\n      {pageView === 'list' ? (\r\n        <>\r\n          <Hidden smDown>\r\n            <AppList\r\n              data={list}\r\n              animation='transition.slideUpIn'\r\n              sx={{\r\n                pt: 0,\r\n                pb: 0,\r\n                flex: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n              }}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={loading}\r\n                  actionTitle={<IntlMessages id='contactApp.createContact' />}\r\n                  onClick={handleAddContactOpen}\r\n                  placeholder={<ContactListSkeleton />}\r\n                />\r\n              }\r\n              renderRow={(contact) => (\r\n                <ContactListItem\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  labelList={labelList}\r\n                  onChangeCheckedContacts={onChangeCheckedContacts}\r\n                  checkedContacts={checkedContacts}\r\n                  onSelectContactsForDelete={onSelectContactsForDelete}\r\n                  onChangeStarred={onChangeStarred}\r\n                  onViewContactDetail={onViewContactDetail}\r\n                  onOpenEditContact={onOpenEditContact}\r\n                />\r\n              )}\r\n            />\r\n          </Hidden>\r\n\r\n          <Hidden smUp>\r\n            <AppList\r\n              data={list}\r\n              animation='transition.slideUpIn'\r\n              sx={{\r\n                pt: 0,\r\n                pb: 0,\r\n                flex: 1,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n              }}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={loading}\r\n                  actionTitle={<IntlMessages id='contactApp.createContact' />}\r\n                  onClick={handleAddContactOpen}\r\n                  placeholder={<ContactListSkeleton />}\r\n                />\r\n              }\r\n              renderRow={(contact) => (\r\n                <ContactListItemMobile\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  checkedContacts={checkedContacts}\r\n                  labelList={labelList}\r\n                  onChangeStarred={onChangeStarred}\r\n                  onViewContactDetail={onViewContactDetail}\r\n                  onOpenEditContact={onOpenEditContact}\r\n                />\r\n              )}\r\n            />\r\n          </Hidden>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            px: 5,\r\n            pt: 0.5,\r\n            pb: 3,\r\n          }}\r\n        >\r\n          <AppGrid\r\n            responsive={{\r\n              xs: 1,\r\n              sm: 2,\r\n              md: 3,\r\n              lg: 2,\r\n              xl: 3,\r\n            }}\r\n            data={list}\r\n            renderRow={(contact) => (\r\n              <ContactGridItem\r\n                key={contact.id}\r\n                contact={contact}\r\n                labelList={labelList}\r\n                onChangeCheckedContacts={onChangeCheckedContacts}\r\n                checkedContacts={checkedContacts}\r\n                onChangeStarred={onChangeStarred}\r\n                onSelectContactsForDelete={onSelectContactsForDelete}\r\n                onViewContactDetail={onViewContactDetail}\r\n                onOpenEditContact={onOpenEditContact}\r\n              />\r\n            )}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactView;\r\n\r\nContactView.defaultProps = {\r\n  list: [],\r\n  checkedContacts: [],\r\n};\r\n\r\nContactView.propTypes = {\r\n  list: PropTypes.array,\r\n  pageView: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool,\r\n  handleAddContactOpen: PropTypes.func,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeCheckedContacts: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n  onViewContactDetail: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport PropTypes from 'prop-types';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {IconButton} from '@mui/material';\r\n\r\nconst ContactActions = (props) => {\r\n  const {onDeleteContact, onChangeStarred, onOpenEditContact, contact} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          transition: 'all 0.5s ease',\r\n          opacity: 0,\r\n          visibility: 'hidden',\r\n        }}\r\n        className='btn-action-view'\r\n      >\r\n        <IconButton\r\n          onClick={onDeleteContact}\r\n          sx={{\r\n            color: (theme) => theme.palette.text.secondary,\r\n            '& svg': {\r\n              fontSize: 20,\r\n            },\r\n          }}\r\n        >\r\n          <DeleteOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => onOpenEditContact(contact)}\r\n          sx={{\r\n            color: (theme) => theme.palette.text.secondary,\r\n            '& svg': {\r\n              fontSize: 20,\r\n            },\r\n          }}\r\n        >\r\n          <EditOutlinedIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <AppsStarredIcon item={contact} onChange={onChangeStarred} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactActions;\r\n\r\nContactActions.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contact: PropTypes.object,\r\n  onChangeStarred: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport PhoneOutlinedIcon from '@mui/icons-material/PhoneOutlined';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport CakeOutlinedIcon from '@mui/icons-material/CakeOutlined';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PersonalDetails = (props) => {\r\n  const {contact} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        pb: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        component='h4'\r\n        sx={{\r\n          mb: 4,\r\n          fontWeight: Fonts.SEMI_BOLD,\r\n        }}\r\n      >\r\n        <IntlMessages id='contactApp.personalDetails' />\r\n      </Box>\r\n\r\n      <div>\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 2, md: 3},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <EmailOutlinedIcon\r\n            sx={{\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.email}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 2, md: 3},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <PhoneOutlinedIcon\r\n            sx={{\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.contact}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 2, md: 3},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <LanguageIcon\r\n            sx={{\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.website ? (\r\n              contact.website\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <CakeOutlinedIcon\r\n            sx={{\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.birthday ? (\r\n              contact.birthday\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PersonalDetails;\r\nPersonalDetails.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport {FiFacebook, FiTwitter} from 'react-icons/fi';\r\n\r\nconst OtherDetails = (props) => {\r\n  const {contact} = props;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        pb: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        component='h4'\r\n        sx={{\r\n          mb: 4,\r\n          fontWeight: Fonts.SEMI_BOLD,\r\n        }}\r\n      >\r\n        <IntlMessages id='common.otherDetails' />\r\n      </Box>\r\n\r\n      <div>\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 2, md: 3},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <BusinessIcon\r\n            sx={{\r\n              fontSize: 24,\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.company ? (\r\n              contact.company\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 2, md: 3},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <HomeOutlinedIcon\r\n            sx={{\r\n              fontSize: 24,\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.address ? (\r\n              contact.address\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 2, md: 3},\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <FiFacebook\r\n            sx={{\r\n              fontSize: 24,\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.facebookId ? (\r\n              contact.facebookId\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <FiTwitter\r\n            sx={{\r\n              fontSize: 24,\r\n              color: (theme) => theme.palette.text.secondary,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              ml: 3.5,\r\n            }}\r\n          >\r\n            {contact.twitterId ? (\r\n              contact.twitterId\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OtherDetails;\r\n\r\nOtherDetails.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onUpdateSelectedContact} from '../../../../redux/actions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport ContactActions from './ContactActions';\r\nimport PersonalDetails from './PersonalDetails';\r\nimport OtherDetails from './OtherDetails';\r\nimport AppDialog from '@crema/core/AppDialog';\r\nimport AppGridContainer from '@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport {DialogActions} from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst ContactDetail = (props) => {\r\n  const {\r\n    isShowDetail,\r\n    selectedContact,\r\n    onShowDetail,\r\n    onSelectContactsForDelete,\r\n    onOpenEditContact,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [contact, setContact] = useState(selectedContact);\r\n\r\n  useEffect(() => {\r\n    setContact(selectedContact);\r\n  }, [selectedContact]);\r\n\r\n  const onChangeStarred = (checked) => {\r\n    const updatedContact = contact;\r\n    contact.isStarred = checked;\r\n    setContact(updatedContact);\r\n    dispatch(onUpdateSelectedContact(contact));\r\n  };\r\n\r\n  const onDeleteContact = () => {\r\n    onSelectContactsForDelete([contact.id]);\r\n    onShowDetail(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppDialog\r\n        sxStyle={{\r\n          '& .MuiPaper-root:hover': {\r\n            '& .btn-action-view': {\r\n              opacity: 1,\r\n              visibility: 'visible',\r\n            },\r\n          },\r\n        }}\r\n        onClose={() => onShowDetail(false)}\r\n        hideClose\r\n        open={isShowDetail}\r\n        title={\r\n          <ContactActions\r\n            onChangeStarred={onChangeStarred}\r\n            onDeleteContact={onDeleteContact}\r\n            onOpenEditContact={onOpenEditContact}\r\n            contact={contact}\r\n          />\r\n        }\r\n      >\r\n        {contact ? (\r\n          <div>\r\n            <Box\r\n              sx={{\r\n                borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n                ml: -6,\r\n                mr: -6,\r\n                pl: 5,\r\n                pr: 5,\r\n                pb: 4,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  mb: 1,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {contact.image ? (\r\n                  <Avatar\r\n                    sx={{\r\n                      width: 80,\r\n                      height: 80,\r\n                      mb: 2.5,\r\n                    }}\r\n                    src={contact.image}\r\n                  />\r\n                ) : (\r\n                  <Avatar\r\n                    sx={{\r\n                      width: 80,\r\n                      height: 80,\r\n                      mb: 2.5,\r\n                    }}\r\n                  >\r\n                    {contact.name[0].toUpperCase()}\r\n                  </Avatar>\r\n                )}\r\n                <Box component='h3'>{contact.name}</Box>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                pt: 5,\r\n              }}\r\n            >\r\n              <AppGridContainer>\r\n                <Grid item xs={12} md={6}>\r\n                  <PersonalDetails contact={contact} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <OtherDetails contact={contact} />\r\n                </Grid>\r\n              </AppGridContainer>\r\n            </Box>\r\n          </div>\r\n        ) : (\r\n          <div />\r\n        )}\r\n        <DialogActions>\r\n          <Button\r\n            variant='outlined'\r\n            color='primary'\r\n            type='submit'\r\n            sx={{width: 100}}\r\n            onClick={() => onShowDetail(false)}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactDetail;\r\n\r\nContactDetail.propTypes = {\r\n  isShowDetail: PropTypes.bool.isRequired,\r\n  onShowDetail: PropTypes.func.isRequired,\r\n  selectedContact: PropTypes.object,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {\r\n  onDeleteContacts,\r\n  onGetContactList,\r\n  onUpdateStarredStatus,\r\n} from '../../../../redux/actions/ContactApp';\r\nimport ContactHeader from './ContactHeader';\r\nimport AppConfirmDialog from '@crema/core/AppConfirmDialog';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport CreateContact from '../CreateContact';\r\nimport {Hidden} from '@mui/material';\r\nimport ContactView from './ContactView';\r\nimport ContactDetail from '../ContactDetail';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsFooter from '@crema/core/AppsContainer/AppsFooter';\r\n\r\nconst ContactListing = () => {\r\n  const dispatch = useDispatch();\r\n  const {pathname} = useLocation();\r\n\r\n  const contactList = useSelector(({contactApp}) => contactApp.contactList);\r\n\r\n  const totalContacts = useSelector(({contactApp}) => contactApp.totalContacts);\r\n\r\n  const [filterText, onSetFilterText] = useState('');\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [pageView, setPageView] = useState('list');\r\n\r\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n  const [checkedContacts, setCheckedContacts] = useState([]);\r\n\r\n  const [toDeleteContacts, setToDeleteContacts] = useState([]);\r\n\r\n  const [isAddContact, onSetIsAddContact] = useState(false);\r\n\r\n  const [isShowDetail, onShowDetail] = useState(false);\r\n\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onGetContactList(path[path.length - 2], path[path.length - 1], page),\r\n    );\r\n  }, [pathname, pageView, page, dispatch]);\r\n\r\n  const handleAddContactOpen = () => {\r\n    onSetIsAddContact(true);\r\n  };\r\n\r\n  const handleAddContactClose = () => {\r\n    onSetIsAddContact(false);\r\n  };\r\n\r\n  const onViewContactDetail = (contact) => {\r\n    setSelectedContact(contact);\r\n    onShowDetail(true);\r\n  };\r\n\r\n  const onOpenEditContact = (contact) => {\r\n    setSelectedContact(contact);\r\n    handleAddContactOpen();\r\n  };\r\n\r\n  const onPageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const onChangePageView = (view) => {\r\n    setPageView(view);\r\n  };\r\n\r\n  const onChangeCheckedContacts = (event, id) => {\r\n    if (event.target.checked) {\r\n      setCheckedContacts(checkedContacts.concat(id));\r\n    } else {\r\n      setCheckedContacts(\r\n        checkedContacts.filter((contactId) => contactId !== id),\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangeStarred = (status, contact) => {\r\n    const selectedIdList = [contact.id];\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onUpdateStarredStatus(selectedIdList, status, path[path.length - 1]),\r\n    );\r\n  };\r\n\r\n  const onUpdateContact = (contact) => {\r\n    setSelectedContact(contact);\r\n    handleAddContactClose();\r\n  };\r\n\r\n  const onGetFilteredItems = () => {\r\n    if (filterText === '') {\r\n      return contactList;\r\n    } else {\r\n      return contactList.filter((contact) =>\r\n        contact.name.toUpperCase().includes(filterText.toUpperCase()),\r\n      );\r\n    }\r\n  };\r\n\r\n  const onDeleteSelectedContacts = () => {\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onDeleteContacts(\r\n        path[path.length - 2],\r\n        path[path.length - 1],\r\n        toDeleteContacts,\r\n        page,\r\n      ),\r\n    );\r\n    setDeleteDialogOpen(false);\r\n    setCheckedContacts([]);\r\n  };\r\n\r\n  const onSelectContactsForDelete = (contactIds) => {\r\n    setToDeleteContacts(contactIds);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const list = onGetFilteredItems();\r\n\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <ContactHeader\r\n          checkedContacts={checkedContacts}\r\n          setCheckedContacts={setCheckedContacts}\r\n          filterText={filterText}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n          onSetFilterText={onSetFilterText}\r\n          onPageChange={onPageChange}\r\n          page={page}\r\n          onChangePageView={onChangePageView}\r\n          pageView={pageView}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        <ContactView\r\n          list={list}\r\n          loading={loading}\r\n          pageView={pageView}\r\n          handleAddContactOpen={handleAddContactOpen}\r\n          onChangeCheckedContacts={onChangeCheckedContacts}\r\n          onChangeStarred={onChangeStarred}\r\n          checkedContacts={checkedContacts}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n          onViewContactDetail={onViewContactDetail}\r\n          onOpenEditContact={onOpenEditContact}\r\n        />\r\n      </AppsContent>\r\n\r\n      <Hidden smUp>\r\n        {contactList.length > 0 ? (\r\n          <AppsFooter>\r\n            <AppsPagination\r\n              count={totalContacts}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </AppsFooter>\r\n        ) : null}\r\n      </Hidden>\r\n\r\n      <CreateContact\r\n        isAddContact={isAddContact}\r\n        handleAddContactClose={handleAddContactClose}\r\n        selectContact={selectedContact}\r\n        onUpdateContact={onUpdateContact}\r\n      />\r\n\r\n      <ContactDetail\r\n        selectedContact={selectedContact}\r\n        isShowDetail={isShowDetail}\r\n        onShowDetail={onShowDetail}\r\n        onSelectContactsForDelete={onSelectContactsForDelete}\r\n        onOpenEditContact={onOpenEditContact}\r\n      />\r\n\r\n      <AppConfirmDialog\r\n        open={isDeleteDialogOpen}\r\n        onDeny={setDeleteDialogOpen}\r\n        onConfirm={onDeleteSelectedContacts}\r\n        title={<IntlMessages id='contactApp.deleteContact' />}\r\n        dialogTitle={<IntlMessages id='common.deleteItem' />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactListing;\r\n","import React from 'react';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport {AppNavLink} from '@crema';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {alpha, styled} from '@mui/material/styles';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst ContactSidebarListItemWrapper = styled(ListItem)(({theme}) => {\r\n  return {\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    borderRadius: '0 30px 30px 0',\r\n    marginBottom: 1,\r\n    marginTop: 1,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n\r\n    '& .MuiSvgIcon-root': {\r\n      marginRight: 14,\r\n      fontSize: 20,\r\n    },\r\n\r\n    '&:hover,&:focus,&.active': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      color: theme.palette.primary.main,\r\n    },\r\n\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n      '& $listItemText': {\r\n        '& .MuiTypography-body1': {\r\n          fontWeight: Fonts.SEMI_BOLD,\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst LabelItem = ({label}) => {\r\n  return (\r\n    <ContactSidebarListItemWrapper\r\n      button\r\n      to={`/apps/contact/label/${label.alias}`}\r\n      component={AppNavLink}\r\n      activeClassName='active'\r\n    >\r\n      <LabelOutlinedIcon style={{color: `${label.color}`}} />\r\n      <ListItemText\r\n        sx={{\r\n          '& .MuiTypography-body1': {\r\n            fontSize: 14,\r\n          },\r\n        }}\r\n        primary={label.name}\r\n      />\r\n    </ContactSidebarListItemWrapper>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.propTypes = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport React, {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport CreateContact from '../CreateContact';\r\nimport LabelItem from './LabelItem';\r\nimport AppsSideBarFolderItem from '@crema/core/AppsSideBarFolderItem';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '@crema/core/AppSkeleton/SidebarListSkeleton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {Zoom} from '@mui/material';\r\n\r\nconst SideBarContent = () => {\r\n  const labelList = useSelector(({contactApp}) => contactApp.labelList);\r\n\r\n  const folderList = useSelector(({contactApp}) => contactApp.folderList);\r\n\r\n  const [isAddContact, onSetIsAddContact] = useState(false);\r\n\r\n  const handleAddContactOpen = () => {\r\n    onSetIsAddContact(true);\r\n  };\r\n\r\n  const handleAddContactClose = () => {\r\n    onSetIsAddContact(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          px: {xs: 4, md: 5},\r\n          pt: {xs: 4, md: 5},\r\n          pb: 2.5,\r\n        }}\r\n      >\r\n        <Zoom in style={{transitionDelay: '300ms'}}>\r\n          <Button\r\n            variant='outlined'\r\n            color='primary'\r\n            sx={{\r\n              padding: '8px 28px',\r\n              borderRadius: 8,\r\n              '& .MuiSvgIcon-root': {\r\n                fontSize: 26,\r\n              },\r\n            }}\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddContactOpen}\r\n          >\r\n            <IntlMessages id='contactApp.createContact' />\r\n          </Button>\r\n        </Zoom>\r\n      </Box>\r\n\r\n      <AppScrollbar className='scroll-app-sidebar'>\r\n        <Box\r\n          sx={{\r\n            pr: 4,\r\n            pb: {xs: 4, md: 5, lg: 6.2},\r\n          }}\r\n        >\r\n          <List\r\n            sx={{\r\n              mb: {xs: 2, xl: 5},\r\n            }}\r\n            component='nav'\r\n            aria-label='main task folders'\r\n          >\r\n            <AppList\r\n              animation='transition.slideLeftIn'\r\n              data={folderList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={\r\n                    <Box\r\n                      sx={{\r\n                        px: {xs: 4, md: 5, lg: 6.2},\r\n                      }}\r\n                    >\r\n                      <SidebarPlaceholder />\r\n                    </Box>\r\n                  }\r\n                />\r\n              }\r\n              renderRow={(item) => (\r\n                <AppsSideBarFolderItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  path={`/apps/contact/folder/${item.alias}`}\r\n                />\r\n              )}\r\n            />\r\n          </List>\r\n\r\n          <Box\r\n            component='h4'\r\n            sx={{\r\n              mt: {xs: 4, xl: 5},\r\n              px: {xs: 4, md: 5, lg: 6.2},\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n            }}\r\n          >\r\n            <IntlMessages id='common.labels' />\r\n          </Box>\r\n\r\n          <List component='nav' aria-label='main mailbox folders'>\r\n            <AppList\r\n              animation='transition.slideLeftIn'\r\n              data={labelList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={\r\n                    <Box\r\n                      sx={{\r\n                        px: {xs: 4, md: 5, lg: 6.2},\r\n                      }}\r\n                    >\r\n                      <SidebarPlaceholder />\r\n                    </Box>\r\n                  }\r\n                />\r\n              }\r\n              renderRow={(label) => <LabelItem key={label.id} label={label} />}\r\n            />\r\n          </List>\r\n\r\n          <CreateContact\r\n            isAddContact={isAddContact}\r\n            handleAddContactClose={handleAddContactClose}\r\n          />\r\n        </Box>\r\n      </AppScrollbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBarContent;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onGetFolderList,\r\n  onGetLabelList,\r\n} from '../../../redux/actions/ContactApp';\r\nimport ContactListing from './ContactListing';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '@crema/core/AppsContainer';\r\nimport SideBarContent from './ContactSideBar';\r\n\r\nconst Contact = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetLabelList());\r\n  }, [dispatch]);\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['contactApp.contact']}\r\n      sidebarContent={<SideBarContent />}\r\n    >\r\n      <ContactListing />\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"sourceRoot":""}