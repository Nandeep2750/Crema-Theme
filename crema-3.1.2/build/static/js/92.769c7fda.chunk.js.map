{"version":3,"sources":["../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/AccountCircle.js","../node_modules/@mui/icons-material/VisibilityOff.js","pages/muiComponents/inputs/TextField/BasicTextField.js","pages/muiComponents/inputs/TextField/FormProps.js","pages/muiComponents/inputs/TextField/Validation.js","webpack:///./src/pages/muiComponents/inputs/TextField/Validation.js?e689","pages/muiComponents/inputs/TextField/Multiline.js","webpack:///./src/pages/muiComponents/inputs/TextField/Multiline.js?dba7","pages/muiComponents/inputs/TextField/Select.js","webpack:///./src/pages/muiComponents/inputs/TextField/Select.js?718c","pages/muiComponents/inputs/TextField/Icons.js","webpack:///./src/pages/muiComponents/inputs/TextField/Icons.js?333f","pages/muiComponents/inputs/TextField/InputAdornments.js","pages/muiComponents/inputs/TextField/Sizes.js","pages/muiComponents/inputs/TextField/Margin.js","pages/muiComponents/inputs/TextField/FullWidth.js","pages/muiComponents/inputs/TextField/UncontrolledControlled.js","pages/muiComponents/inputs/TextField/Components.js","webpack:///./src/pages/muiComponents/inputs/TextField/Components.js?afe9","pages/muiComponents/inputs/TextField/Inputs.js","pages/muiComponents/inputs/TextField/Color.js","webpack:///./src/pages/muiComponents/inputs/TextField/Color.js?38c7","pages/muiComponents/inputs/TextField/Customization.js","pages/muiComponents/inputs/TextField/index.js","webpack:///./src/pages/muiComponents/inputs/TextField/BasicTextField.js?060d","webpack:///./src/pages/muiComponents/inputs/TextField/FormProps.js?47d4","webpack:///./src/pages/muiComponents/inputs/TextField/InputAdornments.js?ab07","webpack:///./src/pages/muiComponents/inputs/TextField/Sizes.js?a557","webpack:///./src/pages/muiComponents/inputs/TextField/Margin.js?ce68","webpack:///./src/pages/muiComponents/inputs/TextField/FullWidth.js?3542","webpack:///./src/pages/muiComponents/inputs/TextField/UncontrolledControlled.js?02cc","webpack:///./src/pages/muiComponents/inputs/TextField/Inputs.js?c65f","webpack:///./src/pages/muiComponents/inputs/TextField/Customization.js?57b8"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","BasicTextFields","Box","component","sx","m","width","noValidate","autoComplete","id","label","variant","FormPropsTextFields","required","defaultValue","disabled","type","InputProps","readOnly","InputLabelProps","shrink","helperText","ValidationTextFields","error","MultilineTextFields","React","setValue","handleChange","event","target","multiline","maxRows","onChange","placeholder","rows","currencies","SelectTextFields","currency","setCurrency","select","map","option","MenuItem","SelectProps","native","InputWithIcon","FormControl","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","display","alignItems","color","mr","my","InputAdornments","amount","password","weight","weightRange","showPassword","values","setValues","prop","handleClickShowPassword","handleMouseDownPassword","preventDefault","flexWrap","OutlinedInput","endAdornment","inputProps","FormHelperText","IconButton","onClick","onMouseDown","edge","fullWidth","FilledInput","mt","TextFieldSizes","size","RedBar","height","backgroundColor","theme","palette","mode","LayoutTextFields","flexDirection","margin","FullWidthTextField","maxWidth","StateTextFields","name","setName","ComposedTextField","ariaLabel","Inputs","ColorTextFields","focused","CssTextField","styled","TextField","borderBottomColor","borderColor","BootstrapInput","InputBase","marginTop","spacing","borderRadius","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","alpha","primary","main","RedditTextField","props","disableUnderline","overflow","ValidationTextField","borderWidth","borderLeftWidth","CustomizedInputs","gridTemplateColumns","sm","gap","style","AppComponentHeader","title","description","refUrl","AppGridContainer","Grid","item","xs","AppComponentCard","source","noScrollbar"],"mappings":"oGAEA,IAAIA,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,sNACD,cAEJP,EAAQE,QAAUG,G,kCCflB,IAAIT,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,wOACD,iBAEJP,EAAQE,QAAUG,G,kCCflB,IAAIT,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,8fACD,iBAEJP,EAAQE,QAAUG,G,gHCbH,SAASG,IACtB,OACE,eAACC,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAACC,EAAG,EAAGC,MAAO,SAEnCC,YAAU,EACVC,aAAa,MANf,UAQE,cAAC,IAAD,CAAWC,GAAG,iBAAiBC,MAAM,WAAWC,QAAQ,aACxD,cAAC,IAAD,CAAWF,GAAG,eAAeC,MAAM,SAASC,QAAQ,WACpD,cAAC,IAAD,CAAWF,GAAG,iBAAiBC,MAAM,WAAWC,QAAQ,gBCZ/C,SAASC,IACtB,OACE,eAACV,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAACC,EAAG,EAAGC,MAAO,SAExCC,YAAU,EACVC,aAAa,MANf,UAQE,gCACE,cAAC,IAAD,CACEK,UAAQ,EACRJ,GAAG,oBACHC,MAAM,WACNI,aAAa,gBAEf,cAAC,IAAD,CACEC,UAAQ,EACRN,GAAG,oBACHC,MAAM,WACNI,aAAa,gBAEf,cAAC,IAAD,CACEL,GAAG,0BACHC,MAAM,WACNM,KAAK,WACLR,aAAa,qBAEf,cAAC,IAAD,CACEC,GAAG,2BACHC,MAAM,YACNI,aAAa,cACbG,WAAY,CACVC,UAAU,KAGd,cAAC,IAAD,CACET,GAAG,kBACHC,MAAM,SACNM,KAAK,SACLG,gBAAiB,CACfC,QAAQ,KAGZ,cAAC,IAAD,CAAWX,GAAG,kBAAkBC,MAAM,eAAeM,KAAK,WAC1D,cAAC,IAAD,CACEP,GAAG,sBACHC,MAAM,cACNI,aAAa,gBACbO,WAAW,2BAGf,gCACE,cAAC,IAAD,CACER,UAAQ,EACRJ,GAAG,kBACHC,MAAM,WACNI,aAAa,cACbH,QAAQ,WAEV,cAAC,IAAD,CACEI,UAAQ,EACRN,GAAG,kBACHC,MAAM,WACNI,aAAa,cACbH,QAAQ,WAEV,cAAC,IAAD,CACEF,GAAG,wBACHC,MAAM,WACNM,KAAK,WACLR,aAAa,mBACbG,QAAQ,WAEV,cAAC,IAAD,CACEF,GAAG,yBACHC,MAAM,YACNI,aAAa,cACbG,WAAY,CACVC,UAAU,GAEZP,QAAQ,WAEV,cAAC,IAAD,CACEF,GAAG,gBACHC,MAAM,SACNM,KAAK,SACLG,gBAAiB,CACfC,QAAQ,GAEVT,QAAQ,WAEV,cAAC,IAAD,CACEF,GAAG,gBACHC,MAAM,eACNM,KAAK,SACLL,QAAQ,WAEV,cAAC,IAAD,CACEF,GAAG,oBACHC,MAAM,cACNI,aAAa,gBACbO,WAAW,sBACXV,QAAQ,cAGZ,gCACE,cAAC,IAAD,CACEE,UAAQ,EACRJ,GAAG,oBACHC,MAAM,WACNI,aAAa,cACbH,QAAQ,aAEV,cAAC,IAAD,CACEI,UAAQ,EACRN,GAAG,oBACHC,MAAM,WACNI,aAAa,cACbH,QAAQ,aAEV,cAAC,IAAD,CACEF,GAAG,0BACHC,MAAM,WACNM,KAAK,WACLR,aAAa,mBACbG,QAAQ,aAEV,cAAC,IAAD,CACEF,GAAG,2BACHC,MAAM,YACNI,aAAa,cACbG,WAAY,CACVC,UAAU,GAEZP,QAAQ,aAEV,cAAC,IAAD,CACEF,GAAG,kBACHC,MAAM,SACNM,KAAK,SACLG,gBAAiB,CACfC,QAAQ,GAEVT,QAAQ,aAEV,cAAC,IAAD,CACEF,GAAG,kBACHC,MAAM,eACNM,KAAK,SACLL,QAAQ,aAEV,cAAC,IAAD,CACEF,GAAG,sBACHC,MAAM,cACNI,aAAa,gBACbO,WAAW,sBACXV,QAAQ,mBC9JH,SAASW,IACtB,OACE,eAACpB,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAACC,EAAG,EAAGC,MAAO,SAExCC,YAAU,EACVC,aAAa,MANf,UAQE,gCACE,cAAC,IAAD,CACEe,OAAK,EACLd,GAAG,iBACHC,MAAM,QACNI,aAAa,gBAEf,cAAC,IAAD,CACES,OAAK,EACLd,GAAG,6BACHC,MAAM,QACNI,aAAa,cACbO,WAAW,wBAGf,gCACE,cAAC,IAAD,CACEE,OAAK,EACLd,GAAG,eACHC,MAAM,QACNI,aAAa,cACbH,QAAQ,WAEV,cAAC,IAAD,CACEY,OAAK,EACLd,GAAG,2BACHC,MAAM,QACNI,aAAa,cACbO,WAAW,mBACXV,QAAQ,cAGZ,gCACE,cAAC,IAAD,CACEY,OAAK,EACLd,GAAG,iBACHC,MAAM,QACNI,aAAa,cACbH,QAAQ,aAEV,cAAC,IAAD,CACEY,OAAK,EACLd,GAAG,6BACHC,MAAM,QACNI,aAAa,cACbO,WAAW,mBACXV,QAAQ,mBC5DH,I,QCIA,SAASa,IACtB,MAA0BC,WAAe,cAAzC,mBAAO/B,EAAP,KAAcgC,EAAd,KAEMC,EAAe,SAACC,GACpBF,EAASE,EAAMC,OAAOnC,QAGxB,OACE,eAACQ,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAACC,EAAG,EAAGC,MAAO,SAExCC,YAAU,EACVC,aAAa,MANf,UAQE,gCACE,cAAC,IAAD,CACEC,GAAG,8BACHC,MAAM,YACNoB,WAAS,EACTC,QAAS,EACTrC,MAAOA,EACPsC,SAAUL,IAEZ,cAAC,IAAD,CACElB,GAAG,oBACHC,MAAM,wBACNuB,YAAY,cACZH,WAAS,IAEX,cAAC,IAAD,CACErB,GAAG,4BACHC,MAAM,YACNoB,WAAS,EACTI,KAAM,EACNpB,aAAa,qBAGjB,gCACE,cAAC,IAAD,CACEL,GAAG,4BACHC,MAAM,YACNoB,WAAS,EACTC,QAAS,EACTrC,MAAOA,EACPsC,SAAUL,EACVhB,QAAQ,WAEV,cAAC,IAAD,CACEF,GAAG,kBACHC,MAAM,wBACNuB,YAAY,cACZH,WAAS,EACTnB,QAAQ,WAEV,cAAC,IAAD,CACEF,GAAG,0BACHC,MAAM,YACNoB,WAAS,EACTI,KAAM,EACNpB,aAAa,gBACbH,QAAQ,cAGZ,gCACE,cAAC,IAAD,CACEF,GAAG,8BACHC,MAAM,YACNoB,WAAS,EACTC,QAAS,EACTrC,MAAOA,EACPsC,SAAUL,EACVhB,QAAQ,aAEV,cAAC,IAAD,CACEF,GAAG,oBACHC,MAAM,wBACNuB,YAAY,cACZH,WAAS,EACTnB,QAAQ,aAEV,cAAC,IAAD,CACEF,GAAG,4BACHC,MAAM,YACNoB,WAAS,EACTI,KAAM,EACNpB,aAAa,gBACbH,QAAQ,mBC5FH,I,SCKTwB,EAAa,CACjB,CACEzC,MAAO,MACPgB,MAAO,KAET,CACEhB,MAAO,MACPgB,MAAO,UAET,CACEhB,MAAO,MACPgB,MAAO,UAET,CACEhB,MAAO,MACPgB,MAAO,SAII,SAAS0B,IACtB,MAAgCX,WAAe,OAA/C,mBAAOY,EAAP,KAAiBC,EAAjB,KAEMX,EAAe,SAACC,GACpBU,EAAYV,EAAMC,OAAOnC,QAG3B,OACE,eAACQ,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAACC,EAAG,EAAGC,MAAO,SAExCC,YAAU,EACVC,aAAa,MANf,UAQE,gCACE,cAAC,IAAD,CACEC,GAAG,2BACH8B,QAAM,EACN7B,MAAM,SACNhB,MAAO2C,EACPL,SAAUL,EACVN,WAAW,8BANb,SAQGc,EAAWK,KAAI,SAACC,GAAD,OACd,cAACC,EAAA,EAAD,CAA6BhD,MAAO+C,EAAO/C,MAA3C,SACG+C,EAAO/B,OADK+B,EAAO/C,YAK1B,cAAC,IAAD,CACEe,GAAG,kCACH8B,QAAM,EACN7B,MAAM,gBACNhB,MAAO2C,EACPL,SAAUL,EACVgB,YAAa,CACXC,QAAQ,GAEVvB,WAAW,8BATb,SAWGc,EAAWK,KAAI,SAACC,GAAD,OACd,wBAA2B/C,MAAO+C,EAAO/C,MAAzC,SACG+C,EAAO/B,OADG+B,EAAO/C,eAM1B,gCACE,cAAC,IAAD,CACEe,GAAG,yBACH8B,QAAM,EACN7B,MAAM,SACNhB,MAAO2C,EACPL,SAAUL,EACVN,WAAW,8BACXV,QAAQ,SAPV,SASGwB,EAAWK,KAAI,SAACC,GAAD,OACd,cAACC,EAAA,EAAD,CAA6BhD,MAAO+C,EAAO/C,MAA3C,SACG+C,EAAO/B,OADK+B,EAAO/C,YAK1B,cAAC,IAAD,CACEe,GAAG,gCACH8B,QAAM,EACN7B,MAAM,gBACNhB,MAAO2C,EACPL,SAAUL,EACVgB,YAAa,CACXC,QAAQ,GAEVvB,WAAW,8BACXV,QAAQ,SAVV,SAYGwB,EAAWK,KAAI,SAACC,GAAD,OACd,wBAA2B/C,MAAO+C,EAAO/C,MAAzC,SACG+C,EAAO/B,OADG+B,EAAO/C,eAM1B,gCACE,cAAC,IAAD,CACEe,GAAG,2BACH8B,QAAM,EACN7B,MAAM,SACNhB,MAAO2C,EACPL,SAAUL,EACVN,WAAW,8BACXV,QAAQ,WAPV,SASGwB,EAAWK,KAAI,SAACC,GAAD,OACd,cAACC,EAAA,EAAD,CAA6BhD,MAAO+C,EAAO/C,MAA3C,SACG+C,EAAO/B,OADK+B,EAAO/C,YAK1B,cAAC,IAAD,CACEe,GAAG,kCACH8B,QAAM,EACN7B,MAAM,gBACNhB,MAAO2C,EACPL,SAAUL,EACVgB,YAAa,CACXC,QAAQ,GAEVvB,WAAW,8BACXV,QAAQ,WAVV,SAYGwB,EAAWK,KAAI,SAACC,GAAD,OACd,wBAA2B/C,MAAO+C,EAAO/C,MAAzC,SACG+C,EAAO/B,OADG+B,EAAO/C,kBCzIjB,I,2DCSA,SAASmD,IACtB,OACE,eAAC3C,EAAA,EAAD,CAAKE,GAAI,CAAC,kBAAmB,CAACC,EAAG,IAAjC,UACE,eAACyC,EAAA,EAAD,CAAanC,QAAQ,WAArB,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,4BAApB,oCAGA,cAACC,EAAA,EAAD,CACExC,GAAG,4BACHyC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAAC,IAAD,WAKR,cAAC,IAAD,CACE3C,GAAG,4BACHC,MAAM,YACNO,WAAY,CACViC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAAC,IAAD,OAINzC,QAAQ,aAEV,eAACT,EAAA,EAAD,CAAKE,GAAI,CAACiD,QAAS,OAAQC,WAAY,YAAvC,UACE,cAAC,IAAD,CAAelD,GAAI,CAACmD,MAAO,gBAAiBC,GAAI,EAAGC,GAAI,MACvD,cAAC,IAAD,CAAWhD,GAAG,gBAAgBC,MAAM,UAAUC,QAAQ,mBCvC/C,I,2FCcA,SAAS+C,IACtB,MAA4BjC,WAAe,CACzCkC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,cAAc,IALhB,mBAAOC,EAAP,KAAeC,EAAf,KAQMtC,EAAe,SAACuC,GAAD,OAAU,SAACtC,GAC9BqC,EAAU,2BAAID,GAAL,kBAAcE,EAAOtC,EAAMC,OAAOnC,WAGvCyE,EAA0B,WAC9BF,EAAU,2BACLD,GADI,IAEPD,cAAeC,EAAOD,iBAIpBK,EAA0B,SAACxC,GAC/BA,EAAMyC,kBAGR,OACE,eAACnE,EAAA,EAAD,CAAKE,GAAI,CAACiD,QAAS,OAAQiB,SAAU,QAArC,UACE,gCACE,cAAC,IAAD,CACE5D,MAAM,wBACND,GAAG,2BACHL,GAAI,CAACC,EAAG,EAAGC,MAAO,QAClBW,WAAY,CACViC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,mBAIN,eAACN,EAAA,EAAD,CAAa1C,GAAI,CAACC,EAAG,EAAGC,MAAO,QAASK,QAAQ,WAAhD,UACE,cAAC4D,EAAA,EAAD,CACE9D,GAAG,4BACHf,MAAOsE,EAAOH,OACd7B,SAAUL,EAAa,UACvB6C,aAAc,cAACrB,EAAA,EAAD,CAAgBC,SAAS,MAAzB,gBACd,mBAAiB,8BACjBqB,WAAY,CACV,aAAc,YAGlB,cAACC,EAAA,EAAD,CAAgBjE,GAAG,8BAAnB,uBAIF,eAACqC,EAAA,EAAD,CAAa1C,GAAI,CAACC,EAAG,EAAGC,MAAO,QAASK,QAAQ,WAAhD,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,8BAApB,sBAGA,cAACuB,EAAA,EAAD,CACE9D,GAAG,8BACHO,KAAMgD,EAAOD,aAAe,OAAS,WACrCrE,MAAOsE,EAAOJ,SACd5B,SAAUL,EAAa,YACvB6C,aACE,cAACrB,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACuB,EAAA,EAAD,CACE,aAAW,6BACXC,QAAST,EACTU,YAAaT,EACbU,KAAK,MAJP,SAMGd,EAAOD,aAAe,cAAC,IAAD,IAAoB,cAAC,IAAD,QAIjDrD,MAAM,gBAGV,eAACoC,EAAA,EAAD,CAAaiC,WAAS,EAAC3E,GAAI,CAACC,EAAG,GAA/B,UACE,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,4BAApB,oBACA,cAACuB,EAAA,EAAD,CACE9D,GAAG,4BACHf,MAAOsE,EAAOL,OACd3B,SAAUL,EAAa,UACvBuB,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,eAChB1C,MAAM,iBAIZ,gCACE,cAAC,IAAD,CACEA,MAAM,wBACND,GAAG,yBACHL,GAAI,CAACC,EAAG,EAAGC,MAAO,QAClBW,WAAY,CACViC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,iBAGJzC,QAAQ,WAEV,eAACmC,EAAA,EAAD,CAAa1C,GAAI,CAACC,EAAG,EAAGC,MAAO,QAASK,QAAQ,SAAhD,UACE,cAACqE,EAAA,EAAD,CACEvE,GAAG,0BACHf,MAAOsE,EAAOH,OACd7B,SAAUL,EAAa,UACvB6C,aAAc,cAACrB,EAAA,EAAD,CAAgBC,SAAS,MAAzB,gBACd,mBAAiB,4BACjBqB,WAAY,CACV,aAAc,YAGlB,cAACC,EAAA,EAAD,CAAgBjE,GAAG,4BAAnB,uBAEF,eAACqC,EAAA,EAAD,CAAa1C,GAAI,CAACC,EAAG,EAAGC,MAAO,QAASK,QAAQ,SAAhD,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,4BAApB,sBACA,cAACgC,EAAA,EAAD,CACEvE,GAAG,4BACHO,KAAMgD,EAAOD,aAAe,OAAS,WACrCrE,MAAOsE,EAAOJ,SACd5B,SAAUL,EAAa,YACvB6C,aACE,cAACrB,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACuB,EAAA,EAAD,CACE,aAAW,6BACXC,QAAST,EACTU,YAAaT,EACbU,KAAK,MAJP,SAMGd,EAAOD,aAAe,cAAC,IAAD,IAAoB,cAAC,IAAD,aAMrD,eAACjB,EAAA,EAAD,CAAaiC,WAAS,EAAC3E,GAAI,CAACC,EAAG,GAAIM,QAAQ,SAA3C,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,0BAApB,oBACA,cAACgC,EAAA,EAAD,CACEvE,GAAG,0BACHf,MAAOsE,EAAOL,OACd3B,SAAUL,EAAa,UACvBuB,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,uBAItB,gCACE,cAAC,IAAD,CACE1C,MAAM,wBACND,GAAG,2BACHL,GAAI,CAACC,EAAG,EAAGC,MAAO,QAClBW,WAAY,CACViC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,iBAGJzC,QAAQ,aAEV,eAACmC,EAAA,EAAD,CAAanC,QAAQ,WAAWP,GAAI,CAACC,EAAG,EAAG4E,GAAI,EAAG3E,MAAO,QAAzD,UACE,cAAC2C,EAAA,EAAD,CACExC,GAAG,4BACHf,MAAOsE,EAAOH,OACd7B,SAAUL,EAAa,UACvB6C,aAAc,cAACrB,EAAA,EAAD,CAAgBC,SAAS,MAAzB,gBACd,mBAAiB,8BACjBqB,WAAY,CACV,aAAc,YAGlB,cAACC,EAAA,EAAD,CAAgBjE,GAAG,8BAAnB,uBAIF,eAACqC,EAAA,EAAD,CAAa1C,GAAI,CAACC,EAAG,EAAGC,MAAO,QAASK,QAAQ,WAAhD,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,8BAApB,sBAGA,cAACC,EAAA,EAAD,CACExC,GAAG,8BACHO,KAAMgD,EAAOD,aAAe,OAAS,WACrCrE,MAAOsE,EAAOJ,SACd5B,SAAUL,EAAa,YACvB6C,aACE,cAACrB,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACuB,EAAA,EAAD,CACE,aAAW,6BACXC,QAAST,EACTU,YAAaT,EAHf,SAKGJ,EAAOD,aAAe,cAAC,IAAD,IAAoB,cAAC,IAAD,aAMrD,eAACjB,EAAA,EAAD,CAAaiC,WAAS,EAAC3E,GAAI,CAACC,EAAG,GAAIM,QAAQ,WAA3C,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,4BAApB,oBACA,cAACC,EAAA,EAAD,CACExC,GAAG,4BACHf,MAAOsE,EAAOL,OACd3B,SAAUL,EAAa,UACvBuB,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,0BChNb,SAAS8B,IACtB,OACE,eAAChF,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAACC,EAAG,EAAGC,MAAO,SAExCC,YAAU,EACVC,aAAa,MANf,UAQE,gCACE,cAAC,IAAD,CACEE,MAAM,OACND,GAAG,sBACHK,aAAa,QACbqE,KAAK,UAEP,cAAC,IAAD,CACEzE,MAAM,OACND,GAAG,uBACHK,aAAa,cAGjB,gCACE,cAAC,IAAD,CACEJ,MAAM,OACND,GAAG,oBACHK,aAAa,QACbH,QAAQ,SACRwE,KAAK,UAEP,cAAC,IAAD,CACEzE,MAAM,OACND,GAAG,qBACHK,aAAa,SACbH,QAAQ,cAGZ,gCACE,cAAC,IAAD,CACED,MAAM,OACND,GAAG,sBACHK,aAAa,QACbqE,KAAK,QACLxE,QAAQ,aAEV,cAAC,IAAD,CACED,MAAM,OACND,GAAG,uBACHK,aAAa,SACbH,QAAQ,mBClDlB,SAASyE,IACP,OACE,cAAClF,EAAA,EAAD,CACEE,GAAI,CACFiF,OAAQ,GACRC,gBAAiB,SAACC,GAAD,MACQ,UAAvBA,EAAMC,QAAQC,KACV,uBACA,6BAMC,SAASC,IACtB,OACE,eAACxF,EAAA,EAAD,CACEE,GAAI,CACFiD,QAAS,OACTsC,cAAe,SACf,uBAAwB,CAACrF,MAAO,SAJpC,UAOE,cAAC8E,EAAD,IACA,cAAC,IAAD,CAAW1E,MAAO,gBAAiBD,GAAG,gBACtC,cAAC2E,EAAD,IACA,cAAC,IAAD,CAAW1E,MAAO,iBAAkBD,GAAG,eAAemF,OAAO,UAC7D,cAACR,EAAD,IACA,cAAC,IAAD,CAAW1E,MAAO,kBAAmBD,GAAG,gBAAgBmF,OAAO,WAC/D,cAACR,EAAD,OC7BS,SAASS,IACtB,OACE,cAAC3F,EAAA,EAAD,CACEE,GAAI,CACFE,MAAO,IACPwF,SAAU,QAHd,SAME,cAAC,IAAD,CAAWf,WAAS,EAACrE,MAAM,YAAYD,GAAG,gBCRjC,SAASsF,IACtB,MAAwBtE,WAAe,kBAAvC,mBAAOuE,EAAP,KAAaC,EAAb,KAKA,OACE,eAAC/F,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAACC,EAAG,EAAGC,MAAO,SAEnCC,YAAU,EACVC,aAAa,MANf,UAQE,cAAC,IAAD,CACEC,GAAG,gBACHC,MAAM,OACNhB,MAAOsG,EACPhE,SAjBe,SAACJ,GACpBqE,EAAQrE,EAAMC,OAAOnC,UAkBnB,cAAC,IAAD,CACEe,GAAG,wBACHC,MAAM,eACNI,aAAa,WCnBN,SAASoF,IACtB,MAAwBzE,WAAe,sBAAvC,mBAAOuE,EAAP,KAAaC,EAAb,KAEMtE,EAAe,SAACC,GACpBqE,EAAQrE,EAAMC,OAAOnC,QAGvB,OACE,eAACQ,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAACC,EAAG,IAEzBE,YAAU,EACVC,aAAa,MANf,UAQE,eAACsC,EAAA,EAAD,CAAanC,QAAQ,WAArB,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,mBAApB,kBACA,cAACC,EAAA,EAAD,CAAOxC,GAAG,mBAAmBf,MAAOsG,EAAMhE,SAAUL,OAEtD,eAACmB,EAAA,EAAD,CAAanC,QAAQ,WAArB,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,mBAApB,kBACA,cAACC,EAAA,EAAD,CACExC,GAAG,mBACHf,MAAOsG,EACPhE,SAAUL,EACV,mBAAiB,0BAEnB,cAAC+C,EAAA,EAAD,CAAgBjE,GAAG,wBAAnB,2CAIF,eAACqC,EAAA,EAAD,CAAa/B,UAAQ,EAACJ,QAAQ,WAA9B,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,qBAApB,kBACA,cAACC,EAAA,EAAD,CAAOxC,GAAG,qBAAqBf,MAAOsG,EAAMhE,SAAUL,IACtD,cAAC+C,EAAA,EAAD,0BAEF,eAAC5B,EAAA,EAAD,CAAavB,OAAK,EAACZ,QAAQ,WAA3B,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,kBAApB,kBACA,cAACC,EAAA,EAAD,CACExC,GAAG,kBACHf,MAAOsG,EACPhE,SAAUL,EACV,mBAAiB,yBAEnB,cAAC+C,EAAA,EAAD,CAAgBjE,GAAG,uBAAnB,sBAEF,eAACqC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,qBAApB,kBACA,cAACuB,EAAA,EAAD,CACE9D,GAAG,qBACHf,MAAOsG,EACPhE,SAAUL,EACVjB,MAAM,YAGV,eAACoC,EAAA,EAAD,CAAanC,QAAQ,SAArB,UACE,cAACoC,EAAA,EAAD,CAAYC,QAAQ,mBAApB,kBACA,cAACgC,EAAA,EAAD,CACEvE,GAAG,mBACHf,MAAOsG,EACPhE,SAAUL,UCtEL,ICITwE,EAAY,CAAC,aAAc,eAElB,SAASC,IACtB,OACE,eAAClG,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAACC,EAAG,IAEzBE,YAAU,EACVC,aAAa,MANf,UAQE,cAACyC,EAAA,EAAD,CAAOnC,aAAa,cAAc2D,WAAY0B,IAC9C,cAAClD,EAAA,EAAD,CAAOhB,YAAY,cAAcwC,WAAY0B,IAC7C,cAAClD,EAAA,EAAD,CAAOlC,UAAQ,EAACD,aAAa,WAAW2D,WAAY0B,IACpD,cAAClD,EAAA,EAAD,CAAOnC,aAAa,QAAQS,OAAK,EAACkD,WAAY0B,OCfrC,SAASE,IACtB,OACE,eAACnG,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAACC,EAAG,EAAGC,MAAO,SAEnCC,YAAU,EACVC,aAAa,MANf,UAQE,cAAC,IAAD,CAAWE,MAAM,qBAAqB6C,MAAM,YAAY+C,SAAO,IAC/D,cAAC,IAAD,CACE5F,MAAM,iBACNC,QAAQ,SACR4C,MAAM,UACN+C,SAAO,IAET,cAAC,IAAD,CACE5F,MAAM,mBACNC,QAAQ,WACR4C,MAAM,UACN+C,SAAO,OCzBA,I,0BCQTC,EAAeC,YAAOC,IAAPD,CAAkB,CACrC,sBAAuB,CACrBjD,MAAO,SAET,8BAA+B,CAC7BmD,kBAAmB,SAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,OAEf,mBAAoB,CAClBA,YAAa,UAEf,yBAA0B,CACxBA,YAAa,YAKbC,EAAiBJ,YAAOK,IAAPL,EAAkB,gBAAEjB,EAAF,EAAEA,MAAF,MAAc,CACrD,YAAa,CACXuB,UAAWvB,EAAMwB,QAAQ,IAE3B,wBAAyB,CACvBC,aAAc,EACd5D,SAAU,WACVkC,gBAAwC,UAAvBC,EAAMC,QAAQC,KAAmB,UAAY,UAC9DwB,OAAQ,oBACRC,SAAU,GACV5G,MAAO,OACP6G,QAAS,YACTC,WAAY7B,EAAM8B,YAAYC,OAAO,CACnC,eACA,mBACA,eAGFC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACTC,UAAU,GAAD,OAAKC,YAAMnC,EAAMC,QAAQmC,QAAQC,KAAM,KAAvC,iBACTjB,YAAapB,EAAMC,QAAQmC,QAAQC,WAKnCC,EAAkBrB,aAAO,SAACsB,GAAD,OAC7B,cAAC,IAAD,aAAW7G,WAAY,CAAC8G,kBAAkB,IAAWD,MAD/BtB,EAErB,gBAAEjB,EAAF,EAAEA,MAAF,MAAc,CACf,yBAA0B,CACxB0B,OAAQ,oBACRe,SAAU,SACVhB,aAAc,EACd1B,gBAAwC,UAAvBC,EAAMC,QAAQC,KAAmB,UAAY,UAC9D2B,WAAY7B,EAAM8B,YAAYC,OAAO,CACnC,eACA,mBACA,eAEF,UAAW,CACThC,gBAAiB,eAEnB,gBAAiB,CACfA,gBAAiB,cACjBmC,UAAU,GAAD,OAAKC,YAAMnC,EAAMC,QAAQmC,QAAQC,KAAM,KAAvC,cACTjB,YAAapB,EAAMC,QAAQmC,QAAQC,WAKnCK,EAAsBzB,YAAOC,IAAPD,CAAkB,CAC5C,2BAA4B,CAC1BG,YAAa,QACbuB,YAAa,GAEf,6BAA8B,CAC5BvB,YAAa,MACbuB,YAAa,GAEf,iCAAkC,CAChCC,gBAAiB,EACjBhB,QAAS,oBAIE,SAASiB,IACtB,OACE,eAAClI,EAAA,EAAD,CACEC,UAAU,OACVI,YAAU,EACVH,GAAI,CACFiD,QAAS,OACTgF,oBAAqB,CAACC,GAAI,WAC1BC,IAAK,GANT,UASE,eAACzF,EAAA,EAAD,CAAanC,QAAQ,WAArB,UACE,cAACoC,EAAA,EAAD,CAAY3B,QAAM,EAAC4B,QAAQ,kBAA3B,uBAGA,cAAC4D,EAAD,CAAgB9F,aAAa,kBAAkBL,GAAG,uBAEpD,cAACoH,EAAD,CACEnH,MAAM,SACNI,aAAa,eACbL,GAAG,eACHE,QAAQ,SACR6H,MAAO,CAAC1B,UAAW,MAErB,cAACP,EAAD,CAAc7F,MAAM,aAAaD,GAAG,8BACpC,cAACwH,EAAD,CACEvH,MAAM,uBACNG,UAAQ,EACRF,QAAQ,WACRG,aAAa,UACbL,GAAG,iCCoDIgG,UArJG,WAChB,OACE,qCACE,cAACgC,EAAA,EAAD,CACEC,MAAM,aACNC,YAAY,6CACZC,OAAO,4CAGT,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,kBACNvI,UAAWF,EACXiJ,OCnDG,onBDoDHC,aAAW,EACXR,YAAY,kLAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,aACNvI,UAAWS,EACXsI,OE5DG,+iJF6DHC,aAAW,EACXR,YAAY,gMAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,aACNvI,UAAWmB,EACX4H,OlBrEG,mrDkBsEHC,aAAW,EACXR,YAAY,oIAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,YACNvI,UAAWqB,EACX0H,OhB9EG,wkFgB+EHC,aAAW,EACXR,YAAY,kMAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,SACNvI,UAAWiC,EACX8G,OdvFG,y+HcwFHC,aAAW,EACXR,YAAY,gFAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,QACNvI,UAAW0C,EACXqG,OZhGG,qgDYiGHC,aAAW,EACXR,YAAY,oEAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,mBACNvI,UAAWuD,EACXwF,OGzGG,sxQH0GHC,aAAW,EACXR,YAAY,6LAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,QACNvI,UAAW+E,EACXgE,OIlHG,89CJmHHC,aAAW,EACXR,YAAY,+CAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,SACNvI,UAAWuF,EACXwD,OK3HG,k+BL4HHC,aAAW,EACXR,YAAY,+KAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,aACNvI,UAAW0F,EACXqD,OMpIG,uYNqIHC,aAAW,EACXR,YAAY,uFAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,8BACNvI,UAAW4F,EACXmD,OO7IG,wzBP8IHC,aAAW,EACXR,YAAY,uDAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,aACNvI,UAAW+F,EACXgD,OLtJG,kpFKuJHC,aAAW,EACXR,YAAY,iNAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,SACNvI,UAAWiG,EACX8C,OQ/JG,8rBRgKHC,aAAW,MAGf,cAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,QACNvI,UAAWkG,EACX6C,OFvKG,qvBEwKHC,aAAW,EACXR,YAAY,iFAGhB,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEP,MAAM,gBACNvI,UAAWiI,EACXc,OShLG,k9HTiLHC,aAAW,EACXR,YAAY","file":"static/js/92.769c7fda.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"\n}), 'AccountCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function BasicTextFields() {\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& > :not(style)': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <TextField id='outlined-basic' label='Outlined' variant='outlined' />\r\n      <TextField id='filled-basic' label='Filled' variant='filled' />\r\n      <TextField id='standard-basic' label='Standard' variant='standard' />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function FormPropsTextFields() {\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <div>\r\n        <TextField\r\n          required\r\n          id='outlined-required'\r\n          label='Required'\r\n          defaultValue='Hello World'\r\n        />\r\n        <TextField\r\n          disabled\r\n          id='outlined-disabled'\r\n          label='Disabled'\r\n          defaultValue='Hello World'\r\n        />\r\n        <TextField\r\n          id='outlined-password-input'\r\n          label='Password'\r\n          type='password'\r\n          autoComplete='current-password'\r\n        />\r\n        <TextField\r\n          id='outlined-read-only-input'\r\n          label='Read Only'\r\n          defaultValue='Hello World'\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          id='outlined-number'\r\n          label='Number'\r\n          type='number'\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField id='outlined-search' label='Search field' type='search' />\r\n        <TextField\r\n          id='outlined-helperText'\r\n          label='Helper text'\r\n          defaultValue='Default Value'\r\n          helperText='Some important text'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id='filled-required'\r\n          label='Required'\r\n          defaultValue='Hello World'\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          disabled\r\n          id='filled-disabled'\r\n          label='Disabled'\r\n          defaultValue='Hello World'\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          id='filled-password-input'\r\n          label='Password'\r\n          type='password'\r\n          autoComplete='current-password'\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          id='filled-read-only-input'\r\n          label='Read Only'\r\n          defaultValue='Hello World'\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          id='filled-number'\r\n          label='Number'\r\n          type='number'\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          id='filled-search'\r\n          label='Search field'\r\n          type='search'\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          id='filled-helperText'\r\n          label='Helper text'\r\n          defaultValue='Default Value'\r\n          helperText='Some important text'\r\n          variant='filled'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id='standard-required'\r\n          label='Required'\r\n          defaultValue='Hello World'\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          disabled\r\n          id='standard-disabled'\r\n          label='Disabled'\r\n          defaultValue='Hello World'\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          id='standard-password-input'\r\n          label='Password'\r\n          type='password'\r\n          autoComplete='current-password'\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          id='standard-read-only-input'\r\n          label='Read Only'\r\n          defaultValue='Hello World'\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          id='standard-number'\r\n          label='Number'\r\n          type='number'\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          id='standard-search'\r\n          label='Search field'\r\n          type='search'\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          id='standard-helperText'\r\n          label='Helper text'\r\n          defaultValue='Default Value'\r\n          helperText='Some important text'\r\n          variant='standard'\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function ValidationTextFields() {\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <div>\r\n        <TextField\r\n          error\r\n          id='outlined-error'\r\n          label='Error'\r\n          defaultValue='Hello World'\r\n        />\r\n        <TextField\r\n          error\r\n          id='outlined-error-helper-text'\r\n          label='Error'\r\n          defaultValue='Hello World'\r\n          helperText='Incorrect entry.'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          error\r\n          id='filled-error'\r\n          label='Error'\r\n          defaultValue='Hello World'\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          error\r\n          id='filled-error-helper-text'\r\n          label='Error'\r\n          defaultValue='Hello World'\r\n          helperText='Incorrect entry.'\r\n          variant='filled'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          error\r\n          id='standard-error'\r\n          label='Error'\r\n          defaultValue='Hello World'\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          error\r\n          id='standard-error-helper-text'\r\n          label='Error'\r\n          defaultValue='Hello World'\r\n          helperText='Incorrect entry.'\r\n          variant='standard'\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function ValidationTextFields() {\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <div>\\r\\n        <TextField\\r\\n          error\\r\\n          id='outlined-error'\\r\\n          label='Error'\\r\\n          defaultValue='Hello World'\\r\\n        />\\r\\n        <TextField\\r\\n          error\\r\\n          id='outlined-error-helper-text'\\r\\n          label='Error'\\r\\n          defaultValue='Hello World'\\r\\n          helperText='Incorrect entry.'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          error\\r\\n          id='filled-error'\\r\\n          label='Error'\\r\\n          defaultValue='Hello World'\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          error\\r\\n          id='filled-error-helper-text'\\r\\n          label='Error'\\r\\n          defaultValue='Hello World'\\r\\n          helperText='Incorrect entry.'\\r\\n          variant='filled'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          error\\r\\n          id='standard-error'\\r\\n          label='Error'\\r\\n          defaultValue='Hello World'\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          error\\r\\n          id='standard-error-helper-text'\\r\\n          label='Error'\\r\\n          defaultValue='Hello World'\\r\\n          helperText='Incorrect entry.'\\r\\n          variant='standard'\\r\\n        />\\r\\n      </div>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function MultilineTextFields() {\r\n  const [value, setValue] = React.useState('Controlled');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <div>\r\n        <TextField\r\n          id='outlined-multiline-flexible'\r\n          label='Multiline'\r\n          multiline\r\n          maxRows={4}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          id='outlined-textarea'\r\n          label='Multiline Placeholder'\r\n          placeholder='Placeholder'\r\n          multiline\r\n        />\r\n        <TextField\r\n          id='outlined-multiline-static'\r\n          label='Multiline'\r\n          multiline\r\n          rows={4}\r\n          defaultValue='Default Value'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id='filled-multiline-flexible'\r\n          label='Multiline'\r\n          multiline\r\n          maxRows={4}\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          id='filled-textarea'\r\n          label='Multiline Placeholder'\r\n          placeholder='Placeholder'\r\n          multiline\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          id='filled-multiline-static'\r\n          label='Multiline'\r\n          multiline\r\n          rows={4}\r\n          defaultValue='Default Value'\r\n          variant='filled'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id='standard-multiline-flexible'\r\n          label='Multiline'\r\n          multiline\r\n          maxRows={4}\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          id='standard-textarea'\r\n          label='Multiline Placeholder'\r\n          placeholder='Placeholder'\r\n          multiline\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          id='standard-multiline-static'\r\n          label='Multiline'\r\n          multiline\r\n          rows={4}\r\n          defaultValue='Default Value'\r\n          variant='standard'\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function MultilineTextFields() {\\r\\n  const [value, setValue] = React.useState('Controlled');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setValue(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <div>\\r\\n        <TextField\\r\\n          id='outlined-multiline-flexible'\\r\\n          label='Multiline'\\r\\n          multiline\\r\\n          maxRows={4}\\r\\n          value={value}\\r\\n          onChange={handleChange}\\r\\n        />\\r\\n        <TextField\\r\\n          id='outlined-textarea'\\r\\n          label='Multiline Placeholder'\\r\\n          placeholder='Placeholder'\\r\\n          multiline\\r\\n        />\\r\\n        <TextField\\r\\n          id='outlined-multiline-static'\\r\\n          label='Multiline'\\r\\n          multiline\\r\\n          rows={4}\\r\\n          defaultValue='Default Value'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id='filled-multiline-flexible'\\r\\n          label='Multiline'\\r\\n          multiline\\r\\n          maxRows={4}\\r\\n          value={value}\\r\\n          onChange={handleChange}\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          id='filled-textarea'\\r\\n          label='Multiline Placeholder'\\r\\n          placeholder='Placeholder'\\r\\n          multiline\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          id='filled-multiline-static'\\r\\n          label='Multiline'\\r\\n          multiline\\r\\n          rows={4}\\r\\n          defaultValue='Default Value'\\r\\n          variant='filled'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id='standard-multiline-flexible'\\r\\n          label='Multiline'\\r\\n          multiline\\r\\n          maxRows={4}\\r\\n          value={value}\\r\\n          onChange={handleChange}\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          id='standard-textarea'\\r\\n          label='Multiline Placeholder'\\r\\n          placeholder='Placeholder'\\r\\n          multiline\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          id='standard-multiline-static'\\r\\n          label='Multiline'\\r\\n          multiline\\r\\n          rows={4}\\r\\n          defaultValue='Default Value'\\r\\n          variant='standard'\\r\\n        />\\r\\n      </div>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nexport default function SelectTextFields() {\r\n  const [currency, setCurrency] = React.useState('EUR');\r\n\r\n  const handleChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <div>\r\n        <TextField\r\n          id='outlined-select-currency'\r\n          select\r\n          label='Select'\r\n          value={currency}\r\n          onChange={handleChange}\r\n          helperText='Please select your currency'\r\n        >\r\n          {currencies.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id='outlined-select-currency-native'\r\n          select\r\n          label='Native select'\r\n          value={currency}\r\n          onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          helperText='Please select your currency'\r\n        >\r\n          {currencies.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id='filled-select-currency'\r\n          select\r\n          label='Select'\r\n          value={currency}\r\n          onChange={handleChange}\r\n          helperText='Please select your currency'\r\n          variant='filled'\r\n        >\r\n          {currencies.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id='filled-select-currency-native'\r\n          select\r\n          label='Native select'\r\n          value={currency}\r\n          onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          helperText='Please select your currency'\r\n          variant='filled'\r\n        >\r\n          {currencies.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id='standard-select-currency'\r\n          select\r\n          label='Select'\r\n          value={currency}\r\n          onChange={handleChange}\r\n          helperText='Please select your currency'\r\n          variant='standard'\r\n        >\r\n          {currencies.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id='standard-select-currency-native'\r\n          select\r\n          label='Native select'\r\n          value={currency}\r\n          onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          helperText='Please select your currency'\r\n          variant='standard'\r\n        >\r\n          {currencies.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport MenuItem from '@mui/material/MenuItem';\\r\\n\\r\\nconst currencies = [\\r\\n  {\\r\\n    value: 'USD',\\r\\n    label: '$',\\r\\n  },\\r\\n  {\\r\\n    value: 'EUR',\\r\\n    label: '€',\\r\\n  },\\r\\n  {\\r\\n    value: 'BTC',\\r\\n    label: '฿',\\r\\n  },\\r\\n  {\\r\\n    value: 'JPY',\\r\\n    label: '¥',\\r\\n  },\\r\\n];\\r\\n\\r\\nexport default function SelectTextFields() {\\r\\n  const [currency, setCurrency] = React.useState('EUR');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setCurrency(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <div>\\r\\n        <TextField\\r\\n          id='outlined-select-currency'\\r\\n          select\\r\\n          label='Select'\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          helperText='Please select your currency'\\r\\n        >\\r\\n          {currencies.map((option) => (\\r\\n            <MenuItem key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </TextField>\\r\\n        <TextField\\r\\n          id='outlined-select-currency-native'\\r\\n          select\\r\\n          label='Native select'\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          SelectProps={{\\r\\n            native: true,\\r\\n          }}\\r\\n          helperText='Please select your currency'\\r\\n        >\\r\\n          {currencies.map((option) => (\\r\\n            <option key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </option>\\r\\n          ))}\\r\\n        </TextField>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id='filled-select-currency'\\r\\n          select\\r\\n          label='Select'\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          helperText='Please select your currency'\\r\\n          variant='filled'\\r\\n        >\\r\\n          {currencies.map((option) => (\\r\\n            <MenuItem key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </TextField>\\r\\n        <TextField\\r\\n          id='filled-select-currency-native'\\r\\n          select\\r\\n          label='Native select'\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          SelectProps={{\\r\\n            native: true,\\r\\n          }}\\r\\n          helperText='Please select your currency'\\r\\n          variant='filled'\\r\\n        >\\r\\n          {currencies.map((option) => (\\r\\n            <option key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </option>\\r\\n          ))}\\r\\n        </TextField>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id='standard-select-currency'\\r\\n          select\\r\\n          label='Select'\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          helperText='Please select your currency'\\r\\n          variant='standard'\\r\\n        >\\r\\n          {currencies.map((option) => (\\r\\n            <MenuItem key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </TextField>\\r\\n        <TextField\\r\\n          id='standard-select-currency-native'\\r\\n          select\\r\\n          label='Native select'\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          SelectProps={{\\r\\n            native: true,\\r\\n          }}\\r\\n          helperText='Please select your currency'\\r\\n          variant='standard'\\r\\n        >\\r\\n          {currencies.map((option) => (\\r\\n            <option key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </option>\\r\\n          ))}\\r\\n        </TextField>\\r\\n      </div>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from '@mui/material/TextField';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\n\r\nexport default function InputWithIcon() {\r\n  return (\r\n    <Box sx={{'& > :not(style)': {m: 1}}}>\r\n      <FormControl variant='standard'>\r\n        <InputLabel htmlFor='input-with-icon-adornment'>\r\n          With a start adornment\r\n        </InputLabel>\r\n        <Input\r\n          id='input-with-icon-adornment'\r\n          startAdornment={\r\n            <InputAdornment position='start'>\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <TextField\r\n        id='input-with-icon-textfield'\r\n        label='TextField'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        variant='standard'\r\n      />\r\n      <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n        <AccountCircle sx={{color: 'action.active', mr: 1, my: 0.5}} />\r\n        <TextField id='input-with-sx' label='With sx' variant='standard' />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Input from '@mui/material/Input';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport InputAdornment from '@mui/material/InputAdornment';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport AccountCircle from '@mui/icons-material/AccountCircle';\\r\\n\\r\\nexport default function InputWithIcon() {\\r\\n  return (\\r\\n    <Box sx={{'& > :not(style)': {m: 1}}}>\\r\\n      <FormControl variant='standard'>\\r\\n        <InputLabel htmlFor='input-with-icon-adornment'>\\r\\n          With a start adornment\\r\\n        </InputLabel>\\r\\n        <Input\\r\\n          id='input-with-icon-adornment'\\r\\n          startAdornment={\\r\\n            <InputAdornment position='start'>\\r\\n              <AccountCircle />\\r\\n            </InputAdornment>\\r\\n          }\\r\\n        />\\r\\n      </FormControl>\\r\\n      <TextField\\r\\n        id='input-with-icon-textfield'\\r\\n        label='TextField'\\r\\n        InputProps={{\\r\\n          startAdornment: (\\r\\n            <InputAdornment position='start'>\\r\\n              <AccountCircle />\\r\\n            </InputAdornment>\\r\\n          ),\\r\\n        }}\\r\\n        variant='standard'\\r\\n      />\\r\\n      <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\\r\\n        <AccountCircle sx={{color: 'action.active', mr: 1, my: 0.5}} />\\r\\n        <TextField id='input-with-sx' label='With sx' variant='standard' />\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Input from '@mui/material/Input';\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from '@mui/material/TextField';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nexport default function InputAdornments() {\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({...values, [prop]: event.target.value});\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n      <div>\r\n        <TextField\r\n          label='With normal TextField'\r\n          id='outlined-start-adornment'\r\n          sx={{m: 1, width: '25ch'}}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position='start'>kg</InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <FormControl sx={{m: 1, width: '25ch'}} variant='outlined'>\r\n          <OutlinedInput\r\n            id='outlined-adornment-weight'\r\n            value={values.weight}\r\n            onChange={handleChange('weight')}\r\n            endAdornment={<InputAdornment position='end'>kg</InputAdornment>}\r\n            aria-describedby='outlined-weight-helper-text'\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n          />\r\n          <FormHelperText id='outlined-weight-helper-text'>\r\n            Weight\r\n          </FormHelperText>\r\n        </FormControl>\r\n        <FormControl sx={{m: 1, width: '25ch'}} variant='outlined'>\r\n          <InputLabel htmlFor='outlined-adornment-password'>\r\n            Password\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id='outlined-adornment-password'\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position='end'>\r\n                <IconButton\r\n                  aria-label='toggle password visibility'\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge='end'\r\n                >\r\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            label='Password'\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth sx={{m: 1}}>\r\n          <InputLabel htmlFor='outlined-adornment-amount'>Amount</InputLabel>\r\n          <OutlinedInput\r\n            id='outlined-adornment-amount'\r\n            value={values.amount}\r\n            onChange={handleChange('amount')}\r\n            startAdornment={<InputAdornment position='start'>$</InputAdornment>}\r\n            label='Amount'\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          label='With normal TextField'\r\n          id='filled-start-adornment'\r\n          sx={{m: 1, width: '25ch'}}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position='start'>kg</InputAdornment>\r\n            ),\r\n          }}\r\n          variant='filled'\r\n        />\r\n        <FormControl sx={{m: 1, width: '25ch'}} variant='filled'>\r\n          <FilledInput\r\n            id='filled-adornment-weight'\r\n            value={values.weight}\r\n            onChange={handleChange('weight')}\r\n            endAdornment={<InputAdornment position='end'>kg</InputAdornment>}\r\n            aria-describedby='filled-weight-helper-text'\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n          />\r\n          <FormHelperText id='filled-weight-helper-text'>Weight</FormHelperText>\r\n        </FormControl>\r\n        <FormControl sx={{m: 1, width: '25ch'}} variant='filled'>\r\n          <InputLabel htmlFor='filled-adornment-password'>Password</InputLabel>\r\n          <FilledInput\r\n            id='filled-adornment-password'\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position='end'>\r\n                <IconButton\r\n                  aria-label='toggle password visibility'\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge='end'\r\n                >\r\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth sx={{m: 1}} variant='filled'>\r\n          <InputLabel htmlFor='filled-adornment-amount'>Amount</InputLabel>\r\n          <FilledInput\r\n            id='filled-adornment-amount'\r\n            value={values.amount}\r\n            onChange={handleChange('amount')}\r\n            startAdornment={<InputAdornment position='start'>$</InputAdornment>}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          label='With normal TextField'\r\n          id='standard-start-adornment'\r\n          sx={{m: 1, width: '25ch'}}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position='start'>kg</InputAdornment>\r\n            ),\r\n          }}\r\n          variant='standard'\r\n        />\r\n        <FormControl variant='standard' sx={{m: 1, mt: 3, width: '25ch'}}>\r\n          <Input\r\n            id='standard-adornment-weight'\r\n            value={values.weight}\r\n            onChange={handleChange('weight')}\r\n            endAdornment={<InputAdornment position='end'>kg</InputAdornment>}\r\n            aria-describedby='standard-weight-helper-text'\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n          />\r\n          <FormHelperText id='standard-weight-helper-text'>\r\n            Weight\r\n          </FormHelperText>\r\n        </FormControl>\r\n        <FormControl sx={{m: 1, width: '25ch'}} variant='standard'>\r\n          <InputLabel htmlFor='standard-adornment-password'>\r\n            Password\r\n          </InputLabel>\r\n          <Input\r\n            id='standard-adornment-password'\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position='end'>\r\n                <IconButton\r\n                  aria-label='toggle password visibility'\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth sx={{m: 1}} variant='standard'>\r\n          <InputLabel htmlFor='standard-adornment-amount'>Amount</InputLabel>\r\n          <Input\r\n            id='standard-adornment-amount'\r\n            value={values.amount}\r\n            onChange={handleChange('amount')}\r\n            startAdornment={<InputAdornment position='start'>$</InputAdornment>}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function TextFieldSizes() {\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <div>\r\n        <TextField\r\n          label='Size'\r\n          id='outlined-size-small'\r\n          defaultValue='Small'\r\n          size='small'\r\n        />\r\n        <TextField\r\n          label='Size'\r\n          id='outlined-size-normal'\r\n          defaultValue='Normal'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          label='Size'\r\n          id='filled-size-small'\r\n          defaultValue='Small'\r\n          variant='filled'\r\n          size='small'\r\n        />\r\n        <TextField\r\n          label='Size'\r\n          id='filled-size-normal'\r\n          defaultValue='Normal'\r\n          variant='filled'\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          label='Size'\r\n          id='standard-size-small'\r\n          defaultValue='Small'\r\n          size='small'\r\n          variant='standard'\r\n        />\r\n        <TextField\r\n          label='Size'\r\n          id='standard-size-normal'\r\n          defaultValue='Normal'\r\n          variant='standard'\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction RedBar() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 20,\r\n        backgroundColor: (theme) =>\r\n          theme.palette.mode === 'light'\r\n            ? 'rgba(255, 0, 0, 0.1)'\r\n            : 'rgb(255 132 132 / 25%)',\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function LayoutTextFields() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        '& .MuiTextField-root': {width: '25ch'},\r\n      }}\r\n    >\r\n      <RedBar />\r\n      <TextField label={'margin=\"none\"'} id='margin-none' />\r\n      <RedBar />\r\n      <TextField label={'margin=\"dense\"'} id='margin-dense' margin='dense' />\r\n      <RedBar />\r\n      <TextField label={'margin=\"normal\"'} id='margin-normal' margin='normal' />\r\n      <RedBar />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function FullWidthTextField() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: 500,\r\n        maxWidth: '100%',\r\n      }}\r\n    >\r\n      <TextField fullWidth label='fullWidth' id='fullWidth' />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function StateTextFields() {\r\n  const [name, setName] = React.useState('Cat in the Hat');\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& > :not(style)': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <TextField\r\n        id='outlined-name'\r\n        label='Name'\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        id='outlined-uncontrolled'\r\n        label='Uncontrolled'\r\n        defaultValue='foo'\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\n\r\nexport default function ComposedTextField() {\r\n  const [name, setName] = React.useState('Composed TextField');\r\n\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& > :not(style)': {m: 1},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <FormControl variant='standard'>\r\n        <InputLabel htmlFor='component-simple'>Name</InputLabel>\r\n        <Input id='component-simple' value={name} onChange={handleChange} />\r\n      </FormControl>\r\n      <FormControl variant='standard'>\r\n        <InputLabel htmlFor='component-helper'>Name</InputLabel>\r\n        <Input\r\n          id='component-helper'\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby='component-helper-text'\r\n        />\r\n        <FormHelperText id='component-helper-text'>\r\n          Some important helper text\r\n        </FormHelperText>\r\n      </FormControl>\r\n      <FormControl disabled variant='standard'>\r\n        <InputLabel htmlFor='component-disabled'>Name</InputLabel>\r\n        <Input id='component-disabled' value={name} onChange={handleChange} />\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl error variant='standard'>\r\n        <InputLabel htmlFor='component-error'>Name</InputLabel>\r\n        <Input\r\n          id='component-error'\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby='component-error-text'\r\n        />\r\n        <FormHelperText id='component-error-text'>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel htmlFor='component-outlined'>Name</InputLabel>\r\n        <OutlinedInput\r\n          id='component-outlined'\r\n          value={name}\r\n          onChange={handleChange}\r\n          label='Name'\r\n        />\r\n      </FormControl>\r\n      <FormControl variant='filled'>\r\n        <InputLabel htmlFor='component-filled'>Name</InputLabel>\r\n        <FilledInput\r\n          id='component-filled'\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport FilledInput from '@mui/material/FilledInput';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport FormHelperText from '@mui/material/FormHelperText';\\r\\nimport Input from '@mui/material/Input';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport OutlinedInput from '@mui/material/OutlinedInput';\\r\\n\\r\\nexport default function ComposedTextField() {\\r\\n  const [name, setName] = React.useState('Composed TextField');\\r\\n\\r\\n  const handleChange = (event) => {\\r\\n    setName(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& > :not(style)': {m: 1},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <FormControl variant='standard'>\\r\\n        <InputLabel htmlFor='component-simple'>Name</InputLabel>\\r\\n        <Input id='component-simple' value={name} onChange={handleChange} />\\r\\n      </FormControl>\\r\\n      <FormControl variant='standard'>\\r\\n        <InputLabel htmlFor='component-helper'>Name</InputLabel>\\r\\n        <Input\\r\\n          id='component-helper'\\r\\n          value={name}\\r\\n          onChange={handleChange}\\r\\n          aria-describedby='component-helper-text'\\r\\n        />\\r\\n        <FormHelperText id='component-helper-text'>\\r\\n          Some important helper text\\r\\n        </FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl disabled variant='standard'>\\r\\n        <InputLabel htmlFor='component-disabled'>Name</InputLabel>\\r\\n        <Input id='component-disabled' value={name} onChange={handleChange} />\\r\\n        <FormHelperText>Disabled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl error variant='standard'>\\r\\n        <InputLabel htmlFor='component-error'>Name</InputLabel>\\r\\n        <Input\\r\\n          id='component-error'\\r\\n          value={name}\\r\\n          onChange={handleChange}\\r\\n          aria-describedby='component-error-text'\\r\\n        />\\r\\n        <FormHelperText id='component-error-text'>Error</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl>\\r\\n        <InputLabel htmlFor='component-outlined'>Name</InputLabel>\\r\\n        <OutlinedInput\\r\\n          id='component-outlined'\\r\\n          value={name}\\r\\n          onChange={handleChange}\\r\\n          label='Name'\\r\\n        />\\r\\n      </FormControl>\\r\\n      <FormControl variant='filled'>\\r\\n        <InputLabel htmlFor='component-filled'>Name</InputLabel>\\r\\n        <FilledInput\\r\\n          id='component-filled'\\r\\n          value={name}\\r\\n          onChange={handleChange}\\r\\n        />\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Input from '@mui/material/Input';\r\n\r\nconst ariaLabel = {'aria-label': 'description'};\r\n\r\nexport default function Inputs() {\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& > :not(style)': {m: 1},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <Input defaultValue='Hello world' inputProps={ariaLabel} />\r\n      <Input placeholder='Placeholder' inputProps={ariaLabel} />\r\n      <Input disabled defaultValue='Disabled' inputProps={ariaLabel} />\r\n      <Input defaultValue='Error' error inputProps={ariaLabel} />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function ColorTextFields() {\r\n  return (\r\n    <Box\r\n      component='form'\r\n      sx={{\r\n        '& > :not(style)': {m: 1, width: '25ch'},\r\n      }}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <TextField label='Outlined secondary' color='secondary' focused />\r\n      <TextField\r\n        label='Filled success'\r\n        variant='filled'\r\n        color='success'\r\n        focused\r\n      />\r\n      <TextField\r\n        label='Standard warning'\r\n        variant='standard'\r\n        color='warning'\r\n        focused\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function ColorTextFields() {\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& > :not(style)': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <TextField label='Outlined secondary' color='secondary' focused />\\r\\n      <TextField\\r\\n        label='Filled success'\\r\\n        variant='filled'\\r\\n        color='success'\\r\\n        focused\\r\\n      />\\r\\n      <TextField\\r\\n        label='Standard warning'\\r\\n        variant='standard'\\r\\n        color='warning'\\r\\n        focused\\r\\n      />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import * as React from 'react';\r\nimport {alpha, styled} from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nconst CssTextField = styled(TextField)({\r\n  '& label.Mui-focused': {\r\n    color: 'green',\r\n  },\r\n  '& .MuiInput-underline:after': {\r\n    borderBottomColor: 'green',\r\n  },\r\n  '& .MuiOutlinedInput-root': {\r\n    '& fieldset': {\r\n      borderColor: 'red',\r\n    },\r\n    '&:hover fieldset': {\r\n      borderColor: 'yellow',\r\n    },\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: 'green',\r\n    },\r\n  },\r\n});\r\n\r\nconst BootstrapInput = styled(InputBase)(({theme}) => ({\r\n  'label + &': {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  '& .MuiInputBase-input': {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create([\r\n      'border-color',\r\n      'background-color',\r\n      'box-shadow',\r\n    ]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst RedditTextField = styled((props) => (\r\n  <TextField InputProps={{disableUnderline: true}} {...props} />\r\n))(({theme}) => ({\r\n  '& .MuiFilledInput-root': {\r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\r\n    transition: theme.transitions.create([\r\n      'border-color',\r\n      'background-color',\r\n      'box-shadow',\r\n    ]),\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '&.Mui-focused': {\r\n      backgroundColor: 'transparent',\r\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = styled(TextField)({\r\n  '& input:valid + fieldset': {\r\n    borderColor: 'green',\r\n    borderWidth: 2,\r\n  },\r\n  '& input:invalid + fieldset': {\r\n    borderColor: 'red',\r\n    borderWidth: 2,\r\n  },\r\n  '& input:valid:focus + fieldset': {\r\n    borderLeftWidth: 6,\r\n    padding: '4px !important', // override inline-style\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputs() {\r\n  return (\r\n    <Box\r\n      component='form'\r\n      noValidate\r\n      sx={{\r\n        display: 'grid',\r\n        gridTemplateColumns: {sm: '1fr 1fr'},\r\n        gap: 2,\r\n      }}\r\n    >\r\n      <FormControl variant='standard'>\r\n        <InputLabel shrink htmlFor='bootstrap-input'>\r\n          Bootstrap\r\n        </InputLabel>\r\n        <BootstrapInput defaultValue='react-bootstrap' id='bootstrap-input' />\r\n      </FormControl>\r\n      <RedditTextField\r\n        label='Reddit'\r\n        defaultValue='react-reddit'\r\n        id='reddit-input'\r\n        variant='filled'\r\n        style={{marginTop: 11}}\r\n      />\r\n      <CssTextField label='Custom CSS' id='custom-css-outlined-input' />\r\n      <ValidationTextField\r\n        label='CSS validation style'\r\n        required\r\n        variant='outlined'\r\n        defaultValue='Success'\r\n        id='validation-outlined-input'\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppComponentHeader from '../../../../@crema/core/AppComponentHeader';\r\nimport AppGridContainer from '../../../../@crema/core/AppGridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppComponentCard from '../../../../@crema/core/AppComponentCard';\r\n\r\nimport BasicTextFields from './BasicTextField';\r\nimport BasicTextFieldsSource from '!raw-loader!./BasicTextField';\r\nimport FormPropsTextFields from './FormProps';\r\nimport FormPropsTextFieldsSource from '!raw-loader!./FormProps';\r\nimport ValidationTextFields from './Validation';\r\nimport ValidationTextFieldsSource from '!raw-loader!./Validation';\r\nimport MultilineTextFields from './Multiline';\r\nimport MultilineTextFieldsSource from '!raw-loader!./Multiline';\r\nimport SelectTextFields from './Select';\r\nimport SelectTextFieldsSource from '!raw-loader!./Select';\r\nimport InputWithIcon from './Icons';\r\nimport InputWithIconSource from '!raw-loader!./Icons';\r\nimport InputAdornments from './InputAdornments';\r\nimport InputAdornmentsSource from '!raw-loader!./InputAdornments';\r\nimport TextFieldSizes from './Sizes';\r\nimport TextFieldSizesSource from '!raw-loader!./Sizes';\r\nimport LayoutTextFields from './Margin';\r\nimport LayoutTextFieldsSource from '!raw-loader!./Margin';\r\nimport FullWidthTextField from './FullWidth';\r\nimport FullWidthTextFieldSource from '!raw-loader!./FullWidth';\r\nimport StateTextFields from './UncontrolledControlled';\r\nimport StateTextFieldsSource from '!raw-loader!./UncontrolledControlled';\r\nimport ComposedTextField from './Components';\r\nimport ComposedTextFieldSource from '!raw-loader!./Components';\r\nimport Inputs from './Inputs';\r\nimport InputsSource from '!raw-loader!./Inputs';\r\nimport ColorTextFields from './Color';\r\nimport ColorTextFieldsSource from '!raw-loader!./Color';\r\nimport CustomizedInputs from './Customization';\r\nimport CustomizedInputsSource from '!raw-loader!./Customization';\r\n\r\nconst TextField = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Text Field'\r\n        description='Text fields let users enter and edit text.'\r\n        refUrl='https://mui.com/components/text-fields/'\r\n      />\r\n\r\n      <AppGridContainer>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Basic TextField'\r\n            component={BasicTextFields}\r\n            source={BasicTextFieldsSource}\r\n            noScrollbar\r\n            description='The TextField wrapper component is a complete form control including a label, input, and help text. It comes with three variants: outlined (default), filled, and standard.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Form props'\r\n            component={FormPropsTextFields}\r\n            source={FormPropsTextFieldsSource}\r\n            noScrollbar\r\n            description='Standard form attributes are supported e.g. required, disabled, type, etc. as well as a helperText which is used to give context about a field input, such as how the input will be used.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Validation'\r\n            component={ValidationTextFields}\r\n            source={ValidationTextFieldsSource}\r\n            noScrollbar\r\n            description='The error prop toggles the error state. The helperText prop can then be used to provide feedback to the user about the error.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Multiline'\r\n            component={MultilineTextFields}\r\n            source={MultilineTextFieldsSource}\r\n            noScrollbar\r\n            description='The multiline prop transforms the text field into a <textarea> element. Unless the rows prop is set, the height of the text field dynamically matches its content (using TextareaAutosize).'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Select'\r\n            component={SelectTextFields}\r\n            source={SelectTextFieldsSource}\r\n            noScrollbar\r\n            description='The select prop makes the text field use the Select component internally.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Icons'\r\n            component={InputWithIcon}\r\n            source={InputWithIconSource}\r\n            noScrollbar\r\n            description='There are multiple ways to display an icon with a text field.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Input Adornments'\r\n            component={InputAdornments}\r\n            source={InputAdornmentsSource}\r\n            noScrollbar\r\n            description='The main way is with an InputAdornment. This can be used to add a prefix, a suffix, or an action to an input. For instance, you can use an icon button to hide or reveal the password.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Sizes'\r\n            component={TextFieldSizes}\r\n            source={TextFieldSizesSource}\r\n            noScrollbar\r\n            description='Fancy smaller inputs? Use the size prop.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Margin'\r\n            component={LayoutTextFields}\r\n            source={LayoutTextFieldsSource}\r\n            noScrollbar\r\n            description='The margin prop can be used to alter the vertical spacing of the text field. Using none (default) does not apply margins to the FormControl whereas dense and normal do.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Full width'\r\n            component={FullWidthTextField}\r\n            source={FullWidthTextFieldSource}\r\n            noScrollbar\r\n            description='fullWidth can be used to make the input take up the full width of its container.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Uncontrolled vs. Controlled'\r\n            component={StateTextFields}\r\n            source={StateTextFieldsSource}\r\n            noScrollbar\r\n            description='The component can be controlled or uncontrolled.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Components'\r\n            component={ComposedTextField}\r\n            source={ComposedTextFieldSource}\r\n            noScrollbar\r\n            description='TextField is composed of smaller components ( FormControl, Input, FilledInput, InputLabel, OutlinedInput, and FormHelperText ) that you can leverage directly to significantly customize your form inputs.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Inputs'\r\n            component={Inputs}\r\n            source={InputsSource}\r\n            noScrollbar\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Color'\r\n            component={ColorTextFields}\r\n            source={ColorTextFieldsSource}\r\n            noScrollbar\r\n            description='The color prop changes the highlight color of the text field when focused.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppComponentCard\r\n            title='Customization'\r\n            component={CustomizedInputs}\r\n            source={CustomizedInputsSource}\r\n            noScrollbar\r\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n      </AppGridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function BasicTextFields() {\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& > :not(style)': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <TextField id='outlined-basic' label='Outlined' variant='outlined' />\\r\\n      <TextField id='filled-basic' label='Filled' variant='filled' />\\r\\n      <TextField id='standard-basic' label='Standard' variant='standard' />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function FormPropsTextFields() {\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <div>\\r\\n        <TextField\\r\\n          required\\r\\n          id='outlined-required'\\r\\n          label='Required'\\r\\n          defaultValue='Hello World'\\r\\n        />\\r\\n        <TextField\\r\\n          disabled\\r\\n          id='outlined-disabled'\\r\\n          label='Disabled'\\r\\n          defaultValue='Hello World'\\r\\n        />\\r\\n        <TextField\\r\\n          id='outlined-password-input'\\r\\n          label='Password'\\r\\n          type='password'\\r\\n          autoComplete='current-password'\\r\\n        />\\r\\n        <TextField\\r\\n          id='outlined-read-only-input'\\r\\n          label='Read Only'\\r\\n          defaultValue='Hello World'\\r\\n          InputProps={{\\r\\n            readOnly: true,\\r\\n          }}\\r\\n        />\\r\\n        <TextField\\r\\n          id='outlined-number'\\r\\n          label='Number'\\r\\n          type='number'\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n        />\\r\\n        <TextField id='outlined-search' label='Search field' type='search' />\\r\\n        <TextField\\r\\n          id='outlined-helperText'\\r\\n          label='Helper text'\\r\\n          defaultValue='Default Value'\\r\\n          helperText='Some important text'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          required\\r\\n          id='filled-required'\\r\\n          label='Required'\\r\\n          defaultValue='Hello World'\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          disabled\\r\\n          id='filled-disabled'\\r\\n          label='Disabled'\\r\\n          defaultValue='Hello World'\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          id='filled-password-input'\\r\\n          label='Password'\\r\\n          type='password'\\r\\n          autoComplete='current-password'\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          id='filled-read-only-input'\\r\\n          label='Read Only'\\r\\n          defaultValue='Hello World'\\r\\n          InputProps={{\\r\\n            readOnly: true,\\r\\n          }}\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          id='filled-number'\\r\\n          label='Number'\\r\\n          type='number'\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          id='filled-search'\\r\\n          label='Search field'\\r\\n          type='search'\\r\\n          variant='filled'\\r\\n        />\\r\\n        <TextField\\r\\n          id='filled-helperText'\\r\\n          label='Helper text'\\r\\n          defaultValue='Default Value'\\r\\n          helperText='Some important text'\\r\\n          variant='filled'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          required\\r\\n          id='standard-required'\\r\\n          label='Required'\\r\\n          defaultValue='Hello World'\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          disabled\\r\\n          id='standard-disabled'\\r\\n          label='Disabled'\\r\\n          defaultValue='Hello World'\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          id='standard-password-input'\\r\\n          label='Password'\\r\\n          type='password'\\r\\n          autoComplete='current-password'\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          id='standard-read-only-input'\\r\\n          label='Read Only'\\r\\n          defaultValue='Hello World'\\r\\n          InputProps={{\\r\\n            readOnly: true,\\r\\n          }}\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          id='standard-number'\\r\\n          label='Number'\\r\\n          type='number'\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          id='standard-search'\\r\\n          label='Search field'\\r\\n          type='search'\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          id='standard-helperText'\\r\\n          label='Helper text'\\r\\n          defaultValue='Default Value'\\r\\n          helperText='Some important text'\\r\\n          variant='standard'\\r\\n        />\\r\\n      </div>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport IconButton from '@mui/material/IconButton';\\r\\nimport Input from '@mui/material/Input';\\r\\nimport FilledInput from '@mui/material/FilledInput';\\r\\nimport OutlinedInput from '@mui/material/OutlinedInput';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport InputAdornment from '@mui/material/InputAdornment';\\r\\nimport FormHelperText from '@mui/material/FormHelperText';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport Visibility from '@mui/icons-material/Visibility';\\r\\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\\r\\n\\r\\nexport default function InputAdornments() {\\r\\n  const [values, setValues] = React.useState({\\r\\n    amount: '',\\r\\n    password: '',\\r\\n    weight: '',\\r\\n    weightRange: '',\\r\\n    showPassword: false,\\r\\n  });\\r\\n\\r\\n  const handleChange = (prop) => (event) => {\\r\\n    setValues({...values, [prop]: event.target.value});\\r\\n  };\\r\\n\\r\\n  const handleClickShowPassword = () => {\\r\\n    setValues({\\r\\n      ...values,\\r\\n      showPassword: !values.showPassword,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const handleMouseDownPassword = (event) => {\\r\\n    event.preventDefault();\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label='With normal TextField'\\r\\n          id='outlined-start-adornment'\\r\\n          sx={{m: 1, width: '25ch'}}\\r\\n          InputProps={{\\r\\n            startAdornment: (\\r\\n              <InputAdornment position='start'>kg</InputAdornment>\\r\\n            ),\\r\\n          }}\\r\\n        />\\r\\n        <FormControl sx={{m: 1, width: '25ch'}} variant='outlined'>\\r\\n          <OutlinedInput\\r\\n            id='outlined-adornment-weight'\\r\\n            value={values.weight}\\r\\n            onChange={handleChange('weight')}\\r\\n            endAdornment={<InputAdornment position='end'>kg</InputAdornment>}\\r\\n            aria-describedby='outlined-weight-helper-text'\\r\\n            inputProps={{\\r\\n              'aria-label': 'weight',\\r\\n            }}\\r\\n          />\\r\\n          <FormHelperText id='outlined-weight-helper-text'>\\r\\n            Weight\\r\\n          </FormHelperText>\\r\\n        </FormControl>\\r\\n        <FormControl sx={{m: 1, width: '25ch'}} variant='outlined'>\\r\\n          <InputLabel htmlFor='outlined-adornment-password'>\\r\\n            Password\\r\\n          </InputLabel>\\r\\n          <OutlinedInput\\r\\n            id='outlined-adornment-password'\\r\\n            type={values.showPassword ? 'text' : 'password'}\\r\\n            value={values.password}\\r\\n            onChange={handleChange('password')}\\r\\n            endAdornment={\\r\\n              <InputAdornment position='end'>\\r\\n                <IconButton\\r\\n                  aria-label='toggle password visibility'\\r\\n                  onClick={handleClickShowPassword}\\r\\n                  onMouseDown={handleMouseDownPassword}\\r\\n                  edge='end'\\r\\n                >\\r\\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\\r\\n                </IconButton>\\r\\n              </InputAdornment>\\r\\n            }\\r\\n            label='Password'\\r\\n          />\\r\\n        </FormControl>\\r\\n        <FormControl fullWidth sx={{m: 1}}>\\r\\n          <InputLabel htmlFor='outlined-adornment-amount'>Amount</InputLabel>\\r\\n          <OutlinedInput\\r\\n            id='outlined-adornment-amount'\\r\\n            value={values.amount}\\r\\n            onChange={handleChange('amount')}\\r\\n            startAdornment={<InputAdornment position='start'>$</InputAdornment>}\\r\\n            label='Amount'\\r\\n          />\\r\\n        </FormControl>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label='With normal TextField'\\r\\n          id='filled-start-adornment'\\r\\n          sx={{m: 1, width: '25ch'}}\\r\\n          InputProps={{\\r\\n            startAdornment: (\\r\\n              <InputAdornment position='start'>kg</InputAdornment>\\r\\n            ),\\r\\n          }}\\r\\n          variant='filled'\\r\\n        />\\r\\n        <FormControl sx={{m: 1, width: '25ch'}} variant='filled'>\\r\\n          <FilledInput\\r\\n            id='filled-adornment-weight'\\r\\n            value={values.weight}\\r\\n            onChange={handleChange('weight')}\\r\\n            endAdornment={<InputAdornment position='end'>kg</InputAdornment>}\\r\\n            aria-describedby='filled-weight-helper-text'\\r\\n            inputProps={{\\r\\n              'aria-label': 'weight',\\r\\n            }}\\r\\n          />\\r\\n          <FormHelperText id='filled-weight-helper-text'>Weight</FormHelperText>\\r\\n        </FormControl>\\r\\n        <FormControl sx={{m: 1, width: '25ch'}} variant='filled'>\\r\\n          <InputLabel htmlFor='filled-adornment-password'>Password</InputLabel>\\r\\n          <FilledInput\\r\\n            id='filled-adornment-password'\\r\\n            type={values.showPassword ? 'text' : 'password'}\\r\\n            value={values.password}\\r\\n            onChange={handleChange('password')}\\r\\n            endAdornment={\\r\\n              <InputAdornment position='end'>\\r\\n                <IconButton\\r\\n                  aria-label='toggle password visibility'\\r\\n                  onClick={handleClickShowPassword}\\r\\n                  onMouseDown={handleMouseDownPassword}\\r\\n                  edge='end'\\r\\n                >\\r\\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\\r\\n                </IconButton>\\r\\n              </InputAdornment>\\r\\n            }\\r\\n          />\\r\\n        </FormControl>\\r\\n        <FormControl fullWidth sx={{m: 1}} variant='filled'>\\r\\n          <InputLabel htmlFor='filled-adornment-amount'>Amount</InputLabel>\\r\\n          <FilledInput\\r\\n            id='filled-adornment-amount'\\r\\n            value={values.amount}\\r\\n            onChange={handleChange('amount')}\\r\\n            startAdornment={<InputAdornment position='start'>$</InputAdornment>}\\r\\n          />\\r\\n        </FormControl>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label='With normal TextField'\\r\\n          id='standard-start-adornment'\\r\\n          sx={{m: 1, width: '25ch'}}\\r\\n          InputProps={{\\r\\n            startAdornment: (\\r\\n              <InputAdornment position='start'>kg</InputAdornment>\\r\\n            ),\\r\\n          }}\\r\\n          variant='standard'\\r\\n        />\\r\\n        <FormControl variant='standard' sx={{m: 1, mt: 3, width: '25ch'}}>\\r\\n          <Input\\r\\n            id='standard-adornment-weight'\\r\\n            value={values.weight}\\r\\n            onChange={handleChange('weight')}\\r\\n            endAdornment={<InputAdornment position='end'>kg</InputAdornment>}\\r\\n            aria-describedby='standard-weight-helper-text'\\r\\n            inputProps={{\\r\\n              'aria-label': 'weight',\\r\\n            }}\\r\\n          />\\r\\n          <FormHelperText id='standard-weight-helper-text'>\\r\\n            Weight\\r\\n          </FormHelperText>\\r\\n        </FormControl>\\r\\n        <FormControl sx={{m: 1, width: '25ch'}} variant='standard'>\\r\\n          <InputLabel htmlFor='standard-adornment-password'>\\r\\n            Password\\r\\n          </InputLabel>\\r\\n          <Input\\r\\n            id='standard-adornment-password'\\r\\n            type={values.showPassword ? 'text' : 'password'}\\r\\n            value={values.password}\\r\\n            onChange={handleChange('password')}\\r\\n            endAdornment={\\r\\n              <InputAdornment position='end'>\\r\\n                <IconButton\\r\\n                  aria-label='toggle password visibility'\\r\\n                  onClick={handleClickShowPassword}\\r\\n                  onMouseDown={handleMouseDownPassword}\\r\\n                >\\r\\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\\r\\n                </IconButton>\\r\\n              </InputAdornment>\\r\\n            }\\r\\n          />\\r\\n        </FormControl>\\r\\n        <FormControl fullWidth sx={{m: 1}} variant='standard'>\\r\\n          <InputLabel htmlFor='standard-adornment-amount'>Amount</InputLabel>\\r\\n          <Input\\r\\n            id='standard-adornment-amount'\\r\\n            value={values.amount}\\r\\n            onChange={handleChange('amount')}\\r\\n            startAdornment={<InputAdornment position='start'>$</InputAdornment>}\\r\\n          />\\r\\n        </FormControl>\\r\\n      </div>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function TextFieldSizes() {\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& .MuiTextField-root': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <div>\\r\\n        <TextField\\r\\n          label='Size'\\r\\n          id='outlined-size-small'\\r\\n          defaultValue='Small'\\r\\n          size='small'\\r\\n        />\\r\\n        <TextField\\r\\n          label='Size'\\r\\n          id='outlined-size-normal'\\r\\n          defaultValue='Normal'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label='Size'\\r\\n          id='filled-size-small'\\r\\n          defaultValue='Small'\\r\\n          variant='filled'\\r\\n          size='small'\\r\\n        />\\r\\n        <TextField\\r\\n          label='Size'\\r\\n          id='filled-size-normal'\\r\\n          defaultValue='Normal'\\r\\n          variant='filled'\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label='Size'\\r\\n          id='standard-size-small'\\r\\n          defaultValue='Small'\\r\\n          size='small'\\r\\n          variant='standard'\\r\\n        />\\r\\n        <TextField\\r\\n          label='Size'\\r\\n          id='standard-size-normal'\\r\\n          defaultValue='Normal'\\r\\n          variant='standard'\\r\\n        />\\r\\n      </div>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nfunction RedBar() {\\r\\n  return (\\r\\n    <Box\\r\\n      sx={{\\r\\n        height: 20,\\r\\n        backgroundColor: (theme) =>\\r\\n          theme.palette.mode === 'light'\\r\\n            ? 'rgba(255, 0, 0, 0.1)'\\r\\n            : 'rgb(255 132 132 / 25%)',\\r\\n      }}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default function LayoutTextFields() {\\r\\n  return (\\r\\n    <Box\\r\\n      sx={{\\r\\n        display: 'flex',\\r\\n        flexDirection: 'column',\\r\\n        '& .MuiTextField-root': {width: '25ch'},\\r\\n      }}\\r\\n    >\\r\\n      <RedBar />\\r\\n      <TextField label={'margin=\\\"none\\\"'} id='margin-none' />\\r\\n      <RedBar />\\r\\n      <TextField label={'margin=\\\"dense\\\"'} id='margin-dense' margin='dense' />\\r\\n      <RedBar />\\r\\n      <TextField label={'margin=\\\"normal\\\"'} id='margin-normal' margin='normal' />\\r\\n      <RedBar />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function FullWidthTextField() {\\r\\n  return (\\r\\n    <Box\\r\\n      sx={{\\r\\n        width: 500,\\r\\n        maxWidth: '100%',\\r\\n      }}\\r\\n    >\\r\\n      <TextField fullWidth label='fullWidth' id='fullWidth' />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport TextField from '@mui/material/TextField';\\r\\n\\r\\nexport default function StateTextFields() {\\r\\n  const [name, setName] = React.useState('Cat in the Hat');\\r\\n  const handleChange = (event) => {\\r\\n    setName(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& > :not(style)': {m: 1, width: '25ch'},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <TextField\\r\\n        id='outlined-name'\\r\\n        label='Name'\\r\\n        value={name}\\r\\n        onChange={handleChange}\\r\\n      />\\r\\n      <TextField\\r\\n        id='outlined-uncontrolled'\\r\\n        label='Uncontrolled'\\r\\n        defaultValue='foo'\\r\\n      />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport Input from '@mui/material/Input';\\r\\n\\r\\nconst ariaLabel = {'aria-label': 'description'};\\r\\n\\r\\nexport default function Inputs() {\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      sx={{\\r\\n        '& > :not(style)': {m: 1},\\r\\n      }}\\r\\n      noValidate\\r\\n      autoComplete='off'\\r\\n    >\\r\\n      <Input defaultValue='Hello world' inputProps={ariaLabel} />\\r\\n      <Input placeholder='Placeholder' inputProps={ariaLabel} />\\r\\n      <Input disabled defaultValue='Disabled' inputProps={ariaLabel} />\\r\\n      <Input defaultValue='Error' error inputProps={ariaLabel} />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import * as React from 'react';\\r\\nimport {alpha, styled} from '@mui/material/styles';\\r\\nimport InputBase from '@mui/material/InputBase';\\r\\nimport Box from '@mui/material/Box';\\r\\nimport InputLabel from '@mui/material/InputLabel';\\r\\nimport TextField from '@mui/material/TextField';\\r\\nimport FormControl from '@mui/material/FormControl';\\r\\n\\r\\nconst CssTextField = styled(TextField)({\\r\\n  '& label.Mui-focused': {\\r\\n    color: 'green',\\r\\n  },\\r\\n  '& .MuiInput-underline:after': {\\r\\n    borderBottomColor: 'green',\\r\\n  },\\r\\n  '& .MuiOutlinedInput-root': {\\r\\n    '& fieldset': {\\r\\n      borderColor: 'red',\\r\\n    },\\r\\n    '&:hover fieldset': {\\r\\n      borderColor: 'yellow',\\r\\n    },\\r\\n    '&.Mui-focused fieldset': {\\r\\n      borderColor: 'green',\\r\\n    },\\r\\n  },\\r\\n});\\r\\n\\r\\nconst BootstrapInput = styled(InputBase)(({theme}) => ({\\r\\n  'label + &': {\\r\\n    marginTop: theme.spacing(3),\\r\\n  },\\r\\n  '& .MuiInputBase-input': {\\r\\n    borderRadius: 4,\\r\\n    position: 'relative',\\r\\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\\r\\n    border: '1px solid #ced4da',\\r\\n    fontSize: 16,\\r\\n    width: 'auto',\\r\\n    padding: '10px 12px',\\r\\n    transition: theme.transitions.create([\\r\\n      'border-color',\\r\\n      'background-color',\\r\\n      'box-shadow',\\r\\n    ]),\\r\\n    // Use the system font instead of the default Roboto font.\\r\\n    fontFamily: [\\r\\n      '-apple-system',\\r\\n      'BlinkMacSystemFont',\\r\\n      '\\\"Segoe UI\\\"',\\r\\n      'Roboto',\\r\\n      '\\\"Helvetica Neue\\\"',\\r\\n      'Arial',\\r\\n      'sans-serif',\\r\\n      '\\\"Apple Color Emoji\\\"',\\r\\n      '\\\"Segoe UI Emoji\\\"',\\r\\n      '\\\"Segoe UI Symbol\\\"',\\r\\n    ].join(','),\\r\\n    '&:focus': {\\r\\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\\r\\n      borderColor: theme.palette.primary.main,\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst RedditTextField = styled((props) => (\\r\\n  <TextField InputProps={{disableUnderline: true}} {...props} />\\r\\n))(({theme}) => ({\\r\\n  '& .MuiFilledInput-root': {\\r\\n    border: '1px solid #e2e2e1',\\r\\n    overflow: 'hidden',\\r\\n    borderRadius: 4,\\r\\n    backgroundColor: theme.palette.mode === 'light' ? '#fcfcfb' : '#2b2b2b',\\r\\n    transition: theme.transitions.create([\\r\\n      'border-color',\\r\\n      'background-color',\\r\\n      'box-shadow',\\r\\n    ]),\\r\\n    '&:hover': {\\r\\n      backgroundColor: 'transparent',\\r\\n    },\\r\\n    '&.Mui-focused': {\\r\\n      backgroundColor: 'transparent',\\r\\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\\r\\n      borderColor: theme.palette.primary.main,\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst ValidationTextField = styled(TextField)({\\r\\n  '& input:valid + fieldset': {\\r\\n    borderColor: 'green',\\r\\n    borderWidth: 2,\\r\\n  },\\r\\n  '& input:invalid + fieldset': {\\r\\n    borderColor: 'red',\\r\\n    borderWidth: 2,\\r\\n  },\\r\\n  '& input:valid:focus + fieldset': {\\r\\n    borderLeftWidth: 6,\\r\\n    padding: '4px !important', // override inline-style\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function CustomizedInputs() {\\r\\n  return (\\r\\n    <Box\\r\\n      component='form'\\r\\n      noValidate\\r\\n      sx={{\\r\\n        display: 'grid',\\r\\n        gridTemplateColumns: {sm: '1fr 1fr'},\\r\\n        gap: 2,\\r\\n      }}\\r\\n    >\\r\\n      <FormControl variant='standard'>\\r\\n        <InputLabel shrink htmlFor='bootstrap-input'>\\r\\n          Bootstrap\\r\\n        </InputLabel>\\r\\n        <BootstrapInput defaultValue='react-bootstrap' id='bootstrap-input' />\\r\\n      </FormControl>\\r\\n      <RedditTextField\\r\\n        label='Reddit'\\r\\n        defaultValue='react-reddit'\\r\\n        id='reddit-input'\\r\\n        variant='filled'\\r\\n        style={{marginTop: 11}}\\r\\n      />\\r\\n      <CssTextField label='Custom CSS' id='custom-css-outlined-input' />\\r\\n      <ValidationTextField\\r\\n        label='CSS validation style'\\r\\n        required\\r\\n        variant='outlined'\\r\\n        defaultValue='Success'\\r\\n        id='validation-outlined-input'\\r\\n      />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}