(this.webpackJsonphister=this.webpackJsonphister||[]).push([[102],{1624:function(e,t,n){"use strict";var r=n(6),i=n(13),c=n(3),a=n(2),l=(n(8),n(153)),o=n(145),s=n(726),d=n(86),m=n(1),h=Object(d.a)(Object(m.jsx)("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),u=Object(d.a)(Object(m.jsx)("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),b=Object(d.a)(Object(m.jsx)("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox"),f=n(18),j=n(25),x=n(17),k=n(101),p=n(98);function g(e){return Object(k.a)("MuiCheckbox",e)}var O=Object(p.a)("MuiCheckbox",["root","checked","disabled","indeterminate","colorPrimary","colorSecondary"]),v=["checkedIcon","color","icon","indeterminate","indeterminateIcon","inputProps","size"],C=Object(x.a)(s.a,{shouldForwardProp:function(e){return Object(x.b)(e)||"classes"===e},name:"MuiCheckbox",slot:"Root",overridesResolver:function(e,t){var n=e.ownerState;return[t.root,n.indeterminate&&t.indeterminate,"default"!==n.color&&t["color".concat(Object(f.a)(n.color))]]}})((function(e){var t,n=e.theme,i=e.ownerState;return Object(c.a)({color:n.palette.text.secondary},!i.disableRipple&&{"&:hover":{backgroundColor:Object(o.a)("default"===i.color?n.palette.action.active:n.palette[i.color].main,n.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"default"!==i.color&&(t={},Object(r.a)(t,"&.".concat(O.checked,", &.").concat(O.indeterminate),{color:n.palette[i.color].main}),Object(r.a)(t,"&.".concat(O.disabled),{color:n.palette.action.disabled}),t))})),I=Object(m.jsx)(u,{}),L=Object(m.jsx)(h,{}),y=Object(m.jsx)(b,{}),R=a.forwardRef((function(e,t){var n,r,o=Object(j.a)({props:e,name:"MuiCheckbox"}),s=o.checkedIcon,d=void 0===s?I:s,h=o.color,u=void 0===h?"primary":h,b=o.icon,x=void 0===b?L:b,k=o.indeterminate,p=void 0!==k&&k,O=o.indeterminateIcon,R=void 0===O?y:O,w=o.inputProps,S=o.size,z=void 0===S?"medium":S,G=Object(i.a)(o,v),B=p?R:x,T=p?R:d,P=Object(c.a)({},o,{color:u,indeterminate:p,size:z}),M=function(e){var t=e.classes,n=e.indeterminate,r=e.color,i={root:["root",n&&"indeterminate","color".concat(Object(f.a)(r))]},a=Object(l.a)(i,g,t);return Object(c.a)({},t,a)}(P);return Object(m.jsx)(C,Object(c.a)({type:"checkbox",inputProps:Object(c.a)({"data-indeterminate":p},w),icon:a.cloneElement(B,{fontSize:null!=(n=B.props.fontSize)?n:z}),checkedIcon:a.cloneElement(T,{fontSize:null!=(r=T.props.fontSize)?r:z}),ownerState:P,ref:t},G,{classes:M}))}));t.a=R},1661:function(e,t,n){"use strict";var r=n(13),i=n(3),c=n(2),a=(n(8),n(12)),l=n(153),o=n(17),s=n(25),d=n(1495),m=n(167),h=n(1),u=["className"],b=Object(o.a)("div",{name:"MuiListItemIcon",slot:"Root",overridesResolver:function(e,t){var n=e.ownerState;return[t.root,"flex-start"===n.alignItems&&t.alignItemsFlexStart]}})((function(e){var t=e.theme,n=e.ownerState;return Object(i.a)({minWidth:56,color:t.palette.action.active,flexShrink:0,display:"inline-flex"},"flex-start"===n.alignItems&&{marginTop:8})})),f=c.forwardRef((function(e,t){var n=Object(s.a)({props:e,name:"MuiListItemIcon"}),o=n.className,f=Object(r.a)(n,u),j=c.useContext(m.a),x=Object(i.a)({},n,{alignItems:j.alignItems}),k=function(e){var t=e.alignItems,n=e.classes,r={root:["root","flex-start"===t&&"alignItemsFlexStart"]};return Object(l.a)(r,d.b,n)}(x);return Object(h.jsx)(b,Object(i.a)({className:Object(a.default)(k.root,o),ownerState:x,ref:t},f))}));t.a=f},2359:function(e,t,n){"use strict";n.r(t);var r=n(2),i=n(72),c=n(60),a=n(1458),l=n(38),o=n(28),s=n(14),d=n(1582),m=n(990),h=n(1661),u=n(1562),b=n(1624),f=n(719),j=n(604),x=n(1);function k(e,t){return e.filter((function(e){return-1===t.indexOf(e)}))}function p(e,t){return e.filter((function(e){return-1!==t.indexOf(e)}))}function g(){var e=r.useState([]),t=Object(s.a)(e,2),n=t[0],i=t[1],c=r.useState([0,1,2,3]),l=Object(s.a)(c,2),g=l[0],O=l[1],v=r.useState([4,5,6,7]),C=Object(s.a)(v,2),I=C[0],L=C[1],y=p(n,g),R=p(n,I),w=function(e){return function(){var t=n.indexOf(e),r=Object(o.a)(n);-1===t?r.push(e):r.splice(t,1),i(r)}},S=function(e){return Object(x.jsx)(j.a,{sx:{width:200,height:230,overflow:"auto"},children:Object(x.jsxs)(d.a,{dense:!0,component:"div",role:"list",children:[e.map((function(e){var t="transfer-list-item-".concat(e,"-label");return Object(x.jsxs)(m.a,{role:"listitem",button:!0,onClick:w(e),children:[Object(x.jsx)(h.a,{children:Object(x.jsx)(b.a,{checked:-1!==n.indexOf(e),tabIndex:-1,disableRipple:!0,inputProps:{"aria-labelledby":t}})}),Object(x.jsx)(u.a,{id:t,primary:"List item ".concat(e+1)})]},e)})),Object(x.jsx)(m.a,{})]})})};return Object(x.jsxs)(a.a,{container:!0,spacing:2,justifyContent:"center",alignItems:"center",children:[Object(x.jsx)(a.a,{item:!0,children:S(g)}),Object(x.jsx)(a.a,{item:!0,children:Object(x.jsxs)(a.a,{container:!0,direction:"column",alignItems:"center",children:[Object(x.jsx)(f.a,{sx:{my:.5},variant:"outlined",size:"small",onClick:function(){L(I.concat(g)),O([])},disabled:0===g.length,"aria-label":"move all right",children:"\u226b"}),Object(x.jsx)(f.a,{sx:{my:.5},variant:"outlined",size:"small",onClick:function(){L(I.concat(y)),O(k(g,y)),i(k(n,y))},disabled:0===y.length,"aria-label":"move selected right",children:">"}),Object(x.jsx)(f.a,{sx:{my:.5},variant:"outlined",size:"small",onClick:function(){O(g.concat(R)),L(k(I,R)),i(k(n,R))},disabled:0===R.length,"aria-label":"move selected left",children:"<"}),Object(x.jsx)(f.a,{sx:{my:.5},variant:"outlined",size:"small",onClick:function(){O(g.concat(I)),L([])},disabled:0===I.length,"aria-label":"move all left",children:"\u226a"})]})}),Object(x.jsx)(a.a,{item:!0,children:S(I)})]})}var O=n(1460),v=n(1461),C=n(1565);function I(e,t){return e.filter((function(e){return-1===t.indexOf(e)}))}function L(e,t){return e.filter((function(e){return-1!==t.indexOf(e)}))}function y(){var e=r.useState([]),t=Object(s.a)(e,2),n=t[0],i=t[1],c=r.useState([0,1,2,3]),l=Object(s.a)(c,2),j=l[0],k=l[1],p=r.useState([4,5,6,7]),g=Object(s.a)(p,2),y=g[0],R=g[1],w=L(n,j),S=L(n,y),z=function(e){return function(){var t=n.indexOf(e),r=Object(o.a)(n);-1===t?r.push(e):r.splice(t,1),i(r)}},G=function(e){return L(n,e).length},B=function(e){return function(){var t,r;G(e)===e.length?i(I(n,e)):i((t=n,r=e,[].concat(Object(o.a)(t),Object(o.a)(I(r,t)))))}},T=function(e,t){return Object(x.jsxs)(O.a,{children:[Object(x.jsx)(v.a,{sx:{px:2,py:1},avatar:Object(x.jsx)(b.a,{onClick:B(t),checked:G(t)===t.length&&0!==t.length,indeterminate:G(t)!==t.length&&0!==G(t),disabled:0===t.length,inputProps:{"aria-label":"all items selected"}}),title:e,subheader:"".concat(G(t),"/").concat(t.length," selected")}),Object(x.jsx)(C.a,{}),Object(x.jsxs)(d.a,{sx:{width:200,height:230,bgcolor:"background.paper",overflow:"auto"},dense:!0,component:"div",role:"list",children:[t.map((function(e){var t="transfer-list-all-item-".concat(e,"-label");return Object(x.jsxs)(m.a,{role:"listitem",button:!0,onClick:z(e),children:[Object(x.jsx)(h.a,{children:Object(x.jsx)(b.a,{checked:-1!==n.indexOf(e),tabIndex:-1,disableRipple:!0,inputProps:{"aria-labelledby":t}})}),Object(x.jsx)(u.a,{id:t,primary:"List item ".concat(e+1)})]},e)})),Object(x.jsx)(m.a,{})]})]})};return Object(x.jsxs)(a.a,{container:!0,spacing:2,justifyContent:"center",alignItems:"center",children:[Object(x.jsx)(a.a,{item:!0,children:T("Choices",j)}),Object(x.jsx)(a.a,{item:!0,children:Object(x.jsxs)(a.a,{container:!0,direction:"column",alignItems:"center",children:[Object(x.jsx)(f.a,{sx:{my:.5},variant:"outlined",size:"small",onClick:function(){R(y.concat(w)),k(I(j,w)),i(I(n,w))},disabled:0===w.length,"aria-label":"move selected right",children:">"}),Object(x.jsx)(f.a,{sx:{my:.5},variant:"outlined",size:"small",onClick:function(){k(j.concat(S)),R(I(y,S)),i(I(n,S))},disabled:0===S.length,"aria-label":"move selected left",children:"<"})]})}),Object(x.jsx)(a.a,{item:!0,children:T("Chosen",y)})]})}t.default=function(){return Object(x.jsxs)(x.Fragment,{children:[Object(x.jsx)(i.a,{title:"Transfer List",description:'A transfer list (or "shuttle") enables the user to move one or more list items between lists.',refUrl:"https://mui.com/components/transfer-list/"}),Object(x.jsxs)(c.a,{children:[Object(x.jsx)(a.a,{item:!0,xs:12,children:Object(x.jsx)(l.a,{title:"Basic transfer list",component:g,source:"import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function TransferList() {\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = (items) => (\r\n    <Paper sx={{width: 200, height: 230, overflow: 'auto'}}>\r\n      <List dense component='div' role='list'>\r\n        {items.map((value) => {\r\n          const labelId = `transfer-list-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role='listitem'\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{\r\n                    'aria-labelledby': labelId,\r\n                  }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent='center' alignItems='center'>\r\n      <Grid item>{customList(left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction='column' alignItems='center'>\r\n          <Button\r\n            sx={{my: 0.5}}\r\n            variant='outlined'\r\n            size='small'\r\n            onClick={handleAllRight}\r\n            disabled={left.length === 0}\r\n            aria-label='move all right'\r\n          >\r\n            \u226b\r\n          </Button>\r\n          <Button\r\n            sx={{my: 0.5}}\r\n            variant='outlined'\r\n            size='small'\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label='move selected right'\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            sx={{my: 0.5}}\r\n            variant='outlined'\r\n            size='small'\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label='move selected left'\r\n          >\r\n            &lt;\r\n          </Button>\r\n          <Button\r\n            sx={{my: 0.5}}\r\n            variant='outlined'\r\n            size='small'\r\n            onClick={handleAllLeft}\r\n            disabled={right.length === 0}\r\n            aria-label='move all left'\r\n          >\r\n            \u226a\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",noScrollbar:!0,description:'For completeness, this example includes buttons for "move all", but not every transfer list needs these.'})}),Object(x.jsx)(a.a,{item:!0,xs:12,children:Object(x.jsx)(l.a,{title:"Enhanced transfer list",component:y,source:"import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList() {\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        sx={{px: 2, py: 1}}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{\r\n              'aria-label': 'all items selected',\r\n            }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List\r\n        sx={{\r\n          width: 200,\r\n          height: 230,\r\n          bgcolor: 'background.paper',\r\n          overflow: 'auto',\r\n        }}\r\n        dense\r\n        component='div'\r\n        role='list'\r\n      >\r\n        {items.map((value) => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role='listitem'\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{\r\n                    'aria-labelledby': labelId,\r\n                  }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent='center' alignItems='center'>\r\n      <Grid item>{customList('Choices', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction='column' alignItems='center'>\r\n          <Button\r\n            sx={{my: 0.5}}\r\n            variant='outlined'\r\n            size='small'\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label='move selected right'\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            sx={{my: 0.5}}\r\n            variant='outlined'\r\n            size='small'\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label='move selected left'\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Chosen', right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",noScrollbar:!0,description:'This example exchanges the "move all" buttons for a "select all / select none" checkbox, and adds a counter.'})})]})]})}}}]);
//# sourceMappingURL=102.d6160cbe.chunk.js.map